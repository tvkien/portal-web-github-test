#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	internal partial class TestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQuestionEntity(QuestionEntity instance);
    partial void UpdateQuestionEntity(QuestionEntity instance);
    partial void DeleteQuestionEntity(QuestionEntity instance);
    partial void InsertGradeEntity(GradeEntity instance);
    partial void UpdateGradeEntity(GradeEntity instance);
    partial void DeleteGradeEntity(GradeEntity instance);
    partial void InsertDistrictSettingEntity(DistrictSettingEntity instance);
    partial void UpdateDistrictSettingEntity(DistrictSettingEntity instance);
    partial void DeleteDistrictSettingEntity(DistrictSettingEntity instance);
    partial void InsertVirtualTestFileEntity(VirtualTestFileEntity instance);
    partial void UpdateVirtualTestFileEntity(VirtualTestFileEntity instance);
    partial void DeleteVirtualTestFileEntity(VirtualTestFileEntity instance);
    partial void InsertQTIBankSchoolEntity(QTIBankSchoolEntity instance);
    partial void UpdateQTIBankSchoolEntity(QTIBankSchoolEntity instance);
    partial void DeleteQTIBankSchoolEntity(QTIBankSchoolEntity instance);
    partial void InsertQTIBankDistrictEntity(QTIBankDistrictEntity instance);
    partial void UpdateQTIBankDistrictEntity(QTIBankDistrictEntity instance);
    partial void DeleteQTIBankDistrictEntity(QTIBankDistrictEntity instance);
    partial void InsertQTIBankEntity(QTIBankEntity instance);
    partial void UpdateQTIBankEntity(QTIBankEntity instance);
    partial void DeleteQTIBankEntity(QTIBankEntity instance);
    partial void InsertVirtualSectionQuestionEntity(VirtualSectionQuestionEntity instance);
    partial void UpdateVirtualSectionQuestionEntity(VirtualSectionQuestionEntity instance);
    partial void DeleteVirtualSectionQuestionEntity(VirtualSectionQuestionEntity instance);
    partial void InsertTestScoreMethodEntity(TestScoreMethodEntity instance);
    partial void UpdateTestScoreMethodEntity(TestScoreMethodEntity instance);
    partial void DeleteTestScoreMethodEntity(TestScoreMethodEntity instance);
    partial void InsertVirtualQuestionStateStandardEntity(VirtualQuestionStateStandardEntity instance);
    partial void UpdateVirtualQuestionStateStandardEntity(VirtualQuestionStateStandardEntity instance);
    partial void DeleteVirtualQuestionStateStandardEntity(VirtualQuestionStateStandardEntity instance);
    partial void InsertVirtualQuestionTopicEntity(VirtualQuestionTopicEntity instance);
    partial void UpdateVirtualQuestionTopicEntity(VirtualQuestionTopicEntity instance);
    partial void DeleteVirtualQuestionTopicEntity(VirtualQuestionTopicEntity instance);
    partial void InsertVirtualQuestionLessonTwoEntity(VirtualQuestionLessonTwoEntity instance);
    partial void UpdateVirtualQuestionLessonTwoEntity(VirtualQuestionLessonTwoEntity instance);
    partial void DeleteVirtualQuestionLessonTwoEntity(VirtualQuestionLessonTwoEntity instance);
    partial void InsertVirtualQuestionLessonOneEntity(VirtualQuestionLessonOneEntity instance);
    partial void UpdateVirtualQuestionLessonOneEntity(VirtualQuestionLessonOneEntity instance);
    partial void DeleteVirtualQuestionLessonOneEntity(VirtualQuestionLessonOneEntity instance);
    partial void InsertVirtualQuestionItemTagEntity(VirtualQuestionItemTagEntity instance);
    partial void UpdateVirtualQuestionItemTagEntity(VirtualQuestionItemTagEntity instance);
    partial void DeleteVirtualQuestionItemTagEntity(VirtualQuestionItemTagEntity instance);
    partial void InsertBankSchoolEntity(BankSchoolEntity instance);
    partial void UpdateBankSchoolEntity(BankSchoolEntity instance);
    partial void DeleteBankSchoolEntity(BankSchoolEntity instance);
    partial void InsertConversionSetEntity(ConversionSetEntity instance);
    partial void UpdateConversionSetEntity(ConversionSetEntity instance);
    partial void DeleteConversionSetEntity(ConversionSetEntity instance);
    partial void InsertQti3pItemStandardXmlEntity(Qti3pItemStandardXmlEntity instance);
    partial void UpdateQti3pItemStandardXmlEntity(Qti3pItemStandardXmlEntity instance);
    partial void DeleteQti3pItemStandardXmlEntity(Qti3pItemStandardXmlEntity instance);
    partial void InsertTestResultScoreEntity(TestResultScoreEntity instance);
    partial void UpdateTestResultScoreEntity(TestResultScoreEntity instance);
    partial void DeleteTestResultScoreEntity(TestResultScoreEntity instance);
    partial void InsertChytenTestCenterEmailEntity(ChytenTestCenterEmailEntity instance);
    partial void UpdateChytenTestCenterEmailEntity(ChytenTestCenterEmailEntity instance);
    partial void DeleteChytenTestCenterEmailEntity(ChytenTestCenterEmailEntity instance);
    partial void InsertItemFeedbackEntity(ItemFeedbackEntity instance);
    partial void UpdateItemFeedbackEntity(ItemFeedbackEntity instance);
    partial void DeleteItemFeedbackEntity(ItemFeedbackEntity instance);
    partial void InsertTestFeedbackEntity(TestFeedbackEntity instance);
    partial void UpdateTestFeedbackEntity(TestFeedbackEntity instance);
    partial void DeleteTestFeedbackEntity(TestFeedbackEntity instance);
    partial void InsertVirtualTestConversionEntity(VirtualTestConversionEntity instance);
    partial void UpdateVirtualTestConversionEntity(VirtualTestConversionEntity instance);
    partial void DeleteVirtualTestConversionEntity(VirtualTestConversionEntity instance);
    partial void InsertBankDistrictEntity(BankDistrictEntity instance);
    partial void UpdateBankDistrictEntity(BankDistrictEntity instance);
    partial void DeleteBankDistrictEntity(BankDistrictEntity instance);
    partial void InsertBankEntity(BankEntity instance);
    partial void UpdateBankEntity(BankEntity instance);
    partial void DeleteBankEntity(BankEntity instance);
    partial void InsertVirtualQuestionBranchingEntity(VirtualQuestionBranchingEntity instance);
    partial void UpdateVirtualQuestionBranchingEntity(VirtualQuestionBranchingEntity instance);
    partial void DeleteVirtualQuestionBranchingEntity(VirtualQuestionBranchingEntity instance);
    partial void InsertTestResultEntity(TestResultEntity instance);
    partial void UpdateTestResultEntity(TestResultEntity instance);
    partial void DeleteTestResultEntity(TestResultEntity instance);
    partial void InsertUserSecurityCodeEntity(UserSecurityCodeEntity instance);
    partial void UpdateUserSecurityCodeEntity(UserSecurityCodeEntity instance);
    partial void DeleteUserSecurityCodeEntity(UserSecurityCodeEntity instance);
    partial void InsertFreshdeskLogEntity(FreshdeskLogEntity instance);
    partial void UpdateFreshdeskLogEntity(FreshdeskLogEntity instance);
    partial void DeleteFreshdeskLogEntity(FreshdeskLogEntity instance);
    partial void InsertSpecializedReportJobEntity(SpecializedReportJobEntity instance);
    partial void UpdateSpecializedReportJobEntity(SpecializedReportJobEntity instance);
    partial void DeleteSpecializedReportJobEntity(SpecializedReportJobEntity instance);
    partial void InsertBatchPrintingQueueEntity(BatchPrintingQueueEntity instance);
    partial void UpdateBatchPrintingQueueEntity(BatchPrintingQueueEntity instance);
    partial void DeleteBatchPrintingQueueEntity(BatchPrintingQueueEntity instance);
    partial void InsertQTIItemPreviewRequestEntity(QTIItemPreviewRequestEntity instance);
    partial void UpdateQTIItemPreviewRequestEntity(QTIItemPreviewRequestEntity instance);
    partial void DeleteQTIItemPreviewRequestEntity(QTIItemPreviewRequestEntity instance);
    partial void InsertAutoGradingQueueEntity(AutoGradingQueueEntity instance);
    partial void UpdateAutoGradingQueueEntity(AutoGradingQueueEntity instance);
    partial void DeleteAutoGradingQueueEntity(AutoGradingQueueEntity instance);
    partial void InsertVirtualSectionEntity(VirtualSectionEntity instance);
    partial void UpdateVirtualSectionEntity(VirtualSectionEntity instance);
    partial void DeleteVirtualSectionEntity(VirtualSectionEntity instance);
    partial void InsertAblesReportJobEntity(AblesReportJobEntity instance);
    partial void UpdateAblesReportJobEntity(AblesReportJobEntity instance);
    partial void DeleteAblesReportJobEntity(AblesReportJobEntity instance);
    partial void InsertAblesReportTypeEntity(AblesReportTypeEntity instance);
    partial void UpdateAblesReportTypeEntity(AblesReportTypeEntity instance);
    partial void DeleteAblesReportTypeEntity(AblesReportTypeEntity instance);
    partial void InsertAblesAssessmentRoundEntity(AblesAssessmentRoundEntity instance);
    partial void UpdateAblesAssessmentRoundEntity(AblesAssessmentRoundEntity instance);
    partial void DeleteAblesAssessmentRoundEntity(AblesAssessmentRoundEntity instance);
    partial void InsertDownloadPdfEntity(DownloadPdfEntity instance);
    partial void UpdateDownloadPdfEntity(DownloadPdfEntity instance);
    partial void DeleteDownloadPdfEntity(DownloadPdfEntity instance);
    partial void InsertAblesVirtualTestMappingEntity(AblesVirtualTestMappingEntity instance);
    partial void UpdateAblesVirtualTestMappingEntity(AblesVirtualTestMappingEntity instance);
    partial void DeleteAblesVirtualTestMappingEntity(AblesVirtualTestMappingEntity instance);
    partial void InsertVirtualQuestionPassageNoShuffleEntity(VirtualQuestionPassageNoShuffleEntity instance);
    partial void UpdateVirtualQuestionPassageNoShuffleEntity(VirtualQuestionPassageNoShuffleEntity instance);
    partial void DeleteVirtualQuestionPassageNoShuffleEntity(VirtualQuestionPassageNoShuffleEntity instance);
    partial void InsertAnswerEntity(AnswerEntity instance);
    partial void UpdateAnswerEntity(AnswerEntity instance);
    partial void DeleteAnswerEntity(AnswerEntity instance);
    partial void InsertAnswerSubEntity(AnswerSubEntity instance);
    partial void UpdateAnswerSubEntity(AnswerSubEntity instance);
    partial void DeleteAnswerSubEntity(AnswerSubEntity instance);
    partial void InsertQTI3PSubjectGradeLicenseEntity(QTI3PSubjectGradeLicenseEntity instance);
    partial void UpdateQTI3PSubjectGradeLicenseEntity(QTI3PSubjectGradeLicenseEntity instance);
    partial void DeleteQTI3PSubjectGradeLicenseEntity(QTI3PSubjectGradeLicenseEntity instance);
    partial void InsertQuestionGroupEntity(QuestionGroupEntity instance);
    partial void UpdateQuestionGroupEntity(QuestionGroupEntity instance);
    partial void DeleteQuestionGroupEntity(QuestionGroupEntity instance);
    partial void InsertVirtualQuestionGroupEntity(VirtualQuestionGroupEntity instance);
    partial void UpdateVirtualQuestionGroupEntity(VirtualQuestionGroupEntity instance);
    partial void DeleteVirtualQuestionGroupEntity(VirtualQuestionGroupEntity instance);
    partial void InsertQTITestClassAssignmentEntity(QTITestClassAssignmentEntity instance);
    partial void UpdateQTITestClassAssignmentEntity(QTITestClassAssignmentEntity instance);
    partial void DeleteQTITestClassAssignmentEntity(QTITestClassAssignmentEntity instance);
    partial void InsertUserBankAccessEntity(UserBankAccessEntity instance);
    partial void UpdateUserBankAccessEntity(UserBankAccessEntity instance);
    partial void DeleteUserBankAccessEntity(UserBankAccessEntity instance);
    partial void InsertVirtualTestMetaEntity(VirtualTestMetaEntity instance);
    partial void UpdateVirtualTestMetaEntity(VirtualTestMetaEntity instance);
    partial void DeleteVirtualTestMetaEntity(VirtualTestMetaEntity instance);
    partial void InsertStudentPreferenceDetailEntity(StudentPreferenceDetailEntity instance);
    partial void UpdateStudentPreferenceDetailEntity(StudentPreferenceDetailEntity instance);
    partial void DeleteStudentPreferenceDetailEntity(StudentPreferenceDetailEntity instance);
    partial void InsertSubjectOrderEntity(SubjectOrderEntity instance);
    partial void UpdateSubjectOrderEntity(SubjectOrderEntity instance);
    partial void DeleteSubjectOrderEntity(SubjectOrderEntity instance);
    partial void InsertShortLinkEntity(ShortLinkEntity instance);
    partial void UpdateShortLinkEntity(ShortLinkEntity instance);
    partial void DeleteShortLinkEntity(ShortLinkEntity instance);
    partial void InsertMultiPartExpressionPreviewEntity(MultiPartExpressionPreviewEntity instance);
    partial void UpdateMultiPartExpressionPreviewEntity(MultiPartExpressionPreviewEntity instance);
    partial void DeleteMultiPartExpressionPreviewEntity(MultiPartExpressionPreviewEntity instance);
    partial void InsertStudentPreferencesEntity(StudentPreferencesEntity instance);
    partial void UpdateStudentPreferencesEntity(StudentPreferencesEntity instance);
    partial void DeleteStudentPreferencesEntity(StudentPreferencesEntity instance);
    partial void InsertTestEntity(TestEntity instance);
    partial void UpdateTestEntity(TestEntity instance);
    partial void DeleteTestEntity(TestEntity instance);
    partial void InsertPreferenceEntity(PreferenceEntity instance);
    partial void UpdatePreferenceEntity(PreferenceEntity instance);
    partial void DeletePreferenceEntity(PreferenceEntity instance);
    partial void InsertSubjectEntity(SubjectEntity instance);
    partial void UpdateSubjectEntity(SubjectEntity instance);
    partial void DeleteSubjectEntity(SubjectEntity instance);
    partial void InsertPerformanceBandVirtualTest(PerformanceBandVirtualTest instance);
    partial void UpdatePerformanceBandVirtualTest(PerformanceBandVirtualTest instance);
    partial void DeletePerformanceBandVirtualTest(PerformanceBandVirtualTest instance);
    partial void InsertDataSetCategoryDistrictDisplayNameEntity(DataSetCategoryDistrictDisplayNameEntity instance);
    partial void UpdateDataSetCategoryDistrictDisplayNameEntity(DataSetCategoryDistrictDisplayNameEntity instance);
    partial void DeleteDataSetCategoryDistrictDisplayNameEntity(DataSetCategoryDistrictDisplayNameEntity instance);
    partial void InsertQTIOnlineTestSessionTREntity(QTIOnlineTestSessionTREntity instance);
    partial void UpdateQTIOnlineTestSessionTREntity(QTIOnlineTestSessionTREntity instance);
    partial void DeleteQTIOnlineTestSessionTREntity(QTIOnlineTestSessionTREntity instance);
    partial void InsertStudentTREntity(StudentTREntity instance);
    partial void UpdateStudentTREntity(StudentTREntity instance);
    partial void DeleteStudentTREntity(StudentTREntity instance);
    partial void InsertClassStudentTREntity(ClassStudentTREntity instance);
    partial void UpdateClassStudentTREntity(ClassStudentTREntity instance);
    partial void DeleteClassStudentTREntity(ClassStudentTREntity instance);
    partial void InsertQTITestStudentAssignmentEntity(QTITestStudentAssignmentEntity instance);
    partial void UpdateQTITestStudentAssignmentEntity(QTITestStudentAssignmentEntity instance);
    partial void DeleteQTITestStudentAssignmentEntity(QTITestStudentAssignmentEntity instance);
    partial void InsertConversionSetDetailEntity(ConversionSetDetailEntity instance);
    partial void UpdateConversionSetDetailEntity(ConversionSetDetailEntity instance);
    partial void DeleteConversionSetDetailEntity(ConversionSetDetailEntity instance);

        #endregion

        public TestDataContext() : 
				base(global::LinkIt.BubbleSheetPortal.Data.Properties.Settings.Default.DataSourceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<QuestionEntity> QuestionEntities
		{
			get
			{
				return this.GetTable<QuestionEntity>();
			}
		}
		
		internal System.Data.Linq.Table<GradeEntity> GradeEntities
		{
			get
			{
				return this.GetTable<GradeEntity>();
			}
		}
		
		internal System.Data.Linq.Table<SubjectDistrictView> SubjectDistrictViews
		{
			get
			{
				return this.GetTable<SubjectDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<GradeDistrictView> GradeDistrictViews
		{
			get
			{
				return this.GetTable<GradeDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<IncorrectQuestionOrderView> IncorrectQuestionOrderViews
		{
			get
			{
				return this.GetTable<IncorrectQuestionOrderView>();
			}
		}
		
		internal System.Data.Linq.Table<PreviouslyAnsweredQuestionView> PreviouslyAnsweredQuestionViews
		{
			get
			{
				return this.GetTable<PreviouslyAnsweredQuestionView>();
			}
		}
		
		internal System.Data.Linq.Table<DisplayTestResultDistrictView> DisplayTestResultDistrictViews
		{
			get
			{
				return this.GetTable<DisplayTestResultDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<AuthorTestWithoutTestResultView> AuthorTestWithoutTestResultViews
		{
			get
			{
				return this.GetTable<AuthorTestWithoutTestResultView>();
			}
		}
		
		internal System.Data.Linq.Table<DistrictStateView> DistrictStateViews
		{
			get
			{
				return this.GetTable<DistrictStateView>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestWithOutTestResultView> VirtualTestWithOutTestResultViews
		{
			get
			{
				return this.GetTable<VirtualTestWithOutTestResultView>();
			}
		}
		
		internal System.Data.Linq.Table<ClassAdminSchoolView> ClassAdminSchoolViews
		{
			get
			{
				return this.GetTable<ClassAdminSchoolView>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestDistrictView> VirtualTestDistrictViews
		{
			get
			{
				return this.GetTable<VirtualTestDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<StudentTestResultDistrictView> StudentTestResultDistrictViews
		{
			get
			{
				return this.GetTable<StudentTestResultDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<ClassDistrictView> ClassDistrictViews
		{
			get
			{
				return this.GetTable<ClassDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<AuthorTestView> AuthorTestViews
		{
			get
			{
				return this.GetTable<AuthorTestView>();
			}
		}
		
		internal System.Data.Linq.Table<SchoolTestResultDistrictView> SchoolTestResultDistrictViews
		{
			get
			{
				return this.GetTable<SchoolTestResultDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<ClassTestResultDistrictView> ClassTestResultDistrictViews
		{
			get
			{
				return this.GetTable<ClassTestResultDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<TeacherTestResultDistrictView> TeacherTestResultDistrictViews
		{
			get
			{
				return this.GetTable<TeacherTestResultDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestTestResultDistrictView> VirtualTestTestResultDistrictViews
		{
			get
			{
				return this.GetTable<VirtualTestTestResultDistrictView>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationEntity> ConfigurationEntities
		{
			get
			{
				return this.GetTable<ConfigurationEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClassCustomView> ClassCustomViews
		{
			get
			{
				return this.GetTable<ClassCustomView>();
			}
		}
		
		public System.Data.Linq.Table<DistrictSettingEntity> DistrictSettingEntities
		{
			get
			{
				return this.GetTable<DistrictSettingEntity>();
			}
		}
		
		public System.Data.Linq.Table<DistrictConfigurationEntity> DistrictConfigurationEntities
		{
			get
			{
				return this.GetTable<DistrictConfigurationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestFileEntity> VirtualTestFileEntities
		{
			get
			{
				return this.GetTable<VirtualTestFileEntity>();
			}
		}
		
		public System.Data.Linq.Table<QTIBankSchoolEntity> QTIBankSchoolEntities
		{
			get
			{
				return this.GetTable<QTIBankSchoolEntity>();
			}
		}
		
		public System.Data.Linq.Table<QTIBankDistrictEntity> QTIBankDistrictEntities
		{
			get
			{
				return this.GetTable<QTIBankDistrictEntity>();
			}
		}
		
		public System.Data.Linq.Table<QTIBankPublishedDistrictView> QTIBankPublishedDistrictViews
		{
			get
			{
				return this.GetTable<QTIBankPublishedDistrictView>();
			}
		}
		
		public System.Data.Linq.Table<QTIBankPublishedSchoolView> QTIBankPublishedSchoolViews
		{
			get
			{
				return this.GetTable<QTIBankPublishedSchoolView>();
			}
		}
		
		internal System.Data.Linq.Table<ListRubricView> ListRubricViews
		{
			get
			{
				return this.GetTable<ListRubricView>();
			}
		}
		
		internal System.Data.Linq.Table<AlreadyAnsweredQuestionView> AlreadyAnsweredQuestionViews
		{
			get
			{
				return this.GetTable<AlreadyAnsweredQuestionView>();
			}
		}
		
		public System.Data.Linq.Table<QtiBankPersonalView> QtiBankPersonalViews
		{
			get
			{
				return this.GetTable<QtiBankPersonalView>();
			}
		}
		
		internal System.Data.Linq.Table<QTIBankEntity> QTIBankEntities
		{
			get
			{
				return this.GetTable<QTIBankEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualSectionQuestionEntity> VirtualSectionQuestionEntities
		{
			get
			{
				return this.GetTable<VirtualSectionQuestionEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestScoreMethodEntity> TestScoreMethodEntities
		{
			get
			{
				return this.GetTable<TestScoreMethodEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionStateStandardEntity> VirtualQuestionStateStandardEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionStateStandardEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionTopicEntity> VirtualQuestionTopicEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionTopicEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionLessonTwoEntity> VirtualQuestionLessonTwoEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionLessonTwoEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionLessonOneEntity> VirtualQuestionLessonOneEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionLessonOneEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionItemTagEntity> VirtualQuestionItemTagEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionItemTagEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualSectionQuestionView> VirtualSectionQuestionViews
		{
			get
			{
				return this.GetTable<VirtualSectionQuestionView>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionItemTagView> VirtualQuestionItemTagViews
		{
			get
			{
				return this.GetTable<VirtualQuestionItemTagView>();
			}
		}
		
		public System.Data.Linq.Table<BankSchoolView> BankSchoolViews
		{
			get
			{
				return this.GetTable<BankSchoolView>();
			}
		}
		
		internal System.Data.Linq.Table<BankSchoolEntity> BankSchoolEntities
		{
			get
			{
				return this.GetTable<BankSchoolEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ConversionSetEntity> ConversionSetEntities
		{
			get
			{
				return this.GetTable<ConversionSetEntity>();
			}
		}
		
		internal System.Data.Linq.Table<Qti3pItemStandardXmlEntity> Qti3pItemStandardXmlEntities
		{
			get
			{
				return this.GetTable<Qti3pItemStandardXmlEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QuestionAnswersEntity> QuestionAnswersEntities
		{
			get
			{
				return this.GetTable<QuestionAnswersEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestResultScoreEntity> TestResultScoreEntities
		{
			get
			{
				return this.GetTable<TestResultScoreEntity>();
			}
		}
		
		public System.Data.Linq.Table<ChytenTestCenterEmailEntity> ChytenTestCenterEmailEntities
		{
			get
			{
				return this.GetTable<ChytenTestCenterEmailEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ItemFeedbackEntity> ItemFeedbackEntities
		{
			get
			{
				return this.GetTable<ItemFeedbackEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestFeedbackEntity> TestFeedbackEntities
		{
			get
			{
				return this.GetTable<TestFeedbackEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestConversionEntity> VirtualTestConversionEntities
		{
			get
			{
				return this.GetTable<VirtualTestConversionEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionLessonOneView> VirtualQuestionLessonOneViews
		{
			get
			{
				return this.GetTable<VirtualQuestionLessonOneView>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionLessonTwoView> VirtualQuestionLessonTwoViews
		{
			get
			{
				return this.GetTable<VirtualQuestionLessonTwoView>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionTopicView> VirtualQuestionTopicViews
		{
			get
			{
				return this.GetTable<VirtualQuestionTopicView>();
			}
		}
		
		internal System.Data.Linq.Table<BankDistrictEntity> BankDistrictEntities
		{
			get
			{
				return this.GetTable<BankDistrictEntity>();
			}
		}
		
		internal System.Data.Linq.Table<BankDistrictView> BankDistrictViews
		{
			get
			{
				return this.GetTable<BankDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<BankEntity> BankEntities
		{
			get
			{
				return this.GetTable<BankEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ListBankView> ListBankViews
		{
			get
			{
				return this.GetTable<ListBankView>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionBranchingEntity> VirtualQuestionBranchingEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionBranchingEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestResultEntity> TestResultEntities
		{
			get
			{
				return this.GetTable<TestResultEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserSecurityCodeEntity> UserSecurityCodeEntities
		{
			get
			{
				return this.GetTable<UserSecurityCodeEntity>();
			}
		}
		
		internal System.Data.Linq.Table<FreshdeskLogEntity> FreshdeskLogEntities
		{
			get
			{
				return this.GetTable<FreshdeskLogEntity>();
			}
		}
		
		internal System.Data.Linq.Table<SpecializedReportJobEntity> SpecializedReportJobEntities
		{
			get
			{
				return this.GetTable<SpecializedReportJobEntity>();
			}
		}
		
		public System.Data.Linq.Table<BatchPrintingQueueEntity> BatchPrintingQueueEntities
		{
			get
			{
				return this.GetTable<BatchPrintingQueueEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QTIItemPreviewRequestEntity> QTIItemPreviewRequestEntities
		{
			get
			{
				return this.GetTable<QTIItemPreviewRequestEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionAnswerView> VirtualQuestionAnswerViews
		{
			get
			{
				return this.GetTable<VirtualQuestionAnswerView>();
			}
		}
		
		internal System.Data.Linq.Table<UnansweredQuestionsView> UnansweredQuestionsViews
		{
			get
			{
				return this.GetTable<UnansweredQuestionsView>();
			}
		}
		
		public System.Data.Linq.Table<AutoGradingQueueEntity> AutoGradingQueueEntities
		{
			get
			{
				return this.GetTable<AutoGradingQueueEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualSectionEntity> VirtualSectionEntities
		{
			get
			{
				return this.GetTable<VirtualSectionEntity>();
			}
		}
		
		public System.Data.Linq.Table<AblesReportJobEntity> AblesReportJobEntities
		{
			get
			{
				return this.GetTable<AblesReportJobEntity>();
			}
		}
		
		public System.Data.Linq.Table<AblesReportTypeEntity> AblesReportTypeEntities
		{
			get
			{
				return this.GetTable<AblesReportTypeEntity>();
			}
		}
		
		public System.Data.Linq.Table<AblesAssessmentRoundEntity> AblesAssessmentRoundEntities
		{
			get
			{
				return this.GetTable<AblesAssessmentRoundEntity>();
			}
		}
		
		public System.Data.Linq.Table<DownloadPdfEntity> DownloadPdfEntities
		{
			get
			{
				return this.GetTable<DownloadPdfEntity>();
			}
		}
		
		public System.Data.Linq.Table<AblesVirtualTestMappingEntity> AblesVirtualTestMappingEntities
		{
			get
			{
				return this.GetTable<AblesVirtualTestMappingEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionPassageNoShuffleEntity> VirtualQuestionPassageNoShuffleEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionPassageNoShuffleEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AnswerEntity> AnswerEntities
		{
			get
			{
				return this.GetTable<AnswerEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AnswerSubEntity> AnswerSubEntities
		{
			get
			{
				return this.GetTable<AnswerSubEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QuestionGroupQuestionView> QuestionGroupQuestionViews
		{
			get
			{
				return this.GetTable<QuestionGroupQuestionView>();
			}
		}
		
		public System.Data.Linq.Table<QTI3PSubjectGradeLicenseEntity> QTI3PSubjectGradeLicenseEntities
		{
			get
			{
				return this.GetTable<QTI3PSubjectGradeLicenseEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QuestionGroupEntity> QuestionGroupEntities
		{
			get
			{
				return this.GetTable<QuestionGroupEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualQuestionGroupEntity> VirtualQuestionGroupEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<QTITestClassAssignmentEntity> QTITestClassAssignmentEntities
		{
			get
			{
				return this.GetTable<QTITestClassAssignmentEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserBankAccessEntity> UserBankAccessEntities
		{
			get
			{
				return this.GetTable<UserBankAccessEntity>();
			}
		}
		
		public System.Data.Linq.Table<BankUserDistrictEntity> BankUserDistrictEntities
		{
			get
			{
				return this.GetTable<BankUserDistrictEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualTestMetaEntity> VirtualTestMetaEntities
		{
			get
			{
				return this.GetTable<VirtualTestMetaEntity>();
			}
		}
		
		public System.Data.Linq.Table<StudentPreferenceDetailEntity> StudentPreferenceDetailEntities
		{
			get
			{
				return this.GetTable<StudentPreferenceDetailEntity>();
			}
		}
		
		public System.Data.Linq.Table<SubjectOrderEntity> SubjectOrderEntities
		{
			get
			{
				return this.GetTable<SubjectOrderEntity>();
			}
		}
		
		public System.Data.Linq.Table<ShortLinkEntity> ShortLinkEntities
		{
			get
			{
				return this.GetTable<ShortLinkEntity>();
			}
		}
		
		public System.Data.Linq.Table<ClassCustomForGroupView> ClassCustomForGroupViews
		{
			get
			{
				return this.GetTable<ClassCustomForGroupView>();
			}
		}
		
		internal System.Data.Linq.Table<MultiPartExpressionPreviewEntity> MultiPartExpressionPreviewEntities
		{
			get
			{
				return this.GetTable<MultiPartExpressionPreviewEntity>();
			}
		}
		
		public System.Data.Linq.Table<StudentPreferencesEntity> StudentPreferencesEntities
		{
			get
			{
				return this.GetTable<StudentPreferencesEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestEntity> TestEntities
		{
			get
			{
				return this.GetTable<TestEntity>();
			}
		}
		
		internal System.Data.Linq.Table<PreferenceEntity> PreferenceEntities
		{
			get
			{
				return this.GetTable<PreferenceEntity>();
			}
		}
		
		internal System.Data.Linq.Table<SubjectEntity> SubjectEntities
		{
			get
			{
				return this.GetTable<SubjectEntity>();
			}
		}
		
		public System.Data.Linq.Table<PerformanceBandVirtualTest> PerformanceBandVirtualTests
		{
			get
			{
				return this.GetTable<PerformanceBandVirtualTest>();
			}
		}
		
		public System.Data.Linq.Table<DataSetCategoryDistrictDisplayNameEntity> DataSetCategoryDistrictDisplayNameEntities
		{
			get
			{
				return this.GetTable<DataSetCategoryDistrictDisplayNameEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QTIOnlineTestSessionTREntity> QTIOnlineTestSessionTREntities
		{
			get
			{
				return this.GetTable<QTIOnlineTestSessionTREntity>();
			}
		}
		
		internal System.Data.Linq.Table<StudentTREntity> StudentTREntities
		{
			get
			{
				return this.GetTable<StudentTREntity>();
			}
		}
		
		internal System.Data.Linq.Table<ClassStudentTREntity> ClassStudentTREntities
		{
			get
			{
				return this.GetTable<ClassStudentTREntity>();
			}
		}
		
		public System.Data.Linq.Table<QTITestStudentAssignmentEntity> QTITestStudentAssignmentEntities
		{
			get
			{
				return this.GetTable<QTITestStudentAssignmentEntity>();
			}
		}

        internal System.Data.Linq.Table<ConversionSetDetailEntity> ConversionSetDetailEntities
        {
            get
            {
                return this.GetTable<ConversionSetDetailEntity>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTestResultAndSubItems")]
		public int DeleteTestResultAndSubItems([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultId", DbType="Int")] System.Nullable<int> testResultId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultId);
			return ((int)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.DeleteTestResultAndSubItemsV2")]
        public int DeleteTestResultAndSubItemsV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TestResultIDs", DbType = "VarChar(MAX)")] string testResultIds)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultIds);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PurgeTestByVirtualTestId")]
		public int PurgeTestByVirtualTestId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAuthorBySchoolAdmin")]
		public ISingleResult<GetAuthorBySchoolAdminResult> GetAuthorBySchoolAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolAdminId", DbType="Int")] System.Nullable<int> schoolAdminId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolAdminId);
			return ((ISingleResult<GetAuthorBySchoolAdminResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetSectionsForPartialRetake")]
        public ISingleResult<VirtualSection> GetSectionsForPartialRetake([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualTestID", DbType = "Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StudentIDs", DbType = "NVarChar(Max)")] string studentIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GUID", DbType = "VarChar(50)")] string guid)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, studentIDs, guid);
            return ((ISingleResult<VirtualSection>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AuthorTestProc")]
		public ISingleResult<AuthorTestProcResult> AuthorTestProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId);
			return ((ISingleResult<AuthorTestProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcBank")]
		public ISingleResult<ProcBankResult> ProcBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, districtId, userId, userRoleId);
			return ((ISingleResult<ProcBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcSubject")]
		public ISingleResult<ProcSubjectResult> ProcSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeId, districtId, userId, userRoleId);
			return ((ISingleResult<ProcSubjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetQTIBankList")]
		public ISingleResult<GetQTIBankListResult> GetQTIBankList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(100)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Author", DbType="VarChar(100)")] string author, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PublishedTo", DbType="VarChar(100)")] string publishedTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID, bankName, author, publishedTo);
			return ((ISingleResult<GetQTIBankListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBanks")]
		public ISingleResult<GetBanksResult> GetBanks([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, districtId, userId, userRoleId);
			return ((ISingleResult<GetBanksResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckValidVirtualTest")]
		public ISingleResult<CheckValidVirtualTestResult> CheckValidVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckPointPossibleLargeThan25", DbType="Bit")] System.Nullable<bool> checkPointPossibleLargeThan25)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, checkPointPossibleLargeThan25);
			return ((ISingleResult<CheckValidVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGrade")]
		public ISingleResult<ProcGradeResult> ProcGrade([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, userId, userRoleId);
			return ((ISingleResult<ProcGradeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPreferencesForOnlineTest")]
		public ISingleResult<GetPreferencesForOnlineTestResult> GetPreferencesForOnlineTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QtiTestClassAssignmentID", DbType="Int")] System.Nullable<int> qtiTestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qtiTestClassAssignmentID, qTIOnlineTestSessionID);
			return ((ISingleResult<GetPreferencesForOnlineTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStateStandardGradesByStateAndSubject")]
		public ISingleResult<GetStateStandardGradesByStateAndSubjectResult> GetStateStandardGradesByStateAndSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="VarChar(3)")] string state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="VarChar(200)")] string subject)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), state, subject);
			return ((ISingleResult<GetStateStandardGradesByStateAndSubjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ListQTIBanks")]
		public ISingleResult<ListQTIBanksResult> ListQTIBanks([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, userRoleID, districtID);
			return ((ISingleResult<ListQTIBanksResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetQTIBankModifiedDate")]
		public ISingleResult<GetQTIBankModifiedDateResult> GetQTIBankModifiedDate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIBankID", DbType="Int")] System.Nullable<int> qTIBankID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIBankID);
			return ((ISingleResult<GetQTIBankModifiedDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StudentDistrictProc")]
		public ISingleResult<StudentDistrictProcResult> StudentDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, classID, schoolID, teacherID, isRegrader);
			return ((ISingleResult<StudentDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClassDistrictProc")]
		public ISingleResult<ClassDistrictProcResult> ClassDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, schoolID, teacherID, isRegrader);
			return ((ISingleResult<ClassDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PrimaryTeacherDitrictProc")]
		public ISingleResult<PrimaryTeacherDitrictProcResult> PrimaryTeacherDitrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, classID, studentID, virtualTestID, isRegrader);
			return ((ISingleResult<PrimaryTeacherDitrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VirtualTestDistrictProc")]
		public ISingleResult<VirtualTestDistrictProcResult> VirtualTestDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, classID, teacherID, studentID, isRegrader);
			return ((ISingleResult<VirtualTestDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SchoolDitrictProc")]
		public ISingleResult<SchoolDitrictProcResult> SchoolDitrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, teacherID, classID, studentID, virtualTestID, isRegrader);
			return ((ISingleResult<SchoolDitrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ACTProcSubject")]
		public ISingleResult<ACTProcSubjectResult> ACTProcSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeId, districtId, userId, userRoleId);
			return ((ISingleResult<ACTProcSubjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ACTProcBank")]
		public ISingleResult<ACTProcBankResult> ACTProcBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, districtId, userId, userRoleId);
			return ((ISingleResult<ACTProcBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ACTProcGrade")]
		public ISingleResult<ACTProcGradeResult> ACTProcGrade([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, userId, userRoleId);
			return ((ISingleResult<ACTProcGradeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ACTProcVirtualTest")]
		public ISingleResult<ACTProcVirtualTestResult> ACTProcVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankID, districtId, userId, userRoleId);
			return ((ISingleResult<ACTProcVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubjectsForItemSetSaveTest")]
		public ISingleResult<GetSubjectsForItemSetSaveTestResult> GetSubjectsForItemSetSaveTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeId, districtId, userId, userRoleId);
			return ((ISingleResult<GetSubjectsForItemSetSaveTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetGradesForItemSetSaveTest")]
		public ISingleResult<GetGradesForItemSetSaveTestResult> GetGradesForItemSetSaveTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, userId, userRoleId);
			return ((ISingleResult<GetGradesForItemSetSaveTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBanksForItemSetSaveTest")]
		public ISingleResult<GetBanksForItemSetSaveTestResult> GetBanksForItemSetSaveTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, districtId, userId, userRoleId);
			return ((ISingleResult<GetBanksForItemSetSaveTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CanDeleteBank")]
		public ISingleResult<CanDeleteBankResult> CanDeleteBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankId);
			return ((ISingleResult<CanDeleteBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBankByID")]
		public int DeleteBankByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteVirtualTestByID")]
		public int DeleteVirtualTestByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="VarChar(1000)")] ref string error)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, userId, roleId, error);
			error = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualTestForPrinting")]
		public ISingleResult<GetVirtualTestForPrintingResult> GetVirtualTestForPrinting([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<GetVirtualTestForPrintingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveVirtualSection")]
		public int RemoveVirtualSection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualSectionID", DbType="Int")] System.Nullable<int> virtualSectionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="VarChar(1000)")] ref string error)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualSectionID, error);
			error = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReassignVirtualQuestionOrder")]
		public int ReassignVirtualQuestionOrder([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateComplexVirtualQuestionAnswerScores")]
		public int UpdateComplexVirtualQuestionAnswerScores([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResponseIdentifier", DbType="VarChar(100)")] string responseIdentifier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Score", DbType="Int")] System.Nullable<int> score, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubPointsPossible", DbType="Int")] System.Nullable<int> subPointsPossible, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PointsPossible", DbType="Int")] System.Nullable<int> pointsPossible, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="VarChar(1000)")] ref string error)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionID, responseIdentifier, score, subPointsPossible, pointsPossible, error);
			error = ((string)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetGradesByStateIDForManageTest")]
		public ISingleResult<GetGradesByStateIDForManageTestResult> GetGradesByStateIDForManageTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateID", DbType="Int")] System.Nullable<int> stateID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stateID);
			return ((ISingleResult<GetGradesByStateIDForManageTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckAssignSameTest1")]
		public ISingleResult<CheckAssignSameTest1Result> CheckAssignSameTest1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentType", DbType="Int")] System.Nullable<int> assignmentType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentIDs", DbType="NVarChar(500)")] string studentIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassIDs", DbType="NVarChar(500)")] string classIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRoster", DbType="Bit")] System.Nullable<bool> isRoster, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupID", DbType="Int")] System.Nullable<int> groupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignmentType, studentIDs, classIDs, virtualTestID, isRoster, groupID);
			return ((ISingleResult<CheckAssignSameTest1Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TermDistrictProc")]
		public ISingleResult<TermDistrictProcResult> TermDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, classID, schoolID, teacherID, isRegrader);
			return ((ISingleResult<TermDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRubrics")]
		public ISingleResult<GetRubricsResult> GetRubrics([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectID", DbType="Int")] System.Nullable<int> subjectID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(50)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="NVarChar(100)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AuthorName", DbType="NVarChar(100)")] string authorName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestName", DbType="NVarChar(100)")] string virtualTestName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PageIndex", DbType = "Int")] System.Nullable<int> pageIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PageSize", DbType = "Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TotalRecords", DbType = "Int")] ref System.Nullable<int> totalRecords, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SortColumns", DbType = "NVarChar(1000)")] string sortColumns)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, userRoleID, gradeID, subjectID, subjectName, bankName, authorName, virtualTestName, pageIndex, pageSize, totalRecords, sortColumns);
            totalRecords = ((System.Nullable<int>)(result.GetParameterValue(11)));
            return ((ISingleResult<GetRubricsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubjectByGradeIdAndAuthor")]
		public ISingleResult<GetSubjectByGradeIdAndAuthorResult> GetSubjectByGradeIdAndAuthor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeID, districtId, userId, userRoleId);
			return ((ISingleResult<GetSubjectByGradeIdAndAuthorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBanksBySubjectName")]
		public ISingleResult<GetBanksBySubjectNameResult> GetBanksBySubjectName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(50)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, subjectName, districtId, gradeId, userId, userRoleId);
			return ((ISingleResult<GetBanksBySubjectNameResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetBanksBySubjectNamesAndGradeIDs")]
        public ISingleResult<GetBanksBySubjectNameResult> GetBanksBySubjectNamesAndGradeIDs(
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SubjectNameList", DbType = "NVARCHAR(MAX)")] string subjectNameList,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GradeIDList", DbType = "NVARCHAR(MAX)")] string gradeIdList,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictId", DbType = "Int")] System.Nullable<int> districtId,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserId", DbType = "Int")] System.Nullable<int> userId,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserRoleId", DbType = "Int")] System.Nullable<int> userRoleId)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectNameList, gradeIdList, districtId, userId, userRoleId);
            return ((ISingleResult<GetBanksBySubjectNameResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPreferencesWithDefaultForOnlineTest")]
		public ISingleResult<GetPreferencesWithDefaultForOnlineTestResult> GetPreferencesWithDefaultForOnlineTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QtiTestClassAssignmentID", DbType="Int")] System.Nullable<int> qtiTestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qtiTestClassAssignmentID, qTIOnlineTestSessionID, userID);
			return ((ISingleResult<GetPreferencesWithDefaultForOnlineTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReassignVirtualSectionOrder")]
		public int ReassignVirtualSectionOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReassignVirtualSectionQuestionOrder")]
		public int ReassignVirtualSectionQuestionOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualSectionId", DbType="Int")] System.Nullable<int> virtualSectionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, virtualSectionId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FixSectionDataForVirtualTest")]
		public int FixSectionDataForVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MoveVirtualSection")]
		public int MoveVirtualSection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceIndex", DbType="Int")] System.Nullable<int> sourceIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetIndex", DbType="Int")] System.Nullable<int> targetIndex)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, sourceIndex, targetIndex);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MoveVirtualSectionQuestion")]
		public int MoveVirtualSectionQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceIndex", DbType="Int")] System.Nullable<int> sourceIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceSectionID", DbType="Int")] System.Nullable<int> sourceSectionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetIndex", DbType="Int")] System.Nullable<int> targetIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetSectionId", DbType="Int")] System.Nullable<int> targetSectionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, sourceIndex, sourceSectionID, targetIndex, targetSectionId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetQtiItemBanksPersonal")]
		public ISingleResult<GetQtiItemBanksPersonalResult> GetQtiItemBanksPersonal([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, districtId);
			return ((ISingleResult<GetQtiItemBanksPersonalResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SATProcBank")]
		public ISingleResult<SATProcBankResult> SATProcBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, districtId, userId, userRoleId);
			return ((ISingleResult<SATProcBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SATProcVirtualTest")]
		public ISingleResult<SATProcVirtualTestResult> SATProcVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankID, districtId, userId, userRoleId);
			return ((ISingleResult<SATProcVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SATProcGrade")]
		public ISingleResult<SATProcGradeResult> SATProcGrade([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, userRoleID);
			return ((ISingleResult<SATProcGradeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SATProcSubject")]
		public ISingleResult<SATProcSubjectResult> SATProcSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeId, districtId, userId, userRoleId);
			return ((ISingleResult<SATProcSubjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetGhostQuestions")]
		public ISingleResult<GetGhostQuestionsResult> GetGhostQuestions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BaseVirtualQuestionID", DbType="Int")] System.Nullable<int> baseVirtualQuestionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), baseVirtualQuestionID);
			return ((ISingleResult<GetGhostQuestionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMaxQuestionOrder")]
		public ISingleResult<GetMaxQuestionOrderResult> GetMaxQuestionOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<GetMaxQuestionOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBaseQuestions")]
		public ISingleResult<GetBaseQuestionsResult> GetBaseQuestions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, virtualQuestionID);
			return ((ISingleResult<GetBaseQuestionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReassignBaseVirtualSectionQuestionOrder")]
		public int ReassignBaseVirtualSectionQuestionOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualSectionId", DbType="Int")] System.Nullable<int> virtualSectionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, virtualSectionId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBankByDistrictId")]
		public ISingleResult<GetBankByDistrictIdResult> GetBankByDistrictId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDString", DbType="VarChar(MAX)")] string schoolIDString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, schoolIDString, userID, roleID);
			return ((ISingleResult<GetBankByDistrictIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassesHaveTestResult")]
		public ISingleResult<GetClassesHaveTestResultResult> GetClassesHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TermID", DbType="Int")] System.Nullable<int> termID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDString", DbType="VarChar(MAX)")] string schoolIDString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, bankID, schoolID, teacherID, termID, schoolIDString, userID, roleID);
			return ((ISingleResult<GetClassesHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSchoolByDistrictIdAndBankId")]
		public ISingleResult<GetSchoolByDistrictIdAndBankIdResult> GetSchoolByDistrictIdAndBankId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDString", DbType="VarChar(MAX)")] string schoolIDString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, bankID, schoolIDString, userID, roleID);
			return ((ISingleResult<GetSchoolByDistrictIdAndBankIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTeacherByDistrictIdAndBankIdAndSchoolId")]
		public ISingleResult<GetTeacherByDistrictIdAndBankIdAndSchoolIdResult> GetTeacherByDistrictIdAndBankIdAndSchoolId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDString", DbType="VarChar(MAX)")] string schoolIDString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, bankID, schoolID, schoolIDString, userID, roleID);
			return ((ISingleResult<GetTeacherByDistrictIdAndBankIdAndSchoolIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTermsHaveTestResult")]
		public ISingleResult<GetTermsHaveTestResultResult> GetTermsHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDString", DbType="VarChar(MAX)")] string schoolIDString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, bankID, schoolID, teacherID, schoolIDString, userID, roleID);
			return ((ISingleResult<GetTermsHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SpecializedGetAllTestResultIdByFilter")]
		public ISingleResult<SpecializedGetAllTestResultIdByFilterResult> SpecializedGetAllTestResultIdByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TermID", DbType="Int")] System.Nullable<int> termID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDString", DbType="VarChar(MAX)")] string schoolIDString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, bankID, schoolID, teacherID, classID, termID, schoolIDString, userID, roleID);
			return ((ISingleResult<SpecializedGetAllTestResultIdByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBaseVirtualQuestionClone")]
		public int UpdateBaseVirtualQuestionClone([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldVirtualTestId", DbType="Int")] System.Nullable<int> oldVirtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewVirtualTestId", DbType="Int")] System.Nullable<int> newVirtualTestId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oldVirtualTestId, newVirtualTestId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnCanPrintQuestionAndAnswerKey", IsComposable=true)]
		public IQueryable<fnCanPrintQuestionAndAnswerKeyResult> fnCanPrintQuestionAndAnswerKey([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginUserID", DbType="Int")] System.Nullable<int> loginUserID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			return this.CreateMethodCallQuery<fnCanPrintQuestionAndAnswerKeyResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankID, loginUserID, districtID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnCheckBankLock", IsComposable=true)]
		public System.Nullable<bool> fnCheckBankLock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankID, userID, districtID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MoveManyVirtualSectionQuestion")]
		public int MoveManyVirtualSectionQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionIdString", DbType="VarChar(2000)")] string virtualQuestionIdString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceIndex", DbType="Int")] System.Nullable<int> sourceIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceSectionID", DbType="Int")] System.Nullable<int> sourceSectionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetIndex", DbType="Int")] System.Nullable<int> targetIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetSectionId", DbType="Int")] System.Nullable<int> targetSectionId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="VarChar(1000)")] ref string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, virtualQuestionIdString, sourceIndex, sourceSectionID, targetIndex, targetSectionId, message);
			message = ((string)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateAnswerPointsEarned")]
		public int UpdateAnswerPointsEarned([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerID", DbType="Int")] System.Nullable<int> answerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerSubID", DbType="Int")] System.Nullable<int> answerSubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PointsEarned", DbType="Int")] System.Nullable<int> pointsEarned, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID, answerID, answerSubID, pointsEarned, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAnswerForLogByTestResultID")]
		public ISingleResult<GetAnswerForLogByTestResultIDResult> GetAnswerForLogByTestResultID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultId", DbType="NVarChar(MAX)")] string listTestResultId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultId);
			return ((ISingleResult<GetAnswerForLogByTestResultIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAnswerSubForLogByAnswerID")]
		public ISingleResult<GetAnswerSubForLogByAnswerIDResult> GetAnswerSubForLogByAnswerID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListAwnswerID", DbType="NVarChar(MAX)")] string listAwnswerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listAwnswerID);
			return ((ISingleResult<GetAnswerSubForLogByAnswerIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestResultDetails")]
		public ISingleResult<GetTestResultDetailsResult> GetTestResultDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds);
			return ((ISingleResult<GetTestResultDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestResultProgramsByTestResultID")]
		public ISingleResult<GetTestResultProgramsByTestResultIDResult> GetTestResultProgramsByTestResultID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultID", DbType="Int")] System.Nullable<int> testResultID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultID);
			return ((ISingleResult<GetTestResultProgramsByTestResultIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestResultProgramsByTestResultIDs")]
		public ISingleResult<GetTestResultProgramsByTestResultIDsResult> GetTestResultProgramsByTestResultIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIDs", DbType="NVarChar(MAX)")] string listTestResultIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIDs);
			return ((ISingleResult<GetTestResultProgramsByTestResultIDsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestResultScoreForLogByTestResultID")]
		public ISingleResult<GetTestResultScoreForLogByTestResultIDResult> GetTestResultScoreForLogByTestResultID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIDs", DbType="NVarChar(MAX)")] string listTestResultIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIDs);
			return ((ISingleResult<GetTestResultScoreForLogByTestResultIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestResultSubScoreForLog")]
		public ISingleResult<GetTestResultSubScoreForLogResult> GetTestResultSubScoreForLog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultScoreId", DbType="NVarChar(MAX)")] string listTestResultScoreId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultScoreId);
			return ((ISingleResult<GetTestResultSubScoreForLogResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateAnswerText")]
		public int UpdateAnswerText([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerID", DbType="Int")] System.Nullable<int> answerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerSubID", DbType="Int")] System.Nullable<int> answerSubID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Saved", DbType="Bit")] System.Nullable<bool> saved)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), answerID, answerSubID, saved);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CanDeleteVirtualTest")]
		public ISingleResult<CanDeleteVirtualTestResult> CanDeleteVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<CanDeleteVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InactiveQtiTestClassAssignment")]
		public int InactiveQtiTestClassAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, bankID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BankProperties")]
		public ISingleResult<BankPropertiesResult> BankProperties([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankId);
			return ((ISingleResult<BankPropertiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateTestGetBanksByUserID")]
		public ISingleResult<CreateTestGetBanksByUserIDResult> CreateTestGetBanksByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userSchoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userDistrictID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> showArchived)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, userRoleID, userSchoolID, userDistrictID, showArchived);
			return ((ISingleResult<CreateTestGetBanksByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetChoiceVariableVirtualQuestionAnswerScores")]
		public ISingleResult<GetChoiceVariableVirtualQuestionAnswerScoresResult> GetChoiceVariableVirtualQuestionAnswerScores([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionID);
			return ((ISingleResult<GetChoiceVariableVirtualQuestionAnswerScoresResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetChoiceVariableVirtualQuestionAnswerScoresByVirtualQuestionIDs")]
        public ISingleResult<GetChoiceVariableVirtualQuestionAnswerScoresResult> GetChoiceVariableVirtualQuestionAnswerScoresByVirtualQuestionIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "@VirtualQuestionIDs", DbType = "VarChar(MAX)")] string virtualQuestionIDs)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionIDs);
            return ((ISingleResult<GetChoiceVariableVirtualQuestionAnswerScoresResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualSectionQuestionQtiItem")]
		public ISingleResult<GetVirtualSectionQuestionQtiItemResult> GetVirtualSectionQuestionQtiItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirutalTestId", DbType="Int")] System.Nullable<int> virutalTestId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virutalTestId);
			return ((ISingleResult<GetVirtualSectionQuestionQtiItemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetProctorTestViewData")]
		public ISingleResult<GetProctorTestViewDataResult> GetProctorTestViewData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID);
			return ((ISingleResult<GetProctorTestViewDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsOTTRefresh")]
		public ISingleResult<GetTestClassAssignmentsOTTRefreshResult> GetTestClassAssignmentsOTTRefresh([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentIDs", DbType="NVarChar(MAX)")] string qTITestClassAssignmentIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentIDs);
			return ((ISingleResult<GetTestClassAssignmentsOTTRefreshResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnGetAnswerSubInfoByAnswerSubID", IsComposable=true)]
		public IQueryable<fnGetAnswerSubInfoByAnswerSubIDResult> fnGetAnswerSubInfoByAnswerSubID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerID", DbType="Int")] System.Nullable<int> answerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerSubID", DbType="Int")] System.Nullable<int> answerSubID)
		{
			return this.CreateMethodCallQuery<fnGetAnswerSubInfoByAnswerSubIDResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID, answerID, answerSubID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnGetAnswerInfoByAnswerID", IsComposable=true)]
		public IQueryable<fnGetAnswerInfoByAnswerIDResult> fnGetAnswerInfoByAnswerID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerID", DbType="Int")] System.Nullable<int> answerID)
		{
			return this.CreateMethodCallQuery<fnGetAnswerInfoByAnswerIDResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID, answerID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestStudentAssignments")]
		public ISingleResult<GetTestStudentAssignmentsResult> GetTestStudentAssignments([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID, districtID);
			return ((ISingleResult<GetTestStudentAssignmentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetQtiBankSchoolOfSchools")]
		public ISingleResult<GetQtiBankSchoolOfSchoolsResult> GetQtiBankSchoolOfSchools([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIdListString", DbType="VarChar(MAX)")] string schoolIdListString)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolIdListString);
			return ((ISingleResult<GetQtiBankSchoolOfSchoolsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetComplexVirtualQuestionAnswerScores")]
		public ISingleResult<GetComplexVirtualQuestionAnswerScoresResult> GetComplexVirtualQuestionAnswerScores([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionID);
			return ((ISingleResult<GetComplexVirtualQuestionAnswerScoresResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetComplexVirtualQuestionAnswerScoresByVirtualQuestionIDs")]
        public ISingleResult<GetComplexVirtualQuestionAnswerScoresResult> GetComplexVirtualQuestionAnswerScoresByVirtualQuestionIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualQuestionIDs", DbType = "VarChar(MAX)")] string virtualQuestionIDs)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionIDs);
            return ((ISingleResult<GetComplexVirtualQuestionAnswerScoresResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TestResult_Regrade")]
		public int TestResult_Regrade([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultId", DbType="Int")] System.Nullable<int> testResultId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultId);
			return ((int)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TestResult_ReEvaluateBadge")]
        public int TestResult_ReEvaluateBadge([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultId", DbType="Int")] System.Nullable<int> testResultId)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultId);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.TestResult_ReEvaluateBadgeV2")]
        public int TestResult_ReEvaluateBadgeV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TestResultIDs", DbType = "VarChar(MAX)")] string testResultIds)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultIds);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DisplayTestResultDistrictProc")]
		public ISingleResult<DisplayTestResultDistrictProcResult> DisplayTestResultDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TermID", DbType="Int")] System.Nullable<int> termID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecords", DbType="Int")] ref System.Nullable<int> totalRecords, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, teacherID, classID, studentID, virtualTestID, termID, pageIndex, pageSize, totalRecords, sortColumns, isRegrader);
			totalRecords = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((ISingleResult<DisplayTestResultDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAnswerOfStudent")]
		public ISingleResult<GetAnswerOfStudentResult> GetAnswerOfStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultID", DbType="Int")] System.Nullable<int> testResultID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultID, virtualQuestionID);
			return ((ISingleResult<GetAnswerOfStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReportingGetBank")]
		public ISingleResult<ReportingGetBankResult> ReportingGetBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestSubTypeID", DbType="Int")] System.Nullable<int> virtualTestSubTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateFrom", DbType="Date")] System.Nullable<System.DateTime> resultDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateTo", DbType="Date")] System.Nullable<System.DateTime> resultDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GetAllClass", DbType="Int")] System.Nullable<int> getAllClass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subjectId, districtId, userId, userRoleId, virtualTestSubTypeID, resultDateFrom, resultDateTo, getAllClass);
			return ((ISingleResult<ReportingGetBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReportingGetVirtualTest")]
		public ISingleResult<ReportingGetVirtualTestResult> ReportingGetVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectID", DbType="Int")] System.Nullable<int> subjectID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestSubTypeID", DbType="Int")] System.Nullable<int> virtualTestSubTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateFrom", DbType="Date")] System.Nullable<System.DateTime> resultDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateTo", DbType="Date")] System.Nullable<System.DateTime> resultDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GetAllClass", DbType="Int")] System.Nullable<int> getAllClass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeID, subjectID, bankID, districtId, userId, userRoleId, virtualTestSubTypeID, resultDateFrom, resultDateTo, getAllClass);
			return ((ISingleResult<ReportingGetVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReportingGetGrade")]
		public ISingleResult<ReportingGetGradeResult> ReportingGetGrade([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestSubTypeID", DbType="Int")] System.Nullable<int> virtualTestSubTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateFrom", DbType="Date")] System.Nullable<System.DateTime> resultDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateTo", DbType="Date")] System.Nullable<System.DateTime> resultDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GetAllClass", DbType="Int")] System.Nullable<int> getAllClass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, userId, userRoleId, virtualTestSubTypeID, resultDateFrom, resultDateTo, getAllClass);
			return ((ISingleResult<ReportingGetGradeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReportingGetSubject")]
		public ISingleResult<ReportingGetSubjectResult> ReportingGetSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestSubTypeID", DbType="Int")] System.Nullable<int> virtualTestSubTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateFrom", DbType="Date")] System.Nullable<System.DateTime> resultDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateTo", DbType="Date")] System.Nullable<System.DateTime> resultDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GetAllClass", DbType="Int")] System.Nullable<int> getAllClass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeId, districtId, userId, userRoleId, virtualTestSubTypeID, resultDateFrom, resultDateTo, getAllClass);
			return ((ISingleResult<ReportingGetSubjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPrintTestOfStudent")]
		public ISingleResult<GetPrintTestOfStudentResult> GetPrintTestOfStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManuallyGradedOnly", DbType="Bit")] System.Nullable<bool> manuallyGradedOnly)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, manuallyGradedOnly);
			return ((ISingleResult<GetPrintTestOfStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TermDistrictValidProc")]
		public ISingleResult<TermDistrictValidProcResult> TermDistrictValidProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, classID, schoolID, teacherID);
			return ((ISingleResult<TermDistrictValidProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PrimaryTeacherValidTermByDitrictProc")]
		public ISingleResult<PrimaryTeacherValidTermByDitrictProcResult> PrimaryTeacherValidTermByDitrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, classID, studentID, virtualTestID);
			return ((ISingleResult<PrimaryTeacherValidTermByDitrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SchoolValidTermByDitrictProc")]
		public ISingleResult<SchoolValidTermByDitrictProcResult> SchoolValidTermByDitrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, teacherID, classID, studentID, virtualTestID);
			return ((ISingleResult<SchoolValidTermByDitrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StudentValidTermByDistrictProc")]
		public ISingleResult<StudentValidTermByDistrictProcResult> StudentValidTermByDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, classID, schoolID, teacherID);
			return ((ISingleResult<StudentValidTermByDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClassValidTermByDistrictProc")]
		public ISingleResult<ClassValidTermByDistrictProcResult> ClassValidTermByDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, schoolID, teacherID);
			return ((ISingleResult<ClassValidTermByDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VirtualTestValidTermByDistrictProc")]
		public ISingleResult<VirtualTestValidTermByDistrictProcResult> VirtualTestValidTermByDistrictProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, classID, teacherID, studentID);
			return ((ISingleResult<VirtualTestValidTermByDistrictProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAblesReportJob")]
		public ISingleResult<GetAblesReportJobResult> GetAblesReportJob([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, fromDate, toDate);
			return ((ISingleResult<GetAblesReportJobResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsOTT")]
		public ISingleResult<GetTestClassAssignmentsOTTResult> GetTestClassAssignmentsOTT([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, userID, districtID, showActiveClassTestAssignment, schoolID);
			return ((ISingleResult<GetTestClassAssignmentsOTTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsExport")]
		public ISingleResult<GetTestClassAssignmentsExportResult> GetTestClassAssignmentsExport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, schoolID);
			return ((ISingleResult<GetTestClassAssignmentsExportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsExistGradingQueue")]
		public ISingleResult<IsExistGradingQueueResult> IsExistGradingQueue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultIdList", DbType="VarChar(MAX)")] string testResultIdList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), testResultIdList);
			return ((ISingleResult<IsExistGradingQueueResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentDetails")]
		public ISingleResult<GetTestClassAssignmentDetailsResult> GetTestClassAssignmentDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID);
			return ((ISingleResult<GetTestClassAssignmentDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHelpResourceCategories")]
		public ISingleResult<GetHelpResourceCategoriesResult> GetHelpResourceCategories()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetHelpResourceCategoriesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHelpResourceFileTypes")]
		public ISingleResult<GetHelpResourceFileTypesResult> GetHelpResourceFileTypes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetHelpResourceFileTypesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHelpResourceTypes")]
		public ISingleResult<GetHelpResourceTypesResult> GetHelpResourceTypes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetHelpResourceTypesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteHelpResource")]
		public int DeleteHelpResource([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceID", DbType="Int")] System.Nullable<int> helpResourceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), helpResourceID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveHelpResource")]
		public int SaveHelpResource([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceID", DbType="Int")] System.Nullable<int> helpResourceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceTypeID", DbType="Int")] System.Nullable<int> helpResourceTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceCategoryID", DbType="Int")] System.Nullable<int> helpResourceCategoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceFileTypeID", DbType="Int")] System.Nullable<int> helpResourceFileTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Topic", DbType="NVarChar(100)")] string topic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(500)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="KeyWords", DbType="VarChar(4000)")] string keyWords, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceFilePath", DbType="NVarChar(500)")] string helpResourceFilePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceLink", DbType="NVarChar(500)")] string helpResourceLink)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), helpResourceID, helpResourceTypeID, helpResourceCategoryID, helpResourceFileTypeID, topic, description, keyWords, helpResourceFilePath, helpResourceLink);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHelpResourceByID")]
		public ISingleResult<GetHelpResourceByIDResult> GetHelpResourceByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceID", DbType="Int")] System.Nullable<int> helpResourceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), helpResourceID);
			return ((ISingleResult<GetHelpResourceByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ListQTIBanks_HideTeacherBank")]
		public ISingleResult<ListQTIBanks_HideTeacherBankResult> ListQTIBanks_HideTeacherBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HideTeacherBanks", DbType="Bit")] System.Nullable<bool> hideTeacherBanks, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HideOtherPeopleBanks", DbType="Bit")] System.Nullable<bool> hideOtherPeopleBanks)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, userRoleID, districtID, hideTeacherBanks, hideOtherPeopleBanks);
			return ((ISingleResult<ListQTIBanks_HideTeacherBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.HasRightToEditTestBankForNetWorkAdmin")]
		public ISingleResult<HasRightToEditTestBankForNetWorkAdminResult> HasRightToEditTestBankForNetWorkAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankID, userID);
			return ((ISingleResult<HasRightToEditTestBankForNetWorkAdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNextApplicableQuestion")]
		public ISingleResult<GetNextApplicableQuestionResult> GetNextApplicableQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IsManuallyGradedOnly", DbType = "Bit")] System.Nullable<bool> isManuallyGradedOnly, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IsOverrideAutoGraded", DbType = "Bit")] System.Nullable<bool> isOverrideAutoGraded)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID, studentID, isManuallyGradedOnly, isOverrideAutoGraded);
			return ((ISingleResult<GetNextApplicableQuestionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignments")]
		public ISingleResult<GetTestClassAssignmentsResult> GetTestClassAssignments([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, qTITestClassAssignmentID, schoolID);
			return ((ISingleResult<GetTestClassAssignmentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsPassThrough")]
		public ISingleResult<GetTestClassAssignmentsPassThroughResult> GetTestClassAssignmentsPassThrough([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="NVarChar(500)")] string assignmentCodes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignmentCodes, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID);
			return ((ISingleResult<GetTestClassAssignmentsPassThroughResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MoveManyVirtualQuestionGroup")]
		public int MoveManyVirtualQuestionGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionIdString", DbType="VarChar(2000)")] string virtualQuestionIdString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceQuestionGroupID", DbType="Int")] System.Nullable<int> sourceQuestionGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetQuestionGroupID", DbType="Int")] System.Nullable<int> targetQuestionGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetIndex", DbType="Int")] System.Nullable<int> targetIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetVirtualSectionID", DbType="Int")] System.Nullable<int> targetVirtualSectionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, virtualQuestionIdString, sourceQuestionGroupID, targetQuestionGroupID, targetIndex, targetVirtualSectionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveVirtualQuestion")]
		public int RemoveVirtualQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="VarChar(1000)")] ref string error)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionID, error);
			error = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAlgorithmicQuestionExpression")]
		public ISingleResult<GetAlgorithmicQuestionExpressionResult> GetAlgorithmicQuestionExpression([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<GetAlgorithmicQuestionExpressionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMaxPointAlgorithmicByVirtualQuestionIDAndQTIItemID")]
		public ISingleResult<GetMaxPointAlgorithmicByVirtualQuestionIDAndQTIItemIDResult> GetMaxPointAlgorithmicByVirtualQuestionIDAndQTIItemID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIITemID", DbType="Int")] System.Nullable<int> qTIITemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionID, qTIITemID);
			return ((ISingleResult<GetMaxPointAlgorithmicByVirtualQuestionIDAndQTIItemIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPrintTestOfStudentV2")]
		public ISingleResult<GetPrintTestOfStudentV2Result> GetPrintTestOfStudentV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ManuallyGradedOnly", DbType="Bit")] System.Nullable<bool> manuallyGradedOnly)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, manuallyGradedOnly);
			return ((ISingleResult<GetPrintTestOfStudentV2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualQuestionToCreateS3Object")]
		public ISingleResult<GetVirtualQuestionToCreateS3ObjectResult> GetVirtualQuestionToCreateS3Object([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId);
			return ((ISingleResult<GetVirtualQuestionToCreateS3ObjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHelpResources")]
		public ISingleResult<GetHelpResourcesResult> GetHelpResources([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchText", DbType="NVarChar(500)")] string searchText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HelpResourceCaterogyIDs", DbType="NVarChar(500)")] string helpResourceCaterogyIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchText, helpResourceCaterogyIDs, roleID, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((ISingleResult<GetHelpResourcesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestStudentSessionsExport")]
		public ISingleResult<GetTestStudentSessionsExportResult> GetTestStudentSessionsExport(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="VarChar(50)")] string gradeName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(50)")] string bankName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="VarChar(200)")] string className, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="VarChar(100)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="VarChar(100)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(150)")] string testName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(500)")] string assignmentCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(200)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, qTITestClassAssignmentID, schoolID, gradeName, subjectName, bankName, className, teacherName, studentName, testName, assignmentCodes, generalSearch, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(20)));
			return ((ISingleResult<GetTestStudentSessionsExportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClearQuestionLabelQuestionLNumber")]
		public int ClearQuestionLabelQuestionLNumber([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllQuestionOfVirtualTest", IsComposable=true)]
		public IQueryable<GetAllQuestionOfVirtualTestResult> GetAllQuestionOfVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string ticket, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentID)
		{
			return this.CreateMethodCallQuery<GetAllQuestionOfVirtualTestResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ticket, classID, studentID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SubmitOnlineTest")]
		public ISingleResult<SubmitOnlineTestResult> SubmitOnlineTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeOver", DbType="Bit")] System.Nullable<bool> timeOver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="VarChar(200)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubmitType", DbType="Int")] System.Nullable<int> submitType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestUserId", DbType="Int")] System.Nullable<int> requestUserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID, timeOver, token, submitType, requestUserId);
			return ((ISingleResult<SubmitOnlineTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNextApplicableStudent")]
		public ISingleResult<GetNextApplicableStudentResult> GetNextApplicableStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionID", DbType="Int")] System.Nullable<int> virtualQuestionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IsManuallyGradedOnly", DbType = "Bit")] System.Nullable<bool> isManuallyGradedOnly, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StudentID", DbType = "Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IsOverrideAutoGraded", DbType = "Bit")] System.Nullable<bool> isOverrideAutoGraded)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID, virtualQuestionID, isManuallyGradedOnly, studentID, isOverrideAutoGraded);
			return ((ISingleResult<GetNextApplicableStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestState")]
		public ISingleResult<GetTestStateResult> GetTestState([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID);
			return ((ISingleResult<GetTestStateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBankOrder")]
		public ISingleResult<GetBankOrderResult> GetBankOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId);
			return ((ISingleResult<GetBankOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualTestOrder")]
		public ISingleResult<GetVirtualTestOrderResult> GetVirtualTestOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId);
			return ((ISingleResult<GetVirtualTestOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetGradeOrder")]
		public ISingleResult<GetGradeOrderResult> GetGradeOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId);
			return ((ISingleResult<GetGradeOrderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualTestAnswerKeyForPrinting")]
		public ISingleResult<GetVirtualTestAnswerKeyForPrintingResult> GetVirtualTestAnswerKeyForPrinting([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, userID);
			return ((ISingleResult<GetVirtualTestAnswerKeyForPrintingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestStateTOS")]
		public ISingleResult<GetTestStateTOSResult> GetTestStateTOS([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID);
			return ((ISingleResult<GetTestStateTOSResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AblesGetStudentHasData")]
		public ISingleResult<AblesGetStudentHasDataResult> AblesGetStudentHasData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssessmentRoundIDList", DbType="VarChar(100)")] string assessmentRoundIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestIDList", DbType="VarChar(500)")] string virtualTestIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsASD", DbType="Bit")] System.Nullable<bool> isASD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, classID, assessmentRoundIDList, virtualTestIDList, isASD);
			return ((ISingleResult<AblesGetStudentHasDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassForAblesDataDropDown")]
		public ISingleResult<GetClassForAblesDataDropDownResult> GetClassForAblesDataDropDown([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssessmentRoundIDList", DbType="VarChar(100)")] string assessmentRoundIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestIDList", DbType="VarChar(500)")] string virtualTestIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsASD", DbType="Bit")] System.Nullable<bool> isASD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleId, schoolID, teacherID, assessmentRoundIDList, virtualTestIDList, isASD, year);
			return ((ISingleResult<GetClassForAblesDataDropDownResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMinResultYearBySchool")]
		public ISingleResult<GetMinResultYearBySchoolResult> GetMinResultYearBySchool([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolID);
			return ((ISingleResult<GetMinResultYearBySchoolResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetGradesByUserID")]
		public ISingleResult<GetGradesByUserIDResult> GetGradesByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, userRoleId);
			return ((ISingleResult<GetGradesByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnGetTestType", IsComposable=true)]
		public IQueryable<fnGetTestTypeResult> fnGetTestType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			return this.CreateMethodCallQuery<fnGetTestTypeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnGetSubjectGradeByUserID", IsComposable=true)]
		public IQueryable<fnGetSubjectGradeByUserIDResult> fnGetSubjectGradeByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			return this.CreateMethodCallQuery<fnGetSubjectGradeByUserIDResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountOpendedByVirtualTest")]
		public ISingleResult<CountOpendedByVirtualTestResult> CountOpendedByVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<CountOpendedByVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AR_GetAblesData")]
		public ISingleResult<AR_GetAblesDataResult> AR_GetAblesData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentId", DbType="Int")] System.Nullable<int> studentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestResultId", DbType="Int")] System.Nullable<int> testResultId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentId, testResultId);
			return ((ISingleResult<AR_GetAblesDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestBySchoolAndDistrictTerm")]
		public ISingleResult<GetTestBySchoolAndDistrictTermResult> GetTestBySchoolAndDistrictTerm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermID", DbType="Int")] System.Nullable<int> districtTermID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, schoolID, districtTermID, userID, roleID);
			return ((ISingleResult<GetTestBySchoolAndDistrictTermResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FullTermDistrictValidProc")]
		public ISingleResult<FullTermDistrictValidProcResult> FullTermDistrictValidProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, classID, schoolID, teacherID);
			return ((ISingleResult<FullTermDistrictValidProcResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.FullTermDistrictValidV2Proc")]
        public ISingleResult<FullTermDistrictValidProcResult> FullTermDistrictValidV2Proc([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserID", DbType = "Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "RoleID", DbType = "Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualTestID", DbType = "Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StudentID", DbType = "Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClassID", DbType = "Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SchoolIDList", DbType = "NVARCHAR(MAX)")] string schoolIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TeacherID", DbType = "Int")] System.Nullable<int> teacherID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, classID, schoolIDList, teacherID);
            return ((ISingleResult<FullTermDistrictValidProcResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SchoolValidTermByDitrictTestResultProc")]
		public ISingleResult<SchoolValidTermByDitrictTestResultProcResult> SchoolValidTermByDitrictTestResultProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, teacherID, classID, studentID, virtualTestID);
			return ((ISingleResult<SchoolValidTermByDitrictTestResultProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassByDistrictSchoolTestResult")]
		public ISingleResult<GetClassByDistrictSchoolTestResultResult> GetClassByDistrictSchoolTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, virtualTestID, studentID, schoolID, teacherID);
			return ((ISingleResult<GetClassByDistrictSchoolTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DisplayRemoveTestResultProc")]
		public ISingleResult<DisplayRemoveTestResultProcResult> DisplayRemoveTestResultProc(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="NVarChar(255)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="NVarChar(255)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TermID", DbType="Int")] System.Nullable<int> termID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestPeriod", DbType="NVarChar(100)")] string testPeriod, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecords", DbType="Int")] ref System.Nullable<int> totalRecords, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VARCHAR(255)")] string generalSearch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, teacherName, classID, studentName, virtualTestID, termID, testPeriod, pageIndex, pageSize, totalRecords, sortColumns, isRegrader, generalSearch);
			totalRecords = ((System.Nullable<int>)(result.GetParameterValue(12)));
			return ((ISingleResult<DisplayRemoveTestResultProcResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.DisplayRemoveTestResultV2Proc")]
        public ISingleResult<DisplayRemoveTestResultV2ProcResult> DisplayRemoveTestResultV2Proc(
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserID", DbType = "Int")] System.Nullable<int> userID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "RoleID", DbType = "Int")] System.Nullable<int> roleID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SchoolIDList", DbType = "NVARCHAR(MAX)")] string schoolIDList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CategoryIDList", DbType = "NVARCHAR(MAX)")] string categoryIDList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GradeIDList", DbType = "NVARCHAR(MAX)")] string gradeIDList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SubjectNameList", DbType = "NVARCHAR(MAX)")] string subjectNameList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TermID", DbType = "Int")] System.Nullable<int> termID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClassID", DbType = "Int")] System.Nullable<int> classID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TeacherName", DbType = "NVarChar(255)")] string teacherName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StudentName", DbType = "NVarChar(255)")] string studentName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromResultDate", DbType = "DATETIME")] DateTime? fromResultDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ToResultDate", DbType = "DATETIME")] DateTime? toResultDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromCreatedDate", DbType = "DATETIME")] DateTime? fromCreatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ToCreatedDate", DbType = "DATETIME")] DateTime? toCreatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromUpdatedDate", DbType = "DATETIME")] DateTime? fromUpdatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ToUpdatedDate", DbType = "DATETIME")] DateTime? toUpdatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualTestName", DbType = "NVarChar(255)")] string virtualTestName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PageIndex", DbType = "Int")] System.Nullable<int> pageIndex,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PageSize", DbType = "Int")] System.Nullable<int> pageSize,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SortColumns", DbType = "NVarChar(1000)")] string sortColumns,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GeneralSearch", DbType = "VARCHAR(255)")] string generalSearch,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "HasStudentGeneralSearch", DbType = "Bit")] bool hasStudentGeneralSearch)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolIDList, categoryIDList, gradeIDList, subjectNameList, termID, classID, teacherName, studentName, fromResultDate, toResultDate, fromCreatedDate, toCreatedDate, fromUpdatedDate, toUpdatedDate, virtualTestName, pageIndex, pageSize, sortColumns, generalSearch, hasStudentGeneralSearch);
            return ((ISingleResult<DisplayRemoveTestResultV2ProcResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.DisplayRemoveVirtualTestV2Proc")]
        public ISingleResult<DisplayRemoveVirtualTestV2ProcResult> DisplayRemoveVirtualTestV2Proc(
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserID", DbType = "Int")] System.Nullable<int> userID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "RoleID", DbType = "Int")] System.Nullable<int> roleID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SchoolIDList", DbType = "NVARCHAR(MAX)")] string schoolIDList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CategoryIDList", DbType = "NVARCHAR(MAX)")] string categoryIDList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GradeIDList", DbType = "NVARCHAR(MAX)")] string gradeIDList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SubjectNameList", DbType = "NVARCHAR(MAX)")] string subjectNameList,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TermID", DbType = "Int")] System.Nullable<int> termID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClassID", DbType = "Int")] System.Nullable<int> classID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TeacherName", DbType = "NVarChar(255)")] string teacherName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StudentName", DbType = "NVarChar(255)")] string studentName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromResultDate", DbType = "DateTime")] DateTime? fromResultDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ToResultDate", DbType = "DateTime")] DateTime? toResultDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromCreatedDate", DbType = "DateTime")] DateTime? fromCreatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ToCreatedDate", DbType = "DateTime")] DateTime? toCreatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromUpdatedDate", DbType = "DateTime")] DateTime? fromUpdatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ToUpdatedDate", DbType = "DateTime")] DateTime? toUpdatedDate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualTestName", DbType = "NVarChar(255)")] string virtualTestName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PageIndex", DbType = "Int")] System.Nullable<int> pageIndex,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PageSize", DbType = "Int")] System.Nullable<int> pageSize,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TotalRecords", DbType = "Int")] ref System.Nullable<int> totalRecords,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TotalStudents", DbType = "Int")] ref System.Nullable<int> totalStudents,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TotalTestResults", DbType = "Int")] ref System.Nullable<int> totalTestResults,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SortColumns", DbType = "NVarChar(1000)")] string sortColumns,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GeneralSearch", DbType = "VARCHAR(255)")] string generalSearch)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolIDList, categoryIDList, gradeIDList, subjectNameList, termID, classID, teacherName, studentName, fromResultDate, toResultDate, fromCreatedDate, toCreatedDate, fromUpdatedDate, toUpdatedDate, virtualTestName, pageIndex, pageSize, totalRecords, totalStudents, totalTestResults, sortColumns, generalSearch);
            totalRecords = ((System.Nullable<int>)(result.GetParameterValue(20)));
            totalStudents = ((System.Nullable<int>)(result.GetParameterValue(21)));
            totalTestResults = ((System.Nullable<int>)(result.GetParameterValue(22)));
            return ((ISingleResult<DisplayRemoveVirtualTestV2ProcResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualTestsForTestRegrader")]
		public ISingleResult<GetVirtualTestsForTestRegraderResult> GetVirtualTestsForTestRegrader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermID", DbType="Int")] System.Nullable<int> districtTermID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, districtTermID);
			return ((ISingleResult<GetVirtualTestsForTestRegraderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassesForTestRegrader")]
		public ISingleResult<GetClassesForTestRegraderResult> GetClassesForTestRegrader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermID", DbType="Int")] System.Nullable<int> districtTermID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, districtTermID);
			return ((ISingleResult<GetClassesForTestRegraderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DisplayTestResultReGraderProc")]
		public ISingleResult<DisplayTestResultReGraderProcResult> DisplayTestResultReGraderProc(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="NVarChar(255)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="NVarChar(255)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TermID", DbType="Int")] System.Nullable<int> termID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestPeriod", DbType="NVarChar(100)")] string testPeriod, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecords", DbType="Int")] ref System.Nullable<int> totalRecords, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsRegrader", DbType="Int")] System.Nullable<int> isRegrader, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, teacherName, classID, studentName, virtualTestID, termID, testPeriod, pageIndex, pageSize, totalRecords, sortColumns, isRegrader, generalSearch);
			totalRecords = ((System.Nullable<int>)(result.GetParameterValue(12)));
			return ((ISingleResult<DisplayTestResultReGraderProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSchoolsForTestRegrader")]
		public ISingleResult<GetSchoolsForTestRegraderResult> GetSchoolsForTestRegrader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID);
			return ((ISingleResult<GetSchoolsForTestRegraderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDistrictTermsForTestRegrader")]
		public ISingleResult<GetDistrictTermsForTestRegraderResult> GetDistrictTermsForTestRegrader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, classID);
			return ((ISingleResult<GetDistrictTermsForTestRegraderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DisplayTestResultRetaggedProc")]
		public ISingleResult<DisplayTestResultRetaggedProcResult> DisplayTestResultRetaggedProc(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="NVarChar(255)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="NVarChar(255)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TermID", DbType="Int")] System.Nullable<int> termID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isShowExported, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecords", DbType="Int")] ref System.Nullable<int> totalRecords, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsStudentInformationSystem", DbType="Bit")] System.Nullable<bool> isStudentInformationSystem, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateCompare", DbType="VarChar(50)")] string dateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID, teacherName, classID, studentName, virtualTestID, termID, isShowExported, pageIndex, pageSize, totalRecords, sortColumns, isStudentInformationSystem, dateCompare, generalSearch);
			totalRecords = ((System.Nullable<int>)(result.GetParameterValue(12)));
			return ((ISingleResult<DisplayTestResultRetaggedProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CanRemoveQuestion")]
		public ISingleResult<CanRemoveQuestionResult> CanRemoveQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionIDs", DbType="VarChar(MAX)")] string virtualQuestionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="VarChar(1000)")] ref string error)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionIDs, error);
			error = ((string)(result.GetParameterValue(1)));
			return ((ISingleResult<CanRemoveQuestionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcGradeFormBank")]
		public ISingleResult<ProcGradeFormBankResult> ProcGradeFormBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsFromMultiDate", DbType="Bit")] System.Nullable<bool> isFromMultiDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UsingMultiDate", DbType="Bit")] System.Nullable<bool> usingMultiDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, userRoleID, isFromMultiDate, usingMultiDate);
			return ((ISingleResult<ProcGradeFormBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProcSubjectFormBank")]
		public ISingleResult<ProcSubjectFormBankResult> ProcSubjectFormBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsFromMultiDate", DbType="Bit")] System.Nullable<bool> isFromMultiDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UsingMultiDate", DbType="Bit")] System.Nullable<bool> usingMultiDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeID, districtId, userId, userRoleId, isFromMultiDate, usingMultiDate);
			return ((ISingleResult<ProcSubjectFormBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubjectsByGradeIdAndAuthorOfAllTestType")]
		public ISingleResult<GetSubjectsByGradeIdAndAuthorOfAllTestTypeResult> GetSubjectsByGradeIdAndAuthorOfAllTestType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleId", DbType="Int")] System.Nullable<int> userRoleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), gradeID, districtId, userId, userRoleId);
			return ((ISingleResult<GetSubjectsByGradeIdAndAuthorOfAllTestTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsOTTImprove")]
		public ISingleResult<GetTestClassAssignmentsOTTImproveResult> GetTestClassAssignmentsOTTImprove(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="VarChar(50)")] string gradeName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(50)")] string bankName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="VarChar(200)")] string className, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="VarChar(100)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="VarChar(100)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(150)")] string testName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(500)")] string assignmentCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(200)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, userID, districtID, showActiveClassTestAssignment, schoolID, gradeName, subjectName, bankName, className, teacherName, studentName, testName, assignmentCodes, generalSearch, sortColumn, sortDirection, startRow, pageSize);
			return ((ISingleResult<GetTestClassAssignmentsOTTImproveResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPreferencesForOnlineTest_Multiple")]
		public ISingleResult<GetPreferencesForOnlineTest_MultipleResult> GetPreferencesForOnlineTest_Multiple([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QtiTestClassAssignmentIds", DbType="VarChar(MAX)")] string qtiTestClassAssignmentIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qtiTestClassAssignmentIds);
			return ((ISingleResult<GetPreferencesForOnlineTest_MultipleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAssociatedClassesThatHasTestResult")]
		public ISingleResult<GetAssociatedClassesThatHasTestResultResult> GetAssociatedClassesThatHasTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, schoolID, userID, roleID);
			return ((ISingleResult<GetAssociatedClassesThatHasTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubjectGradeByUserID")]
		public ISingleResult<GetSubjectGradeByUserIDResult> GetSubjectGradeByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID);
			return ((ISingleResult<GetSubjectGradeByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckPermissionsEditQTITestClassAssignment")]
		public ISingleResult<CheckPermissionsEditQTITestClassAssignmentResult> CheckPermissionsEditQTITestClassAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentIDs", DbType="NVarChar(MAX)")] string qTITestClassAssignmentIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleId, userId, qTITestClassAssignmentIDs);
			return ((ISingleResult<CheckPermissionsEditQTITestClassAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetQTIVirtualTest")]
		public ISingleResult<GetQTIVirtualTestResult> GetQTIVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<GetQTIVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteVirtualQuestionBranchingByVirtualTestID")]
		public int DeleteVirtualQuestionBranchingByVirtualTestID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteVirtualSectionBranchingByVirtualTestID")]
		public int DeleteVirtualSectionBranchingByVirtualTestID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentAssignments")]
		public ISingleResult<GetStudentAssignmentsResult> GetStudentAssignments([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentIds", DbType="VarChar(MAX)")] string studentIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassIds", DbType="VarChar(MAX)")] string classIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SSearch", DbType="VarChar(300)")] string sSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, studentIds, classIds, sSearch, pageSize, sortColumns);
			return ((ISingleResult<GetStudentAssignmentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualQuestionWithCorrectAnswer")]
		public ISingleResult<GetVirtualQuestionWithCorrectAnswerResult> GetVirtualQuestionWithCorrectAnswer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirutalTestId", DbType="Int")] System.Nullable<int> virutalTestId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virutalTestId);
			return ((ISingleResult<GetVirtualQuestionWithCorrectAnswerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestTypeByUserId")]
		public ISingleResult<GetTestTypeByUserIdResult> GetTestTypeByUserId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID);
			return ((ISingleResult<GetTestTypeByUserIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestForStudentPreferences")]
		public ISingleResult<GetTestForStudentPreferencesResult> GetTestForStudentPreferences(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Level", DbType="VarChar(20)")] string level, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestTypes", DbType="VarChar(1000)")] string virtualTestTypes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeIDs", DbType="VarChar(500)")] string gradeIDs, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectIDs", DbType="VarChar(MAX)")] string subjectIDs, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Visibilities", DbType="Int")] System.Nullable<int> visibilities, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(255)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsGetAttributeOnly", DbType="Bit")] System.Nullable<bool> isGetAttributeOnly, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTableName", DbType="VarChar(100)")] string attributeTableName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassIds", DbType="VarChar(MAX)")] string classIds, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExcludeTestTypes", DbType="VarChar(MAX)")] string excludeTestTypes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), level, districtID, schoolID, userID, roleID, virtualTestTypes, gradeIDs, subjectIDs, visibilities, startRow, pageSize, generalSearch, sortColumn, sortDirection, totalRecord, isGetAttributeOnly, attributeTableName, classIds, excludeTestTypes);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(14)));
			return ((ISingleResult<GetTestForStudentPreferencesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VirtualTestProperitesNew")]
		public ISingleResult<VirtualTestProperitesNewResult> VirtualTestProperitesNew([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID, userRoleID, districtID);
			return ((ISingleResult<VirtualTestProperitesNewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteVirtualQuestionBranchingAlgorithmByVirtualTestID")]
		public int DeleteVirtualQuestionBranchingAlgorithmByVirtualTestID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDataSetCategoryForStudentPreference")]
		public ISingleResult<GetDataSetCategoryForStudentPreferenceResult> GetDataSetCategoryForStudentPreference([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, schoolID);
			return ((ISingleResult<GetDataSetCategoryForStudentPreferenceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddRetagTestResults")]
		public ISingleResult<AddRetagTestResultsResult> AddRetagTestResults([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gradebook", DbType="Bit")] System.Nullable<bool> gradebook, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentRecord", DbType="Bit")] System.Nullable<bool> studentRecord, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CleverApi", DbType="Bit")] System.Nullable<bool> cleverApi, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsExportRawScore", DbType="Bit")] System.Nullable<bool> isExportRawScore)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtID, userID, gradebook, studentRecord, cleverApi, isExportRawScore);
			return ((ISingleResult<AddRetagTestResultsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChangePositionVirtualSection")]
		public int ChangePositionVirtualSection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceIndex", DbType="Int")] System.Nullable<int> sourceIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetIndex", DbType="Int")] System.Nullable<int> targetIndex)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, sourceIndex, targetIndex);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualQuestionProperties")]
		public ISingleResult<GetVirtualQuestionPropertiesResult> GetVirtualQuestionProperties([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualQuestionId", DbType="Int")] System.Nullable<int> virtualQuestionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualQuestionId);
			return ((ISingleResult<GetVirtualQuestionPropertiesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateTestGetBanksByUserID_HideTeacherBank")]
		public ISingleResult<CreateTestGetBanksByUserID_HideTeacherBankResult> CreateTestGetBanksByUserID_HideTeacherBank(
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userRoleID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userDistrictID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> bankID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> showArchived,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HideTeacherBanks", DbType="Bit")] System.Nullable<bool> hideTeacherBanks,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HideOtherPeopleBanks", DbType="Bit")] System.Nullable<bool> hideOtherPeopleBanks,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HideBankOnlyForm", DbType="Bit")] System.Nullable<bool> hideBankOnlyForm,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isSurvey,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] int pageIndex,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] int pageSize,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(255)")] string generalSearch,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(255)")] string sortColumn,
            [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(4)")] string sortDirection)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, userRoleID, userDistrictID, bankID, showArchived, hideTeacherBanks, hideOtherPeopleBanks, hideBankOnlyForm, isSurvey, pageIndex, pageSize, generalSearch, sortColumn, sortDirection);
			return ((ISingleResult<CreateTestGetBanksByUserID_HideTeacherBankResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSurveyAssignmentResultsByType")]
		public ISingleResult<GetSurveyAssignmentResultsByTypeResult> GetSurveyAssignmentResultsByType([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermId", DbType="Int")] System.Nullable<int> districtTermId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SurveyId", DbType="Int")] System.Nullable<int> surveyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SurveyAssignmentType", DbType="Int")] System.Nullable<int> surveyAssignmentType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortBy", DbType="NVarChar(100)")] string sortBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchText", DbType="NVarChar(1000)")] string searchText, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Skip", DbType="Int")] System.Nullable<int> skip, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Take", DbType="Int")] System.Nullable<int> take, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsShowInactive", DbType="Bit")] System.Nullable<bool> isShowInactive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, districtTermId, surveyId, surveyAssignmentType, sortBy, searchText, skip, take, isShowInactive);
			return ((ISingleResult<GetSurveyAssignmentResultsByTypeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestAssignmentsForSurvey")]
		public ISingleResult<GetTestAssignmentsForSurveyResult> GetTestAssignmentsForSurvey([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID, studentID);
			return ((ISingleResult<GetTestAssignmentsForSurveyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSurveyPrivateAssignmentOfStudentAndParent")]
		public ISingleResult<GetSurveyPrivateAssignmentOfStudentAndParentResult> GetSurveyPrivateAssignmentOfStudentAndParent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentIds", DbType="VarChar(MAX)")] string qTITestClassAssignmentIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentIds);
			return ((ISingleResult<GetSurveyPrivateAssignmentOfStudentAndParentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckAllowAssignSurvey")]
		public ISingleResult<CheckAllowAssignSurveyResult> CheckAllowAssignSurvey([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermId", DbType="Int")] System.Nullable<int> districtTermId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SurveyId", DbType="Int")] System.Nullable<int> surveyId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SurveyAssignmentType", DbType="Int")] System.Nullable<int> surveyAssignmentType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, districtTermId, surveyId, surveyAssignmentType);
			return ((ISingleResult<CheckAllowAssignSurveyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckMatchEmail")]
		public ISingleResult<CheckMatchEmailResult> CheckMatchEmail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> termId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> assignmentType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, districtId, virtualTestId, termId, assignmentType);
			return ((ISingleResult<CheckMatchEmailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTermBySchool")]
		public ISingleResult<GetTermBySchoolResult> GetTermBySchool([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolId, userId, roleId);
			return ((ISingleResult<GetTermBySchoolResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsPassThroughExport")]
		public ISingleResult<GetTestClassAssignmentsPassThroughExportResult> GetTestClassAssignmentsPassThroughExport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(MAX)")] string assignmentCodes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignmentCodes, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID);
			return ((ISingleResult<GetTestClassAssignmentsPassThroughExportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsAllStudentSessionCompleted", IsComposable=true)]
		public System.Nullable<bool> IsAllStudentSessionCompleted([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentId", DbType="Int")] System.Nullable<int> qTITestClassAssignmentId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsTestHasManuallyQuestion", IsComposable=true)]
		public System.Nullable<bool> IsTestHasManuallyQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentId", DbType="Int")] System.Nullable<int> qTITestClassAssignmentId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConstructedResponseQuestions")]
		public ISingleResult<GetConstructedResponseQuestionsResult> GetConstructedResponseQuestions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId);
			return ((ISingleResult<GetConstructedResponseQuestionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GradingShortcutsCompleted")]
		public int GradingShortcutsCompleted([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerIDInput", DbType="Int")] System.Nullable<int> answerIDInput, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerSubIDInput", DbType="Int")] System.Nullable<int> answerSubIDInput, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignPointsEarned", DbType="NVarChar(10)")] string assignPointsEarned, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeType", DbType="NVarChar(10)")] string gradeType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnAnswered", DbType="Bit")] System.Nullable<bool> unAnswered, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answered", DbType="Bit")] System.Nullable<bool> answered, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionIDs", DbType="NVarChar(MAX)")] string qTIOnlineTestSessionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID, answerIDInput, answerSubIDInput, assignPointsEarned, gradeType, unAnswered, answered, qTIOnlineTestSessionIDs, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GradingShortcutsPendingReview")]
		public int GradingShortcutsPendingReview([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerIDInput", DbType="Int")] System.Nullable<int> answerIDInput, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerSubIDInput", DbType="Int")] System.Nullable<int> answerSubIDInput, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignPointsEarned", DbType="NVarChar(10)")] string assignPointsEarned, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeType", DbType="NVarChar(10)")] string gradeType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UnAnswered", DbType="Bit")] System.Nullable<bool> unAnswered, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answered", DbType="Bit")] System.Nullable<bool> answered, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionIDs", DbType="NVarChar(MAX)")] string qTIOnlineTestSessionIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID, answerIDInput, answerSubIDInput, assignPointsEarned, gradeType, unAnswered, answered, qTIOnlineTestSessionIDs, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPointEarnedForAblesReport")]
		public ISingleResult<GetPointEarnedForAblesReportResult> GetPointEarnedForAblesReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentIDList", DbType="VarChar(3000)")] string studentIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssessmentRoundIDList", DbType="VarChar(100)")] string assessmentRoundIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestIDList", DbType="VarChar(100)")] string virtualTestIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsASD", DbType="Bit")] System.Nullable<bool> isASD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, studentIDList, schoolID, assessmentRoundIDList, virtualTestIDList, isASD);
			return ((ISingleResult<GetPointEarnedForAblesReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSubjectByShortName")]
		public ISingleResult<GetSubjectByShortNameResult> GetSubjectByShortName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> stateID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string shortName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string gradeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stateID, shortName, subjectName, gradeName);
			return ((ISingleResult<GetSubjectByShortNameResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAnswerAttachments")]
        public ISingleResult<GetAnswerAttachmentsResult> GetAnswerAttachments([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTIOnlineTestSessionID", DbType="Int")] System.Nullable<int> qTIOnlineTestSessionID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTIOnlineTestSessionID);
            return ((ISingleResult<GetAnswerAttachmentsResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserCanAccessArtifact")]
		public ISingleResult<CheckUserCanAccessArtifactResult> CheckUserCanAccessArtifact([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocumentGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> documentGuid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID, documentGuid);
			return ((ISingleResult<CheckUserCanAccessArtifactResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentStatusForTestRetake")]
		public ISingleResult<GetStudentStatusForTestRetakeResult> GetStudentStatusForTestRetake([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalTestID", DbType="Int")] System.Nullable<int> originalTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GUID", DbType="VarChar(50)")] string gUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), originalTestID, gUID);
			return ((ISingleResult<GetStudentStatusForTestRetakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VirtualTestWithOutTestResultForPublisherProc")]
		public ISingleResult<VirtualTestWithOutTestResultForPublisherProcResult> VirtualTestWithOutTestResultForPublisherProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID);
			return ((ISingleResult<VirtualTestWithOutTestResultForPublisherProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClonePBSForTestRetake")]
		public ISingleResult<ClonePBSForTestRetakeResult> ClonePBSForTestRetake([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalTestID", DbType="Int")] System.Nullable<int> originalTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewTestID", DbType="Int")] System.Nullable<int> newTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), originalTestID, newTestID);
			return ((ISingleResult<ClonePBSForTestRetakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestAssignResultForRetake")]
		public ISingleResult<GetTestAssignResultForRetakeResult> GetTestAssignResultForRetake([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Guid", DbType="VarChar(255)")] string guid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(500)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(100)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(100)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), guid, generalSearch, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((ISingleResult<GetTestAssignResultForRetakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsRemoveTempTable")]
		public ISingleResult<GetTestClassAssignmentsRemoveTempTableResult> GetTestClassAssignmentsRemoveTempTable(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="VarChar(50)")] string gradeName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(50)")] string bankName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="VarChar(200)")] string className, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="VarChar(1000)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="VarChar(1000)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(150)")] string testName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(500)")] string assignmentCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(200)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, qTITestClassAssignmentID, schoolID, gradeName, subjectName, bankName, className, teacherName, studentName, testName, assignmentCodes, generalSearch, sortColumn, sortDirection, startRow, pageSize);
			return ((ISingleResult<GetTestClassAssignmentsRemoveTempTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRetakeListOfDisplayQuestions")]
		public ISingleResult<GetRetakeListOfDisplayQuestionsResult> GetRetakeListOfDisplayQuestions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestId", DbType="Int")] System.Nullable<int> virtualTestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentIDs", DbType="VarChar(MAX)")] string studentIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GUID", DbType="VarChar(50)")] string gUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(300)")] string testName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestId, studentIDs, gUID, testName);
			return ((ISingleResult<GetRetakeListOfDisplayQuestionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestRetakeInfor")]
		public ISingleResult<GetTestRetakeInforResult> GetTestRetakeInfor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string strGUID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strGUID);
			return ((ISingleResult<GetTestRetakeInforResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestAssignmentsForStudent")]
		public ISingleResult<GetTestAssignmentsForStudentResult> GetTestAssignmentsForStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID, districtID);
			return ((ISingleResult<GetTestAssignmentsForStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CanActiveTestAssignmentForRetake")]
		public ISingleResult<CanActiveTestAssignmentForRetakeResult> CanActiveTestAssignmentForRetake([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qtiTestClassAssignmentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qtiTestClassAssignmentID);
			return ((ISingleResult<CanActiveTestAssignmentForRetakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHelpResourceCategoriesByRole")]
		public ISingleResult<GetHelpResourceCategoriesByRoleResult> GetHelpResourceCategoriesByRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID);
			return ((ISingleResult<GetHelpResourceCategoriesByRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestTypeGradeAndSubjectForPBS")]
		public ISingleResult<GetTestTypeGradeAndSubjectForPBSResult> GetTestTypeGradeAndSubjectForPBS([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataSetOriginID", DbType="Int")] int dataSetOriginID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SchoolIDList", DbType = "VARCHAR(MAX)")] string schoolIDList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, dataSetOriginID, schoolIDList);
			return ((ISingleResult<GetTestTypeGradeAndSubjectForPBSResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LAC_AutoMapPerformanceBands")]
		public ISingleResult<LAC_AutoMapPerformanceBandsResult> LAC_AutoMapPerformanceBands([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, virtualTestID);
			return ((ISingleResult<LAC_AutoMapPerformanceBandsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestForPBS")]
		public ISingleResult<GetTestForPBSResult> GetTestForPBS([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestTypeIDs", DbType="VarChar(1000)")] string virtualTestTypeIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeIDs", DbType="VarChar(500)")] string gradeIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectNames", DbType="VarChar(MAX)")] string subjectNames, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PBSInEffect", DbType = "VarChar(MAX)")] string pbsInEffect, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PBSGroup", DbType = "VarChar(MAX)")] string pbsGroup, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(255)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, virtualTestTypeIDs, gradeIDs, subjectNames, pbsInEffect, pbsGroup, startRow, pageSize, generalSearch, sortColumn, sortDirection);
			return ((ISingleResult<GetTestForPBSResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetPerformanceBandGroups")]
        public ISingleResult<GetPerformanceBandGroupsResult> GetPerformanceBandGroups([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] int districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DataSetOriginID", DbType = "Int")] int dataSetOriginID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, dataSetOriginID);
            return ((ISingleResult<GetPerformanceBandGroupsResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.LAC_RemovePerformanceBands")]
        public ISingleResult<RemovePerformanceBandsResult> RemovePerformanceBands([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualTestIDs", DbType = "VarChar(MAX)")] string virtualTestIDs)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, virtualTestIDs);
            return ((ISingleResult<RemovePerformanceBandsResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetVirtualTestForPrintingV2")]
		public ISingleResult<GetVirtualTestForPrintingV2Result> GetVirtualTestForPrintingV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), virtualTestID);
			return ((ISingleResult<GetVirtualTestForPrintingV2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAvailableTestTypeGradeAndSubjectForStudentPreference")]
		public ISingleResult<GetAvailableTestTypeGradeAndSubjectForStudentPreferenceResult> GetAvailableTestTypeGradeAndSubjectForStudentPreference([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Level", DbType="VarChar(20)")] string level, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassIDs", DbType="VarChar(MAX)")] string classIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), level, districtID, schoolID, userID, roleID, classIDs);
			return ((ISingleResult<GetAvailableTestTypeGradeAndSubjectForStudentPreferenceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsRemoveTempTable")]
		public ISingleResult<GetTestClassAssignmentsRemoveTempTableResult1> GetTestClassAssignmentsRemoveTempTable1(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="VarChar(50)")] string gradeName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(50)")] string bankName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="VarChar(200)")] string className, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="VarChar(1000)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="VarChar(1000)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(150)")] string testName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(500)")] string assignmentCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(200)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, qTITestClassAssignmentID, schoolID, gradeName, subjectName, bankName, className, teacherName, studentName, testName, assignmentCodes, generalSearch, sortColumn, sortDirection, startRow, pageSize);
			return ((ISingleResult<GetTestClassAssignmentsRemoveTempTableResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsRemoveTempTable")]
		public ISingleResult<GetTestClassAssignmentsRemoveTempTableResult2> GetTestClassAssignmentsRemoveTempTable2(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="VarChar(50)")] string gradeName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(50)")] string bankName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="VarChar(200)")] string className, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="VarChar(1000)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="VarChar(1000)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(150)")] string testName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(500)")] string assignmentCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(200)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, qTITestClassAssignmentID, schoolID, gradeName, subjectName, bankName, className, teacherName, studentName, testName, assignmentCodes, generalSearch, sortColumn, sortDirection, startRow, pageSize);
			return ((ISingleResult<GetTestClassAssignmentsRemoveTempTableResult2>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsRemoveTempTable")]
		public ISingleResult<GetTestClassAssignmentsRemoveTempTableResult3> GetTestClassAssignmentsRemoveTempTable3(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignDateCompare", DbType="NVarChar(50)")] string assignDateCompare, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnlyShowPendingReview", DbType="Bit")] System.Nullable<bool> onlyShowPendingReview, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowActiveClassTestAssignment", DbType="Bit")] System.Nullable<bool> showActiveClassTestAssignment, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="VarChar(50)")] string gradeName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(50)")] string bankName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassName", DbType="VarChar(200)")] string className, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherName", DbType="VarChar(1000)")] string teacherName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentName", DbType="VarChar(1000)")] string studentName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TestName", DbType="VarChar(150)")] string testName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssignmentCodes", DbType="VarChar(500)")] string assignmentCodes, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(200)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="NVarChar(50)")] string sortColumn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), assignDateCompare, onlyShowPendingReview, showActiveClassTestAssignment, userID, districtID, qTITestClassAssignmentID, schoolID, gradeName, subjectName, bankName, className, teacherName, studentName, testName, assignmentCodes, generalSearch, sortColumn, sortDirection, startRow, pageSize);
			return ((ISingleResult<GetTestClassAssignmentsRemoveTempTableResult3>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestClassAssignmentsById")]
		public ISingleResult<GetTestClassAssignmentsByIdResult> GetTestClassAssignmentsById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QTITestClassAssignmentID", DbType="Int")] System.Nullable<int> qTITestClassAssignmentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), qTITestClassAssignmentID);
			return ((ISingleResult<GetTestClassAssignmentsByIdResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.ExportTestPropertyByVirtualTestIDs")]
        [ResultType(typeof(string))]
        [ResultType(typeof(GetTestPropertyToExportResult))]

        public IMultipleResults GetTestPropertyToExportByVirtualTestIDs(
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "VirtualTestIDs", DbType = "VarChar(MAX)")] string virtualTestIDs)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, virtualTestIDs);
            return ((IMultipleResults)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.ExportTestLibraryByDistrictID")]
        public ISingleResult<GetTestLibraryToExportResult> GetTestLibraryToExportByDistrictID(
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID);
            return ((ISingleResult<GetTestLibraryToExportResult>)(result.ReturnValue));
        }

    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestion")]
	internal partial class QuestionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionID;
		
		private System.Nullable<int> _MasterTestID;
		
		private System.Nullable<int> _MasterQuestionID;
		
		private int _VirtualTestID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private System.Nullable<int> _ETSItemID;
		
		private System.Nullable<int> _QTIItemID;
		
		private System.Nullable<int> _PreQTIVirtualQuestionID;
		
		private System.Nullable<int> _PreProdVQID;
		
		private EntitySet<VirtualQuestionStateStandardEntity> _VirtualQuestionStateStandardEntities;
		
		private EntitySet<VirtualQuestionTopicEntity> _VirtualQuestionTopicEntities;
		
		private EntitySet<VirtualQuestionLessonTwoEntity> _VirtualQuestionLessonTwoEntities;
		
		private EntitySet<VirtualQuestionLessonOneEntity> _VirtualQuestionLessonOneEntities;
		
		private EntitySet<VirtualQuestionItemTagEntity> _VirtualQuestionItemTagEntities;
		
		private EntitySet<AnswerEntity> _AnswerEntities;
		
		private EntitySet<VirtualQuestionGroupEntity> _VirtualQuestionGroupEntities;
		
		private EntityRef<TestEntity> _TestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnMasterTestIDChanging(System.Nullable<int> value);
    partial void OnMasterTestIDChanged();
    partial void OnMasterQuestionIDChanging(System.Nullable<int> value);
    partial void OnMasterQuestionIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnQuestionOrderChanging(int value);
    partial void OnQuestionOrderChanged();
    partial void OnPointsPossibleChanging(int value);
    partial void OnPointsPossibleChanged();
    partial void OnETSItemIDChanging(System.Nullable<int> value);
    partial void OnETSItemIDChanged();
    partial void OnQTIItemIDChanging(System.Nullable<int> value);
    partial void OnQTIItemIDChanged();
    partial void OnPreQTIVirtualQuestionIDChanging(System.Nullable<int> value);
    partial void OnPreQTIVirtualQuestionIDChanged();
    partial void OnPreProdVQIDChanging(System.Nullable<int> value);
    partial void OnPreProdVQIDChanged();
    #endregion
		
		public QuestionEntity()
		{
			this._VirtualQuestionStateStandardEntities = new EntitySet<VirtualQuestionStateStandardEntity>(new Action<VirtualQuestionStateStandardEntity>(this.attach_VirtualQuestionStateStandardEntities), new Action<VirtualQuestionStateStandardEntity>(this.detach_VirtualQuestionStateStandardEntities));
			this._VirtualQuestionTopicEntities = new EntitySet<VirtualQuestionTopicEntity>(new Action<VirtualQuestionTopicEntity>(this.attach_VirtualQuestionTopicEntities), new Action<VirtualQuestionTopicEntity>(this.detach_VirtualQuestionTopicEntities));
			this._VirtualQuestionLessonTwoEntities = new EntitySet<VirtualQuestionLessonTwoEntity>(new Action<VirtualQuestionLessonTwoEntity>(this.attach_VirtualQuestionLessonTwoEntities), new Action<VirtualQuestionLessonTwoEntity>(this.detach_VirtualQuestionLessonTwoEntities));
			this._VirtualQuestionLessonOneEntities = new EntitySet<VirtualQuestionLessonOneEntity>(new Action<VirtualQuestionLessonOneEntity>(this.attach_VirtualQuestionLessonOneEntities), new Action<VirtualQuestionLessonOneEntity>(this.detach_VirtualQuestionLessonOneEntities));
			this._VirtualQuestionItemTagEntities = new EntitySet<VirtualQuestionItemTagEntity>(new Action<VirtualQuestionItemTagEntity>(this.attach_VirtualQuestionItemTagEntities), new Action<VirtualQuestionItemTagEntity>(this.detach_VirtualQuestionItemTagEntities));
			this._AnswerEntities = new EntitySet<AnswerEntity>(new Action<AnswerEntity>(this.attach_AnswerEntities), new Action<AnswerEntity>(this.detach_AnswerEntities));
			this._VirtualQuestionGroupEntities = new EntitySet<VirtualQuestionGroupEntity>(new Action<VirtualQuestionGroupEntity>(this.attach_VirtualQuestionGroupEntities), new Action<VirtualQuestionGroupEntity>(this.detach_VirtualQuestionGroupEntities));
			this._TestEntity = default(EntityRef<TestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterTestID", DbType="Int")]
		public System.Nullable<int> MasterTestID
		{
			get
			{
				return this._MasterTestID;
			}
			set
			{
				if ((this._MasterTestID != value))
				{
					this.OnMasterTestIDChanging(value);
					this.SendPropertyChanging();
					this._MasterTestID = value;
					this.SendPropertyChanged("MasterTestID");
					this.OnMasterTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterQuestionID", DbType="Int")]
		public System.Nullable<int> MasterQuestionID
		{
			get
			{
				return this._MasterQuestionID;
			}
			set
			{
				if ((this._MasterQuestionID != value))
				{
					this.OnMasterQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._MasterQuestionID = value;
					this.SendPropertyChanged("MasterQuestionID");
					this.OnMasterQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					if (this._TestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this.OnQuestionOrderChanging(value);
					this.SendPropertyChanging();
					this._QuestionOrder = value;
					this.SendPropertyChanged("QuestionOrder");
					this.OnQuestionOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this.OnPointsPossibleChanging(value);
					this.SendPropertyChanging();
					this._PointsPossible = value;
					this.SendPropertyChanged("PointsPossible");
					this.OnPointsPossibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETSItemID", DbType="Int")]
		public System.Nullable<int> ETSItemID
		{
			get
			{
				return this._ETSItemID;
			}
			set
			{
				if ((this._ETSItemID != value))
				{
					this.OnETSItemIDChanging(value);
					this.SendPropertyChanging();
					this._ETSItemID = value;
					this.SendPropertyChanged("ETSItemID");
					this.OnETSItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int")]
		public System.Nullable<int> QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this.OnQTIItemIDChanging(value);
					this.SendPropertyChanging();
					this._QTIItemID = value;
					this.SendPropertyChanged("QTIItemID");
					this.OnQTIItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreQTIVirtualQuestionID", DbType="Int")]
		public System.Nullable<int> PreQTIVirtualQuestionID
		{
			get
			{
				return this._PreQTIVirtualQuestionID;
			}
			set
			{
				if ((this._PreQTIVirtualQuestionID != value))
				{
					this.OnPreQTIVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._PreQTIVirtualQuestionID = value;
					this.SendPropertyChanged("PreQTIVirtualQuestionID");
					this.OnPreQTIVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProdVQID", DbType="Int")]
		public System.Nullable<int> PreProdVQID
		{
			get
			{
				return this._PreProdVQID;
			}
			set
			{
				if ((this._PreProdVQID != value))
				{
					this.OnPreProdVQIDChanging(value);
					this.SendPropertyChanging();
					this._PreProdVQID = value;
					this.SendPropertyChanged("PreProdVQID");
					this.OnPreProdVQIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionStateStandardEntity", Storage="_VirtualQuestionStateStandardEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<VirtualQuestionStateStandardEntity> VirtualQuestionStateStandardEntities
		{
			get
			{
				return this._VirtualQuestionStateStandardEntities;
			}
			set
			{
				this._VirtualQuestionStateStandardEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionTopicEntity", Storage="_VirtualQuestionTopicEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<VirtualQuestionTopicEntity> VirtualQuestionTopicEntities
		{
			get
			{
				return this._VirtualQuestionTopicEntities;
			}
			set
			{
				this._VirtualQuestionTopicEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionLessonTwoEntity", Storage="_VirtualQuestionLessonTwoEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<VirtualQuestionLessonTwoEntity> VirtualQuestionLessonTwoEntities
		{
			get
			{
				return this._VirtualQuestionLessonTwoEntities;
			}
			set
			{
				this._VirtualQuestionLessonTwoEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionLessonOneEntity", Storage="_VirtualQuestionLessonOneEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<VirtualQuestionLessonOneEntity> VirtualQuestionLessonOneEntities
		{
			get
			{
				return this._VirtualQuestionLessonOneEntities;
			}
			set
			{
				this._VirtualQuestionLessonOneEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionItemTagEntity", Storage="_VirtualQuestionItemTagEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<VirtualQuestionItemTagEntity> VirtualQuestionItemTagEntities
		{
			get
			{
				return this._VirtualQuestionItemTagEntities;
			}
			set
			{
				this._VirtualQuestionItemTagEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_AnswerEntity", Storage="_AnswerEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<AnswerEntity> AnswerEntities
		{
			get
			{
				return this._AnswerEntities;
			}
			set
			{
				this._AnswerEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionGroupEntity", Storage="_VirtualQuestionGroupEntities", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID")]
		public EntitySet<VirtualQuestionGroupEntity> VirtualQuestionGroupEntities
		{
			get
			{
				return this._VirtualQuestionGroupEntities;
			}
			set
			{
				this._VirtualQuestionGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_QuestionEntity", Storage="_TestEntity", ThisKey="VirtualTestID", OtherKey="VirtualTestID", IsForeignKey=true)]
		public TestEntity TestEntity
		{
			get
			{
				return this._TestEntity.Entity;
			}
			set
			{
				TestEntity previousValue = this._TestEntity.Entity;
				if (((previousValue != value) 
							|| (this._TestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestEntity.Entity = null;
						previousValue.QuestionEntities.Remove(this);
					}
					this._TestEntity.Entity = value;
					if ((value != null))
					{
						value.QuestionEntities.Add(this);
						this._VirtualTestID = value.VirtualTestID;
					}
					else
					{
						this._VirtualTestID = default(int);
					}
					this.SendPropertyChanged("TestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VirtualQuestionStateStandardEntities(VirtualQuestionStateStandardEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_VirtualQuestionStateStandardEntities(VirtualQuestionStateStandardEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
		
		private void attach_VirtualQuestionTopicEntities(VirtualQuestionTopicEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_VirtualQuestionTopicEntities(VirtualQuestionTopicEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
		
		private void attach_VirtualQuestionLessonTwoEntities(VirtualQuestionLessonTwoEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_VirtualQuestionLessonTwoEntities(VirtualQuestionLessonTwoEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
		
		private void attach_VirtualQuestionLessonOneEntities(VirtualQuestionLessonOneEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_VirtualQuestionLessonOneEntities(VirtualQuestionLessonOneEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
		
		private void attach_VirtualQuestionItemTagEntities(VirtualQuestionItemTagEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_VirtualQuestionItemTagEntities(VirtualQuestionItemTagEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
		
		private void attach_AnswerEntities(AnswerEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_AnswerEntities(AnswerEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
		
		private void attach_VirtualQuestionGroupEntities(VirtualQuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = this;
		}
		
		private void detach_VirtualQuestionGroupEntities(VirtualQuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grade")]
	internal partial class GradeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		private EntitySet<SubjectEntity> _SubjectEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGradeIDChanging(int value);
    partial void OnGradeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public GradeEntity()
		{
			this._SubjectEntities = new EntitySet<SubjectEntity>(new Action<SubjectEntity>(this.attach_SubjectEntities), new Action<SubjectEntity>(this.detach_SubjectEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this.OnGradeIDChanging(value);
					this.SendPropertyChanging();
					this._GradeID = value;
					this.SendPropertyChanged("GradeID");
					this.OnGradeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GradeEntity_SubjectEntity", Storage="_SubjectEntities", ThisKey="GradeID", OtherKey="GradeID")]
		public EntitySet<SubjectEntity> SubjectEntities
		{
			get
			{
				return this._SubjectEntities;
			}
			set
			{
				this._SubjectEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubjectEntities(SubjectEntity entity)
		{
			this.SendPropertyChanging();
			entity.GradeEntity = this;
		}
		
		private void detach_SubjectEntities(SubjectEntity entity)
		{
			this.SendPropertyChanging();
			entity.GradeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectDistrict")]
	internal partial class SubjectDistrictView
	{
		
		private int _SubjectID;
		
		private int _GradeID;
		
		private string _Name;
		
		private int _StateID;
		
		private string _ShortName;
		
		private int _DistrictID;
		
		private string _GradeName;
		
		public SubjectDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GradeDistrict")]
	internal partial class GradeDistrictView
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		private int _DistrictID;
		
		public GradeDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IncorrectQuestionOrderView")]
	internal partial class IncorrectQuestionOrderView
	{
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _Total_Question_Count;
		
		private System.Nullable<int> _DistinctItems;
		
		public IncorrectQuestionOrderView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Question Count]", Storage="_Total_Question_Count", DbType="Int")]
		public System.Nullable<int> Total_Question_Count
		{
			get
			{
				return this._Total_Question_Count;
			}
			set
			{
				if ((this._Total_Question_Count != value))
				{
					this._Total_Question_Count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistinctItems", DbType="Int")]
		public System.Nullable<int> DistinctItems
		{
			get
			{
				return this._DistinctItems;
			}
			set
			{
				if ((this._DistinctItems != value))
				{
					this._DistinctItems = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreviouslyAnsweredQuestionView")]
	internal partial class PreviouslyAnsweredQuestionView
	{
		
		private int _AnswerID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerLetter;
		
		private bool _WasAnswered;
		
		private System.Nullable<int> _BubbleSheetID;
		
		private int _StudentID;
		
		private int _QuestionOrder;
		
		public PreviouslyAnsweredQuestionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetter", DbType="VarChar(200)")]
		public string AnswerLetter
		{
			get
			{
				return this._AnswerLetter;
			}
			set
			{
				if ((this._AnswerLetter != value))
				{
					this._AnswerLetter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasAnswered", DbType="Bit NOT NULL")]
		public bool WasAnswered
		{
			get
			{
				return this._WasAnswered;
			}
			set
			{
				if ((this._WasAnswered != value))
				{
					this._WasAnswered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetID", DbType="Int")]
		public System.Nullable<int> BubbleSheetID
		{
			get
			{
				return this._BubbleSheetID;
			}
			set
			{
				if ((this._BubbleSheetID != value))
				{
					this._BubbleSheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisplayTestResultDistrictView")]
	internal partial class DisplayTestResultDistrictView
	{
		
		private string _TestNameCustom;
		
		private string _ClassNameCustom;
		
		private string _StudentCustom;
		
		private string _TeacherCustom;
		
		private int _TestResultID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _AuthorUserID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _SchoolName;
		
		private System.Nullable<int> _ClassID;
		
		private int _StudentID;
		
		private int _DistrictID;
		
		private int _UserID;
		
		public DisplayTestResultDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(209)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303)")]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(155)")]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this._AuthorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorTestWithoutTestResultView")]
	internal partial class AuthorTestWithoutTestResultView
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _DistrictID;
		
		public AuthorTestWithoutTestResultView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictStateView")]
	internal partial class DistrictStateView
	{
		
		private int _DistrictID;
		
		private string _DistrictNameCustom;
		
		public DistrictStateView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictNameCustom", DbType="VarChar(105) NOT NULL", CanBeNull=false)]
		public string DistrictNameCustom
		{
			get
			{
				return this._DistrictNameCustom;
			}
			set
			{
				if ((this._DistrictNameCustom != value))
				{
					this._DistrictNameCustom = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestWithOutTestResultView")]
	internal partial class VirtualTestWithOutTestResultView
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		private System.Nullable<int> _AuthorUserID;
		
		private int _DistrictID;
		
		private System.Nullable<int> _ParentTestID;
		
		private System.Nullable<int> _OriginalTestID;
		
		public VirtualTestWithOutTestResultView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this._AuthorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTestID", DbType="Int")]
		public System.Nullable<int> ParentTestID
		{
			get
			{
				return this._ParentTestID;
			}
			set
			{
				if ((this._ParentTestID != value))
				{
					this._ParentTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTestID", DbType="Int")]
		public System.Nullable<int> OriginalTestID
		{
			get
			{
				return this._OriginalTestID;
			}
			set
			{
				if ((this._OriginalTestID != value))
				{
					this._OriginalTestID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassAdminSchoolView")]
	internal partial class ClassAdminSchoolView
	{
		
		private int _UserID;
		
		private int _SchoolID;
		
		private int _ClassID;
		
		private string _Name;
		
		public ClassAdminSchoolView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestDistrictView")]
	internal partial class VirtualTestDistrictView
	{
		
		private string _TestNameCustom;
		
		private int _VirtualTestID;
		
		private int _DistrictID;
		
		private System.Nullable<int> _ClassID;
		
		private int _VirtualTestSourceID;
		
		public VirtualTestDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(209)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentTestResultDistrictView")]
	internal partial class StudentTestResultDistrictView
	{
		
		private int _StudentID;
		
		private string _StudentCustom;
		
		private int _DistrictID;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _SchoolID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _UserID;
		
		private int _VirtualTestSourceID;
		
		public StudentTestResultDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassDistrictView")]
	internal partial class ClassDistrictView
	{
		
		private int _DistrictID;
		
		private int _ClassID;
		
		private string _ClassNameCustom;
		
		private int _VirtualTestSourceID;
		
		public ClassDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorTestView")]
	internal partial class AuthorTestView
	{
		
		private string _UserName;
		
		private string _NameLast;
		
		private string _NameFirst;
		
		private int _UserID;
		
		private int _DistrictID;
		
		private int _ClassID;
		
		private int _VirtualTestSourceID;
		
		public AuthorTestView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolTestResultDistrictView")]
	internal partial class SchoolTestResultDistrictView
	{
		
		private int _SchoolID;
		
		private string _Name;
		
		private int _DistrictID;
		
		private System.Nullable<int> _ClassID;
		
		private int _StudentID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _UserID;
		
		private int _VirtualTestSourceID;
		
		public SchoolTestResultDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassTestResultDistrictView")]
	internal partial class ClassTestResultDistrictView
	{
		
		private string _ClassCustom;
		
		private int _ClassID;
		
		private int _DistrictID;
		
		private int _StudentID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserID;
		
		private string _UserName;
		
		private int _VirtualTestID;
		
		private int _VirtualTestSourceID;
		
		public ClassTestResultDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCustom", DbType="VarChar(356) NOT NULL", CanBeNull=false)]
		public string ClassCustom
		{
			get
			{
				return this._ClassCustom;
			}
			set
			{
				if ((this._ClassCustom != value))
				{
					this._ClassCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherTestResultDistrictView")]
	internal partial class TeacherTestResultDistrictView
	{
		
		private string _UserName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _ClassID;
		
		private int _StudentID;
		
		private int _UserID;
		
		private System.Nullable<int> _SchoolID;
		
		private int _VirtualTestID;
		
		private int _VirtualTestSourceID;
		
		public TeacherTestResultDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(155)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestTestResultDistrictView")]
	internal partial class VirtualTestTestResultDistrictView
	{
		
		private string _TestNameCustom;
		
		private int _VirtualTestID;
		
		private int _StudentID;
		
		private System.Nullable<int> _ClassID;
		
		private int _DistrictID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserID;
		
		private int _VirtualTestSourceID;
		
		public VirtualTestTestResultDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(209)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuration")]
	public partial class ConfigurationEntity
	{
		
		private string _Name;
		
		private string _Value;
		
		private System.Nullable<int> _Type;
		
		public ConfigurationEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassCustomView")]
	public partial class ClassCustomView
	{
		
		private string _Name;
		
		private bool _Locked;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _DistrictTermID;
		
		private System.Nullable<int> _UserID;
		
		private string _Code;
		
		private System.Nullable<int> _GradeID;
		
		private string _Section;
		
		private string _Course;
		
		private string _Period;
		
		private System.Nullable<int> _SISID;
		
		private string _CourseNumber;
		
		private System.Nullable<int> _DistrictID;
		
		private string _SchoolName;
		
		private string _DistrictTermName;
		
		private string _TeacherUserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private int _ClassID;
		
		private System.Nullable<int> _TermID;
		
		public ClassCustomView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this._Locked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int")]
		public System.Nullable<int> GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="VarChar(50)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this._Section = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(200)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(10)")]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this._Period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="Int")]
		public System.Nullable<int> SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this._SISID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseNumber", DbType="VarChar(50)")]
		public string CourseNumber
		{
			get
			{
				return this._CourseNumber;
			}
			set
			{
				if ((this._CourseNumber != value))
				{
					this._CourseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherUserName", DbType="VarChar(50)")]
		public string TeacherUserName
		{
			get
			{
				return this._TeacherUserName;
			}
			set
			{
				if ((this._TeacherUserName != value))
				{
					this._TeacherUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int")]
		public System.Nullable<int> TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this._TermID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictSettings")]
	public partial class DistrictSettingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictSettingID;
		
		private int _DistrictID;
		
		private string _DefaultARSettings;
		
		private string _TestSettings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictSettingIDChanging(int value);
    partial void OnDistrictSettingIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnDefaultARSettingsChanging(string value);
    partial void OnDefaultARSettingsChanged();
    partial void OnTestSettingsChanging(string value);
    partial void OnTestSettingsChanged();
    #endregion
		
		public DistrictSettingEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictSettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictSettingID
		{
			get
			{
				return this._DistrictSettingID;
			}
			set
			{
				if ((this._DistrictSettingID != value))
				{
					this.OnDistrictSettingIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictSettingID = value;
					this.SendPropertyChanged("DistrictSettingID");
					this.OnDistrictSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultARSettings", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DefaultARSettings
		{
			get
			{
				return this._DefaultARSettings;
			}
			set
			{
				if ((this._DefaultARSettings != value))
				{
					this.OnDefaultARSettingsChanging(value);
					this.SendPropertyChanging();
					this._DefaultARSettings = value;
					this.SendPropertyChanged("DefaultARSettings");
					this.OnDefaultARSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSettings", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TestSettings
		{
			get
			{
				return this._TestSettings;
			}
			set
			{
				if ((this._TestSettings != value))
				{
					this.OnTestSettingsChanging(value);
					this.SendPropertyChanging();
					this._TestSettings = value;
					this.SendPropertyChanged("TestSettings");
					this.OnTestSettingsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictConfiguration")]
	public partial class DistrictConfigurationEntity
	{
		
		private int _DistrictID;
		
		private string _Name;
		
		private string _Value;
		
		public DistrictConfigurationEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(500)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestFile")]
	internal partial class VirtualTestFileEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualTestFileID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _FileType;
		
		private string _FileKey;
		
		private string _FileUrl;
		
		private System.Nullable<int> _UploadByUserID;
		
		private System.Nullable<System.DateTime> _UploadDate;
		
		private string _FileName;
		
		private EntityRef<TestEntity> _TestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualTestFileIDChanging(int value);
    partial void OnVirtualTestFileIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnFileTypeChanging(System.Nullable<int> value);
    partial void OnFileTypeChanged();
    partial void OnFileKeyChanging(string value);
    partial void OnFileKeyChanged();
    partial void OnFileUrlChanging(string value);
    partial void OnFileUrlChanged();
    partial void OnUploadByUserIDChanging(System.Nullable<int> value);
    partial void OnUploadByUserIDChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public VirtualTestFileEntity()
		{
			this._TestEntity = default(EntityRef<TestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestFileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualTestFileID
		{
			get
			{
				return this._VirtualTestFileID;
			}
			set
			{
				if ((this._VirtualTestFileID != value))
				{
					this.OnVirtualTestFileIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestFileID = value;
					this.SendPropertyChanged("VirtualTestFileID");
					this.OnVirtualTestFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					if (this._TestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="Int")]
		public System.Nullable<int> FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileKey", DbType="VarChar(255)")]
		public string FileKey
		{
			get
			{
				return this._FileKey;
			}
			set
			{
				if ((this._FileKey != value))
				{
					this.OnFileKeyChanging(value);
					this.SendPropertyChanging();
					this._FileKey = value;
					this.SendPropertyChanged("FileKey");
					this.OnFileKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUrl", DbType="VarChar(1000)")]
		public string FileUrl
		{
			get
			{
				return this._FileUrl;
			}
			set
			{
				if ((this._FileUrl != value))
				{
					this.OnFileUrlChanging(value);
					this.SendPropertyChanging();
					this._FileUrl = value;
					this.SendPropertyChanged("FileUrl");
					this.OnFileUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadByUserID", DbType="Int")]
		public System.Nullable<int> UploadByUserID
		{
			get
			{
				return this._UploadByUserID;
			}
			set
			{
				if ((this._UploadByUserID != value))
				{
					this.OnUploadByUserIDChanging(value);
					this.SendPropertyChanging();
					this._UploadByUserID = value;
					this.SendPropertyChanged("UploadByUserID");
					this.OnUploadByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_VirtualTestFileEntity", Storage="_TestEntity", ThisKey="VirtualTestID", OtherKey="VirtualTestID", IsForeignKey=true)]
		public TestEntity TestEntity
		{
			get
			{
				return this._TestEntity.Entity;
			}
			set
			{
				TestEntity previousValue = this._TestEntity.Entity;
				if (((previousValue != value) 
							|| (this._TestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestEntity.Entity = null;
						previousValue.VirtualTestFileEntities.Remove(this);
					}
					this._TestEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualTestFileEntities.Add(this);
						this._VirtualTestID = value.VirtualTestID;
					}
					else
					{
						this._VirtualTestID = default(int);
					}
					this.SendPropertyChanged("TestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIBankSchool")]
	public partial class QTIBankSchoolEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTIBankSchoolID;
		
		private int _QTIBankID;
		
		private int _SchoolID;
		
		private int _EditedByUserID;
		
		private EntityRef<QTIBankEntity> _QTIBankEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIBankSchoolIDChanging(int value);
    partial void OnQTIBankSchoolIDChanged();
    partial void OnQTIBankIDChanging(int value);
    partial void OnQTIBankIDChanged();
    partial void OnSchoolIDChanging(int value);
    partial void OnSchoolIDChanged();
    partial void OnEditedByUserIDChanging(int value);
    partial void OnEditedByUserIDChanged();
    #endregion
		
		public QTIBankSchoolEntity()
		{
			this._QTIBankEntity = default(EntityRef<QTIBankEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankSchoolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTIBankSchoolID
		{
			get
			{
				return this._QTIBankSchoolID;
			}
			set
			{
				if ((this._QTIBankSchoolID != value))
				{
					this.OnQTIBankSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._QTIBankSchoolID = value;
					this.SendPropertyChanged("QTIBankSchoolID");
					this.OnQTIBankSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					if (this._QTIBankEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQTIBankIDChanging(value);
					this.SendPropertyChanging();
					this._QTIBankID = value;
					this.SendPropertyChanged("QTIBankID");
					this.OnQTIBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this.OnEditedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditedByUserID = value;
					this.SendPropertyChanged("EditedByUserID");
					this.OnEditedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIBankEntity_QTIBankSchoolEntity", Storage="_QTIBankEntity", ThisKey="QTIBankID", OtherKey="QTIBankID", IsForeignKey=true)]
		public QTIBankEntity QTIBankEntity
		{
			get
			{
				return this._QTIBankEntity.Entity;
			}
			set
			{
				QTIBankEntity previousValue = this._QTIBankEntity.Entity;
				if (((previousValue != value) 
							|| (this._QTIBankEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QTIBankEntity.Entity = null;
						previousValue.QTIBankSchoolEntities.Remove(this);
					}
					this._QTIBankEntity.Entity = value;
					if ((value != null))
					{
						value.QTIBankSchoolEntities.Add(this);
						this._QTIBankID = value.QTIBankID;
					}
					else
					{
						this._QTIBankID = default(int);
					}
					this.SendPropertyChanged("QTIBankEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIBankDistrict")]
	public partial class QTIBankDistrictEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTIBankDistrictID;
		
		private int _QTIBankID;
		
		private int _DistrictID;
		
		private int _EditedByUserID;
		
		private EntityRef<QTIBankEntity> _QTIBankEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIBankDistrictIDChanging(int value);
    partial void OnQTIBankDistrictIDChanged();
    partial void OnQTIBankIDChanging(int value);
    partial void OnQTIBankIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnEditedByUserIDChanging(int value);
    partial void OnEditedByUserIDChanged();
    #endregion
		
		public QTIBankDistrictEntity()
		{
			this._QTIBankEntity = default(EntityRef<QTIBankEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankDistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTIBankDistrictID
		{
			get
			{
				return this._QTIBankDistrictID;
			}
			set
			{
				if ((this._QTIBankDistrictID != value))
				{
					this.OnQTIBankDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._QTIBankDistrictID = value;
					this.SendPropertyChanged("QTIBankDistrictID");
					this.OnQTIBankDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					if (this._QTIBankEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQTIBankIDChanging(value);
					this.SendPropertyChanging();
					this._QTIBankID = value;
					this.SendPropertyChanged("QTIBankID");
					this.OnQTIBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this.OnEditedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditedByUserID = value;
					this.SendPropertyChanged("EditedByUserID");
					this.OnEditedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIBankEntity_QTIBankDistrictEntity", Storage="_QTIBankEntity", ThisKey="QTIBankID", OtherKey="QTIBankID", IsForeignKey=true)]
		public QTIBankEntity QTIBankEntity
		{
			get
			{
				return this._QTIBankEntity.Entity;
			}
			set
			{
				QTIBankEntity previousValue = this._QTIBankEntity.Entity;
				if (((previousValue != value) 
							|| (this._QTIBankEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QTIBankEntity.Entity = null;
						previousValue.QTIBankDistrictEntities.Remove(this);
					}
					this._QTIBankEntity.Entity = value;
					if ((value != null))
					{
						value.QTIBankDistrictEntities.Add(this);
						this._QTIBankID = value.QTIBankID;
					}
					else
					{
						this._QTIBankID = default(int);
					}
					this.SendPropertyChanged("QTIBankEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIBankPublishedDistrictView")]
	public partial class QTIBankPublishedDistrictView
	{
		
		private int _QTIBankDistrictID;
		
		private int _QTIBankID;
		
		private int _DistrictID;
		
		private string _Name;
		
		public QTIBankPublishedDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankDistrictID", DbType="Int NOT NULL")]
		public int QTIBankDistrictID
		{
			get
			{
				return this._QTIBankDistrictID;
			}
			set
			{
				if ((this._QTIBankDistrictID != value))
				{
					this._QTIBankDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIBankPublishedSchoolView")]
	public partial class QTIBankPublishedSchoolView
	{
		
		private int _QTIBankSchoolID;
		
		private int _QTIBankID;
		
		private int _SchoolID;
		
		private string _DistrictName;
		
		private string _Name;
		
		public QTIBankPublishedSchoolView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankSchoolID", DbType="Int NOT NULL")]
		public int QTIBankSchoolID
		{
			get
			{
				return this._QTIBankSchoolID;
			}
			set
			{
				if ((this._QTIBankSchoolID != value))
				{
					this._QTIBankSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListRubricView")]
	internal partial class ListRubricView
	{
		
		private string _SubjectName;
		
		private int _SubjectID;
		
		private int _GradeID;
		
		private string _GradeName;
		
		private string _BankName;
		
		private string _Author;
		
		private int _BankID;
		
		private string _FileName;
		
		private System.Nullable<int> _VirtualTestFileID;
		
		private string _FileKey;
		
		private string _TestName;
		
		private System.Nullable<int> _AuthorUserID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _BankShareDistrictID;
		
		public ListRubricView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(103)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestFileID", DbType="Int")]
		public System.Nullable<int> VirtualTestFileID
		{
			get
			{
				return this._VirtualTestFileID;
			}
			set
			{
				if ((this._VirtualTestFileID != value))
				{
					this._VirtualTestFileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileKey", DbType="VarChar(255)")]
		public string FileKey
		{
			get
			{
				return this._FileKey;
			}
			set
			{
				if ((this._FileKey != value))
				{
					this._FileKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this._AuthorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankShareDistrictID", DbType="Int")]
		public System.Nullable<int> BankShareDistrictID
		{
			get
			{
				return this._BankShareDistrictID;
			}
			set
			{
				if ((this._BankShareDistrictID != value))
				{
					this._BankShareDistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlreadyAnsweredQuestionView")]
	internal partial class AlreadyAnsweredQuestionView
	{
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private string _AnswerIdentifiers;
		
		private int _QTISchemaID;
		
		private int _PointsPossible;
		
		private string _AnswerLetter;
		
		private int _StudentID;
		
		private System.Nullable<int> _BubbleSheetID;
		
		private string _Ticket;
		
		private string _XmlContent;
		
		public AlreadyAnsweredQuestionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetter", DbType="VarChar(200)")]
		public string AnswerLetter
		{
			get
			{
				return this._AnswerLetter;
			}
			set
			{
				if ((this._AnswerLetter != value))
				{
					this._AnswerLetter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetID", DbType="Int")]
		public System.Nullable<int> BubbleSheetID
		{
			get
			{
				return this._BubbleSheetID;
			}
			set
			{
				if ((this._BubbleSheetID != value))
				{
					this._BubbleSheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="VarChar(100)")]
		public string Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this._Ticket = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QtiBankPersonalView")]
	public partial class QtiBankPersonalView
	{
		
		private int _QTIBankID;
		
		private string _Name;
		
		private int _UserID;
		
		public QtiBankPersonalView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIBank")]
	public partial class QTIBankEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTIBankID;
		
		private string _Name;
		
		private int _UserID;
		
		private int _AccessID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _AuthorGroupID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<QTIBankSchoolEntity> _QTIBankSchoolEntities;
		
		private EntitySet<QTIBankDistrictEntity> _QTIBankDistrictEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIBankIDChanging(int value);
    partial void OnQTIBankIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAccessIDChanging(int value);
    partial void OnAccessIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnAuthorGroupIDChanging(System.Nullable<int> value);
    partial void OnAuthorGroupIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public QTIBankEntity()
		{
			this._QTIBankSchoolEntities = new EntitySet<QTIBankSchoolEntity>(new Action<QTIBankSchoolEntity>(this.attach_QTIBankSchoolEntities), new Action<QTIBankSchoolEntity>(this.detach_QTIBankSchoolEntities));
			this._QTIBankDistrictEntities = new EntitySet<QTIBankDistrictEntity>(new Action<QTIBankDistrictEntity>(this.attach_QTIBankDistrictEntities), new Action<QTIBankDistrictEntity>(this.detach_QTIBankDistrictEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this.OnQTIBankIDChanging(value);
					this.SendPropertyChanging();
					this._QTIBankID = value;
					this.SendPropertyChanged("QTIBankID");
					this.OnQTIBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessID", DbType="Int NOT NULL")]
		public int AccessID
		{
			get
			{
				return this._AccessID;
			}
			set
			{
				if ((this._AccessID != value))
				{
					this.OnAccessIDChanging(value);
					this.SendPropertyChanging();
					this._AccessID = value;
					this.SendPropertyChanged("AccessID");
					this.OnAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorGroupID", DbType="Int")]
		public System.Nullable<int> AuthorGroupID
		{
			get
			{
				return this._AuthorGroupID;
			}
			set
			{
				if ((this._AuthorGroupID != value))
				{
					this.OnAuthorGroupIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorGroupID = value;
					this.SendPropertyChanged("AuthorGroupID");
					this.OnAuthorGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIBankEntity_QTIBankSchoolEntity", Storage="_QTIBankSchoolEntities", ThisKey="QTIBankID", OtherKey="QTIBankID")]
		public EntitySet<QTIBankSchoolEntity> QTIBankSchoolEntities
		{
			get
			{
				return this._QTIBankSchoolEntities;
			}
			set
			{
				this._QTIBankSchoolEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIBankEntity_QTIBankDistrictEntity", Storage="_QTIBankDistrictEntities", ThisKey="QTIBankID", OtherKey="QTIBankID")]
		public EntitySet<QTIBankDistrictEntity> QTIBankDistrictEntities
		{
			get
			{
				return this._QTIBankDistrictEntities;
			}
			set
			{
				this._QTIBankDistrictEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QTIBankSchoolEntities(QTIBankSchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIBankEntity = this;
		}
		
		private void detach_QTIBankSchoolEntities(QTIBankSchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIBankEntity = null;
		}
		
		private void attach_QTIBankDistrictEntities(QTIBankDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIBankEntity = this;
		}
		
		private void detach_QTIBankDistrictEntities(QTIBankDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIBankEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualSectionQuestion")]
	internal partial class VirtualSectionQuestionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualSectionQuestionID;
		
		private int _VirtualSectionID;
		
		private int _VirtualQuestionID;
		
		private int _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualSectionQuestionIDChanging(int value);
    partial void OnVirtualSectionQuestionIDChanged();
    partial void OnVirtualSectionIDChanging(int value);
    partial void OnVirtualSectionIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public VirtualSectionQuestionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualSectionQuestionID
		{
			get
			{
				return this._VirtualSectionQuestionID;
			}
			set
			{
				if ((this._VirtualSectionQuestionID != value))
				{
					this.OnVirtualSectionQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualSectionQuestionID = value;
					this.SendPropertyChanged("VirtualSectionQuestionID");
					this.OnVirtualSectionQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this.OnVirtualSectionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualSectionID = value;
					this.SendPropertyChanged("VirtualSectionID");
					this.OnVirtualSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestScoreMethod")]
	internal partial class TestScoreMethodEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestScoreMethodID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestScoreMethodIDChanging(int value);
    partial void OnTestScoreMethodIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TestScoreMethodEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScoreMethodID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TestScoreMethodID
		{
			get
			{
				return this._TestScoreMethodID;
			}
			set
			{
				if ((this._TestScoreMethodID != value))
				{
					this.OnTestScoreMethodIDChanging(value);
					this.SendPropertyChanging();
					this._TestScoreMethodID = value;
					this.SendPropertyChanged("TestScoreMethodID");
					this.OnTestScoreMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionStateStandard")]
	internal partial class VirtualQuestionStateStandardEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionStateStandardID;
		
		private int _VirtualQuestionID;
		
		private int _StateStandardID;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionStateStandardIDChanging(int value);
    partial void OnVirtualQuestionStateStandardIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnStateStandardIDChanging(int value);
    partial void OnStateStandardIDChanged();
    #endregion
		
		public VirtualQuestionStateStandardEntity()
		{
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionStateStandardID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionStateStandardID
		{
			get
			{
				return this._VirtualQuestionStateStandardID;
			}
			set
			{
				if ((this._VirtualQuestionStateStandardID != value))
				{
					this.OnVirtualQuestionStateStandardIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionStateStandardID = value;
					this.SendPropertyChanged("VirtualQuestionStateStandardID");
					this.OnVirtualQuestionStateStandardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateStandardID", DbType="Int NOT NULL")]
		public int StateStandardID
		{
			get
			{
				return this._StateStandardID;
			}
			set
			{
				if ((this._StateStandardID != value))
				{
					this.OnStateStandardIDChanging(value);
					this.SendPropertyChanging();
					this._StateStandardID = value;
					this.SendPropertyChanged("StateStandardID");
					this.OnStateStandardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionStateStandardEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true)]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.VirtualQuestionStateStandardEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionStateStandardEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionTopic")]
	internal partial class VirtualQuestionTopicEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionTopicID;
		
		private int _VirtualQuestionID;
		
		private int _TopicID;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionTopicIDChanging(int value);
    partial void OnVirtualQuestionTopicIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnTopicIDChanging(int value);
    partial void OnTopicIDChanged();
    #endregion
		
		public VirtualQuestionTopicEntity()
		{
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionTopicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionTopicID
		{
			get
			{
				return this._VirtualQuestionTopicID;
			}
			set
			{
				if ((this._VirtualQuestionTopicID != value))
				{
					this.OnVirtualQuestionTopicIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionTopicID = value;
					this.SendPropertyChanged("VirtualQuestionTopicID");
					this.OnVirtualQuestionTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicID", DbType="Int NOT NULL")]
		public int TopicID
		{
			get
			{
				return this._TopicID;
			}
			set
			{
				if ((this._TopicID != value))
				{
					this.OnTopicIDChanging(value);
					this.SendPropertyChanging();
					this._TopicID = value;
					this.SendPropertyChanged("TopicID");
					this.OnTopicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionTopicEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.VirtualQuestionTopicEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionTopicEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionLessonTwo")]
	internal partial class VirtualQuestionLessonTwoEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionLessonTwoID;
		
		private int _VirtualQuestionID;
		
		private int _LessonTwoID;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionLessonTwoIDChanging(int value);
    partial void OnVirtualQuestionLessonTwoIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnLessonTwoIDChanging(int value);
    partial void OnLessonTwoIDChanged();
    #endregion
		
		public VirtualQuestionLessonTwoEntity()
		{
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionLessonTwoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionLessonTwoID
		{
			get
			{
				return this._VirtualQuestionLessonTwoID;
			}
			set
			{
				if ((this._VirtualQuestionLessonTwoID != value))
				{
					this.OnVirtualQuestionLessonTwoIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionLessonTwoID = value;
					this.SendPropertyChanged("VirtualQuestionLessonTwoID");
					this.OnVirtualQuestionLessonTwoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonTwoID", DbType="Int NOT NULL")]
		public int LessonTwoID
		{
			get
			{
				return this._LessonTwoID;
			}
			set
			{
				if ((this._LessonTwoID != value))
				{
					this.OnLessonTwoIDChanging(value);
					this.SendPropertyChanging();
					this._LessonTwoID = value;
					this.SendPropertyChanged("LessonTwoID");
					this.OnLessonTwoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionLessonTwoEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.VirtualQuestionLessonTwoEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionLessonTwoEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionLessonOne")]
	internal partial class VirtualQuestionLessonOneEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionLessonOneID;
		
		private int _VirtualQuestionID;
		
		private int _LessonOneID;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionLessonOneIDChanging(int value);
    partial void OnVirtualQuestionLessonOneIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnLessonOneIDChanging(int value);
    partial void OnLessonOneIDChanged();
    #endregion
		
		public VirtualQuestionLessonOneEntity()
		{
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionLessonOneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionLessonOneID
		{
			get
			{
				return this._VirtualQuestionLessonOneID;
			}
			set
			{
				if ((this._VirtualQuestionLessonOneID != value))
				{
					this.OnVirtualQuestionLessonOneIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionLessonOneID = value;
					this.SendPropertyChanged("VirtualQuestionLessonOneID");
					this.OnVirtualQuestionLessonOneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonOneID", DbType="Int NOT NULL")]
		public int LessonOneID
		{
			get
			{
				return this._LessonOneID;
			}
			set
			{
				if ((this._LessonOneID != value))
				{
					this.OnLessonOneIDChanging(value);
					this.SendPropertyChanging();
					this._LessonOneID = value;
					this.SendPropertyChanged("LessonOneID");
					this.OnLessonOneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionLessonOneEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.VirtualQuestionLessonOneEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionLessonOneEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionItemTag")]
	internal partial class VirtualQuestionItemTagEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionItemTagID;
		
		private int _VirtualQuestionID;
		
		private int _ItemTagID;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionItemTagIDChanging(int value);
    partial void OnVirtualQuestionItemTagIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnItemTagIDChanging(int value);
    partial void OnItemTagIDChanged();
    #endregion
		
		public VirtualQuestionItemTagEntity()
		{
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionItemTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionItemTagID
		{
			get
			{
				return this._VirtualQuestionItemTagID;
			}
			set
			{
				if ((this._VirtualQuestionItemTagID != value))
				{
					this.OnVirtualQuestionItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionItemTagID = value;
					this.SendPropertyChanged("VirtualQuestionItemTagID");
					this.OnVirtualQuestionItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagID", DbType="Int NOT NULL")]
		public int ItemTagID
		{
			get
			{
				return this._ItemTagID;
			}
			set
			{
				if ((this._ItemTagID != value))
				{
					this.OnItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTagID = value;
					this.SendPropertyChanged("ItemTagID");
					this.OnItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionItemTagEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.VirtualQuestionItemTagEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionItemTagEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualSectionQuestionView")]
	public partial class VirtualSectionQuestionView
	{
		
		private int _VirtualSectionQuestionID;
		
		private int _VirtualQuestionID;
		
		private int _VirtualSectionID;
		
		private int _Order;
		
		private int _QuestionOrder;
		
		private int _VirtualTestID;
		
		private int _PointsPossible;
		
		private System.Nullable<int> _QTIItemID;
		
		private string _XmlContent;
		
		public VirtualSectionQuestionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionID", DbType="Int NOT NULL")]
		public int VirtualSectionQuestionID
		{
			get
			{
				return this._VirtualSectionQuestionID;
			}
			set
			{
				if ((this._VirtualSectionQuestionID != value))
				{
					this._VirtualSectionQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int")]
		public System.Nullable<int> QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionItemTagView")]
	public partial class VirtualQuestionItemTagView
	{
		
		private int _VirtualQuestionItemTagID;
		
		private int _VirtualQuestionID;
		
		private int _ItemTagId;
		
		private string _Name;
		
		public VirtualQuestionItemTagView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionItemTagID", DbType="Int NOT NULL")]
		public int VirtualQuestionItemTagID
		{
			get
			{
				return this._VirtualQuestionItemTagID;
			}
			set
			{
				if ((this._VirtualQuestionItemTagID != value))
				{
					this._VirtualQuestionItemTagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagId", DbType="Int NOT NULL")]
		public int ItemTagId
		{
			get
			{
				return this._ItemTagId;
			}
			set
			{
				if ((this._ItemTagId != value))
				{
					this._ItemTagId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankSchoolView")]
	public partial class BankSchoolView
	{
		
		private int _BankSchoolID;
		
		private int _BankID;
		
		private int _SchoolID;
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private string _Name;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _EditedByUserID;
		
		public BankSchoolView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankSchoolID", DbType="Int NOT NULL")]
		public int BankSchoolID
		{
			get
			{
				return this._BankSchoolID;
			}
			set
			{
				if ((this._BankSchoolID != value))
				{
					this._BankSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this._EditedByUserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankSchool")]
	internal partial class BankSchoolEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankSchoolID;
		
		private int _BankID;
		
		private int _SchoolID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _EditedByUserID;
		
		private EntityRef<BankEntity> _BankEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankSchoolIDChanging(int value);
    partial void OnBankSchoolIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnSchoolIDChanging(int value);
    partial void OnSchoolIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnEditedByUserIDChanging(int value);
    partial void OnEditedByUserIDChanged();
    #endregion
		
		public BankSchoolEntity()
		{
			this._BankEntity = default(EntityRef<BankEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankSchoolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankSchoolID
		{
			get
			{
				return this._BankSchoolID;
			}
			set
			{
				if ((this._BankSchoolID != value))
				{
					this.OnBankSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._BankSchoolID = value;
					this.SendPropertyChanged("BankSchoolID");
					this.OnBankSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._BankEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this.OnEditedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditedByUserID = value;
					this.SendPropertyChanged("EditedByUserID");
					this.OnEditedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_BankSchoolEntity", Storage="_BankEntity", ThisKey="BankID", OtherKey="BankID", IsForeignKey=true)]
		public BankEntity BankEntity
		{
			get
			{
				return this._BankEntity.Entity;
			}
			set
			{
				BankEntity previousValue = this._BankEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankEntity.Entity = null;
						previousValue.BankSchoolEntities.Remove(this);
					}
					this._BankEntity.Entity = value;
					if ((value != null))
					{
						value.BankSchoolEntities.Add(this);
						this._BankID = value.BankID;
					}
					else
					{
						this._BankID = default(int);
					}
					this.SendPropertyChanged("BankEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConversionSet")]
	internal partial class ConversionSetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConverstionSetID;
		
		private string _Name;
		
		private string _Description;
		
		private string _ConversionMethod;
		
		private int _VirtualTestSubTypeID;
		
		private EntitySet<VirtualSectionEntity> _VirtualSectionEntities;

        private EntitySet<ConversionSetDetailEntity> _ConversionSetDetailEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConverstionSetIDChanging(int value);
    partial void OnConverstionSetIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnConversionMethodChanging(string value);
    partial void OnConversionMethodChanged();
    partial void OnVirtualTestSubTypeIDChanging(int value);
    partial void OnVirtualTestSubTypeIDChanged();
    #endregion
		
		public ConversionSetEntity()
		{
			this._VirtualSectionEntities = new EntitySet<VirtualSectionEntity>(new Action<VirtualSectionEntity>(this.attach_VirtualSectionEntities), new Action<VirtualSectionEntity>(this.detach_VirtualSectionEntities));
            this._ConversionSetDetailEntities = new EntitySet<ConversionSetDetailEntity>(new Action<ConversionSetDetailEntity>(this.attach_ConversionSetDetailEntities), new Action<ConversionSetDetailEntity>(this.detach_ConversionSetDetailEntities));
            OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConverstionSetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConverstionSetID
		{
			get
			{
				return this._ConverstionSetID;
			}
			set
			{
				if ((this._ConverstionSetID != value))
				{
					this.OnConverstionSetIDChanging(value);
					this.SendPropertyChanging();
					this._ConverstionSetID = value;
					this.SendPropertyChanged("ConverstionSetID");
					this.OnConverstionSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionMethod", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ConversionMethod
		{
			get
			{
				return this._ConversionMethod;
			}
			set
			{
				if ((this._ConversionMethod != value))
				{
					this.OnConversionMethodChanging(value);
					this.SendPropertyChanging();
					this._ConversionMethod = value;
					this.SendPropertyChanged("ConversionMethod");
					this.OnConversionMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSubTypeID", DbType="Int NOT NULL")]
		public int VirtualTestSubTypeID
		{
			get
			{
				return this._VirtualTestSubTypeID;
			}
			set
			{
				if ((this._VirtualTestSubTypeID != value))
				{
					this.OnVirtualTestSubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestSubTypeID = value;
					this.SendPropertyChanged("VirtualTestSubTypeID");
					this.OnVirtualTestSubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConversionSetEntity_VirtualSectionEntity", Storage="_VirtualSectionEntities", ThisKey="ConverstionSetID", OtherKey="ConversionSetID")]
		public EntitySet<VirtualSectionEntity> VirtualSectionEntities
		{
			get
			{
				return this._VirtualSectionEntities;
			}
			set
			{
				this._VirtualSectionEntities.Assign(value);
			}
		}

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ConversionSetEntity_ConversionSetDetailEntity", Storage = "_ConversionSetDetailEntities", ThisKey = "ConverstionSetID", OtherKey = "ConversionSetID")]
        public EntitySet<ConversionSetDetailEntity> ConversionSetDetailEntities
        {
            get
            {
                return this._ConversionSetDetailEntities;
            }
            set
            {
                this._ConversionSetDetailEntities.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VirtualSectionEntities(VirtualSectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ConversionSetEntity = this;
		}
		
		private void detach_VirtualSectionEntities(VirtualSectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ConversionSetEntity = null;
		}

        private void attach_ConversionSetDetailEntities(ConversionSetDetailEntity entity)
        {
            this.SendPropertyChanging();
            entity.ConversionSetEntity = this;
        }

        private void detach_ConversionSetDetailEntities(ConversionSetDetailEntity entity)
        {
            this.SendPropertyChanging();
            entity.ConversionSetEntity = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ConversionSetDetail")]
    internal partial class ConversionSetDetailEntity : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ConversionSetDetailID;

        private int _ConversionSetID;

        private int _Input1;

        private int _Input2;

        private decimal _ConvertedScore;

        private string _ConvertedScore_A;

        private EntityRef<ConversionSetEntity> _ConversionSetEntity;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnConversionSetDetailIDChanging(int value);
        partial void OnConversionSetDetailIDChanged();
        partial void OnConversionSetIDChanging(int value);
        partial void OnConversionSetIDChanged();
        partial void OnInput1Changing(int value);
        partial void OnInput1Changed();
        partial void OnInput2Changing(int value);
        partial void OnInput2Changed();
        partial void OnConvertedScoreChanging(decimal value);
        partial void OnConvertedScoreChanged();
        partial void OnConvertedScore_AChanging(string value);
        partial void OnConvertedScore_AChanged();
        #endregion

        public ConversionSetDetailEntity()
        {
            this._ConversionSetEntity = default(EntityRef<ConversionSetEntity>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConversionSetDetailID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ConversionSetDetailID
        {
            get
            {
                return this._ConversionSetDetailID;
            }
            set
            {
                if ((this._ConversionSetDetailID != value))
                {
                    this.OnConversionSetDetailIDChanging(value);
                    this.SendPropertyChanging();
                    this._ConversionSetDetailID = value;
                    this.SendPropertyChanged("ConversionSetDetailID");
                    this.OnConversionSetDetailIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConversionSetID", DbType = "Int NOT NULL")]
        public int ConversionSetID
        {
            get
            {
                return this._ConversionSetID;
            }
            set
            {
                if ((this._ConversionSetID != value))
                {
                    if (this._ConversionSetEntity.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnConversionSetIDChanging(value);
                    this.SendPropertyChanging();
                    this._ConversionSetID = value;
                    this.SendPropertyChanged("ConversionSetID");
                    this.OnConversionSetIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Input1", DbType = "Int NOT NULL")]
        public int Input1
        {
            get
            {
                return this._Input1;
            }
            set
            {
                if ((this._Input1 != value))
                {
                    this.OnInput1Changing(value);
                    this.SendPropertyChanging();
                    this._Input1 = value;
                    this.SendPropertyChanged("Input1");
                    this.OnInput1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Input2", DbType = "Int NOT NULL")]
        public int Input2
        {
            get
            {
                return this._Input2;
            }
            set
            {
                if ((this._Input2 != value))
                {
                    this.OnInput2Changing(value);
                    this.SendPropertyChanging();
                    this._Input2 = value;
                    this.SendPropertyChanged("Input2");
                    this.OnInput2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConvertedScore", DbType = "Decimal(18,2) NOT NULL")]
        public decimal ConvertedScore
        {
            get
            {
                return this._ConvertedScore;
            }
            set
            {
                if ((this._ConvertedScore != value))
                {
                    this.OnConvertedScoreChanging(value);
                    this.SendPropertyChanging();
                    this._ConvertedScore = value;
                    this.SendPropertyChanged("ConvertedScore");
                    this.OnConvertedScoreChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConvertedScore_A", DbType = "VarChar(100)")]
        public string ConvertedScore_A
        {
            get
            {
                return this._ConvertedScore_A;
            }
            set
            {
                if ((this._ConvertedScore_A != value))
                {
                    this.OnConvertedScore_AChanging(value);
                    this.SendPropertyChanging();
                    this._ConvertedScore_A = value;
                    this.SendPropertyChanged("ConvertedScore_A");
                    this.OnConvertedScore_AChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ConversionSetEntity_ConversionSetDetailEntity", Storage = "_ConversionSetEntity", ThisKey = "ConversionSetID", OtherKey = "ConverstionSetID", IsForeignKey = true)]
        public ConversionSetEntity ConversionSetEntity
        {
            get
            {
                return this._ConversionSetEntity.Entity;
            }
            set
            {
                ConversionSetEntity previousValue = this._ConversionSetEntity.Entity;
                if (((previousValue != value)
                            || (this._ConversionSetEntity.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ConversionSetEntity.Entity = null;
                        previousValue.ConversionSetDetailEntities.Remove(this);
                    }
                    this._ConversionSetEntity.Entity = value;
                    if ((value != null))
                    {
                        value.ConversionSetDetailEntities.Add(this);
                        this._ConversionSetID = value.ConverstionSetID;
                    }
                    else
                    {
                        this._ConversionSetID = default(int);
                    }
                    this.SendPropertyChanged("ConversionSetEntity");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Qti3pItemStandardXml")]
	internal partial class Qti3pItemStandardXmlEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Qti3pItemID;
		
		private string _MasterStandardXML;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQti3pItemIDChanging(int value);
    partial void OnQti3pItemIDChanged();
    partial void OnMasterStandardXMLChanging(string value);
    partial void OnMasterStandardXMLChanged();
    #endregion
		
		public Qti3pItemStandardXmlEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qti3pItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Qti3pItemID
		{
			get
			{
				return this._Qti3pItemID;
			}
			set
			{
				if ((this._Qti3pItemID != value))
				{
					this.OnQti3pItemIDChanging(value);
					this.SendPropertyChanging();
					this._Qti3pItemID = value;
					this.SendPropertyChanged("Qti3pItemID");
					this.OnQti3pItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterStandardXML", DbType="VarChar(MAX)")]
		public string MasterStandardXML
		{
			get
			{
				return this._MasterStandardXML;
			}
			set
			{
				if ((this._MasterStandardXML != value))
				{
					this.OnMasterStandardXMLChanging(value);
					this.SendPropertyChanging();
					this._MasterStandardXML = value;
					this.SendPropertyChanged("MasterStandardXML");
					this.OnMasterStandardXMLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionsView")]
	internal partial class QuestionAnswersEntity
	{
		
		private int _TestId;
		
		private int _VirtualQuestionID;
		
		private string _AnswerIdentifiers;
		
		private int _ProblemNumber;
		
		private int _QTISchemaID;
		
		private int _PointsPossible;
		
		private System.Nullable<int> _BaseVirtualQuestionID;
		
		private System.Nullable<int> _QuestionGroupID;
		
		private System.Nullable<int> _VirtualSectionID;
		
		public QuestionAnswersEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestId", DbType="Int NOT NULL")]
		public int TestId
		{
			get
			{
				return this._TestId;
			}
			set
			{
				if ((this._TestId != value))
				{
					this._TestId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemNumber", DbType="Int NOT NULL")]
		public int ProblemNumber
		{
			get
			{
				return this._ProblemNumber;
			}
			set
			{
				if ((this._ProblemNumber != value))
				{
					this._ProblemNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseVirtualQuestionID", DbType="Int")]
		public System.Nullable<int> BaseVirtualQuestionID
		{
			get
			{
				return this._BaseVirtualQuestionID;
			}
			set
			{
				if ((this._BaseVirtualQuestionID != value))
				{
					this._BaseVirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int")]
		public System.Nullable<int> QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this._QuestionGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int")]
		public System.Nullable<int> VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResultScore")]
	internal partial class TestResultScoreEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestResultScoreID;
		
		private int _TestResultID;
		
		private System.Nullable<bool> _TookTest;
		
		private System.Nullable<decimal> _ScorePercent;
		
		private System.Nullable<decimal> _ScorePercentage;
		
		private System.Nullable<decimal> _ScoreRaw;
		
		private System.Nullable<decimal> _ScoreScaled;
		
		private System.Nullable<decimal> _ScoreLexile;
		
		private System.Nullable<decimal> _ScoreIndex;
		
		private bool _UsePercent;
		
		private bool _UsePercentage;
		
		private bool _UseRaw;
		
		private bool _UseScaled;
		
		private System.Nullable<bool> _UseLexile;
		
		private System.Nullable<bool> _UseIndex;
		
		private System.Nullable<int> _AchievementLevel;
		
		private System.Nullable<int> _PointsPossible;
		
		private System.Nullable<bool> _UseGradeLevelEquiv;
		
		private System.Nullable<decimal> _ScoreGradeLevelEquiv;
		
		private string _Name;
		
		private System.Nullable<bool> _MetStandard;
		
		private string _AchieveLevelName;
		
		private System.Nullable<decimal> _ScoreCustomN_1;
		
		private System.Nullable<decimal> _ScoreCustomN_2;
		
		private System.Nullable<decimal> _ScoreCustomN_3;
		
		private System.Nullable<decimal> _ScoreCustomN_4;
		
		private string _ScoreCustomA_1;
		
		private string _ScoreCustomA_2;
		
		private string _ScoreCustomA_3;
		
		private string _ScoreCustomA_4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestResultScoreIDChanging(int value);
    partial void OnTestResultScoreIDChanged();
    partial void OnTestResultIDChanging(int value);
    partial void OnTestResultIDChanged();
    partial void OnTookTestChanging(System.Nullable<bool> value);
    partial void OnTookTestChanged();
    partial void OnScorePercentChanging(System.Nullable<decimal> value);
    partial void OnScorePercentChanged();
    partial void OnScorePercentageChanging(System.Nullable<decimal> value);
    partial void OnScorePercentageChanged();
    partial void OnScoreRawChanging(System.Nullable<decimal> value);
    partial void OnScoreRawChanged();
    partial void OnScoreScaledChanging(System.Nullable<decimal> value);
    partial void OnScoreScaledChanged();
    partial void OnScoreLexileChanging(System.Nullable<decimal> value);
    partial void OnScoreLexileChanged();
    partial void OnScoreIndexChanging(System.Nullable<decimal> value);
    partial void OnScoreIndexChanged();
    partial void OnUsePercentChanging(bool value);
    partial void OnUsePercentChanged();
    partial void OnUsePercentageChanging(bool value);
    partial void OnUsePercentageChanged();
    partial void OnUseRawChanging(bool value);
    partial void OnUseRawChanged();
    partial void OnUseScaledChanging(bool value);
    partial void OnUseScaledChanged();
    partial void OnUseLexileChanging(System.Nullable<bool> value);
    partial void OnUseLexileChanged();
    partial void OnUseIndexChanging(System.Nullable<bool> value);
    partial void OnUseIndexChanged();
    partial void OnAchievementLevelChanging(System.Nullable<int> value);
    partial void OnAchievementLevelChanged();
    partial void OnPointsPossibleChanging(System.Nullable<int> value);
    partial void OnPointsPossibleChanged();
    partial void OnUseGradeLevelEquivChanging(System.Nullable<bool> value);
    partial void OnUseGradeLevelEquivChanged();
    partial void OnScoreGradeLevelEquivChanging(System.Nullable<decimal> value);
    partial void OnScoreGradeLevelEquivChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMetStandardChanging(System.Nullable<bool> value);
    partial void OnMetStandardChanged();
    partial void OnAchieveLevelNameChanging(string value);
    partial void OnAchieveLevelNameChanged();
    partial void OnScoreCustomN_1Changing(System.Nullable<decimal> value);
    partial void OnScoreCustomN_1Changed();
    partial void OnScoreCustomN_2Changing(System.Nullable<decimal> value);
    partial void OnScoreCustomN_2Changed();
    partial void OnScoreCustomN_3Changing(System.Nullable<decimal> value);
    partial void OnScoreCustomN_3Changed();
    partial void OnScoreCustomN_4Changing(System.Nullable<decimal> value);
    partial void OnScoreCustomN_4Changed();
    partial void OnScoreCustomA_1Changing(string value);
    partial void OnScoreCustomA_1Changed();
    partial void OnScoreCustomA_2Changing(string value);
    partial void OnScoreCustomA_2Changed();
    partial void OnScoreCustomA_3Changing(string value);
    partial void OnScoreCustomA_3Changed();
    partial void OnScoreCustomA_4Changing(string value);
    partial void OnScoreCustomA_4Changed();
    #endregion
		
		public TestResultScoreEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultScoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TestResultScoreID
		{
			get
			{
				return this._TestResultScoreID;
			}
			set
			{
				if ((this._TestResultScoreID != value))
				{
					this.OnTestResultScoreIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultScoreID = value;
					this.SendPropertyChanged("TestResultScoreID");
					this.OnTestResultScoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this.OnTestResultIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultID = value;
					this.SendPropertyChanged("TestResultID");
					this.OnTestResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TookTest", DbType="Bit")]
		public System.Nullable<bool> TookTest
		{
			get
			{
				return this._TookTest;
			}
			set
			{
				if ((this._TookTest != value))
				{
					this.OnTookTestChanging(value);
					this.SendPropertyChanging();
					this._TookTest = value;
					this.SendPropertyChanged("TookTest");
					this.OnTookTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercent", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScorePercent
		{
			get
			{
				return this._ScorePercent;
			}
			set
			{
				if ((this._ScorePercent != value))
				{
					this.OnScorePercentChanging(value);
					this.SendPropertyChanging();
					this._ScorePercent = value;
					this.SendPropertyChanged("ScorePercent");
					this.OnScorePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercentage", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScorePercentage
		{
			get
			{
				return this._ScorePercentage;
			}
			set
			{
				if ((this._ScorePercentage != value))
				{
					this.OnScorePercentageChanging(value);
					this.SendPropertyChanging();
					this._ScorePercentage = value;
					this.SendPropertyChanged("ScorePercentage");
					this.OnScorePercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreRaw", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreRaw
		{
			get
			{
				return this._ScoreRaw;
			}
			set
			{
				if ((this._ScoreRaw != value))
				{
					this.OnScoreRawChanging(value);
					this.SendPropertyChanging();
					this._ScoreRaw = value;
					this.SendPropertyChanged("ScoreRaw");
					this.OnScoreRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreScaled", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreScaled
		{
			get
			{
				return this._ScoreScaled;
			}
			set
			{
				if ((this._ScoreScaled != value))
				{
					this.OnScoreScaledChanging(value);
					this.SendPropertyChanging();
					this._ScoreScaled = value;
					this.SendPropertyChanged("ScoreScaled");
					this.OnScoreScaledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreLexile", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreLexile
		{
			get
			{
				return this._ScoreLexile;
			}
			set
			{
				if ((this._ScoreLexile != value))
				{
					this.OnScoreLexileChanging(value);
					this.SendPropertyChanging();
					this._ScoreLexile = value;
					this.SendPropertyChanged("ScoreLexile");
					this.OnScoreLexileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreIndex", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreIndex
		{
			get
			{
				return this._ScoreIndex;
			}
			set
			{
				if ((this._ScoreIndex != value))
				{
					this.OnScoreIndexChanging(value);
					this.SendPropertyChanging();
					this._ScoreIndex = value;
					this.SendPropertyChanged("ScoreIndex");
					this.OnScoreIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePercent", DbType="Bit NOT NULL")]
		public bool UsePercent
		{
			get
			{
				return this._UsePercent;
			}
			set
			{
				if ((this._UsePercent != value))
				{
					this.OnUsePercentChanging(value);
					this.SendPropertyChanging();
					this._UsePercent = value;
					this.SendPropertyChanged("UsePercent");
					this.OnUsePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePercentage", DbType="Bit NOT NULL")]
		public bool UsePercentage
		{
			get
			{
				return this._UsePercentage;
			}
			set
			{
				if ((this._UsePercentage != value))
				{
					this.OnUsePercentageChanging(value);
					this.SendPropertyChanging();
					this._UsePercentage = value;
					this.SendPropertyChanged("UsePercentage");
					this.OnUsePercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRaw", DbType="Bit NOT NULL")]
		public bool UseRaw
		{
			get
			{
				return this._UseRaw;
			}
			set
			{
				if ((this._UseRaw != value))
				{
					this.OnUseRawChanging(value);
					this.SendPropertyChanging();
					this._UseRaw = value;
					this.SendPropertyChanged("UseRaw");
					this.OnUseRawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseScaled", DbType="Bit NOT NULL")]
		public bool UseScaled
		{
			get
			{
				return this._UseScaled;
			}
			set
			{
				if ((this._UseScaled != value))
				{
					this.OnUseScaledChanging(value);
					this.SendPropertyChanging();
					this._UseScaled = value;
					this.SendPropertyChanged("UseScaled");
					this.OnUseScaledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLexile", DbType="Bit")]
		public System.Nullable<bool> UseLexile
		{
			get
			{
				return this._UseLexile;
			}
			set
			{
				if ((this._UseLexile != value))
				{
					this.OnUseLexileChanging(value);
					this.SendPropertyChanging();
					this._UseLexile = value;
					this.SendPropertyChanged("UseLexile");
					this.OnUseLexileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseIndex", DbType="Bit")]
		public System.Nullable<bool> UseIndex
		{
			get
			{
				return this._UseIndex;
			}
			set
			{
				if ((this._UseIndex != value))
				{
					this.OnUseIndexChanging(value);
					this.SendPropertyChanging();
					this._UseIndex = value;
					this.SendPropertyChanged("UseIndex");
					this.OnUseIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevel", DbType="Int")]
		public System.Nullable<int> AchievementLevel
		{
			get
			{
				return this._AchievementLevel;
			}
			set
			{
				if ((this._AchievementLevel != value))
				{
					this.OnAchievementLevelChanging(value);
					this.SendPropertyChanging();
					this._AchievementLevel = value;
					this.SendPropertyChanged("AchievementLevel");
					this.OnAchievementLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int")]
		public System.Nullable<int> PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this.OnPointsPossibleChanging(value);
					this.SendPropertyChanging();
					this._PointsPossible = value;
					this.SendPropertyChanged("PointsPossible");
					this.OnPointsPossibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseGradeLevelEquiv", DbType="Bit")]
		public System.Nullable<bool> UseGradeLevelEquiv
		{
			get
			{
				return this._UseGradeLevelEquiv;
			}
			set
			{
				if ((this._UseGradeLevelEquiv != value))
				{
					this.OnUseGradeLevelEquivChanging(value);
					this.SendPropertyChanging();
					this._UseGradeLevelEquiv = value;
					this.SendPropertyChanged("UseGradeLevelEquiv");
					this.OnUseGradeLevelEquivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreGradeLevelEquiv", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreGradeLevelEquiv
		{
			get
			{
				return this._ScoreGradeLevelEquiv;
			}
			set
			{
				if ((this._ScoreGradeLevelEquiv != value))
				{
					this.OnScoreGradeLevelEquivChanging(value);
					this.SendPropertyChanging();
					this._ScoreGradeLevelEquiv = value;
					this.SendPropertyChanged("ScoreGradeLevelEquiv");
					this.OnScoreGradeLevelEquivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetStandard", DbType="Bit")]
		public System.Nullable<bool> MetStandard
		{
			get
			{
				return this._MetStandard;
			}
			set
			{
				if ((this._MetStandard != value))
				{
					this.OnMetStandardChanging(value);
					this.SendPropertyChanging();
					this._MetStandard = value;
					this.SendPropertyChanged("MetStandard");
					this.OnMetStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchieveLevelName", DbType="VarChar(50)")]
		public string AchieveLevelName
		{
			get
			{
				return this._AchieveLevelName;
			}
			set
			{
				if ((this._AchieveLevelName != value))
				{
					this.OnAchieveLevelNameChanging(value);
					this.SendPropertyChanging();
					this._AchieveLevelName = value;
					this.SendPropertyChanged("AchieveLevelName");
					this.OnAchieveLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ScoreCustomN_1
		{
			get
			{
				return this._ScoreCustomN_1;
			}
			set
			{
				if ((this._ScoreCustomN_1 != value))
				{
					this.OnScoreCustomN_1Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomN_1 = value;
					this.SendPropertyChanged("ScoreCustomN_1");
					this.OnScoreCustomN_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ScoreCustomN_2
		{
			get
			{
				return this._ScoreCustomN_2;
			}
			set
			{
				if ((this._ScoreCustomN_2 != value))
				{
					this.OnScoreCustomN_2Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomN_2 = value;
					this.SendPropertyChanged("ScoreCustomN_2");
					this.OnScoreCustomN_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_3", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ScoreCustomN_3
		{
			get
			{
				return this._ScoreCustomN_3;
			}
			set
			{
				if ((this._ScoreCustomN_3 != value))
				{
					this.OnScoreCustomN_3Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomN_3 = value;
					this.SendPropertyChanged("ScoreCustomN_3");
					this.OnScoreCustomN_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_4", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ScoreCustomN_4
		{
			get
			{
				return this._ScoreCustomN_4;
			}
			set
			{
				if ((this._ScoreCustomN_4 != value))
				{
					this.OnScoreCustomN_4Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomN_4 = value;
					this.SendPropertyChanged("ScoreCustomN_4");
					this.OnScoreCustomN_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_1", DbType="VarChar(50)")]
		public string ScoreCustomA_1
		{
			get
			{
				return this._ScoreCustomA_1;
			}
			set
			{
				if ((this._ScoreCustomA_1 != value))
				{
					this.OnScoreCustomA_1Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomA_1 = value;
					this.SendPropertyChanged("ScoreCustomA_1");
					this.OnScoreCustomA_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_2", DbType="VarChar(50)")]
		public string ScoreCustomA_2
		{
			get
			{
				return this._ScoreCustomA_2;
			}
			set
			{
				if ((this._ScoreCustomA_2 != value))
				{
					this.OnScoreCustomA_2Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomA_2 = value;
					this.SendPropertyChanged("ScoreCustomA_2");
					this.OnScoreCustomA_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_3", DbType="VarChar(50)")]
		public string ScoreCustomA_3
		{
			get
			{
				return this._ScoreCustomA_3;
			}
			set
			{
				if ((this._ScoreCustomA_3 != value))
				{
					this.OnScoreCustomA_3Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomA_3 = value;
					this.SendPropertyChanged("ScoreCustomA_3");
					this.OnScoreCustomA_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_4", DbType="VarChar(50)")]
		public string ScoreCustomA_4
		{
			get
			{
				return this._ScoreCustomA_4;
			}
			set
			{
				if ((this._ScoreCustomA_4 != value))
				{
					this.OnScoreCustomA_4Changing(value);
					this.SendPropertyChanging();
					this._ScoreCustomA_4 = value;
					this.SendPropertyChanged("ScoreCustomA_4");
					this.OnScoreCustomA_4Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChytenTestCenterEmail")]
	public partial class ChytenTestCenterEmailEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChyTenTestCenterEmailID;
		
		private string _Zipcode;
		
		private string _Email;
		
		private bool _Active;
		
		private System.Nullable<int> _SchoolID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChyTenTestCenterEmailIDChanging(int value);
    partial void OnChyTenTestCenterEmailIDChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    #endregion
		
		public ChytenTestCenterEmailEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChyTenTestCenterEmailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChyTenTestCenterEmailID
		{
			get
			{
				return this._ChyTenTestCenterEmailID;
			}
			set
			{
				if ((this._ChyTenTestCenterEmailID != value))
				{
					this.OnChyTenTestCenterEmailIDChanging(value);
					this.SendPropertyChanging();
					this._ChyTenTestCenterEmailID = value;
					this.SendPropertyChanged("ChyTenTestCenterEmailID");
					this.OnChyTenTestCenterEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="VarChar(10)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemFeedback")]
	internal partial class ItemFeedbackEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemFeedbackID;
		
		private int _QTIOnlineTestSessionAnswerID;
		
		private System.Nullable<int> _AnswerID;
		
		private string _Feedback;
		
		private int _UserID;
		
		private System.DateTime _UpdatedDate;
		
		private System.Nullable<System.Guid> _DocumentGUID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemFeedbackIDChanging(int value);
    partial void OnItemFeedbackIDChanged();
    partial void OnQTIOnlineTestSessionAnswerIDChanging(int value);
    partial void OnQTIOnlineTestSessionAnswerIDChanged();
    partial void OnAnswerIDChanging(System.Nullable<int> value);
    partial void OnAnswerIDChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnDocumentGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnDocumentGUIDChanged();
    #endregion
		
		public ItemFeedbackEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemFeedbackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemFeedbackID
		{
			get
			{
				return this._ItemFeedbackID;
			}
			set
			{
				if ((this._ItemFeedbackID != value))
				{
					this.OnItemFeedbackIDChanging(value);
					this.SendPropertyChanging();
					this._ItemFeedbackID = value;
					this.SendPropertyChanged("ItemFeedbackID");
					this.OnItemFeedbackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this.OnQTIOnlineTestSessionAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionAnswerID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionAnswerID");
					this.OnQTIOnlineTestSessionAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int")]
		public System.Nullable<int> AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(MAX)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentGUID
		{
			get
			{
				return this._DocumentGUID;
			}
			set
			{
				if ((this._DocumentGUID != value))
				{
					this.OnDocumentGUIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentGUID = value;
					this.SendPropertyChanged("DocumentGUID");
					this.OnDocumentGUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestFeedback")]
	internal partial class TestFeedbackEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestFeedbackID;
		
		private int _QtiOnlineTestSessionID;
		
		private System.Nullable<int> _TestResultID;
		
		private string _Feedback;
		
		private int _UserID;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestFeedbackIDChanging(int value);
    partial void OnTestFeedbackIDChanged();
    partial void OnQtiOnlineTestSessionIDChanging(int value);
    partial void OnQtiOnlineTestSessionIDChanged();
    partial void OnTestResultIDChanging(System.Nullable<int> value);
    partial void OnTestResultIDChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public TestFeedbackEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestFeedbackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TestFeedbackID
		{
			get
			{
				return this._TestFeedbackID;
			}
			set
			{
				if ((this._TestFeedbackID != value))
				{
					this.OnTestFeedbackIDChanging(value);
					this.SendPropertyChanging();
					this._TestFeedbackID = value;
					this.SendPropertyChanged("TestFeedbackID");
					this.OnTestFeedbackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiOnlineTestSessionID", DbType="Int NOT NULL")]
		public int QtiOnlineTestSessionID
		{
			get
			{
				return this._QtiOnlineTestSessionID;
			}
			set
			{
				if ((this._QtiOnlineTestSessionID != value))
				{
					this.OnQtiOnlineTestSessionIDChanging(value);
					this.SendPropertyChanging();
					this._QtiOnlineTestSessionID = value;
					this.SendPropertyChanged("QtiOnlineTestSessionID");
					this.OnQtiOnlineTestSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int")]
		public System.Nullable<int> TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this.OnTestResultIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultID = value;
					this.SendPropertyChanged("TestResultID");
					this.OnTestResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(MAX)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestConversion")]
	internal partial class VirtualTestConversionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualTestConversionID;
		
		private string _Name;
		
		private string _Description;
		
		private int _ConversionSetID;
		
		private string _TargetIDs;
		
		private int _TargetType;
		
		private int _VirtualTestID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualTestConversionIDChanging(int value);
    partial void OnVirtualTestConversionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnConversionSetIDChanging(int value);
    partial void OnConversionSetIDChanged();
    partial void OnTargetIDsChanging(string value);
    partial void OnTargetIDsChanged();
    partial void OnTargetTypeChanging(int value);
    partial void OnTargetTypeChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    #endregion
		
		public VirtualTestConversionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestConversionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualTestConversionID
		{
			get
			{
				return this._VirtualTestConversionID;
			}
			set
			{
				if ((this._VirtualTestConversionID != value))
				{
					this.OnVirtualTestConversionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestConversionID = value;
					this.SendPropertyChanged("VirtualTestConversionID");
					this.OnVirtualTestConversionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionSetID", DbType="Int NOT NULL")]
		public int ConversionSetID
		{
			get
			{
				return this._ConversionSetID;
			}
			set
			{
				if ((this._ConversionSetID != value))
				{
					this.OnConversionSetIDChanging(value);
					this.SendPropertyChanging();
					this._ConversionSetID = value;
					this.SendPropertyChanged("ConversionSetID");
					this.OnConversionSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetIDs", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TargetIDs
		{
			get
			{
				return this._TargetIDs;
			}
			set
			{
				if ((this._TargetIDs != value))
				{
					this.OnTargetIDsChanging(value);
					this.SendPropertyChanging();
					this._TargetIDs = value;
					this.SendPropertyChanged("TargetIDs");
					this.OnTargetIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="Int NOT NULL")]
		public int TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionLessonOneView")]
	public partial class VirtualQuestionLessonOneView
	{
		
		private int _VirtualQuestionLessonOneID;
		
		private int _VirtualQuestionID;
		
		private int _VirtualTestID;
		
		private int _LessonOneId;
		
		private string _Name;
		
		public VirtualQuestionLessonOneView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionLessonOneID", DbType="Int NOT NULL")]
		public int VirtualQuestionLessonOneID
		{
			get
			{
				return this._VirtualQuestionLessonOneID;
			}
			set
			{
				if ((this._VirtualQuestionLessonOneID != value))
				{
					this._VirtualQuestionLessonOneID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonOneId", DbType="Int NOT NULL")]
		public int LessonOneId
		{
			get
			{
				return this._LessonOneId;
			}
			set
			{
				if ((this._LessonOneId != value))
				{
					this._LessonOneId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionLessonTwoView")]
	public partial class VirtualQuestionLessonTwoView
	{
		
		private int _VirtualQuestionLessonTwoID;
		
		private int _VirtualQuestionID;
		
		private int _VirtualTestID;
		
		private int _LessonTwoId;
		
		private string _Name;
		
		public VirtualQuestionLessonTwoView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionLessonTwoID", DbType="Int NOT NULL")]
		public int VirtualQuestionLessonTwoID
		{
			get
			{
				return this._VirtualQuestionLessonTwoID;
			}
			set
			{
				if ((this._VirtualQuestionLessonTwoID != value))
				{
					this._VirtualQuestionLessonTwoID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonTwoId", DbType="Int NOT NULL")]
		public int LessonTwoId
		{
			get
			{
				return this._LessonTwoId;
			}
			set
			{
				if ((this._LessonTwoId != value))
				{
					this._LessonTwoId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionTopicView")]
	public partial class VirtualQuestionTopicView
	{
		
		private int _VirtualQuestionTopicID;
		
		private int _VirtualQuestionID;
		
		private int _VirtualTestID;
		
		private int _TopicId;
		
		private string _Name;
		
		public VirtualQuestionTopicView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionTopicID", DbType="Int NOT NULL")]
		public int VirtualQuestionTopicID
		{
			get
			{
				return this._VirtualQuestionTopicID;
			}
			set
			{
				if ((this._VirtualQuestionTopicID != value))
				{
					this._VirtualQuestionTopicID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicId", DbType="Int NOT NULL")]
		public int TopicId
		{
			get
			{
				return this._TopicId;
			}
			set
			{
				if ((this._TopicId != value))
				{
					this._TopicId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankDistrict")]
	internal partial class BankDistrictEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankDistrictID;
		
		private int _BankID;
		
		private int _DistrictID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _EditedByUserID;
		
		private System.Nullable<int> _BankDistrictAccessID;
		
		private System.Nullable<bool> _Hide;
		
		private EntityRef<BankEntity> _BankEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankDistrictIDChanging(int value);
    partial void OnBankDistrictIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnEditedByUserIDChanging(int value);
    partial void OnEditedByUserIDChanged();
    partial void OnBankDistrictAccessIDChanging(System.Nullable<int> value);
    partial void OnBankDistrictAccessIDChanged();
    partial void OnHideChanging(System.Nullable<bool> value);
    partial void OnHideChanged();
    #endregion
		
		public BankDistrictEntity()
		{
			this._BankEntity = default(EntityRef<BankEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankDistrictID
		{
			get
			{
				return this._BankDistrictID;
			}
			set
			{
				if ((this._BankDistrictID != value))
				{
					this.OnBankDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._BankDistrictID = value;
					this.SendPropertyChanged("BankDistrictID");
					this.OnBankDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._BankEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this.OnEditedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditedByUserID = value;
					this.SendPropertyChanged("EditedByUserID");
					this.OnEditedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDistrictAccessID", DbType="Int")]
		public System.Nullable<int> BankDistrictAccessID
		{
			get
			{
				return this._BankDistrictAccessID;
			}
			set
			{
				if ((this._BankDistrictAccessID != value))
				{
					this.OnBankDistrictAccessIDChanging(value);
					this.SendPropertyChanging();
					this._BankDistrictAccessID = value;
					this.SendPropertyChanged("BankDistrictAccessID");
					this.OnBankDistrictAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit")]
		public System.Nullable<bool> Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this.OnHideChanging(value);
					this.SendPropertyChanging();
					this._Hide = value;
					this.SendPropertyChanged("Hide");
					this.OnHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_BankDistrictEntity", Storage="_BankEntity", ThisKey="BankID", OtherKey="BankID", IsForeignKey=true)]
		public BankEntity BankEntity
		{
			get
			{
				return this._BankEntity.Entity;
			}
			set
			{
				BankEntity previousValue = this._BankEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankEntity.Entity = null;
						previousValue.BankDistrictEntities.Remove(this);
					}
					this._BankEntity.Entity = value;
					if ((value != null))
					{
						value.BankDistrictEntities.Add(this);
						this._BankID = value.BankID;
					}
					else
					{
						this._BankID = default(int);
					}
					this.SendPropertyChanged("BankEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankDistrictView")]
	internal partial class BankDistrictView
	{
		
		private int _BankDistrictID;
		
		private int _BankID;
		
		private int _DistrictID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _EditedByUserID;
		
		private System.Nullable<int> _BankDistrictAccessID;
		
		private string _BankName;
		
		private int _SubjectID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private string _Code;
		
		private string _Name;
		
		private string _LICode;
		
		private int _StateID;
		
		private System.Nullable<bool> _Hide;
		
		public BankDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDistrictID", DbType="Int NOT NULL")]
		public int BankDistrictID
		{
			get
			{
				return this._BankDistrictID;
			}
			set
			{
				if ((this._BankDistrictID != value))
				{
					this._BankDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this._EditedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDistrictAccessID", DbType="Int")]
		public System.Nullable<int> BankDistrictAccessID
		{
			get
			{
				return this._BankDistrictAccessID;
			}
			set
			{
				if ((this._BankDistrictAccessID != value))
				{
					this._BankDistrictAccessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICode", DbType="VarChar(20)")]
		public string LICode
		{
			get
			{
				return this._LICode;
			}
			set
			{
				if ((this._LICode != value))
				{
					this._LICode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit")]
		public System.Nullable<bool> Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this._Hide = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	internal partial class BankEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankID;
		
		private string _Name;
		
		private int _SubjectID;
		
		private System.Nullable<int> _BankAccessID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<bool> _Archived;
		
		private EntitySet<BankSchoolEntity> _BankSchoolEntities;
		
		private EntitySet<BankDistrictEntity> _BankDistrictEntities;
		
		private EntitySet<UserBankAccessEntity> _UserBankAccessEntities;
		
		private EntitySet<TestEntity> _TestEntities;
		
		private EntityRef<SubjectEntity> _SubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnBankAccessIDChanging(System.Nullable<int> value);
    partial void OnBankAccessIDChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnArchivedChanging(System.Nullable<bool> value);
    partial void OnArchivedChanged();
    #endregion
		
		public BankEntity()
		{
			this._BankSchoolEntities = new EntitySet<BankSchoolEntity>(new Action<BankSchoolEntity>(this.attach_BankSchoolEntities), new Action<BankSchoolEntity>(this.detach_BankSchoolEntities));
			this._BankDistrictEntities = new EntitySet<BankDistrictEntity>(new Action<BankDistrictEntity>(this.attach_BankDistrictEntities), new Action<BankDistrictEntity>(this.detach_BankDistrictEntities));
			this._UserBankAccessEntities = new EntitySet<UserBankAccessEntity>(new Action<UserBankAccessEntity>(this.attach_UserBankAccessEntities), new Action<UserBankAccessEntity>(this.detach_UserBankAccessEntities));
			this._TestEntities = new EntitySet<TestEntity>(new Action<TestEntity>(this.attach_TestEntities), new Action<TestEntity>(this.detach_TestEntities));
			this._SubjectEntity = default(EntityRef<SubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._SubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccessID", DbType="Int")]
		public System.Nullable<int> BankAccessID
		{
			get
			{
				return this._BankAccessID;
			}
			set
			{
				if ((this._BankAccessID != value))
				{
					this.OnBankAccessIDChanging(value);
					this.SendPropertyChanging();
					this._BankAccessID = value;
					this.SendPropertyChanged("BankAccessID");
					this.OnBankAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_BankSchoolEntity", Storage="_BankSchoolEntities", ThisKey="BankID", OtherKey="BankID")]
		public EntitySet<BankSchoolEntity> BankSchoolEntities
		{
			get
			{
				return this._BankSchoolEntities;
			}
			set
			{
				this._BankSchoolEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_BankDistrictEntity", Storage="_BankDistrictEntities", ThisKey="BankID", OtherKey="BankID")]
		public EntitySet<BankDistrictEntity> BankDistrictEntities
		{
			get
			{
				return this._BankDistrictEntities;
			}
			set
			{
				this._BankDistrictEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_UserBankAccessEntity", Storage="_UserBankAccessEntities", ThisKey="BankID", OtherKey="BankID")]
		public EntitySet<UserBankAccessEntity> UserBankAccessEntities
		{
			get
			{
				return this._UserBankAccessEntities;
			}
			set
			{
				this._UserBankAccessEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_TestEntity", Storage="_TestEntities", ThisKey="BankID", OtherKey="BankID")]
		public EntitySet<TestEntity> TestEntities
		{
			get
			{
				return this._TestEntities;
			}
			set
			{
				this._TestEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectEntity_BankEntity", Storage="_SubjectEntity", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public SubjectEntity SubjectEntity
		{
			get
			{
				return this._SubjectEntity.Entity;
			}
			set
			{
				SubjectEntity previousValue = this._SubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectEntity.Entity = null;
						previousValue.BankEntities.Remove(this);
					}
					this._SubjectEntity.Entity = value;
					if ((value != null))
					{
						value.BankEntities.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("SubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankSchoolEntities(BankSchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = this;
		}
		
		private void detach_BankSchoolEntities(BankSchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = null;
		}
		
		private void attach_BankDistrictEntities(BankDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = this;
		}
		
		private void detach_BankDistrictEntities(BankDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = null;
		}
		
		private void attach_UserBankAccessEntities(UserBankAccessEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = this;
		}
		
		private void detach_UserBankAccessEntities(UserBankAccessEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = null;
		}
		
		private void attach_TestEntities(TestEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = this;
		}
		
		private void detach_TestEntities(TestEntity entity)
		{
			this.SendPropertyChanging();
			entity.BankEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListBankView")]
	internal partial class ListBankView
	{
		
		private int _BankID;
		
		private string _Name;
		
		private System.Nullable<int> _BankAccessID;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<int> _BankDistrictID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _CreatebankDistrictId;
		
		private int _SubjectID;
		
		private string _SubjectName;
		
		private int _GradeID;
		
		private string _GradeName;
		
		private System.Nullable<int> _BankDistrictAccessID;
		
		private System.Nullable<bool> _Hide;
		
		private System.Nullable<bool> _Archived;
		
		public ListBankView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccessID", DbType="Int")]
		public System.Nullable<int> BankAccessID
		{
			get
			{
				return this._BankAccessID;
			}
			set
			{
				if ((this._BankAccessID != value))
				{
					this._BankAccessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDistrictID", DbType="Int")]
		public System.Nullable<int> BankDistrictID
		{
			get
			{
				return this._BankDistrictID;
			}
			set
			{
				if ((this._BankDistrictID != value))
				{
					this._BankDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatebankDistrictId", DbType="Int")]
		public System.Nullable<int> CreatebankDistrictId
		{
			get
			{
				return this._CreatebankDistrictId;
			}
			set
			{
				if ((this._CreatebankDistrictId != value))
				{
					this._CreatebankDistrictId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDistrictAccessID", DbType="Int")]
		public System.Nullable<int> BankDistrictAccessID
		{
			get
			{
				return this._BankDistrictAccessID;
			}
			set
			{
				if ((this._BankDistrictAccessID != value))
				{
					this._BankDistrictAccessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hide", DbType="Bit")]
		public System.Nullable<bool> Hide
		{
			get
			{
				return this._Hide;
			}
			set
			{
				if ((this._Hide != value))
				{
					this._Hide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this._Archived = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionBranching")]
	internal partial class VirtualQuestionBranchingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionBranchingID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerChoice;
		
		private int _TargetVirtualQuestionID;
		
		private int _VirtualTestID;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionBranchingIDChanging(int value);
    partial void OnVirtualQuestionBranchingIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnAnswerChoiceChanging(string value);
    partial void OnAnswerChoiceChanged();
    partial void OnTargetVirtualQuestionIDChanging(int value);
    partial void OnTargetVirtualQuestionIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public VirtualQuestionBranchingEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionBranchingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionBranchingID
		{
			get
			{
				return this._VirtualQuestionBranchingID;
			}
			set
			{
				if ((this._VirtualQuestionBranchingID != value))
				{
					this.OnVirtualQuestionBranchingIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionBranchingID = value;
					this.SendPropertyChanged("VirtualQuestionBranchingID");
					this.OnVirtualQuestionBranchingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerChoice", DbType="VarChar(200)")]
		public string AnswerChoice
		{
			get
			{
				return this._AnswerChoice;
			}
			set
			{
				if ((this._AnswerChoice != value))
				{
					this.OnAnswerChoiceChanging(value);
					this.SendPropertyChanging();
					this._AnswerChoice = value;
					this.SendPropertyChanged("AnswerChoice");
					this.OnAnswerChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetVirtualQuestionID", DbType="Int NOT NULL")]
		public int TargetVirtualQuestionID
		{
			get
			{
				return this._TargetVirtualQuestionID;
			}
			set
			{
				if ((this._TargetVirtualQuestionID != value))
				{
					this.OnTargetVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._TargetVirtualQuestionID = value;
					this.SendPropertyChanged("TargetVirtualQuestionID");
					this.OnTargetVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResult")]
	internal partial class TestResultEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestResultID;
		
		private int _VirtualTestID;
		
		private int _StudentID;
		
		private System.Nullable<int> _TeacherID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.DateTime _ResultDate;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.Nullable<int> _TermID;
		
		private System.Nullable<int> _ClassID;
		
		private int _GradedByID;
		
		private int _ScoreType;
		
		private System.Nullable<decimal> _ScoreValue;
		
		private string _TRData;
		
		private System.Nullable<int> _SubmitType;
		
		private System.Nullable<int> _DistrictTermID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _OriginalUserID;
		
		private string _UIN;
		
		private System.Nullable<int> _LegacyBatchID;
		
		private System.Nullable<int> _BubbleSheetID;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private EntitySet<AnswerEntity> _AnswerEntities;
		
		private EntityRef<TestEntity> _TestEntity;
		
		private EntityRef<QTIOnlineTestSessionTREntity> _QTIOnlineTestSessionTREntity;
		
		private EntityRef<StudentTREntity> _StudentTREntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestResultIDChanging(int value);
    partial void OnTestResultIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnResultDateChanging(System.DateTime value);
    partial void OnResultDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnTermIDChanging(System.Nullable<int> value);
    partial void OnTermIDChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnGradedByIDChanging(int value);
    partial void OnGradedByIDChanged();
    partial void OnScoreTypeChanging(int value);
    partial void OnScoreTypeChanged();
    partial void OnScoreValueChanging(System.Nullable<decimal> value);
    partial void OnScoreValueChanged();
    partial void OnTRDataChanging(string value);
    partial void OnTRDataChanged();
    partial void OnSubmitTypeChanging(System.Nullable<int> value);
    partial void OnSubmitTypeChanged();
    partial void OnDistrictTermIDChanging(System.Nullable<int> value);
    partial void OnDistrictTermIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnOriginalUserIDChanging(System.Nullable<int> value);
    partial void OnOriginalUserIDChanged();
    partial void OnUINChanging(string value);
    partial void OnUINChanged();
    partial void OnLegacyBatchIDChanging(System.Nullable<int> value);
    partial void OnLegacyBatchIDChanged();
    partial void OnBubbleSheetIDChanging(System.Nullable<int> value);
    partial void OnBubbleSheetIDChanged();
    partial void OnQTIOnlineTestSessionIDChanging(System.Nullable<int> value);
    partial void OnQTIOnlineTestSessionIDChanged();
    #endregion
		
		public TestResultEntity()
		{
			this._AnswerEntities = new EntitySet<AnswerEntity>(new Action<AnswerEntity>(this.attach_AnswerEntities), new Action<AnswerEntity>(this.detach_AnswerEntities));
			this._TestEntity = default(EntityRef<TestEntity>);
			this._QTIOnlineTestSessionTREntity = default(EntityRef<QTIOnlineTestSessionTREntity>);
			this._StudentTREntity = default(EntityRef<StudentTREntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this.OnTestResultIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultID = value;
					this.SendPropertyChanged("TestResultID");
					this.OnTestResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					if (this._TestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._StudentTREntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this.OnResultDateChanging(value);
					this.SendPropertyChanging();
					this._ResultDate = value;
					this.SendPropertyChanged("ResultDate");
					this.OnResultDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int")]
		public System.Nullable<int> TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedByID", DbType="Int NOT NULL")]
		public int GradedByID
		{
			get
			{
				return this._GradedByID;
			}
			set
			{
				if ((this._GradedByID != value))
				{
					this.OnGradedByIDChanging(value);
					this.SendPropertyChanging();
					this._GradedByID = value;
					this.SendPropertyChanged("GradedByID");
					this.OnGradedByIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreType", DbType="Int NOT NULL")]
		public int ScoreType
		{
			get
			{
				return this._ScoreType;
			}
			set
			{
				if ((this._ScoreType != value))
				{
					this.OnScoreTypeChanging(value);
					this.SendPropertyChanging();
					this._ScoreType = value;
					this.SendPropertyChanged("ScoreType");
					this.OnScoreTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ScoreValue
		{
			get
			{
				return this._ScoreValue;
			}
			set
			{
				if ((this._ScoreValue != value))
				{
					this.OnScoreValueChanging(value);
					this.SendPropertyChanging();
					this._ScoreValue = value;
					this.SendPropertyChanged("ScoreValue");
					this.OnScoreValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRData", DbType="VarChar(4000)")]
		public string TRData
		{
			get
			{
				return this._TRData;
			}
			set
			{
				if ((this._TRData != value))
				{
					this.OnTRDataChanging(value);
					this.SendPropertyChanging();
					this._TRData = value;
					this.SendPropertyChanged("TRData");
					this.OnTRDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitType", DbType="Int")]
		public System.Nullable<int> SubmitType
		{
			get
			{
				return this._SubmitType;
			}
			set
			{
				if ((this._SubmitType != value))
				{
					this.OnSubmitTypeChanging(value);
					this.SendPropertyChanging();
					this._SubmitType = value;
					this.SendPropertyChanged("SubmitType");
					this.OnSubmitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this.OnDistrictTermIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictTermID = value;
					this.SendPropertyChanged("DistrictTermID");
					this.OnDistrictTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalUserID", DbType="Int")]
		public System.Nullable<int> OriginalUserID
		{
			get
			{
				return this._OriginalUserID;
			}
			set
			{
				if ((this._OriginalUserID != value))
				{
					this.OnOriginalUserIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalUserID = value;
					this.SendPropertyChanged("OriginalUserID");
					this.OnOriginalUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UIN", DbType="VarChar(50)")]
		public string UIN
		{
			get
			{
				return this._UIN;
			}
			set
			{
				if ((this._UIN != value))
				{
					this.OnUINChanging(value);
					this.SendPropertyChanging();
					this._UIN = value;
					this.SendPropertyChanged("UIN");
					this.OnUINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyBatchID", DbType="Int")]
		public System.Nullable<int> LegacyBatchID
		{
			get
			{
				return this._LegacyBatchID;
			}
			set
			{
				if ((this._LegacyBatchID != value))
				{
					this.OnLegacyBatchIDChanging(value);
					this.SendPropertyChanging();
					this._LegacyBatchID = value;
					this.SendPropertyChanged("LegacyBatchID");
					this.OnLegacyBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetID", DbType="Int")]
		public System.Nullable<int> BubbleSheetID
		{
			get
			{
				return this._BubbleSheetID;
			}
			set
			{
				if ((this._BubbleSheetID != value))
				{
					this.OnBubbleSheetIDChanging(value);
					this.SendPropertyChanging();
					this._BubbleSheetID = value;
					this.SendPropertyChanged("BubbleSheetID");
					this.OnBubbleSheetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					if (this._QTIOnlineTestSessionTREntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQTIOnlineTestSessionIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionID");
					this.OnQTIOnlineTestSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestResultEntity_AnswerEntity", Storage="_AnswerEntities", ThisKey="TestResultID", OtherKey="TestResultID")]
		public EntitySet<AnswerEntity> AnswerEntities
		{
			get
			{
				return this._AnswerEntities;
			}
			set
			{
				this._AnswerEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_TestResultEntity", Storage="_TestEntity", ThisKey="VirtualTestID", OtherKey="VirtualTestID", IsForeignKey=true)]
		public TestEntity TestEntity
		{
			get
			{
				return this._TestEntity.Entity;
			}
			set
			{
				TestEntity previousValue = this._TestEntity.Entity;
				if (((previousValue != value) 
							|| (this._TestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestEntity.Entity = null;
						previousValue.TestResultEntities.Remove(this);
					}
					this._TestEntity.Entity = value;
					if ((value != null))
					{
						value.TestResultEntities.Add(this);
						this._VirtualTestID = value.VirtualTestID;
					}
					else
					{
						this._VirtualTestID = default(int);
					}
					this.SendPropertyChanged("TestEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIOnlineTestSessionTREntity_TestResultEntity", Storage="_QTIOnlineTestSessionTREntity", ThisKey="QTIOnlineTestSessionID", OtherKey="QTIOnlineTestSessionID", IsForeignKey=true)]
		public QTIOnlineTestSessionTREntity QTIOnlineTestSessionTREntity
		{
			get
			{
				return this._QTIOnlineTestSessionTREntity.Entity;
			}
			set
			{
				QTIOnlineTestSessionTREntity previousValue = this._QTIOnlineTestSessionTREntity.Entity;
				if (((previousValue != value) 
							|| (this._QTIOnlineTestSessionTREntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QTIOnlineTestSessionTREntity.Entity = null;
						previousValue.TestResultEntities.Remove(this);
					}
					this._QTIOnlineTestSessionTREntity.Entity = value;
					if ((value != null))
					{
						value.TestResultEntities.Add(this);
						this._QTIOnlineTestSessionID = value.QTIOnlineTestSessionID;
					}
					else
					{
						this._QTIOnlineTestSessionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QTIOnlineTestSessionTREntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentTREntity_TestResultEntity", Storage="_StudentTREntity", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
		public StudentTREntity StudentTREntity
		{
			get
			{
				return this._StudentTREntity.Entity;
			}
			set
			{
				StudentTREntity previousValue = this._StudentTREntity.Entity;
				if (((previousValue != value) 
							|| (this._StudentTREntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentTREntity.Entity = null;
						previousValue.TestResultEntities.Remove(this);
					}
					this._StudentTREntity.Entity = value;
					if ((value != null))
					{
						value.TestResultEntities.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("StudentTREntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnswerEntities(AnswerEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestResultEntity = this;
		}
		
		private void detach_AnswerEntities(AnswerEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestResultEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSecurityCode")]
	internal partial class UserSecurityCodeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserSecurityCodeID;
		
		private int _UserID;
		
		private System.DateTime _IssueDate;
		
		private bool _Expired;
		
		private string _Code;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserSecurityCodeIDChanging(int value);
    partial void OnUserSecurityCodeIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIssueDateChanging(System.DateTime value);
    partial void OnIssueDateChanged();
    partial void OnExpiredChanging(bool value);
    partial void OnExpiredChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public UserSecurityCodeEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSecurityCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserSecurityCodeID
		{
			get
			{
				return this._UserSecurityCodeID;
			}
			set
			{
				if ((this._UserSecurityCodeID != value))
				{
					this.OnUserSecurityCodeIDChanging(value);
					this.SendPropertyChanging();
					this._UserSecurityCodeID = value;
					this.SendPropertyChanged("UserSecurityCodeID");
					this.OnUserSecurityCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime NOT NULL")]
		public System.DateTime IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expired", DbType="Bit NOT NULL")]
		public bool Expired
		{
			get
			{
				return this._Expired;
			}
			set
			{
				if ((this._Expired != value))
				{
					this.OnExpiredChanging(value);
					this.SendPropertyChanging();
					this._Expired = value;
					this.SendPropertyChanged("Expired");
					this.OnExpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FreshdeskLog")]
	internal partial class FreshdeskLogEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FreshdeskLogID;
		
		private int _UserID;
		
		private string _Email;
		
		private System.DateTime _LastLoginDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFreshdeskLogIDChanging(int value);
    partial void OnFreshdeskLogIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    #endregion
		
		public FreshdeskLogEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreshdeskLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FreshdeskLogID
		{
			get
			{
				return this._FreshdeskLogID;
			}
			set
			{
				if ((this._FreshdeskLogID != value))
				{
					this.OnFreshdeskLogIDChanging(value);
					this.SendPropertyChanging();
					this._FreshdeskLogID = value;
					this.SendPropertyChanged("FreshdeskLogID");
					this.OnFreshdeskLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecializedReportJob")]
	internal partial class SpecializedReportJobEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecializedReportJobID;
		
		private int _UserID;
		
		private System.DateTime _CreatedDate;
		
		private string _DownloadUrl;
		
		private int _Status;
		
		private System.Nullable<int> _TotalItem;
		
		private System.Nullable<int> _GeneratedItem;
		
		private System.Nullable<int> _DistrictID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecializedReportJobIDChanging(int value);
    partial void OnSpecializedReportJobIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnDownloadUrlChanging(string value);
    partial void OnDownloadUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnTotalItemChanging(System.Nullable<int> value);
    partial void OnTotalItemChanged();
    partial void OnGeneratedItemChanging(System.Nullable<int> value);
    partial void OnGeneratedItemChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    #endregion
		
		public SpecializedReportJobEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecializedReportJobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpecializedReportJobID
		{
			get
			{
				return this._SpecializedReportJobID;
			}
			set
			{
				if ((this._SpecializedReportJobID != value))
				{
					this.OnSpecializedReportJobIDChanging(value);
					this.SendPropertyChanging();
					this._SpecializedReportJobID = value;
					this.SendPropertyChanged("SpecializedReportJobID");
					this.OnSpecializedReportJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUrl", DbType="VarChar(500)")]
		public string DownloadUrl
		{
			get
			{
				return this._DownloadUrl;
			}
			set
			{
				if ((this._DownloadUrl != value))
				{
					this.OnDownloadUrlChanging(value);
					this.SendPropertyChanging();
					this._DownloadUrl = value;
					this.SendPropertyChanged("DownloadUrl");
					this.OnDownloadUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalItem", DbType="Int")]
		public System.Nullable<int> TotalItem
		{
			get
			{
				return this._TotalItem;
			}
			set
			{
				if ((this._TotalItem != value))
				{
					this.OnTotalItemChanging(value);
					this.SendPropertyChanging();
					this._TotalItem = value;
					this.SendPropertyChanged("TotalItem");
					this.OnTotalItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedItem", DbType="Int")]
		public System.Nullable<int> GeneratedItem
		{
			get
			{
				return this._GeneratedItem;
			}
			set
			{
				if ((this._GeneratedItem != value))
				{
					this.OnGeneratedItemChanging(value);
					this.SendPropertyChanging();
					this._GeneratedItem = value;
					this.SendPropertyChanged("GeneratedItem");
					this.OnGeneratedItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchPrintingQueue")]
	public partial class BatchPrintingQueueEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchPrintingQueueID;
		
		private int _QTITestClassAssignmentID;
		
		private string _QTIOnlineTestSessionIDs;
		
		private int _VirtualTestID;
		
		private bool _ManuallyGradedOnly;
		
		private string _ManuallyGradedOnlyQuestionIds;
		
		private bool _TeacherFeedback;
		
		private bool _TheCoverPage;
		
		private bool _TheCorrectAnswer;
		
		private bool _Passages;
		
		private bool _GuidanceAndRationale;
		
		private bool _TheQuestionContent;
		
		private int _NumberOfColumn;
		
		private bool _ShowQuestionPrefix;
		
		private bool _ShowBorderAroundQuestions;
		
		private bool _ExcludeTestScore;
		
		private int _StudentType;
		
		private int _QuestionType;
		
		private string _PrintQuestionIDs;
		
		private bool _IncorrectQuestionsOnly;
		
		private int _UserID;
		
		private string _UserName;
		
		private string _StudentName;
		
		private System.Nullable<int> _DistrictID;
		
		private int _ProcessingStatus;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.Guid> _DownloadPdfID;
		
		private bool _IncludeAttachment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchPrintingQueueIDChanging(int value);
    partial void OnBatchPrintingQueueIDChanged();
    partial void OnQTITestClassAssignmentIDChanging(int value);
    partial void OnQTITestClassAssignmentIDChanged();
    partial void OnQTIOnlineTestSessionIDsChanging(string value);
    partial void OnQTIOnlineTestSessionIDsChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnManuallyGradedOnlyChanging(bool value);
    partial void OnManuallyGradedOnlyChanged();
    partial void OnManuallyGradedOnlyQuestionIdsChanging(string value);
    partial void OnManuallyGradedOnlyQuestionIdsChanged();
    partial void OnTeacherFeedbackChanging(bool value);
    partial void OnTeacherFeedbackChanged();
    partial void OnTheCoverPageChanging(bool value);
    partial void OnTheCoverPageChanged();
    partial void OnTheCorrectAnswerChanging(bool value);
    partial void OnTheCorrectAnswerChanged();
    partial void OnPassagesChanging(bool value);
    partial void OnPassagesChanged();
    partial void OnGuidanceAndRationaleChanging(bool value);
    partial void OnGuidanceAndRationaleChanged();
    partial void OnTheQuestionContentChanging(bool value);
    partial void OnTheQuestionContentChanged();
    partial void OnNumberOfColumnChanging(int value);
    partial void OnNumberOfColumnChanged();
    partial void OnShowQuestionPrefixChanging(bool value);
    partial void OnShowQuestionPrefixChanged();
    partial void OnShowBorderAroundQuestionsChanging(bool value);
    partial void OnShowBorderAroundQuestionsChanged();
    partial void OnExcludeTestScoreChanging(bool value);
    partial void OnExcludeTestScoreChanged();
    partial void OnStudentTypeChanging(int value);
    partial void OnStudentTypeChanged();
    partial void OnQuestionTypeChanging(int value);
    partial void OnQuestionTypeChanged();
    partial void OnPrintQuestionIDsChanging(string value);
    partial void OnPrintQuestionIDsChanged();
    partial void OnIncorrectQuestionsOnlyChanging(bool value);
    partial void OnIncorrectQuestionsOnlyChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnProcessingStatusChanging(int value);
    partial void OnProcessingStatusChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDownloadPdfIDChanging(System.Nullable<System.Guid> value);
    partial void OnDownloadPdfIDChanged();
    partial void OnIncludeAttachmentChanging(bool value);
    partial void OnIncludeAttachmentChanged();
    #endregion
		
		public BatchPrintingQueueEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchPrintingQueueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BatchPrintingQueueID
		{
			get
			{
				return this._BatchPrintingQueueID;
			}
			set
			{
				if ((this._BatchPrintingQueueID != value))
				{
					this.OnBatchPrintingQueueIDChanging(value);
					this.SendPropertyChanging();
					this._BatchPrintingQueueID = value;
					this.SendPropertyChanged("BatchPrintingQueueID");
					this.OnBatchPrintingQueueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int NOT NULL")]
		public int QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this.OnQTITestClassAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._QTITestClassAssignmentID = value;
					this.SendPropertyChanged("QTITestClassAssignmentID");
					this.OnQTITestClassAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionIDs", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string QTIOnlineTestSessionIDs
		{
			get
			{
				return this._QTIOnlineTestSessionIDs;
			}
			set
			{
				if ((this._QTIOnlineTestSessionIDs != value))
				{
					this.OnQTIOnlineTestSessionIDsChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionIDs = value;
					this.SendPropertyChanged("QTIOnlineTestSessionIDs");
					this.OnQTIOnlineTestSessionIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManuallyGradedOnly", DbType="Bit NOT NULL")]
		public bool ManuallyGradedOnly
		{
			get
			{
				return this._ManuallyGradedOnly;
			}
			set
			{
				if ((this._ManuallyGradedOnly != value))
				{
					this.OnManuallyGradedOnlyChanging(value);
					this.SendPropertyChanging();
					this._ManuallyGradedOnly = value;
					this.SendPropertyChanged("ManuallyGradedOnly");
					this.OnManuallyGradedOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManuallyGradedOnlyQuestionIds", DbType="VarChar(MAX)")]
		public string ManuallyGradedOnlyQuestionIds
		{
			get
			{
				return this._ManuallyGradedOnlyQuestionIds;
			}
			set
			{
				if ((this._ManuallyGradedOnlyQuestionIds != value))
				{
					this.OnManuallyGradedOnlyQuestionIdsChanging(value);
					this.SendPropertyChanging();
					this._ManuallyGradedOnlyQuestionIds = value;
					this.SendPropertyChanged("ManuallyGradedOnlyQuestionIds");
					this.OnManuallyGradedOnlyQuestionIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherFeedback", DbType="Bit NOT NULL")]
		public bool TeacherFeedback
		{
			get
			{
				return this._TeacherFeedback;
			}
			set
			{
				if ((this._TeacherFeedback != value))
				{
					this.OnTeacherFeedbackChanging(value);
					this.SendPropertyChanging();
					this._TeacherFeedback = value;
					this.SendPropertyChanged("TeacherFeedback");
					this.OnTeacherFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheCoverPage", DbType="Bit NOT NULL")]
		public bool TheCoverPage
		{
			get
			{
				return this._TheCoverPage;
			}
			set
			{
				if ((this._TheCoverPage != value))
				{
					this.OnTheCoverPageChanging(value);
					this.SendPropertyChanging();
					this._TheCoverPage = value;
					this.SendPropertyChanged("TheCoverPage");
					this.OnTheCoverPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheCorrectAnswer", DbType="Bit NOT NULL")]
		public bool TheCorrectAnswer
		{
			get
			{
				return this._TheCorrectAnswer;
			}
			set
			{
				if ((this._TheCorrectAnswer != value))
				{
					this.OnTheCorrectAnswerChanging(value);
					this.SendPropertyChanging();
					this._TheCorrectAnswer = value;
					this.SendPropertyChanged("TheCorrectAnswer");
					this.OnTheCorrectAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passages", DbType="Bit NOT NULL")]
		public bool Passages
		{
			get
			{
				return this._Passages;
			}
			set
			{
				if ((this._Passages != value))
				{
					this.OnPassagesChanging(value);
					this.SendPropertyChanging();
					this._Passages = value;
					this.SendPropertyChanged("Passages");
					this.OnPassagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuidanceAndRationale", DbType="Bit NOT NULL")]
		public bool GuidanceAndRationale
		{
			get
			{
				return this._GuidanceAndRationale;
			}
			set
			{
				if ((this._GuidanceAndRationale != value))
				{
					this.OnGuidanceAndRationaleChanging(value);
					this.SendPropertyChanging();
					this._GuidanceAndRationale = value;
					this.SendPropertyChanged("GuidanceAndRationale");
					this.OnGuidanceAndRationaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheQuestionContent", DbType="Bit NOT NULL")]
		public bool TheQuestionContent
		{
			get
			{
				return this._TheQuestionContent;
			}
			set
			{
				if ((this._TheQuestionContent != value))
				{
					this.OnTheQuestionContentChanging(value);
					this.SendPropertyChanging();
					this._TheQuestionContent = value;
					this.SendPropertyChanged("TheQuestionContent");
					this.OnTheQuestionContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfColumn", DbType="Int NOT NULL")]
		public int NumberOfColumn
		{
			get
			{
				return this._NumberOfColumn;
			}
			set
			{
				if ((this._NumberOfColumn != value))
				{
					this.OnNumberOfColumnChanging(value);
					this.SendPropertyChanging();
					this._NumberOfColumn = value;
					this.SendPropertyChanged("NumberOfColumn");
					this.OnNumberOfColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowQuestionPrefix", DbType="Bit NOT NULL")]
		public bool ShowQuestionPrefix
		{
			get
			{
				return this._ShowQuestionPrefix;
			}
			set
			{
				if ((this._ShowQuestionPrefix != value))
				{
					this.OnShowQuestionPrefixChanging(value);
					this.SendPropertyChanging();
					this._ShowQuestionPrefix = value;
					this.SendPropertyChanged("ShowQuestionPrefix");
					this.OnShowQuestionPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowBorderAroundQuestions", DbType="Bit NOT NULL")]
		public bool ShowBorderAroundQuestions
		{
			get
			{
				return this._ShowBorderAroundQuestions;
			}
			set
			{
				if ((this._ShowBorderAroundQuestions != value))
				{
					this.OnShowBorderAroundQuestionsChanging(value);
					this.SendPropertyChanging();
					this._ShowBorderAroundQuestions = value;
					this.SendPropertyChanged("ShowBorderAroundQuestions");
					this.OnShowBorderAroundQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeTestScore", DbType="Bit NOT NULL")]
		public bool ExcludeTestScore
		{
			get
			{
				return this._ExcludeTestScore;
			}
			set
			{
				if ((this._ExcludeTestScore != value))
				{
					this.OnExcludeTestScoreChanging(value);
					this.SendPropertyChanging();
					this._ExcludeTestScore = value;
					this.SendPropertyChanged("ExcludeTestScore");
					this.OnExcludeTestScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentType", DbType="Int NOT NULL")]
		public int StudentType
		{
			get
			{
				return this._StudentType;
			}
			set
			{
				if ((this._StudentType != value))
				{
					this.OnStudentTypeChanging(value);
					this.SendPropertyChanging();
					this._StudentType = value;
					this.SendPropertyChanged("StudentType");
					this.OnStudentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="Int NOT NULL")]
		public int QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintQuestionIDs", DbType="VarChar(MAX)")]
		public string PrintQuestionIDs
		{
			get
			{
				return this._PrintQuestionIDs;
			}
			set
			{
				if ((this._PrintQuestionIDs != value))
				{
					this.OnPrintQuestionIDsChanging(value);
					this.SendPropertyChanging();
					this._PrintQuestionIDs = value;
					this.SendPropertyChanged("PrintQuestionIDs");
					this.OnPrintQuestionIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncorrectQuestionsOnly", DbType="Bit NOT NULL")]
		public bool IncorrectQuestionsOnly
		{
			get
			{
				return this._IncorrectQuestionsOnly;
			}
			set
			{
				if ((this._IncorrectQuestionsOnly != value))
				{
					this.OnIncorrectQuestionsOnlyChanging(value);
					this.SendPropertyChanging();
					this._IncorrectQuestionsOnly = value;
					this.SendPropertyChanged("IncorrectQuestionsOnly");
					this.OnIncorrectQuestionsOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(100)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingStatus", DbType="Int NOT NULL")]
		public int ProcessingStatus
		{
			get
			{
				return this._ProcessingStatus;
			}
			set
			{
				if ((this._ProcessingStatus != value))
				{
					this.OnProcessingStatusChanging(value);
					this.SendPropertyChanging();
					this._ProcessingStatus = value;
					this.SendPropertyChanged("ProcessingStatus");
					this.OnProcessingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadPdfID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DownloadPdfID
		{
			get
			{
				return this._DownloadPdfID;
			}
			set
			{
				if ((this._DownloadPdfID != value))
				{
					this.OnDownloadPdfIDChanging(value);
					this.SendPropertyChanging();
					this._DownloadPdfID = value;
					this.SendPropertyChanged("DownloadPdfID");
					this.OnDownloadPdfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeAttachment", DbType="Bit NOT NULL")]
		public bool IncludeAttachment
		{
			get
			{
				return this._IncludeAttachment;
			}
			set
			{
				if ((this._IncludeAttachment != value))
				{
					this.OnIncludeAttachmentChanging(value);
					this.SendPropertyChanging();
					this._IncludeAttachment = value;
					this.SendPropertyChanged("IncludeAttachment");
					this.OnIncludeAttachmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIItemPreviewRequest")]
	internal partial class QTIItemPreviewRequestEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QTIItemPreviewRequestID;
		
		private int _VirtualTestID;
		
		private string _XmlContent;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntitySet<MultiPartExpressionPreviewEntity> _MultiPartExpressionPreviewEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIItemPreviewRequestIDChanging(string value);
    partial void OnQTIItemPreviewRequestIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnXmlContentChanging(string value);
    partial void OnXmlContentChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public QTIItemPreviewRequestEntity()
		{
			this._MultiPartExpressionPreviewEntities = new EntitySet<MultiPartExpressionPreviewEntity>(new Action<MultiPartExpressionPreviewEntity>(this.attach_MultiPartExpressionPreviewEntities), new Action<MultiPartExpressionPreviewEntity>(this.detach_MultiPartExpressionPreviewEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemPreviewRequestID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QTIItemPreviewRequestID
		{
			get
			{
				return this._QTIItemPreviewRequestID;
			}
			set
			{
				if ((this._QTIItemPreviewRequestID != value))
				{
					this.OnQTIItemPreviewRequestIDChanging(value);
					this.SendPropertyChanging();
					this._QTIItemPreviewRequestID = value;
					this.SendPropertyChanged("QTIItemPreviewRequestID");
					this.OnQTIItemPreviewRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this.OnXmlContentChanging(value);
					this.SendPropertyChanging();
					this._XmlContent = value;
					this.SendPropertyChanged("XmlContent");
					this.OnXmlContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIItemPreviewRequestEntity_MultiPartExpressionPreviewEntity", Storage="_MultiPartExpressionPreviewEntities", ThisKey="QTIItemPreviewRequestID", OtherKey="QTIItemPreviewRequestID")]
		public EntitySet<MultiPartExpressionPreviewEntity> MultiPartExpressionPreviewEntities
		{
			get
			{
				return this._MultiPartExpressionPreviewEntities;
			}
			set
			{
				this._MultiPartExpressionPreviewEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MultiPartExpressionPreviewEntities(MultiPartExpressionPreviewEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIItemPreviewRequestEntity = this;
		}
		
		private void detach_MultiPartExpressionPreviewEntities(MultiPartExpressionPreviewEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIItemPreviewRequestEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionAnswerView")]
	internal partial class VirtualQuestionAnswerView
	{
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private int _QTISchemaID;
		
		private string _AnswerIdentifiers;
		
		private System.Nullable<int> _StudentID;
		
		private int _BubblesheetID;
		
		private string _Ticket;
		
		private string _XmlContent;
		
		private System.Nullable<int> _ClassID;
		
		private string _CorrectAnswer;
		
		public VirtualQuestionAnswerView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubblesheetID", DbType="Int NOT NULL")]
		public int BubblesheetID
		{
			get
			{
				return this._BubblesheetID;
			}
			set
			{
				if ((this._BubblesheetID != value))
				{
					this._BubblesheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="VarChar(100)")]
		public string Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this._Ticket = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnansweredQuestionsView")]
	internal partial class UnansweredQuestionsView
	{
		
		private int _VirtualQuestionID;
		
		private int _PointsPossible;
		
		private int _StudentID;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _BubbleSheetID;
		
		private string _Ticket;
		
		private int _QuestionOrder;
		
		private int _QTISchemaID;
		
		private string _AnswerIdentifiers;
		
		private string _BubbleSheetErrorType;
		
		private string _CorrectAnswer;
		
		private string _XmlContent;
		
		public UnansweredQuestionsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetID", DbType="Int")]
		public System.Nullable<int> BubbleSheetID
		{
			get
			{
				return this._BubbleSheetID;
			}
			set
			{
				if ((this._BubbleSheetID != value))
				{
					this._BubbleSheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="VarChar(100)")]
		public string Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this._Ticket = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetErrorType", DbType="VarChar(10)")]
		public string BubbleSheetErrorType
		{
			get
			{
				return this._BubbleSheetErrorType;
			}
			set
			{
				if ((this._BubbleSheetErrorType != value))
				{
					this._BubbleSheetErrorType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoGradingQueue")]
	public partial class AutoGradingQueueEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutoGradingQueueID;
		
		private int _QTIOnlineTestSessionID;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ProcessingDate;
		
		private System.Nullable<int> _ProcessingTime;
		
		private int _GradedAnswerCount;
		
		private int _Status;
		
		private bool _ForceGrading;
		
		private System.Nullable<int> _TestResultID;
		
		private int _Type;
		
		private System.Nullable<int> _ProcessingTimes;
		
		private System.Nullable<System.DateTime> _EndProcessingDate;
		
		private System.Nullable<int> _RequestUserId;
		
		private bool _IsAwaitingRetry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutoGradingQueueIDChanging(int value);
    partial void OnAutoGradingQueueIDChanged();
    partial void OnQTIOnlineTestSessionIDChanging(int value);
    partial void OnQTIOnlineTestSessionIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnProcessingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessingDateChanged();
    partial void OnProcessingTimeChanging(System.Nullable<int> value);
    partial void OnProcessingTimeChanged();
    partial void OnGradedAnswerCountChanging(int value);
    partial void OnGradedAnswerCountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnForceGradingChanging(bool value);
    partial void OnForceGradingChanged();
    partial void OnTestResultIDChanging(System.Nullable<int> value);
    partial void OnTestResultIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnProcessingTimesChanging(System.Nullable<int> value);
    partial void OnProcessingTimesChanged();
    partial void OnEndProcessingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndProcessingDateChanged();
    partial void OnRequestUserIdChanging(System.Nullable<int> value);
    partial void OnRequestUserIdChanged();
    partial void OnIsAwaitingRetryChanging(bool value);
    partial void OnIsAwaitingRetryChanged();
    #endregion
		
		public AutoGradingQueueEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoGradingQueueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutoGradingQueueID
		{
			get
			{
				return this._AutoGradingQueueID;
			}
			set
			{
				if ((this._AutoGradingQueueID != value))
				{
					this.OnAutoGradingQueueIDChanging(value);
					this.SendPropertyChanging();
					this._AutoGradingQueueID = value;
					this.SendPropertyChanged("AutoGradingQueueID");
					this.OnAutoGradingQueueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this.OnQTIOnlineTestSessionIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionID");
					this.OnQTIOnlineTestSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessingDate
		{
			get
			{
				return this._ProcessingDate;
			}
			set
			{
				if ((this._ProcessingDate != value))
				{
					this.OnProcessingDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessingDate = value;
					this.SendPropertyChanged("ProcessingDate");
					this.OnProcessingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingTime", DbType="Int")]
		public System.Nullable<int> ProcessingTime
		{
			get
			{
				return this._ProcessingTime;
			}
			set
			{
				if ((this._ProcessingTime != value))
				{
					this.OnProcessingTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessingTime = value;
					this.SendPropertyChanged("ProcessingTime");
					this.OnProcessingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedAnswerCount", DbType="Int NOT NULL")]
		public int GradedAnswerCount
		{
			get
			{
				return this._GradedAnswerCount;
			}
			set
			{
				if ((this._GradedAnswerCount != value))
				{
					this.OnGradedAnswerCountChanging(value);
					this.SendPropertyChanging();
					this._GradedAnswerCount = value;
					this.SendPropertyChanged("GradedAnswerCount");
					this.OnGradedAnswerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceGrading", DbType="Bit NOT NULL")]
		public bool ForceGrading
		{
			get
			{
				return this._ForceGrading;
			}
			set
			{
				if ((this._ForceGrading != value))
				{
					this.OnForceGradingChanging(value);
					this.SendPropertyChanging();
					this._ForceGrading = value;
					this.SendPropertyChanged("ForceGrading");
					this.OnForceGradingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int")]
		public System.Nullable<int> TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this.OnTestResultIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultID = value;
					this.SendPropertyChanged("TestResultID");
					this.OnTestResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingTimes", DbType="Int")]
		public System.Nullable<int> ProcessingTimes
		{
			get
			{
				return this._ProcessingTimes;
			}
			set
			{
				if ((this._ProcessingTimes != value))
				{
					this.OnProcessingTimesChanging(value);
					this.SendPropertyChanging();
					this._ProcessingTimes = value;
					this.SendPropertyChanged("ProcessingTimes");
					this.OnProcessingTimesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndProcessingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndProcessingDate
		{
			get
			{
				return this._EndProcessingDate;
			}
			set
			{
				if ((this._EndProcessingDate != value))
				{
					this.OnEndProcessingDateChanging(value);
					this.SendPropertyChanging();
					this._EndProcessingDate = value;
					this.SendPropertyChanged("EndProcessingDate");
					this.OnEndProcessingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUserId", DbType="Int")]
		public System.Nullable<int> RequestUserId
		{
			get
			{
				return this._RequestUserId;
			}
			set
			{
				if ((this._RequestUserId != value))
				{
					this.OnRequestUserIdChanging(value);
					this.SendPropertyChanging();
					this._RequestUserId = value;
					this.SendPropertyChanged("RequestUserId");
					this.OnRequestUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAwaitingRetry", DbType="Bit NOT NULL")]
		public bool IsAwaitingRetry
		{
			get
			{
				return this._IsAwaitingRetry;
			}
			set
			{
				if ((this._IsAwaitingRetry != value))
				{
					this.OnIsAwaitingRetryChanging(value);
					this.SendPropertyChanging();
					this._IsAwaitingRetry = value;
					this.SendPropertyChanged("IsAwaitingRetry");
					this.OnIsAwaitingRetryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualSection")]
	internal partial class VirtualSectionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualSectionID;
		
		private int _VirtualTestID;
		
		private int _Order;
		
		private string _Title;
		
		private string _Instruction;
		
		private string _MediaReference;
		
		private string _AudioRef;
		
		private string _VideoRef;
		
		private string _MediaSource;
		
		private System.Nullable<int> _ConversionSetID;
		
		private System.Nullable<int> _SubjectID;
		
		private int _Mode;
		
		private EntitySet<QuestionGroupEntity> _QuestionGroupEntities;
		
		private EntityRef<ConversionSetEntity> _ConversionSetEntity;
		
		private EntityRef<SubjectEntity> _SubjectEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualSectionIDChanging(int value);
    partial void OnVirtualSectionIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnInstructionChanging(string value);
    partial void OnInstructionChanged();
    partial void OnMediaReferenceChanging(string value);
    partial void OnMediaReferenceChanged();
    partial void OnAudioRefChanging(string value);
    partial void OnAudioRefChanged();
    partial void OnVideoRefChanging(string value);
    partial void OnVideoRefChanged();
    partial void OnMediaSourceChanging(string value);
    partial void OnMediaSourceChanged();
    partial void OnConversionSetIDChanging(System.Nullable<int> value);
    partial void OnConversionSetIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnModeChanging(int value);
    partial void OnModeChanged();
    #endregion
		
		public VirtualSectionEntity()
		{
			this._QuestionGroupEntities = new EntitySet<QuestionGroupEntity>(new Action<QuestionGroupEntity>(this.attach_QuestionGroupEntities), new Action<QuestionGroupEntity>(this.detach_QuestionGroupEntities));
			this._ConversionSetEntity = default(EntityRef<ConversionSetEntity>);
			this._SubjectEntity = default(EntityRef<SubjectEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this.OnVirtualSectionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualSectionID = value;
					this.SendPropertyChanged("VirtualSectionID");
					this.OnVirtualSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="VarChar(MAX)")]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaReference", DbType="VarChar(500)")]
		public string MediaReference
		{
			get
			{
				return this._MediaReference;
			}
			set
			{
				if ((this._MediaReference != value))
				{
					this.OnMediaReferenceChanging(value);
					this.SendPropertyChanging();
					this._MediaReference = value;
					this.SendPropertyChanged("MediaReference");
					this.OnMediaReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioRef", DbType="VarChar(500)")]
		public string AudioRef
		{
			get
			{
				return this._AudioRef;
			}
			set
			{
				if ((this._AudioRef != value))
				{
					this.OnAudioRefChanging(value);
					this.SendPropertyChanging();
					this._AudioRef = value;
					this.SendPropertyChanged("AudioRef");
					this.OnAudioRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoRef", DbType="VarChar(500)")]
		public string VideoRef
		{
			get
			{
				return this._VideoRef;
			}
			set
			{
				if ((this._VideoRef != value))
				{
					this.OnVideoRefChanging(value);
					this.SendPropertyChanging();
					this._VideoRef = value;
					this.SendPropertyChanged("VideoRef");
					this.OnVideoRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaSource", DbType="VarChar(500)")]
		public string MediaSource
		{
			get
			{
				return this._MediaSource;
			}
			set
			{
				if ((this._MediaSource != value))
				{
					this.OnMediaSourceChanging(value);
					this.SendPropertyChanging();
					this._MediaSource = value;
					this.SendPropertyChanged("MediaSource");
					this.OnMediaSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionSetID", DbType="Int")]
		public System.Nullable<int> ConversionSetID
		{
			get
			{
				return this._ConversionSetID;
			}
			set
			{
				if ((this._ConversionSetID != value))
				{
					if (this._ConversionSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConversionSetIDChanging(value);
					this.SendPropertyChanging();
					this._ConversionSetID = value;
					this.SendPropertyChanged("ConversionSetID");
					this.OnConversionSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._SubjectEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int NOT NULL")]
		public int Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VirtualSectionEntity_QuestionGroupEntity", Storage="_QuestionGroupEntities", ThisKey="VirtualSectionID", OtherKey="VirtualSectionID")]
		public EntitySet<QuestionGroupEntity> QuestionGroupEntities
		{
			get
			{
				return this._QuestionGroupEntities;
			}
			set
			{
				this._QuestionGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConversionSetEntity_VirtualSectionEntity", Storage="_ConversionSetEntity", ThisKey="ConversionSetID", OtherKey="ConverstionSetID", IsForeignKey=true)]
		public ConversionSetEntity ConversionSetEntity
		{
			get
			{
				return this._ConversionSetEntity.Entity;
			}
			set
			{
				ConversionSetEntity previousValue = this._ConversionSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ConversionSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConversionSetEntity.Entity = null;
						previousValue.VirtualSectionEntities.Remove(this);
					}
					this._ConversionSetEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualSectionEntities.Add(this);
						this._ConversionSetID = value.ConverstionSetID;
					}
					else
					{
						this._ConversionSetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConversionSetEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectEntity_VirtualSectionEntity", Storage="_SubjectEntity", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public SubjectEntity SubjectEntity
		{
			get
			{
				return this._SubjectEntity.Entity;
			}
			set
			{
				SubjectEntity previousValue = this._SubjectEntity.Entity;
				if (((previousValue != value) 
							|| (this._SubjectEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubjectEntity.Entity = null;
						previousValue.VirtualSectionEntities.Remove(this);
					}
					this._SubjectEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualSectionEntities.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SubjectEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionGroupEntities(QuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.VirtualSectionEntity = this;
		}
		
		private void detach_QuestionGroupEntities(QuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.VirtualSectionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AblesReportJob")]
	public partial class AblesReportJobEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AblesReportJobID;
		
		private int _ReportTypeID;
		
		private int _UserID;
		
		private System.DateTime _CreatedDate;
		
		private string _DownloadUrl;
		
		private int _Status;
		
		private int _DistrictID;
		
		private string _ErrorMessage;
		
		private string _JsonAblesDataPost;
		
		private string _LearningArea;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _TeacherID;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _DistrictTermID;
		
		private EntityRef<AblesReportTypeEntity> _AblesReportTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAblesReportJobIDChanging(int value);
    partial void OnAblesReportJobIDChanged();
    partial void OnReportTypeIDChanging(int value);
    partial void OnReportTypeIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnDownloadUrlChanging(string value);
    partial void OnDownloadUrlChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnJsonAblesDataPostChanging(string value);
    partial void OnJsonAblesDataPostChanged();
    partial void OnLearningAreaChanging(string value);
    partial void OnLearningAreaChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnDistrictTermIDChanging(System.Nullable<int> value);
    partial void OnDistrictTermIDChanged();
    #endregion
		
		public AblesReportJobEntity()
		{
			this._AblesReportTypeEntity = default(EntityRef<AblesReportTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AblesReportJobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AblesReportJobID
		{
			get
			{
				return this._AblesReportJobID;
			}
			set
			{
				if ((this._AblesReportJobID != value))
				{
					this.OnAblesReportJobIDChanging(value);
					this.SendPropertyChanging();
					this._AblesReportJobID = value;
					this.SendPropertyChanged("AblesReportJobID");
					this.OnAblesReportJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeID", DbType="Int NOT NULL")]
		public int ReportTypeID
		{
			get
			{
				return this._ReportTypeID;
			}
			set
			{
				if ((this._ReportTypeID != value))
				{
					if (this._AblesReportTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReportTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeID = value;
					this.SendPropertyChanged("ReportTypeID");
					this.OnReportTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUrl", DbType="VarChar(500)")]
		public string DownloadUrl
		{
			get
			{
				return this._DownloadUrl;
			}
			set
			{
				if ((this._DownloadUrl != value))
				{
					this.OnDownloadUrlChanging(value);
					this.SendPropertyChanging();
					this._DownloadUrl = value;
					this.SendPropertyChanged("DownloadUrl");
					this.OnDownloadUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JsonAblesDataPost", DbType="NVarChar(MAX)")]
		public string JsonAblesDataPost
		{
			get
			{
				return this._JsonAblesDataPost;
			}
			set
			{
				if ((this._JsonAblesDataPost != value))
				{
					this.OnJsonAblesDataPostChanging(value);
					this.SendPropertyChanging();
					this._JsonAblesDataPost = value;
					this.SendPropertyChanged("JsonAblesDataPost");
					this.OnJsonAblesDataPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LearningArea", DbType="VarChar(200)")]
		public string LearningArea
		{
			get
			{
				return this._LearningArea;
			}
			set
			{
				if ((this._LearningArea != value))
				{
					this.OnLearningAreaChanging(value);
					this.SendPropertyChanging();
					this._LearningArea = value;
					this.SendPropertyChanged("LearningArea");
					this.OnLearningAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this.OnDistrictTermIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictTermID = value;
					this.SendPropertyChanged("DistrictTermID");
					this.OnDistrictTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AblesReportTypeEntity_AblesReportJobEntity", Storage="_AblesReportTypeEntity", ThisKey="ReportTypeID", OtherKey="ReportTypeID", IsForeignKey=true)]
		public AblesReportTypeEntity AblesReportTypeEntity
		{
			get
			{
				return this._AblesReportTypeEntity.Entity;
			}
			set
			{
				AblesReportTypeEntity previousValue = this._AblesReportTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._AblesReportTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AblesReportTypeEntity.Entity = null;
						previousValue.AblesReportJobEntities.Remove(this);
					}
					this._AblesReportTypeEntity.Entity = value;
					if ((value != null))
					{
						value.AblesReportJobEntities.Add(this);
						this._ReportTypeID = value.ReportTypeID;
					}
					else
					{
						this._ReportTypeID = default(int);
					}
					this.SendPropertyChanged("AblesReportTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AblesReportType")]
	public partial class AblesReportTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportTypeID;
		
		private string _Name;
		
		private int _ReportOrder;
		
		private EntitySet<AblesReportJobEntity> _AblesReportJobEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportTypeIDChanging(int value);
    partial void OnReportTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReportOrderChanging(int value);
    partial void OnReportOrderChanged();
    #endregion
		
		public AblesReportTypeEntity()
		{
			this._AblesReportJobEntities = new EntitySet<AblesReportJobEntity>(new Action<AblesReportJobEntity>(this.attach_AblesReportJobEntities), new Action<AblesReportJobEntity>(this.detach_AblesReportJobEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportTypeID
		{
			get
			{
				return this._ReportTypeID;
			}
			set
			{
				if ((this._ReportTypeID != value))
				{
					this.OnReportTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeID = value;
					this.SendPropertyChanged("ReportTypeID");
					this.OnReportTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportOrder", DbType="Int NOT NULL")]
		public int ReportOrder
		{
			get
			{
				return this._ReportOrder;
			}
			set
			{
				if ((this._ReportOrder != value))
				{
					this.OnReportOrderChanging(value);
					this.SendPropertyChanging();
					this._ReportOrder = value;
					this.SendPropertyChanged("ReportOrder");
					this.OnReportOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AblesReportTypeEntity_AblesReportJobEntity", Storage="_AblesReportJobEntities", ThisKey="ReportTypeID", OtherKey="ReportTypeID")]
		public EntitySet<AblesReportJobEntity> AblesReportJobEntities
		{
			get
			{
				return this._AblesReportJobEntities;
			}
			set
			{
				this._AblesReportJobEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AblesReportJobEntities(AblesReportJobEntity entity)
		{
			this.SendPropertyChanging();
			entity.AblesReportTypeEntity = this;
		}
		
		private void detach_AblesReportJobEntities(AblesReportJobEntity entity)
		{
			this.SendPropertyChanging();
			entity.AblesReportTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AblesAssessmentRound")]
	public partial class AblesAssessmentRoundEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AssessmentRoundID;
		
		private string _Name;
		
		private int _DistrictID;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Round;
		
		private System.Nullable<int> _RoundIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssessmentRoundIDChanging(int value);
    partial void OnAssessmentRoundIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnRoundChanging(string value);
    partial void OnRoundChanged();
    partial void OnRoundIndexChanging(System.Nullable<int> value);
    partial void OnRoundIndexChanged();
    #endregion
		
		public AblesAssessmentRoundEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentRoundID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AssessmentRoundID
		{
			get
			{
				return this._AssessmentRoundID;
			}
			set
			{
				if ((this._AssessmentRoundID != value))
				{
					this.OnAssessmentRoundIDChanging(value);
					this.SendPropertyChanging();
					this._AssessmentRoundID = value;
					this.SendPropertyChanged("AssessmentRoundID");
					this.OnAssessmentRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Round", DbType="VarChar(1)")]
		public string Round
		{
			get
			{
				return this._Round;
			}
			set
			{
				if ((this._Round != value))
				{
					this.OnRoundChanging(value);
					this.SendPropertyChanging();
					this._Round = value;
					this.SendPropertyChanged("Round");
					this.OnRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundIndex", DbType="Int")]
		public System.Nullable<int> RoundIndex
		{
			get
			{
				return this._RoundIndex;
			}
			set
			{
				if ((this._RoundIndex != value))
				{
					this.OnRoundIndexChanging(value);
					this.SendPropertyChanging();
					this._RoundIndex = value;
					this.SendPropertyChanged("RoundIndex");
					this.OnRoundIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DownloadPdf")]
	public partial class DownloadPdfEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DownloadPdfID;
		
		private string _FilePath;
		
		private int _UserID;
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDownloadPdfIDChanging(System.Guid value);
    partial void OnDownloadPdfIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public DownloadPdfEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadPdfID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DownloadPdfID
		{
			get
			{
				return this._DownloadPdfID;
			}
			set
			{
				if ((this._DownloadPdfID != value))
				{
					this.OnDownloadPdfIDChanging(value);
					this.SendPropertyChanging();
					this._DownloadPdfID = value;
					this.SendPropertyChanged("DownloadPdfID");
					this.OnDownloadPdfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AblesVirtualTestMapping")]
	public partial class AblesVirtualTestMappingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AblesVirtualTestMappingID;
		
		private int _VirtualTestID;
		
		private int _ValueMapping;
		
		private string _AblesTestName;
		
		private string _Round;
		
		private int _DistrictID;
		
		private System.Nullable<bool> _IsASD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAblesVirtualTestMappingIDChanging(int value);
    partial void OnAblesVirtualTestMappingIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnValueMappingChanging(int value);
    partial void OnValueMappingChanged();
    partial void OnAblesTestNameChanging(string value);
    partial void OnAblesTestNameChanged();
    partial void OnRoundChanging(string value);
    partial void OnRoundChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnIsASDChanging(System.Nullable<bool> value);
    partial void OnIsASDChanged();
    #endregion
		
		public AblesVirtualTestMappingEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AblesVirtualTestMappingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AblesVirtualTestMappingID
		{
			get
			{
				return this._AblesVirtualTestMappingID;
			}
			set
			{
				if ((this._AblesVirtualTestMappingID != value))
				{
					this.OnAblesVirtualTestMappingIDChanging(value);
					this.SendPropertyChanging();
					this._AblesVirtualTestMappingID = value;
					this.SendPropertyChanged("AblesVirtualTestMappingID");
					this.OnAblesVirtualTestMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueMapping", DbType="Int NOT NULL")]
		public int ValueMapping
		{
			get
			{
				return this._ValueMapping;
			}
			set
			{
				if ((this._ValueMapping != value))
				{
					this.OnValueMappingChanging(value);
					this.SendPropertyChanging();
					this._ValueMapping = value;
					this.SendPropertyChanged("ValueMapping");
					this.OnValueMappingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AblesTestName", DbType="VarChar(500)")]
		public string AblesTestName
		{
			get
			{
				return this._AblesTestName;
			}
			set
			{
				if ((this._AblesTestName != value))
				{
					this.OnAblesTestNameChanging(value);
					this.SendPropertyChanging();
					this._AblesTestName = value;
					this.SendPropertyChanged("AblesTestName");
					this.OnAblesTestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Round", DbType="VarChar(1)")]
		public string Round
		{
			get
			{
				return this._Round;
			}
			set
			{
				if ((this._Round != value))
				{
					this.OnRoundChanging(value);
					this.SendPropertyChanging();
					this._Round = value;
					this.SendPropertyChanged("Round");
					this.OnRoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsASD", DbType="Bit")]
		public System.Nullable<bool> IsASD
		{
			get
			{
				return this._IsASD;
			}
			set
			{
				if ((this._IsASD != value))
				{
					this.OnIsASDChanging(value);
					this.SendPropertyChanging();
					this._IsASD = value;
					this.SendPropertyChanged("IsASD");
					this.OnIsASDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionPassageNoShuffle")]
	public partial class VirtualQuestionPassageNoShuffleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionPassageNoShuffleID;
		
		private int _VirtualQuestionID;
		
		private System.Nullable<int> _QTIRefObjectID;
		
		private System.Nullable<int> _QTI3pPassageId;
		
		private System.Nullable<int> _DataFileUploadPassageID;
		
		private string _PassageURL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionPassageNoShuffleIDChanging(int value);
    partial void OnVirtualQuestionPassageNoShuffleIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnQTIRefObjectIDChanging(System.Nullable<int> value);
    partial void OnQTIRefObjectIDChanged();
    partial void OnQTI3pPassageIdChanging(System.Nullable<int> value);
    partial void OnQTI3pPassageIdChanged();
    partial void OnDataFileUploadPassageIDChanging(System.Nullable<int> value);
    partial void OnDataFileUploadPassageIDChanged();
    partial void OnPassageURLChanging(string value);
    partial void OnPassageURLChanged();
    #endregion
		
		public VirtualQuestionPassageNoShuffleEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionPassageNoShuffleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionPassageNoShuffleID
		{
			get
			{
				return this._VirtualQuestionPassageNoShuffleID;
			}
			set
			{
				if ((this._VirtualQuestionPassageNoShuffleID != value))
				{
					this.OnVirtualQuestionPassageNoShuffleIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionPassageNoShuffleID = value;
					this.SendPropertyChanged("VirtualQuestionPassageNoShuffleID");
					this.OnVirtualQuestionPassageNoShuffleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIRefObjectID", DbType="Int")]
		public System.Nullable<int> QTIRefObjectID
		{
			get
			{
				return this._QTIRefObjectID;
			}
			set
			{
				if ((this._QTIRefObjectID != value))
				{
					this.OnQTIRefObjectIDChanging(value);
					this.SendPropertyChanging();
					this._QTIRefObjectID = value;
					this.SendPropertyChanged("QTIRefObjectID");
					this.OnQTIRefObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTI3pPassageId", DbType="Int")]
		public System.Nullable<int> QTI3pPassageId
		{
			get
			{
				return this._QTI3pPassageId;
			}
			set
			{
				if ((this._QTI3pPassageId != value))
				{
					this.OnQTI3pPassageIdChanging(value);
					this.SendPropertyChanging();
					this._QTI3pPassageId = value;
					this.SendPropertyChanged("QTI3pPassageId");
					this.OnQTI3pPassageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFileUploadPassageID", DbType="Int")]
		public System.Nullable<int> DataFileUploadPassageID
		{
			get
			{
				return this._DataFileUploadPassageID;
			}
			set
			{
				if ((this._DataFileUploadPassageID != value))
				{
					this.OnDataFileUploadPassageIDChanging(value);
					this.SendPropertyChanging();
					this._DataFileUploadPassageID = value;
					this.SendPropertyChanged("DataFileUploadPassageID");
					this.OnDataFileUploadPassageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassageURL", DbType="VarChar(500)")]
		public string PassageURL
		{
			get
			{
				return this._PassageURL;
			}
			set
			{
				if ((this._PassageURL != value))
				{
					this.OnPassageURLChanging(value);
					this.SendPropertyChanging();
					this._PassageURL = value;
					this.SendPropertyChanged("PassageURL");
					this.OnPassageURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Answer")]
	internal partial class AnswerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnswerID;
		
		private int _PointsEarned;
		
		private int _PointsPossible;
		
		private bool _WasAnswered;
		
		private int _TestResultID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerLetter;
		
		private bool _Blocked;
		
		private string _AnswerText;
		
		private string _BubbleSheetErrorType;
		
		private string _ResponseIdentifier;
		
		private string _AnswerImage;
		
		private string _HighlightQuestion;
		
		private string _HighlightPassage;
		
		private System.Nullable<bool> _Overridden;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _AnswerOrder;
		
		private System.Nullable<int> _TimesVisited;
		
		private System.Nullable<int> _TimeSpent;
		
		private EntitySet<AnswerSubEntity> _AnswerSubEntities;
		
		private EntityRef<TestResultEntity> _TestResultEntity;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerIDChanging(int value);
    partial void OnAnswerIDChanged();
    partial void OnPointsEarnedChanging(int value);
    partial void OnPointsEarnedChanged();
    partial void OnPointsPossibleChanging(int value);
    partial void OnPointsPossibleChanged();
    partial void OnWasAnsweredChanging(bool value);
    partial void OnWasAnsweredChanged();
    partial void OnTestResultIDChanging(int value);
    partial void OnTestResultIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnAnswerLetterChanging(string value);
    partial void OnAnswerLetterChanged();
    partial void OnBlockedChanging(bool value);
    partial void OnBlockedChanged();
    partial void OnAnswerTextChanging(string value);
    partial void OnAnswerTextChanged();
    partial void OnBubbleSheetErrorTypeChanging(string value);
    partial void OnBubbleSheetErrorTypeChanged();
    partial void OnResponseIdentifierChanging(string value);
    partial void OnResponseIdentifierChanged();
    partial void OnAnswerImageChanging(string value);
    partial void OnAnswerImageChanged();
    partial void OnHighlightQuestionChanging(string value);
    partial void OnHighlightQuestionChanged();
    partial void OnHighlightPassageChanging(string value);
    partial void OnHighlightPassageChanged();
    partial void OnOverriddenChanging(System.Nullable<bool> value);
    partial void OnOverriddenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnAnswerOrderChanging(System.Nullable<int> value);
    partial void OnAnswerOrderChanged();
    partial void OnTimesVisitedChanging(System.Nullable<int> value);
    partial void OnTimesVisitedChanged();
    partial void OnTimeSpentChanging(System.Nullable<int> value);
    partial void OnTimeSpentChanged();
    #endregion
		
		public AnswerEntity()
		{
			this._AnswerSubEntities = new EntitySet<AnswerSubEntity>(new Action<AnswerSubEntity>(this.attach_AnswerSubEntities), new Action<AnswerSubEntity>(this.detach_AnswerSubEntities));
			this._TestResultEntity = default(EntityRef<TestResultEntity>);
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this.OnPointsEarnedChanging(value);
					this.SendPropertyChanging();
					this._PointsEarned = value;
					this.SendPropertyChanged("PointsEarned");
					this.OnPointsEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this.OnPointsPossibleChanging(value);
					this.SendPropertyChanging();
					this._PointsPossible = value;
					this.SendPropertyChanged("PointsPossible");
					this.OnPointsPossibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasAnswered", DbType="Bit NOT NULL")]
		public bool WasAnswered
		{
			get
			{
				return this._WasAnswered;
			}
			set
			{
				if ((this._WasAnswered != value))
				{
					this.OnWasAnsweredChanging(value);
					this.SendPropertyChanging();
					this._WasAnswered = value;
					this.SendPropertyChanged("WasAnswered");
					this.OnWasAnsweredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					if (this._TestResultEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTestResultIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultID = value;
					this.SendPropertyChanged("TestResultID");
					this.OnTestResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetter", DbType="VarChar(200)")]
		public string AnswerLetter
		{
			get
			{
				return this._AnswerLetter;
			}
			set
			{
				if ((this._AnswerLetter != value))
				{
					this.OnAnswerLetterChanging(value);
					this.SendPropertyChanging();
					this._AnswerLetter = value;
					this.SendPropertyChanged("AnswerLetter");
					this.OnAnswerLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blocked", DbType="Bit NOT NULL")]
		public bool Blocked
		{
			get
			{
				return this._Blocked;
			}
			set
			{
				if ((this._Blocked != value))
				{
					this.OnBlockedChanging(value);
					this.SendPropertyChanging();
					this._Blocked = value;
					this.SendPropertyChanged("Blocked");
					this.OnBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this.OnAnswerTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerText = value;
					this.SendPropertyChanged("AnswerText");
					this.OnAnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetErrorType", DbType="VarChar(10)")]
		public string BubbleSheetErrorType
		{
			get
			{
				return this._BubbleSheetErrorType;
			}
			set
			{
				if ((this._BubbleSheetErrorType != value))
				{
					this.OnBubbleSheetErrorTypeChanging(value);
					this.SendPropertyChanging();
					this._BubbleSheetErrorType = value;
					this.SendPropertyChanged("BubbleSheetErrorType");
					this.OnBubbleSheetErrorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseIdentifier", DbType="VarChar(50)")]
		public string ResponseIdentifier
		{
			get
			{
				return this._ResponseIdentifier;
			}
			set
			{
				if ((this._ResponseIdentifier != value))
				{
					this.OnResponseIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ResponseIdentifier = value;
					this.SendPropertyChanged("ResponseIdentifier");
					this.OnResponseIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerImage", DbType="NVarChar(MAX)")]
		public string AnswerImage
		{
			get
			{
				return this._AnswerImage;
			}
			set
			{
				if ((this._AnswerImage != value))
				{
					this.OnAnswerImageChanging(value);
					this.SendPropertyChanging();
					this._AnswerImage = value;
					this.SendPropertyChanged("AnswerImage");
					this.OnAnswerImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightQuestion", DbType="NVarChar(MAX)")]
		public string HighlightQuestion
		{
			get
			{
				return this._HighlightQuestion;
			}
			set
			{
				if ((this._HighlightQuestion != value))
				{
					this.OnHighlightQuestionChanging(value);
					this.SendPropertyChanging();
					this._HighlightQuestion = value;
					this.SendPropertyChanged("HighlightQuestion");
					this.OnHighlightQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightPassage", DbType="NVarChar(MAX)")]
		public string HighlightPassage
		{
			get
			{
				return this._HighlightPassage;
			}
			set
			{
				if ((this._HighlightPassage != value))
				{
					this.OnHighlightPassageChanging(value);
					this.SendPropertyChanging();
					this._HighlightPassage = value;
					this.SendPropertyChanged("HighlightPassage");
					this.OnHighlightPassageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridden", DbType="Bit")]
		public System.Nullable<bool> Overridden
		{
			get
			{
				return this._Overridden;
			}
			set
			{
				if ((this._Overridden != value))
				{
					this.OnOverriddenChanging(value);
					this.SendPropertyChanging();
					this._Overridden = value;
					this.SendPropertyChanged("Overridden");
					this.OnOverriddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerOrder", DbType="Int")]
		public System.Nullable<int> AnswerOrder
		{
			get
			{
				return this._AnswerOrder;
			}
			set
			{
				if ((this._AnswerOrder != value))
				{
					this.OnAnswerOrderChanging(value);
					this.SendPropertyChanging();
					this._AnswerOrder = value;
					this.SendPropertyChanged("AnswerOrder");
					this.OnAnswerOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesVisited", DbType="Int")]
		public System.Nullable<int> TimesVisited
		{
			get
			{
				return this._TimesVisited;
			}
			set
			{
				if ((this._TimesVisited != value))
				{
					this.OnTimesVisitedChanging(value);
					this.SendPropertyChanging();
					this._TimesVisited = value;
					this.SendPropertyChanged("TimesVisited");
					this.OnTimesVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSpent", DbType="Int")]
		public System.Nullable<int> TimeSpent
		{
			get
			{
				return this._TimeSpent;
			}
			set
			{
				if ((this._TimeSpent != value))
				{
					this.OnTimeSpentChanging(value);
					this.SendPropertyChanging();
					this._TimeSpent = value;
					this.SendPropertyChanged("TimeSpent");
					this.OnTimeSpentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnswerEntity_AnswerSubEntity", Storage="_AnswerSubEntities", ThisKey="AnswerID", OtherKey="AnswerID")]
		public EntitySet<AnswerSubEntity> AnswerSubEntities
		{
			get
			{
				return this._AnswerSubEntities;
			}
			set
			{
				this._AnswerSubEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestResultEntity_AnswerEntity", Storage="_TestResultEntity", ThisKey="TestResultID", OtherKey="TestResultID", IsForeignKey=true)]
		public TestResultEntity TestResultEntity
		{
			get
			{
				return this._TestResultEntity.Entity;
			}
			set
			{
				TestResultEntity previousValue = this._TestResultEntity.Entity;
				if (((previousValue != value) 
							|| (this._TestResultEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestResultEntity.Entity = null;
						previousValue.AnswerEntities.Remove(this);
					}
					this._TestResultEntity.Entity = value;
					if ((value != null))
					{
						value.AnswerEntities.Add(this);
						this._TestResultID = value.TestResultID;
					}
					else
					{
						this._TestResultID = default(int);
					}
					this.SendPropertyChanged("TestResultEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_AnswerEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true)]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.AnswerEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.AnswerEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnswerSubEntities(AnswerSubEntity entity)
		{
			this.SendPropertyChanging();
			entity.AnswerEntity = this;
		}
		
		private void detach_AnswerSubEntities(AnswerSubEntity entity)
		{
			this.SendPropertyChanging();
			entity.AnswerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnswerSub")]
	internal partial class AnswerSubEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnswerSubID;
		
		private int _AnswerID;
		
		private int _VirtualQuestionSubID;
		
		private int _PointsEarned;
		
		private int _PointsPossible;
		
		private string _AnswerLetter;
		
		private string _AnswerText;
		
		private string _ResponseIdentifier;
		
		private System.Nullable<bool> _Overridden;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<AnswerEntity> _AnswerEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerSubIDChanging(int value);
    partial void OnAnswerSubIDChanged();
    partial void OnAnswerIDChanging(int value);
    partial void OnAnswerIDChanged();
    partial void OnVirtualQuestionSubIDChanging(int value);
    partial void OnVirtualQuestionSubIDChanged();
    partial void OnPointsEarnedChanging(int value);
    partial void OnPointsEarnedChanged();
    partial void OnPointsPossibleChanging(int value);
    partial void OnPointsPossibleChanged();
    partial void OnAnswerLetterChanging(string value);
    partial void OnAnswerLetterChanged();
    partial void OnAnswerTextChanging(string value);
    partial void OnAnswerTextChanged();
    partial void OnResponseIdentifierChanging(string value);
    partial void OnResponseIdentifierChanged();
    partial void OnOverriddenChanging(System.Nullable<bool> value);
    partial void OnOverriddenChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public AnswerSubEntity()
		{
			this._AnswerEntity = default(EntityRef<AnswerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnswerSubID
		{
			get
			{
				return this._AnswerSubID;
			}
			set
			{
				if ((this._AnswerSubID != value))
				{
					this.OnAnswerSubIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerSubID = value;
					this.SendPropertyChanged("AnswerSubID");
					this.OnAnswerSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					if (this._AnswerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionSubID", DbType="Int NOT NULL")]
		public int VirtualQuestionSubID
		{
			get
			{
				return this._VirtualQuestionSubID;
			}
			set
			{
				if ((this._VirtualQuestionSubID != value))
				{
					this.OnVirtualQuestionSubIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionSubID = value;
					this.SendPropertyChanged("VirtualQuestionSubID");
					this.OnVirtualQuestionSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this.OnPointsEarnedChanging(value);
					this.SendPropertyChanging();
					this._PointsEarned = value;
					this.SendPropertyChanged("PointsEarned");
					this.OnPointsEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this.OnPointsPossibleChanging(value);
					this.SendPropertyChanging();
					this._PointsPossible = value;
					this.SendPropertyChanged("PointsPossible");
					this.OnPointsPossibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetter", DbType="VarChar(200)")]
		public string AnswerLetter
		{
			get
			{
				return this._AnswerLetter;
			}
			set
			{
				if ((this._AnswerLetter != value))
				{
					this.OnAnswerLetterChanging(value);
					this.SendPropertyChanging();
					this._AnswerLetter = value;
					this.SendPropertyChanged("AnswerLetter");
					this.OnAnswerLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this.OnAnswerTextChanging(value);
					this.SendPropertyChanging();
					this._AnswerText = value;
					this.SendPropertyChanged("AnswerText");
					this.OnAnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseIdentifier", DbType="VarChar(50)")]
		public string ResponseIdentifier
		{
			get
			{
				return this._ResponseIdentifier;
			}
			set
			{
				if ((this._ResponseIdentifier != value))
				{
					this.OnResponseIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ResponseIdentifier = value;
					this.SendPropertyChanged("ResponseIdentifier");
					this.OnResponseIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridden", DbType="Bit")]
		public System.Nullable<bool> Overridden
		{
			get
			{
				return this._Overridden;
			}
			set
			{
				if ((this._Overridden != value))
				{
					this.OnOverriddenChanging(value);
					this.SendPropertyChanging();
					this._Overridden = value;
					this.SendPropertyChanged("Overridden");
					this.OnOverriddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AnswerEntity_AnswerSubEntity", Storage="_AnswerEntity", ThisKey="AnswerID", OtherKey="AnswerID", IsForeignKey=true)]
		public AnswerEntity AnswerEntity
		{
			get
			{
				return this._AnswerEntity.Entity;
			}
			set
			{
				AnswerEntity previousValue = this._AnswerEntity.Entity;
				if (((previousValue != value) 
							|| (this._AnswerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AnswerEntity.Entity = null;
						previousValue.AnswerSubEntities.Remove(this);
					}
					this._AnswerEntity.Entity = value;
					if ((value != null))
					{
						value.AnswerSubEntities.Add(this);
						this._AnswerID = value.AnswerID;
					}
					else
					{
						this._AnswerID = default(int);
					}
					this.SendPropertyChanged("AnswerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionGroupQuestionView")]
	internal partial class QuestionGroupQuestionView
	{
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _VirtualSectionID;
		
		private int _QuestionGroupID;
		
		private int _VirtualQuestionID;
		
		public QuestionGroupQuestionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int")]
		public System.Nullable<int> VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int NOT NULL")]
		public int QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this._QuestionGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTI3PSubjectGradeLicenses")]
	public partial class QTI3PSubjectGradeLicenseEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTI3pSubjectGradeLicensesID;
		
		private int _QTI3pLicensesID;
		
		private int _DistrictID;
		
		private string _Subject;
		
		private System.Nullable<int> _GradeID;
		
		private int _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTI3pSubjectGradeLicensesIDChanging(int value);
    partial void OnQTI3pSubjectGradeLicensesIDChanged();
    partial void OnQTI3pLicensesIDChanging(int value);
    partial void OnQTI3pLicensesIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnGradeIDChanging(System.Nullable<int> value);
    partial void OnGradeIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public QTI3PSubjectGradeLicenseEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTI3pSubjectGradeLicensesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTI3pSubjectGradeLicensesID
		{
			get
			{
				return this._QTI3pSubjectGradeLicensesID;
			}
			set
			{
				if ((this._QTI3pSubjectGradeLicensesID != value))
				{
					this.OnQTI3pSubjectGradeLicensesIDChanging(value);
					this.SendPropertyChanging();
					this._QTI3pSubjectGradeLicensesID = value;
					this.SendPropertyChanged("QTI3pSubjectGradeLicensesID");
					this.OnQTI3pSubjectGradeLicensesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTI3pLicensesID", DbType="Int NOT NULL")]
		public int QTI3pLicensesID
		{
			get
			{
				return this._QTI3pLicensesID;
			}
			set
			{
				if ((this._QTI3pLicensesID != value))
				{
					this.OnQTI3pLicensesIDChanging(value);
					this.SendPropertyChanging();
					this._QTI3pLicensesID = value;
					this.SendPropertyChanged("QTI3pLicensesID");
					this.OnQTI3pLicensesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(200)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int")]
		public System.Nullable<int> GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this.OnGradeIDChanging(value);
					this.SendPropertyChanging();
					this._GradeID = value;
					this.SendPropertyChanged("GradeID");
					this.OnGradeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuestionGroup")]
	internal partial class QuestionGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionGroupID;
		
		private System.Nullable<int> _VirtualSectionID;
		
		private string _XmlContent;
		
		private int _Order;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _DisplayPosition;
		
		private string _Title;
		
		private EntitySet<VirtualQuestionGroupEntity> _VirtualQuestionGroupEntities;
		
		private EntityRef<VirtualSectionEntity> _VirtualSectionEntity;
		
		private EntityRef<TestEntity> _TestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionGroupIDChanging(int value);
    partial void OnQuestionGroupIDChanged();
    partial void OnVirtualSectionIDChanging(System.Nullable<int> value);
    partial void OnVirtualSectionIDChanged();
    partial void OnXmlContentChanging(string value);
    partial void OnXmlContentChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnDisplayPositionChanging(System.Nullable<int> value);
    partial void OnDisplayPositionChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public QuestionGroupEntity()
		{
			this._VirtualQuestionGroupEntities = new EntitySet<VirtualQuestionGroupEntity>(new Action<VirtualQuestionGroupEntity>(this.attach_VirtualQuestionGroupEntities), new Action<VirtualQuestionGroupEntity>(this.detach_VirtualQuestionGroupEntities));
			this._VirtualSectionEntity = default(EntityRef<VirtualSectionEntity>);
			this._TestEntity = default(EntityRef<TestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this.OnQuestionGroupIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionGroupID = value;
					this.SendPropertyChanged("QuestionGroupID");
					this.OnQuestionGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int")]
		public System.Nullable<int> VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					if (this._VirtualSectionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualSectionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualSectionID = value;
					this.SendPropertyChanged("VirtualSectionID");
					this.OnVirtualSectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this.OnXmlContentChanging(value);
					this.SendPropertyChanging();
					this._XmlContent = value;
					this.SendPropertyChanged("XmlContent");
					this.OnXmlContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					if (this._TestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayPosition", DbType="Int")]
		public System.Nullable<int> DisplayPosition
		{
			get
			{
				return this._DisplayPosition;
			}
			set
			{
				if ((this._DisplayPosition != value))
				{
					this.OnDisplayPositionChanging(value);
					this.SendPropertyChanging();
					this._DisplayPosition = value;
					this.SendPropertyChanged("DisplayPosition");
					this.OnDisplayPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(1000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionGroupEntity_VirtualQuestionGroupEntity", Storage="_VirtualQuestionGroupEntities", ThisKey="QuestionGroupID", OtherKey="QuestionGroupID")]
		public EntitySet<VirtualQuestionGroupEntity> VirtualQuestionGroupEntities
		{
			get
			{
				return this._VirtualQuestionGroupEntities;
			}
			set
			{
				this._VirtualQuestionGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VirtualSectionEntity_QuestionGroupEntity", Storage="_VirtualSectionEntity", ThisKey="VirtualSectionID", OtherKey="VirtualSectionID", IsForeignKey=true)]
		public VirtualSectionEntity VirtualSectionEntity
		{
			get
			{
				return this._VirtualSectionEntity.Entity;
			}
			set
			{
				VirtualSectionEntity previousValue = this._VirtualSectionEntity.Entity;
				if (((previousValue != value) 
							|| (this._VirtualSectionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VirtualSectionEntity.Entity = null;
						previousValue.QuestionGroupEntities.Remove(this);
					}
					this._VirtualSectionEntity.Entity = value;
					if ((value != null))
					{
						value.QuestionGroupEntities.Add(this);
						this._VirtualSectionID = value.VirtualSectionID;
					}
					else
					{
						this._VirtualSectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("VirtualSectionEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_QuestionGroupEntity", Storage="_TestEntity", ThisKey="VirtualTestID", OtherKey="VirtualTestID", IsForeignKey=true)]
		public TestEntity TestEntity
		{
			get
			{
				return this._TestEntity.Entity;
			}
			set
			{
				TestEntity previousValue = this._TestEntity.Entity;
				if (((previousValue != value) 
							|| (this._TestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TestEntity.Entity = null;
						previousValue.QuestionGroupEntities.Remove(this);
					}
					this._TestEntity.Entity = value;
					if ((value != null))
					{
						value.QuestionGroupEntities.Add(this);
						this._VirtualTestID = value.VirtualTestID;
					}
					else
					{
						this._VirtualTestID = default(int);
					}
					this.SendPropertyChanged("TestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VirtualQuestionGroupEntities(VirtualQuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionGroupEntity = this;
		}
		
		private void detach_VirtualQuestionGroupEntities(VirtualQuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.QuestionGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionGroup")]
	internal partial class VirtualQuestionGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionGroupID;
		
		private int _VirtualQuestionID;
		
		private int _QuestionGroupID;
		
		private int _Order;
		
		private EntityRef<QuestionGroupEntity> _QuestionGroupEntity;
		
		private EntityRef<QuestionEntity> _QuestionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionGroupIDChanging(int value);
    partial void OnVirtualQuestionGroupIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnQuestionGroupIDChanging(int value);
    partial void OnQuestionGroupIDChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    #endregion
		
		public VirtualQuestionGroupEntity()
		{
			this._QuestionGroupEntity = default(EntityRef<QuestionGroupEntity>);
			this._QuestionEntity = default(EntityRef<QuestionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionGroupID
		{
			get
			{
				return this._VirtualQuestionGroupID;
			}
			set
			{
				if ((this._VirtualQuestionGroupID != value))
				{
					this.OnVirtualQuestionGroupIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionGroupID = value;
					this.SendPropertyChanged("VirtualQuestionGroupID");
					this.OnVirtualQuestionGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					if (this._QuestionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int NOT NULL")]
		public int QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					if (this._QuestionGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionGroupIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionGroupID = value;
					this.SendPropertyChanged("QuestionGroupID");
					this.OnQuestionGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionGroupEntity_VirtualQuestionGroupEntity", Storage="_QuestionGroupEntity", ThisKey="QuestionGroupID", OtherKey="QuestionGroupID", IsForeignKey=true)]
		public QuestionGroupEntity QuestionGroupEntity
		{
			get
			{
				return this._QuestionGroupEntity.Entity;
			}
			set
			{
				QuestionGroupEntity previousValue = this._QuestionGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionGroupEntity.Entity = null;
						previousValue.VirtualQuestionGroupEntities.Remove(this);
					}
					this._QuestionGroupEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionGroupEntities.Add(this);
						this._QuestionGroupID = value.QuestionGroupID;
					}
					else
					{
						this._QuestionGroupID = default(int);
					}
					this.SendPropertyChanged("QuestionGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuestionEntity_VirtualQuestionGroupEntity", Storage="_QuestionEntity", ThisKey="VirtualQuestionID", OtherKey="VirtualQuestionID", IsForeignKey=true)]
		public QuestionEntity QuestionEntity
		{
			get
			{
				return this._QuestionEntity.Entity;
			}
			set
			{
				QuestionEntity previousValue = this._QuestionEntity.Entity;
				if (((previousValue != value) 
							|| (this._QuestionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuestionEntity.Entity = null;
						previousValue.VirtualQuestionGroupEntities.Remove(this);
					}
					this._QuestionEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualQuestionGroupEntities.Add(this);
						this._VirtualQuestionID = value.VirtualQuestionID;
					}
					else
					{
						this._VirtualQuestionID = default(int);
					}
					this.SendPropertyChanged("QuestionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTITestClassAssignment")]
	public partial class QTITestClassAssignmentEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTITestClassAssignmentID;
		
		private int _VirtualTestID;
		
		private int _ClassID;
		
		private System.DateTime _AssignmentDate;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _CodeTimestamp;
		
		private string _AssignmentGUID;
		
		private string _TestSetting;
		
		private int _Status;
		
		private System.Nullable<int> _ComparisonPasscodeLength;
		
		private int _Type;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedUserID;
		
		private string _ModifiedBy;
		
		private System.Nullable<int> _Mode;
		
		private System.Nullable<bool> _IsHide;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _SurveyAssignmentType;
		
		private string _ListOfDisplayQuestions;
		
		private string _AuthenticationCode;
		
		private System.Nullable<System.DateTime> _AuthenticationCodeExpirationDate;
		
		private EntitySet<QTITestStudentAssignmentEntity> _QTITestStudentAssignmentEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTITestClassAssignmentIDChanging(int value);
    partial void OnQTITestClassAssignmentIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnAssignmentDateChanging(System.DateTime value);
    partial void OnAssignmentDateChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCodeTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnCodeTimestampChanged();
    partial void OnAssignmentGUIDChanging(string value);
    partial void OnAssignmentGUIDChanged();
    partial void OnTestSettingChanging(string value);
    partial void OnTestSettingChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnComparisonPasscodeLengthChanging(System.Nullable<int> value);
    partial void OnComparisonPasscodeLengthChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedUserIDChanging(System.Nullable<int> value);
    partial void OnModifiedUserIDChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModeChanging(System.Nullable<int> value);
    partial void OnModeChanged();
    partial void OnIsHideChanging(System.Nullable<bool> value);
    partial void OnIsHideChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnSurveyAssignmentTypeChanging(System.Nullable<int> value);
    partial void OnSurveyAssignmentTypeChanged();
    partial void OnListOfDisplayQuestionsChanging(string value);
    partial void OnListOfDisplayQuestionsChanged();
    partial void OnAuthenticationCodeChanging(string value);
    partial void OnAuthenticationCodeChanged();
    partial void OnAuthenticationCodeExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthenticationCodeExpirationDateChanged();
    #endregion
		
		public QTITestClassAssignmentEntity()
		{
			this._QTITestStudentAssignmentEntities = new EntitySet<QTITestStudentAssignmentEntity>(new Action<QTITestStudentAssignmentEntity>(this.attach_QTITestStudentAssignmentEntities), new Action<QTITestStudentAssignmentEntity>(this.detach_QTITestStudentAssignmentEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this.OnQTITestClassAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._QTITestClassAssignmentID = value;
					this.SendPropertyChanged("QTITestClassAssignmentID");
					this.OnQTITestClassAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this.OnAssignmentDateChanging(value);
					this.SendPropertyChanging();
					this._AssignmentDate = value;
					this.SendPropertyChanged("AssignmentDate");
					this.OnAssignmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CodeTimestamp
		{
			get
			{
				return this._CodeTimestamp;
			}
			set
			{
				if ((this._CodeTimestamp != value))
				{
					this.OnCodeTimestampChanging(value);
					this.SendPropertyChanging();
					this._CodeTimestamp = value;
					this.SendPropertyChanged("CodeTimestamp");
					this.OnCodeTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentGUID", DbType="VarChar(100)")]
		public string AssignmentGUID
		{
			get
			{
				return this._AssignmentGUID;
			}
			set
			{
				if ((this._AssignmentGUID != value))
				{
					this.OnAssignmentGUIDChanging(value);
					this.SendPropertyChanging();
					this._AssignmentGUID = value;
					this.SendPropertyChanged("AssignmentGUID");
					this.OnAssignmentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetting", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TestSetting
		{
			get
			{
				return this._TestSetting;
			}
			set
			{
				if ((this._TestSetting != value))
				{
					this.OnTestSettingChanging(value);
					this.SendPropertyChanging();
					this._TestSetting = value;
					this.SendPropertyChanged("TestSetting");
					this.OnTestSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonPasscodeLength", DbType="Int")]
		public System.Nullable<int> ComparisonPasscodeLength
		{
			get
			{
				return this._ComparisonPasscodeLength;
			}
			set
			{
				if ((this._ComparisonPasscodeLength != value))
				{
					this.OnComparisonPasscodeLengthChanging(value);
					this.SendPropertyChanging();
					this._ComparisonPasscodeLength = value;
					this.SendPropertyChanged("ComparisonPasscodeLength");
					this.OnComparisonPasscodeLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUserID", DbType="Int")]
		public System.Nullable<int> ModifiedUserID
		{
			get
			{
				return this._ModifiedUserID;
			}
			set
			{
				if ((this._ModifiedUserID != value))
				{
					this.OnModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUserID = value;
					this.SendPropertyChanged("ModifiedUserID");
					this.OnModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int")]
		public System.Nullable<int> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this.OnIsHideChanging(value);
					this.SendPropertyChanging();
					this._IsHide = value;
					this.SendPropertyChanged("IsHide");
					this.OnIsHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyAssignmentType", DbType="Int")]
		public System.Nullable<int> SurveyAssignmentType
		{
			get
			{
				return this._SurveyAssignmentType;
			}
			set
			{
				if ((this._SurveyAssignmentType != value))
				{
					this.OnSurveyAssignmentTypeChanging(value);
					this.SendPropertyChanging();
					this._SurveyAssignmentType = value;
					this.SendPropertyChanged("SurveyAssignmentType");
					this.OnSurveyAssignmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListOfDisplayQuestions", DbType="VarChar(1000)")]
		public string ListOfDisplayQuestions
		{
			get
			{
				return this._ListOfDisplayQuestions;
			}
			set
			{
				if ((this._ListOfDisplayQuestions != value))
				{
					this.OnListOfDisplayQuestionsChanging(value);
					this.SendPropertyChanging();
					this._ListOfDisplayQuestions = value;
					this.SendPropertyChanged("ListOfDisplayQuestions");
					this.OnListOfDisplayQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationCode", DbType="Varchar(4)")]
		public string AuthenticationCode
		{
			get
			{
				return this._AuthenticationCode;
			}
			set
			{
				if ((this._AuthenticationCode != value))
				{
					this.OnAuthenticationCodeChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationCode = value;
					this.SendPropertyChanged("AuthenticationCode");
					this.OnAuthenticationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationCodeExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuthenticationCodeExpirationDate
		{
			get
			{
				return this._AuthenticationCodeExpirationDate;
			}
			set
			{
				if ((this._AuthenticationCodeExpirationDate != value))
				{
					this.OnAuthenticationCodeExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationCodeExpirationDate = value;
					this.SendPropertyChanged("AuthenticationCodeExpirationDate");
					this.OnAuthenticationCodeExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTITestClassAssignmentEntity_QTITestStudentAssignmentEntity", Storage="_QTITestStudentAssignmentEntities", ThisKey="QTITestClassAssignmentID", OtherKey="QTITestClassAssignmentID")]
		public EntitySet<QTITestStudentAssignmentEntity> QTITestStudentAssignmentEntities
		{
			get
			{
				return this._QTITestStudentAssignmentEntities;
			}
			set
			{
				this._QTITestStudentAssignmentEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QTITestStudentAssignmentEntities(QTITestStudentAssignmentEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTITestClassAssignmentEntity = this;
		}
		
		private void detach_QTITestStudentAssignmentEntities(QTITestStudentAssignmentEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTITestClassAssignmentEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBankAccess")]
	internal partial class UserBankAccessEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserBankAccessID;
		
		private int _BankID;
		
		private int _UserID;
		
		private bool _IsIncluded;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<BankEntity> _BankEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserBankAccessIDChanging(int value);
    partial void OnUserBankAccessIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsIncludedChanging(bool value);
    partial void OnIsIncludedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public UserBankAccessEntity()
		{
			this._BankEntity = default(EntityRef<BankEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBankAccessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserBankAccessID
		{
			get
			{
				return this._UserBankAccessID;
			}
			set
			{
				if ((this._UserBankAccessID != value))
				{
					this.OnUserBankAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserBankAccessID = value;
					this.SendPropertyChanged("UserBankAccessID");
					this.OnUserBankAccessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._BankEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncluded", DbType="Bit NOT NULL")]
		public bool IsIncluded
		{
			get
			{
				return this._IsIncluded;
			}
			set
			{
				if ((this._IsIncluded != value))
				{
					this.OnIsIncludedChanging(value);
					this.SendPropertyChanging();
					this._IsIncluded = value;
					this.SendPropertyChanged("IsIncluded");
					this.OnIsIncludedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(100)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_UserBankAccessEntity", Storage="_BankEntity", ThisKey="BankID", OtherKey="BankID", IsForeignKey=true)]
		public BankEntity BankEntity
		{
			get
			{
				return this._BankEntity.Entity;
			}
			set
			{
				BankEntity previousValue = this._BankEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankEntity.Entity = null;
						previousValue.UserBankAccessEntities.Remove(this);
					}
					this._BankEntity.Entity = value;
					if ((value != null))
					{
						value.UserBankAccessEntities.Add(this);
						this._BankID = value.BankID;
					}
					else
					{
						this._BankID = default(int);
					}
					this.SendPropertyChanged("BankEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankUserDistrict")]
	public partial class BankUserDistrictEntity
	{
		
		private int _BankID;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<int> _DistrictID;
		
		public BankUserDistrictEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestMeta")]
	public partial class VirtualTestMetaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualTestMetaID;
		
		private int _VirtualTestID;
		
		private string _Name;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualTestMetaIDChanging(int value);
    partial void OnVirtualTestMetaIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public VirtualTestMetaEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestMetaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualTestMetaID
		{
			get
			{
				return this._VirtualTestMetaID;
			}
			set
			{
				if ((this._VirtualTestMetaID != value))
				{
					this.OnVirtualTestMetaIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestMetaID = value;
					this.SendPropertyChanged("VirtualTestMetaID");
					this.OnVirtualTestMetaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPreferenceDetail")]
	public partial class StudentPreferenceDetailEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentPreferenceDetailID;
		
		private int _StudentPreferenceID;
		
		private string _Name;
		
		private bool _Value;
		
		private bool _Locked;
		
		private EntityRef<StudentPreferencesEntity> _StudentPreferencesEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentPreferenceDetailIDChanging(int value);
    partial void OnStudentPreferenceDetailIDChanged();
    partial void OnStudentPreferenceIDChanging(int value);
    partial void OnStudentPreferenceIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(bool value);
    partial void OnValueChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    #endregion
		
		public StudentPreferenceDetailEntity()
		{
			this._StudentPreferencesEntity = default(EntityRef<StudentPreferencesEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPreferenceDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentPreferenceDetailID
		{
			get
			{
				return this._StudentPreferenceDetailID;
			}
			set
			{
				if ((this._StudentPreferenceDetailID != value))
				{
					this.OnStudentPreferenceDetailIDChanging(value);
					this.SendPropertyChanging();
					this._StudentPreferenceDetailID = value;
					this.SendPropertyChanged("StudentPreferenceDetailID");
					this.OnStudentPreferenceDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPreferenceID", DbType="Int NOT NULL")]
		public int StudentPreferenceID
		{
			get
			{
				return this._StudentPreferenceID;
			}
			set
			{
				if ((this._StudentPreferenceID != value))
				{
					if (this._StudentPreferencesEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentPreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._StudentPreferenceID = value;
					this.SendPropertyChanged("StudentPreferenceID");
					this.OnStudentPreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Bit NOT NULL")]
		public bool Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentPreferencesEntity_StudentPreferenceDetailEntity", Storage="_StudentPreferencesEntity", ThisKey="StudentPreferenceID", OtherKey="StudentPreferenceID", IsForeignKey=true)]
		public StudentPreferencesEntity StudentPreferencesEntity
		{
			get
			{
				return this._StudentPreferencesEntity.Entity;
			}
			set
			{
				StudentPreferencesEntity previousValue = this._StudentPreferencesEntity.Entity;
				if (((previousValue != value) 
							|| (this._StudentPreferencesEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentPreferencesEntity.Entity = null;
						previousValue.StudentPreferenceDetailEntities.Remove(this);
					}
					this._StudentPreferencesEntity.Entity = value;
					if ((value != null))
					{
						value.StudentPreferenceDetailEntities.Add(this);
						this._StudentPreferenceID = value.StudentPreferenceID;
					}
					else
					{
						this._StudentPreferenceID = default(int);
					}
					this.SendPropertyChanged("StudentPreferencesEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectOrder")]
	public partial class SubjectOrderEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectOrderID;
		
		private int _SubjectID;
		
		private int _Order;
		
		private int _DistrictID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectOrderIDChanging(int value);
    partial void OnSubjectOrderIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnOrderChanging(int value);
    partial void OnOrderChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    #endregion
		
		public SubjectOrderEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectOrderID
		{
			get
			{
				return this._SubjectOrderID;
			}
			set
			{
				if ((this._SubjectOrderID != value))
				{
					this.OnSubjectOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectOrderID = value;
					this.SendPropertyChanged("SubjectOrderID");
					this.OnSubjectOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShortLink")]
	public partial class ShortLinkEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShortLinkID;
		
		private string _Code;
		
		private string _FullLink;
		
		private System.Nullable<int> _QTITestClassAssignmentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShortLinkIDChanging(int value);
    partial void OnShortLinkIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFullLinkChanging(string value);
    partial void OnFullLinkChanged();
    partial void OnQTITestClassAssignmentIdChanging(System.Nullable<int> value);
    partial void OnQTITestClassAssignmentIdChanged();
    #endregion
		
		public ShortLinkEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortLinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShortLinkID
		{
			get
			{
				return this._ShortLinkID;
			}
			set
			{
				if ((this._ShortLinkID != value))
				{
					this.OnShortLinkIDChanging(value);
					this.SendPropertyChanging();
					this._ShortLinkID = value;
					this.SendPropertyChanged("ShortLinkID");
					this.OnShortLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullLink", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string FullLink
		{
			get
			{
				return this._FullLink;
			}
			set
			{
				if ((this._FullLink != value))
				{
					this.OnFullLinkChanging(value);
					this.SendPropertyChanging();
					this._FullLink = value;
					this.SendPropertyChanged("FullLink");
					this.OnFullLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentId", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentId
		{
			get
			{
				return this._QTITestClassAssignmentId;
			}
			set
			{
				if ((this._QTITestClassAssignmentId != value))
				{
					this.OnQTITestClassAssignmentIdChanging(value);
					this.SendPropertyChanging();
					this._QTITestClassAssignmentId = value;
					this.SendPropertyChanged("QTITestClassAssignmentId");
					this.OnQTITestClassAssignmentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassCustomForGroupView")]
	public partial class ClassCustomForGroupView
	{
		
		private string _Name;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _DistrictTermID;
		
		private int _UserID;
		
		private int _ClassID;
		
		private string _SchoolName;
		
		private string _DistrictTermName;
		
		private string _TeacherUserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		public ClassCustomForGroupView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherUserName", DbType="VarChar(50)")]
		public string TeacherUserName
		{
			get
			{
				return this._TeacherUserName;
			}
			set
			{
				if ((this._TeacherUserName != value))
				{
					this._TeacherUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MultiPartExpressionPreview")]
	internal partial class MultiPartExpressionPreviewEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MultiPartExpressionPreviewID;
		
		private string _QTIItemPreviewRequestID;
		
		private string _Expression;
		
		private string _EnableElements;
		
		private System.Nullable<int> _Order;
		
		private string _Rules;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<QTIItemPreviewRequestEntity> _QTIItemPreviewRequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMultiPartExpressionPreviewIDChanging(int value);
    partial void OnMultiPartExpressionPreviewIDChanged();
    partial void OnQTIItemPreviewRequestIDChanging(string value);
    partial void OnQTIItemPreviewRequestIDChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    partial void OnEnableElementsChanging(string value);
    partial void OnEnableElementsChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnRulesChanging(string value);
    partial void OnRulesChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public MultiPartExpressionPreviewEntity()
		{
			this._QTIItemPreviewRequestEntity = default(EntityRef<QTIItemPreviewRequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultiPartExpressionPreviewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MultiPartExpressionPreviewID
		{
			get
			{
				return this._MultiPartExpressionPreviewID;
			}
			set
			{
				if ((this._MultiPartExpressionPreviewID != value))
				{
					this.OnMultiPartExpressionPreviewIDChanging(value);
					this.SendPropertyChanging();
					this._MultiPartExpressionPreviewID = value;
					this.SendPropertyChanged("MultiPartExpressionPreviewID");
					this.OnMultiPartExpressionPreviewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemPreviewRequestID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string QTIItemPreviewRequestID
		{
			get
			{
				return this._QTIItemPreviewRequestID;
			}
			set
			{
				if ((this._QTIItemPreviewRequestID != value))
				{
					if (this._QTIItemPreviewRequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQTIItemPreviewRequestIDChanging(value);
					this.SendPropertyChanging();
					this._QTIItemPreviewRequestID = value;
					this.SendPropertyChanged("QTIItemPreviewRequestID");
					this.OnQTIItemPreviewRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(4000)")]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableElements", DbType="NVarChar(500)")]
		public string EnableElements
		{
			get
			{
				return this._EnableElements;
			}
			set
			{
				if ((this._EnableElements != value))
				{
					this.OnEnableElementsChanging(value);
					this.SendPropertyChanging();
					this._EnableElements = value;
					this.SendPropertyChanged("EnableElements");
					this.OnEnableElementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rules", DbType="NVarChar(MAX)")]
		public string Rules
		{
			get
			{
				return this._Rules;
			}
			set
			{
				if ((this._Rules != value))
				{
					this.OnRulesChanging(value);
					this.SendPropertyChanging();
					this._Rules = value;
					this.SendPropertyChanged("Rules");
					this.OnRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIItemPreviewRequestEntity_MultiPartExpressionPreviewEntity", Storage="_QTIItemPreviewRequestEntity", ThisKey="QTIItemPreviewRequestID", OtherKey="QTIItemPreviewRequestID", IsForeignKey=true)]
		public QTIItemPreviewRequestEntity QTIItemPreviewRequestEntity
		{
			get
			{
				return this._QTIItemPreviewRequestEntity.Entity;
			}
			set
			{
				QTIItemPreviewRequestEntity previousValue = this._QTIItemPreviewRequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._QTIItemPreviewRequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QTIItemPreviewRequestEntity.Entity = null;
						previousValue.MultiPartExpressionPreviewEntities.Remove(this);
					}
					this._QTIItemPreviewRequestEntity.Entity = value;
					if ((value != null))
					{
						value.MultiPartExpressionPreviewEntities.Add(this);
						this._QTIItemPreviewRequestID = value.QTIItemPreviewRequestID;
					}
					else
					{
						this._QTIItemPreviewRequestID = default(string);
					}
					this.SendPropertyChanged("QTIItemPreviewRequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentPreference")]
	public partial class StudentPreferencesEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentPreferenceID;
		
		private string _Level;
		
		private int _LevelID;
		
		private int _TestTypeID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedBy;
		
		private System.Nullable<int> _DataSetCategoryID;
		
		private EntitySet<StudentPreferenceDetailEntity> _StudentPreferenceDetailEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentPreferenceIDChanging(int value);
    partial void OnStudentPreferenceIDChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnTestTypeIDChanging(int value);
    partial void OnTestTypeIDChanged();
    partial void OnVirtualTestIDChanging(System.Nullable<int> value);
    partial void OnVirtualTestIDChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnDataSetCategoryIDChanging(System.Nullable<int> value);
    partial void OnDataSetCategoryIDChanged();
    #endregion
		
		public StudentPreferencesEntity()
		{
			this._StudentPreferenceDetailEntities = new EntitySet<StudentPreferenceDetailEntity>(new Action<StudentPreferenceDetailEntity>(this.attach_StudentPreferenceDetailEntities), new Action<StudentPreferenceDetailEntity>(this.detach_StudentPreferenceDetailEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPreferenceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentPreferenceID
		{
			get
			{
				return this._StudentPreferenceID;
			}
			set
			{
				if ((this._StudentPreferenceID != value))
				{
					this.OnStudentPreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._StudentPreferenceID = value;
					this.SendPropertyChanged("StudentPreferenceID");
					this.OnStudentPreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this.OnTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TestTypeID = value;
					this.SendPropertyChanged("TestTypeID");
					this.OnTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedBy", DbType="Int NOT NULL")]
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this.OnDataSetCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryID = value;
					this.SendPropertyChanged("DataSetCategoryID");
					this.OnDataSetCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentPreferencesEntity_StudentPreferenceDetailEntity", Storage="_StudentPreferenceDetailEntities", ThisKey="StudentPreferenceID", OtherKey="StudentPreferenceID")]
		public EntitySet<StudentPreferenceDetailEntity> StudentPreferenceDetailEntities
		{
			get
			{
				return this._StudentPreferenceDetailEntities;
			}
			set
			{
				this._StudentPreferenceDetailEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentPreferenceDetailEntities(StudentPreferenceDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.StudentPreferencesEntity = this;
		}
		
		private void detach_StudentPreferenceDetailEntities(StudentPreferenceDetailEntity entity)
		{
			this.SendPropertyChanging();
			entity.StudentPreferencesEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTest")]
	internal partial class TestEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualTestID;
		
		private string _Name;
		
		private int _StateID;
		
		private int _BankID;
		
		private int _VirtualTestSourceID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _AuthorUserID;
		
		private System.Nullable<bool> _Archived;
		
		private System.Nullable<int> _EditedByUserID;
		
		private System.Nullable<int> _AchievementLevelSettingID;
		
		private System.Nullable<int> _VirtualTestType;
		
		private string _Instruction;
		
		private System.Nullable<int> _PreQTIVirtualTestID;
		
		private System.Nullable<int> _PreProdVTID;
		
		private System.Nullable<int> _TestScoreMethodID;
		
		private System.Nullable<int> _VirtualTestSubTypeID;
		
		private System.Nullable<int> _DataSetOriginID;
		
		private System.Nullable<int> _DataSetCategoryID;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private System.Nullable<bool> _UsePointsEarnedConversion;
		
		private System.Nullable<bool> _HasUseRationale;
		
		private System.Nullable<bool> _IsNumberQuestions;
		
		private System.Nullable<bool> _IsMultipleTestResult;
		
		private System.Nullable<int> _NavigationMethodID;
		
		private System.Nullable<int> _ParentTestID;
		
		private System.Nullable<int> _OriginalTestID;
		
		private EntitySet<QuestionEntity> _QuestionEntities;
		
		private EntitySet<VirtualTestFileEntity> _VirtualTestFileEntities;
		
		private EntitySet<TestResultEntity> _TestResultEntities;
		
		private EntitySet<QuestionGroupEntity> _QuestionGroupEntities;
		
		private EntityRef<BankEntity> _BankEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnVirtualTestSourceIDChanging(int value);
    partial void OnVirtualTestSourceIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnAuthorUserIDChanging(System.Nullable<int> value);
    partial void OnAuthorUserIDChanged();
    partial void OnArchivedChanging(System.Nullable<bool> value);
    partial void OnArchivedChanged();
    partial void OnEditedByUserIDChanging(System.Nullable<int> value);
    partial void OnEditedByUserIDChanged();
    partial void OnAchievementLevelSettingIDChanging(System.Nullable<int> value);
    partial void OnAchievementLevelSettingIDChanged();
    partial void OnVirtualTestTypeChanging(System.Nullable<int> value);
    partial void OnVirtualTestTypeChanged();
    partial void OnInstructionChanging(string value);
    partial void OnInstructionChanged();
    partial void OnPreQTIVirtualTestIDChanging(System.Nullable<int> value);
    partial void OnPreQTIVirtualTestIDChanged();
    partial void OnPreProdVTIDChanging(System.Nullable<int> value);
    partial void OnPreProdVTIDChanged();
    partial void OnTestScoreMethodIDChanging(System.Nullable<int> value);
    partial void OnTestScoreMethodIDChanged();
    partial void OnVirtualTestSubTypeIDChanging(System.Nullable<int> value);
    partial void OnVirtualTestSubTypeIDChanged();
    partial void OnDataSetOriginIDChanging(System.Nullable<int> value);
    partial void OnDataSetOriginIDChanged();
    partial void OnDataSetCategoryIDChanging(System.Nullable<int> value);
    partial void OnDataSetCategoryIDChanged();
    partial void OnIsTeacherLedChanging(System.Nullable<bool> value);
    partial void OnIsTeacherLedChanged();
    partial void OnUsePointsEarnedConversionChanging(System.Nullable<bool> value);
    partial void OnUsePointsEarnedConversionChanged();
    partial void OnHasUseRationaleChanging(System.Nullable<bool> value);
    partial void OnHasUseRationaleChanged();
    partial void OnIsNumberQuestionsChanging(System.Nullable<bool> value);
    partial void OnIsNumberQuestionsChanged();
    partial void OnIsMultipleTestResultChanging(System.Nullable<bool> value);
    partial void OnIsMultipleTestResultChanged();
    partial void OnNavigationMethodIDChanging(System.Nullable<int> value);
    partial void OnNavigationMethodIDChanged();
    partial void OnParentTestIDChanging(System.Nullable<int> value);
    partial void OnParentTestIDChanged();
    partial void OnOriginalTestIDChanging(System.Nullable<int> value);
    partial void OnOriginalTestIDChanged();
    #endregion
		
		public TestEntity()
		{
			this._QuestionEntities = new EntitySet<QuestionEntity>(new Action<QuestionEntity>(this.attach_QuestionEntities), new Action<QuestionEntity>(this.detach_QuestionEntities));
			this._VirtualTestFileEntities = new EntitySet<VirtualTestFileEntity>(new Action<VirtualTestFileEntity>(this.attach_VirtualTestFileEntities), new Action<VirtualTestFileEntity>(this.detach_VirtualTestFileEntities));
			this._TestResultEntities = new EntitySet<TestResultEntity>(new Action<TestResultEntity>(this.attach_TestResultEntities), new Action<TestResultEntity>(this.detach_TestResultEntities));
			this._QuestionGroupEntities = new EntitySet<QuestionGroupEntity>(new Action<QuestionGroupEntity>(this.attach_QuestionGroupEntities), new Action<QuestionGroupEntity>(this.detach_QuestionGroupEntities));
			this._BankEntity = default(EntityRef<BankEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					if (this._BankEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this.OnVirtualTestSourceIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestSourceID = value;
					this.SendPropertyChanged("VirtualTestSourceID");
					this.OnVirtualTestSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this.OnAuthorUserIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorUserID = value;
					this.SendPropertyChanged("AuthorUserID");
					this.OnAuthorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int")]
		public System.Nullable<int> EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this.OnEditedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditedByUserID = value;
					this.SendPropertyChanged("EditedByUserID");
					this.OnEditedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevelSettingID", DbType="Int")]
		public System.Nullable<int> AchievementLevelSettingID
		{
			get
			{
				return this._AchievementLevelSettingID;
			}
			set
			{
				if ((this._AchievementLevelSettingID != value))
				{
					this.OnAchievementLevelSettingIDChanging(value);
					this.SendPropertyChanging();
					this._AchievementLevelSettingID = value;
					this.SendPropertyChanged("AchievementLevelSettingID");
					this.OnAchievementLevelSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestType", DbType="Int")]
		public System.Nullable<int> VirtualTestType
		{
			get
			{
				return this._VirtualTestType;
			}
			set
			{
				if ((this._VirtualTestType != value))
				{
					this.OnVirtualTestTypeChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestType = value;
					this.SendPropertyChanged("VirtualTestType");
					this.OnVirtualTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="VarChar(MAX)")]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreQTIVirtualTestID", DbType="Int")]
		public System.Nullable<int> PreQTIVirtualTestID
		{
			get
			{
				return this._PreQTIVirtualTestID;
			}
			set
			{
				if ((this._PreQTIVirtualTestID != value))
				{
					this.OnPreQTIVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._PreQTIVirtualTestID = value;
					this.SendPropertyChanged("PreQTIVirtualTestID");
					this.OnPreQTIVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProdVTID", DbType="Int")]
		public System.Nullable<int> PreProdVTID
		{
			get
			{
				return this._PreProdVTID;
			}
			set
			{
				if ((this._PreProdVTID != value))
				{
					this.OnPreProdVTIDChanging(value);
					this.SendPropertyChanging();
					this._PreProdVTID = value;
					this.SendPropertyChanged("PreProdVTID");
					this.OnPreProdVTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScoreMethodID", DbType="Int")]
		public System.Nullable<int> TestScoreMethodID
		{
			get
			{
				return this._TestScoreMethodID;
			}
			set
			{
				if ((this._TestScoreMethodID != value))
				{
					this.OnTestScoreMethodIDChanging(value);
					this.SendPropertyChanging();
					this._TestScoreMethodID = value;
					this.SendPropertyChanged("TestScoreMethodID");
					this.OnTestScoreMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSubTypeID", DbType="Int")]
		public System.Nullable<int> VirtualTestSubTypeID
		{
			get
			{
				return this._VirtualTestSubTypeID;
			}
			set
			{
				if ((this._VirtualTestSubTypeID != value))
				{
					this.OnVirtualTestSubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestSubTypeID = value;
					this.SendPropertyChanged("VirtualTestSubTypeID");
					this.OnVirtualTestSubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetOriginID", DbType="Int")]
		public System.Nullable<int> DataSetOriginID
		{
			get
			{
				return this._DataSetOriginID;
			}
			set
			{
				if ((this._DataSetOriginID != value))
				{
					this.OnDataSetOriginIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetOriginID = value;
					this.SendPropertyChanged("DataSetOriginID");
					this.OnDataSetOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this.OnDataSetCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryID = value;
					this.SendPropertyChanged("DataSetCategoryID");
					this.OnDataSetCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this.OnIsTeacherLedChanging(value);
					this.SendPropertyChanging();
					this._IsTeacherLed = value;
					this.SendPropertyChanged("IsTeacherLed");
					this.OnIsTeacherLedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePointsEarnedConversion", DbType="Bit")]
		public System.Nullable<bool> UsePointsEarnedConversion
		{
			get
			{
				return this._UsePointsEarnedConversion;
			}
			set
			{
				if ((this._UsePointsEarnedConversion != value))
				{
					this.OnUsePointsEarnedConversionChanging(value);
					this.SendPropertyChanging();
					this._UsePointsEarnedConversion = value;
					this.SendPropertyChanged("UsePointsEarnedConversion");
					this.OnUsePointsEarnedConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasUseRationale", DbType="Bit")]
		public System.Nullable<bool> HasUseRationale
		{
			get
			{
				return this._HasUseRationale;
			}
			set
			{
				if ((this._HasUseRationale != value))
				{
					this.OnHasUseRationaleChanging(value);
					this.SendPropertyChanging();
					this._HasUseRationale = value;
					this.SendPropertyChanged("HasUseRationale");
					this.OnHasUseRationaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNumberQuestions", DbType="Bit")]
		public System.Nullable<bool> IsNumberQuestions
		{
			get
			{
				return this._IsNumberQuestions;
			}
			set
			{
				if ((this._IsNumberQuestions != value))
				{
					this.OnIsNumberQuestionsChanging(value);
					this.SendPropertyChanging();
					this._IsNumberQuestions = value;
					this.SendPropertyChanged("IsNumberQuestions");
					this.OnIsNumberQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultipleTestResult", DbType="Bit")]
		public System.Nullable<bool> IsMultipleTestResult
		{
			get
			{
				return this._IsMultipleTestResult;
			}
			set
			{
				if ((this._IsMultipleTestResult != value))
				{
					this.OnIsMultipleTestResultChanging(value);
					this.SendPropertyChanging();
					this._IsMultipleTestResult = value;
					this.SendPropertyChanged("IsMultipleTestResult");
					this.OnIsMultipleTestResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigationMethodID", DbType="Int")]
		public System.Nullable<int> NavigationMethodID
		{
			get
			{
				return this._NavigationMethodID;
			}
			set
			{
				if ((this._NavigationMethodID != value))
				{
					this.OnNavigationMethodIDChanging(value);
					this.SendPropertyChanging();
					this._NavigationMethodID = value;
					this.SendPropertyChanged("NavigationMethodID");
					this.OnNavigationMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTestID", DbType="Int")]
		public System.Nullable<int> ParentTestID
		{
			get
			{
				return this._ParentTestID;
			}
			set
			{
				if ((this._ParentTestID != value))
				{
					this.OnParentTestIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTestID = value;
					this.SendPropertyChanged("ParentTestID");
					this.OnParentTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTestID", DbType="Int")]
		public System.Nullable<int> OriginalTestID
		{
			get
			{
				return this._OriginalTestID;
			}
			set
			{
				if ((this._OriginalTestID != value))
				{
					this.OnOriginalTestIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalTestID = value;
					this.SendPropertyChanged("OriginalTestID");
					this.OnOriginalTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_QuestionEntity", Storage="_QuestionEntities", ThisKey="VirtualTestID", OtherKey="VirtualTestID")]
		public EntitySet<QuestionEntity> QuestionEntities
		{
			get
			{
				return this._QuestionEntities;
			}
			set
			{
				this._QuestionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_VirtualTestFileEntity", Storage="_VirtualTestFileEntities", ThisKey="VirtualTestID", OtherKey="VirtualTestID")]
		public EntitySet<VirtualTestFileEntity> VirtualTestFileEntities
		{
			get
			{
				return this._VirtualTestFileEntities;
			}
			set
			{
				this._VirtualTestFileEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_TestResultEntity", Storage="_TestResultEntities", ThisKey="VirtualTestID", OtherKey="VirtualTestID")]
		public EntitySet<TestResultEntity> TestResultEntities
		{
			get
			{
				return this._TestResultEntities;
			}
			set
			{
				this._TestResultEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestEntity_QuestionGroupEntity", Storage="_QuestionGroupEntities", ThisKey="VirtualTestID", OtherKey="VirtualTestID")]
		public EntitySet<QuestionGroupEntity> QuestionGroupEntities
		{
			get
			{
				return this._QuestionGroupEntities;
			}
			set
			{
				this._QuestionGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankEntity_TestEntity", Storage="_BankEntity", ThisKey="BankID", OtherKey="BankID", IsForeignKey=true)]
		public BankEntity BankEntity
		{
			get
			{
				return this._BankEntity.Entity;
			}
			set
			{
				BankEntity previousValue = this._BankEntity.Entity;
				if (((previousValue != value) 
							|| (this._BankEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankEntity.Entity = null;
						previousValue.TestEntities.Remove(this);
					}
					this._BankEntity.Entity = value;
					if ((value != null))
					{
						value.TestEntities.Add(this);
						this._BankID = value.BankID;
					}
					else
					{
						this._BankID = default(int);
					}
					this.SendPropertyChanged("BankEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuestionEntities(QuestionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = this;
		}
		
		private void detach_QuestionEntities(QuestionEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = null;
		}
		
		private void attach_VirtualTestFileEntities(VirtualTestFileEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = this;
		}
		
		private void detach_VirtualTestFileEntities(VirtualTestFileEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = null;
		}
		
		private void attach_TestResultEntities(TestResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = this;
		}
		
		private void detach_TestResultEntities(TestResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = null;
		}
		
		private void attach_QuestionGroupEntities(QuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = this;
		}
		
		private void detach_QuestionGroupEntities(QuestionGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.TestEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preferences")]
	internal partial class PreferenceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PreferenceID;
		
		private string _Level;
		
		private int _ID;
		
		private string _Label;
		
		private string _Value;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreferenceIDChanging(int value);
    partial void OnPreferenceIDChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public PreferenceEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferenceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PreferenceID
		{
			get
			{
				return this._PreferenceID;
			}
			set
			{
				if ((this._PreferenceID != value))
				{
					this.OnPreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._PreferenceID = value;
					this.SendPropertyChanged("PreferenceID");
					this.OnPreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
	internal partial class SubjectEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		private EntitySet<BankEntity> _BankEntities;
		
		private EntitySet<VirtualSectionEntity> _VirtualSectionEntities;
		
		private EntityRef<GradeEntity> _GradeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGradeIDChanging(int value);
    partial void OnGradeIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public SubjectEntity()
		{
			this._BankEntities = new EntitySet<BankEntity>(new Action<BankEntity>(this.attach_BankEntities), new Action<BankEntity>(this.detach_BankEntities));
			this._VirtualSectionEntities = new EntitySet<VirtualSectionEntity>(new Action<VirtualSectionEntity>(this.attach_VirtualSectionEntities), new Action<VirtualSectionEntity>(this.detach_VirtualSectionEntities));
			this._GradeEntity = default(EntityRef<GradeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					if (this._GradeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGradeIDChanging(value);
					this.SendPropertyChanging();
					this._GradeID = value;
					this.SendPropertyChanged("GradeID");
					this.OnGradeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectEntity_BankEntity", Storage="_BankEntities", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<BankEntity> BankEntities
		{
			get
			{
				return this._BankEntities;
			}
			set
			{
				this._BankEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubjectEntity_VirtualSectionEntity", Storage="_VirtualSectionEntities", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<VirtualSectionEntity> VirtualSectionEntities
		{
			get
			{
				return this._VirtualSectionEntities;
			}
			set
			{
				this._VirtualSectionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GradeEntity_SubjectEntity", Storage="_GradeEntity", ThisKey="GradeID", OtherKey="GradeID", IsForeignKey=true)]
		public GradeEntity GradeEntity
		{
			get
			{
				return this._GradeEntity.Entity;
			}
			set
			{
				GradeEntity previousValue = this._GradeEntity.Entity;
				if (((previousValue != value) 
							|| (this._GradeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GradeEntity.Entity = null;
						previousValue.SubjectEntities.Remove(this);
					}
					this._GradeEntity.Entity = value;
					if ((value != null))
					{
						value.SubjectEntities.Add(this);
						this._GradeID = value.GradeID;
					}
					else
					{
						this._GradeID = default(int);
					}
					this.SendPropertyChanged("GradeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankEntities(BankEntity entity)
		{
			this.SendPropertyChanging();
			entity.SubjectEntity = this;
		}
		
		private void detach_BankEntities(BankEntity entity)
		{
			this.SendPropertyChanging();
			entity.SubjectEntity = null;
		}
		
		private void attach_VirtualSectionEntities(VirtualSectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.SubjectEntity = this;
		}
		
		private void detach_VirtualSectionEntities(VirtualSectionEntity entity)
		{
			this.SendPropertyChanging();
			entity.SubjectEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PerformanceBandVirtualTest")]
	public partial class PerformanceBandVirtualTest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PerformanceBandVirtualTestID;
		
		private int _VirtualTestID;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private int _Locked;
		
		private System.Nullable<int> _Level;
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerformanceBandVirtualTestIDChanging(int value);
    partial void OnPerformanceBandVirtualTestIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnLockedChanging(int value);
    partial void OnLockedChanged();
    partial void OnLevelChanging(System.Nullable<int> value);
    partial void OnLevelChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    #endregion
		
		public PerformanceBandVirtualTest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerformanceBandVirtualTestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PerformanceBandVirtualTestID
		{
			get
			{
				return this._PerformanceBandVirtualTestID;
			}
			set
			{
				if ((this._PerformanceBandVirtualTestID != value))
				{
					this.OnPerformanceBandVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._PerformanceBandVirtualTestID = value;
					this.SendPropertyChanged("PerformanceBandVirtualTestID");
					this.OnPerformanceBandVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Int NOT NULL")]
		public int Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSetCategoryDistrictDisplayName")]
	public partial class DataSetCategoryDistrictDisplayNameEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataSetCategoryId;
		
		private int _DistrictId;
		
		private string _CategoryDisplayName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataSetCategoryIdChanging(int value);
    partial void OnDataSetCategoryIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnCategoryDisplayNameChanging(string value);
    partial void OnCategoryDisplayNameChanged();
    #endregion
		
		public DataSetCategoryDistrictDisplayNameEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DataSetCategoryId
		{
			get
			{
				return this._DataSetCategoryId;
			}
			set
			{
				if ((this._DataSetCategoryId != value))
				{
					this.OnDataSetCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryId = value;
					this.SendPropertyChanged("DataSetCategoryId");
					this.OnDataSetCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDisplayName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CategoryDisplayName
		{
			get
			{
				return this._CategoryDisplayName;
			}
			set
			{
				if ((this._CategoryDisplayName != value))
				{
					this.OnCategoryDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryDisplayName = value;
					this.SendPropertyChanged("CategoryDisplayName");
					this.OnCategoryDisplayNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIOnlineTestSession")]
	internal partial class QTIOnlineTestSessionTREntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTIOnlineTestSessionID;
		
		private int _VirtualTestID;
		
		private int _StudentID;
		
		private System.DateTime _StartDate;
		
		private int _StatusID;
		
		private string _AssignmentGUID;
		
		private string _SessionQuestionOrder;
		
		private System.Nullable<bool> _TimeOver;
		
		private string _SectionFlag;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _PostAnswerOrder;
		
		private string _TestMetaJson;
		
		private EntitySet<TestResultEntity> _TestResultEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIOnlineTestSessionIDChanging(int value);
    partial void OnQTIOnlineTestSessionIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnAssignmentGUIDChanging(string value);
    partial void OnAssignmentGUIDChanged();
    partial void OnSessionQuestionOrderChanging(string value);
    partial void OnSessionQuestionOrderChanged();
    partial void OnTimeOverChanging(System.Nullable<bool> value);
    partial void OnTimeOverChanged();
    partial void OnSectionFlagChanging(string value);
    partial void OnSectionFlagChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnPostAnswerOrderChanging(string value);
    partial void OnPostAnswerOrderChanged();
    partial void OnTestMetaJsonChanging(string value);
    partial void OnTestMetaJsonChanged();
    #endregion
		
		public QTIOnlineTestSessionTREntity()
		{
			this._TestResultEntities = new EntitySet<TestResultEntity>(new Action<TestResultEntity>(this.attach_TestResultEntities), new Action<TestResultEntity>(this.detach_TestResultEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this.OnQTIOnlineTestSessionIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionID");
					this.OnQTIOnlineTestSessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentGUID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AssignmentGUID
		{
			get
			{
				return this._AssignmentGUID;
			}
			set
			{
				if ((this._AssignmentGUID != value))
				{
					this.OnAssignmentGUIDChanging(value);
					this.SendPropertyChanging();
					this._AssignmentGUID = value;
					this.SendPropertyChanged("AssignmentGUID");
					this.OnAssignmentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionQuestionOrder", DbType="VarChar(MAX)")]
		public string SessionQuestionOrder
		{
			get
			{
				return this._SessionQuestionOrder;
			}
			set
			{
				if ((this._SessionQuestionOrder != value))
				{
					this.OnSessionQuestionOrderChanging(value);
					this.SendPropertyChanging();
					this._SessionQuestionOrder = value;
					this.SendPropertyChanged("SessionQuestionOrder");
					this.OnSessionQuestionOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOver", DbType="Bit")]
		public System.Nullable<bool> TimeOver
		{
			get
			{
				return this._TimeOver;
			}
			set
			{
				if ((this._TimeOver != value))
				{
					this.OnTimeOverChanging(value);
					this.SendPropertyChanging();
					this._TimeOver = value;
					this.SendPropertyChanged("TimeOver");
					this.OnTimeOverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionFlag", DbType="VarChar(500)")]
		public string SectionFlag
		{
			get
			{
				return this._SectionFlag;
			}
			set
			{
				if ((this._SectionFlag != value))
				{
					this.OnSectionFlagChanging(value);
					this.SendPropertyChanging();
					this._SectionFlag = value;
					this.SendPropertyChanged("SectionFlag");
					this.OnSectionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostAnswerOrder", DbType="VarChar(MAX)")]
		public string PostAnswerOrder
		{
			get
			{
				return this._PostAnswerOrder;
			}
			set
			{
				if ((this._PostAnswerOrder != value))
				{
					this.OnPostAnswerOrderChanging(value);
					this.SendPropertyChanging();
					this._PostAnswerOrder = value;
					this.SendPropertyChanged("PostAnswerOrder");
					this.OnPostAnswerOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMetaJson", DbType="NVarChar(MAX)")]
		public string TestMetaJson
		{
			get
			{
				return this._TestMetaJson;
			}
			set
			{
				if ((this._TestMetaJson != value))
				{
					this.OnTestMetaJsonChanging(value);
					this.SendPropertyChanging();
					this._TestMetaJson = value;
					this.SendPropertyChanged("TestMetaJson");
					this.OnTestMetaJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTIOnlineTestSessionTREntity_TestResultEntity", Storage="_TestResultEntities", ThisKey="QTIOnlineTestSessionID", OtherKey="QTIOnlineTestSessionID")]
		public EntitySet<TestResultEntity> TestResultEntities
		{
			get
			{
				return this._TestResultEntities;
			}
			set
			{
				this._TestResultEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TestResultEntities(TestResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIOnlineTestSessionTREntity = this;
		}
		
		private void detach_TestResultEntities(TestResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.QTIOnlineTestSessionTREntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	internal partial class StudentTREntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private int _GenderID;
		
		private string _Code;
		
		private int _RaceID;
		
		private int _DistrictID;
		
		private string _AltCode;
		
		private string _Password;
		
		private string _Email;
		
		private string _Phone;
		
		private string _LoginCode;
		
		private System.Nullable<System.DateTime> _Dateofbirth;
		
		private System.Nullable<int> _PrimaryLanguageID;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _SISID;
		
		private string _StateCode;
		
		private string _Note01;
		
		private System.Nullable<int> _CurrentGradeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedUser;
		
		private string _ModifiedBy;
		
		private System.Nullable<int> _AdminSchoolID;
		
		private string _RegistrationCode;
		
		private string _FullName;
		
		private System.Nullable<System.DateTime> _RegistrationCodeEmailLastSent;
		
		private EntitySet<TestResultEntity> _TestResultEntities;
		
		private EntitySet<ClassStudentTREntity> _ClassStudentTREntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRaceIDChanging(int value);
    partial void OnRaceIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnAltCodeChanging(string value);
    partial void OnAltCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnLoginCodeChanging(string value);
    partial void OnLoginCodeChanged();
    partial void OnDateofbirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofbirthChanged();
    partial void OnPrimaryLanguageIDChanging(System.Nullable<int> value);
    partial void OnPrimaryLanguageIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnSISIDChanging(System.Nullable<int> value);
    partial void OnSISIDChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnNote01Changing(string value);
    partial void OnNote01Changed();
    partial void OnCurrentGradeIDChanging(System.Nullable<int> value);
    partial void OnCurrentGradeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedUserChanging(System.Nullable<int> value);
    partial void OnModifiedUserChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnAdminSchoolIDChanging(System.Nullable<int> value);
    partial void OnAdminSchoolIDChanged();
    partial void OnRegistrationCodeChanging(string value);
    partial void OnRegistrationCodeChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnRegistrationCodeEmailLastSentChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationCodeEmailLastSentChanged();
    #endregion
		
		public StudentTREntity()
		{
			this._TestResultEntities = new EntitySet<TestResultEntity>(new Action<TestResultEntity>(this.attach_TestResultEntities), new Action<TestResultEntity>(this.detach_TestResultEntities));
			this._ClassStudentTREntities = new EntitySet<ClassStudentTREntity>(new Action<ClassStudentTREntity>(this.attach_ClassStudentTREntities), new Action<ClassStudentTREntity>(this.detach_ClassStudentTREntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL")]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaceID", DbType="Int NOT NULL")]
		public int RaceID
		{
			get
			{
				return this._RaceID;
			}
			set
			{
				if ((this._RaceID != value))
				{
					this.OnRaceIDChanging(value);
					this.SendPropertyChanging();
					this._RaceID = value;
					this.SendPropertyChanged("RaceID");
					this.OnRaceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="VarChar(50)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this.OnAltCodeChanging(value);
					this.SendPropertyChanging();
					this._AltCode = value;
					this.SendPropertyChanged("AltCode");
					this.OnAltCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCode", DbType="VarChar(50)")]
		public string LoginCode
		{
			get
			{
				return this._LoginCode;
			}
			set
			{
				if ((this._LoginCode != value))
				{
					this.OnLoginCodeChanging(value);
					this.SendPropertyChanging();
					this._LoginCode = value;
					this.SendPropertyChanged("LoginCode");
					this.OnLoginCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dateofbirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dateofbirth
		{
			get
			{
				return this._Dateofbirth;
			}
			set
			{
				if ((this._Dateofbirth != value))
				{
					this.OnDateofbirthChanging(value);
					this.SendPropertyChanging();
					this._Dateofbirth = value;
					this.SendPropertyChanged("Dateofbirth");
					this.OnDateofbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryLanguageID", DbType="Int")]
		public System.Nullable<int> PrimaryLanguageID
		{
			get
			{
				return this._PrimaryLanguageID;
			}
			set
			{
				if ((this._PrimaryLanguageID != value))
				{
					this.OnPrimaryLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._PrimaryLanguageID = value;
					this.SendPropertyChanged("PrimaryLanguageID");
					this.OnPrimaryLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="Int")]
		public System.Nullable<int> SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this.OnSISIDChanging(value);
					this.SendPropertyChanging();
					this._SISID = value;
					this.SendPropertyChanged("SISID");
					this.OnSISIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(50)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note01", DbType="VarChar(100)")]
		public string Note01
		{
			get
			{
				return this._Note01;
			}
			set
			{
				if ((this._Note01 != value))
				{
					this.OnNote01Changing(value);
					this.SendPropertyChanging();
					this._Note01 = value;
					this.SendPropertyChanged("Note01");
					this.OnNote01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentGradeID", DbType="Int")]
		public System.Nullable<int> CurrentGradeID
		{
			get
			{
				return this._CurrentGradeID;
			}
			set
			{
				if ((this._CurrentGradeID != value))
				{
					this.OnCurrentGradeIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentGradeID = value;
					this.SendPropertyChanged("CurrentGradeID");
					this.OnCurrentGradeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUser", DbType="Int")]
		public System.Nullable<int> ModifiedUser
		{
			get
			{
				return this._ModifiedUser;
			}
			set
			{
				if ((this._ModifiedUser != value))
				{
					this.OnModifiedUserChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUser = value;
					this.SendPropertyChanged("ModifiedUser");
					this.OnModifiedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminSchoolID", DbType="Int")]
		public System.Nullable<int> AdminSchoolID
		{
			get
			{
				return this._AdminSchoolID;
			}
			set
			{
				if ((this._AdminSchoolID != value))
				{
					this.OnAdminSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._AdminSchoolID = value;
					this.SendPropertyChanged("AdminSchoolID");
					this.OnAdminSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationCode", DbType="VarChar(100)")]
		public string RegistrationCode
		{
			get
			{
				return this._RegistrationCode;
			}
			set
			{
				if ((this._RegistrationCode != value))
				{
					this.OnRegistrationCodeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationCode = value;
					this.SendPropertyChanged("RegistrationCode");
					this.OnRegistrationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", AutoSync=AutoSync.Always, DbType="VarChar(202) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationCodeEmailLastSent", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationCodeEmailLastSent
		{
			get
			{
				return this._RegistrationCodeEmailLastSent;
			}
			set
			{
				if ((this._RegistrationCodeEmailLastSent != value))
				{
					this.OnRegistrationCodeEmailLastSentChanging(value);
					this.SendPropertyChanging();
					this._RegistrationCodeEmailLastSent = value;
					this.SendPropertyChanged("RegistrationCodeEmailLastSent");
					this.OnRegistrationCodeEmailLastSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentTREntity_TestResultEntity", Storage="_TestResultEntities", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<TestResultEntity> TestResultEntities
		{
			get
			{
				return this._TestResultEntities;
			}
			set
			{
				this._TestResultEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentTREntity_ClassStudentTREntity", Storage="_ClassStudentTREntities", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<ClassStudentTREntity> ClassStudentTREntities
		{
			get
			{
				return this._ClassStudentTREntities;
			}
			set
			{
				this._ClassStudentTREntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TestResultEntities(TestResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.StudentTREntity = this;
		}
		
		private void detach_TestResultEntities(TestResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.StudentTREntity = null;
		}
		
		private void attach_ClassStudentTREntities(ClassStudentTREntity entity)
		{
			this.SendPropertyChanging();
			entity.StudentTREntity = this;
		}
		
		private void detach_ClassStudentTREntities(ClassStudentTREntity entity)
		{
			this.SendPropertyChanging();
			entity.StudentTREntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassStudent")]
	internal partial class ClassStudentTREntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassStudentID;
		
		private int _ClassID;
		
		private int _StudentID;
		
		private System.Nullable<bool> _Active;
		
		private string _Code;
		
		private System.Nullable<int> _SISID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<System.DateTime> _Started;
		
		private EntityRef<StudentTREntity> _StudentTREntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassStudentIDChanging(int value);
    partial void OnClassStudentIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSISIDChanging(System.Nullable<int> value);
    partial void OnSISIDChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedChanged();
    #endregion
		
		public ClassStudentTREntity()
		{
			this._StudentTREntity = default(EntityRef<StudentTREntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassStudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassStudentID
		{
			get
			{
				return this._ClassStudentID;
			}
			set
			{
				if ((this._ClassStudentID != value))
				{
					this.OnClassStudentIDChanging(value);
					this.SendPropertyChanging();
					this._ClassStudentID = value;
					this.SendPropertyChanged("ClassStudentID");
					this.OnClassStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._StudentTREntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="Int")]
		public System.Nullable<int> SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this.OnSISIDChanging(value);
					this.SendPropertyChanging();
					this._SISID = value;
					this.SendPropertyChanged("SISID");
					this.OnSISIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Date")]
		public System.Nullable<System.DateTime> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentTREntity_ClassStudentTREntity", Storage="_StudentTREntity", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StudentTREntity StudentTREntity
		{
			get
			{
				return this._StudentTREntity.Entity;
			}
			set
			{
				StudentTREntity previousValue = this._StudentTREntity.Entity;
				if (((previousValue != value) 
							|| (this._StudentTREntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentTREntity.Entity = null;
						previousValue.ClassStudentTREntities.Remove(this);
					}
					this._StudentTREntity.Entity = value;
					if ((value != null))
					{
						value.ClassStudentTREntities.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("StudentTREntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTITestStudentAssignment")]
	public partial class QTITestStudentAssignmentEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTITestStudentAssignmentID;
		
		private int _StudentId;
		
		private int _QTITestClassAssignmentID;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<bool> _IsHide;
		
		private EntityRef<QTITestClassAssignmentEntity> _QTITestClassAssignmentEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTITestStudentAssignmentIDChanging(int value);
    partial void OnQTITestStudentAssignmentIDChanged();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnQTITestClassAssignmentIDChanging(int value);
    partial void OnQTITestClassAssignmentIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnIsHideChanging(System.Nullable<bool> value);
    partial void OnIsHideChanged();
    #endregion
		
		public QTITestStudentAssignmentEntity()
		{
			this._QTITestClassAssignmentEntity = default(EntityRef<QTITestClassAssignmentEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestStudentAssignmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTITestStudentAssignmentID
		{
			get
			{
				return this._QTITestStudentAssignmentID;
			}
			set
			{
				if ((this._QTITestStudentAssignmentID != value))
				{
					this.OnQTITestStudentAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._QTITestStudentAssignmentID = value;
					this.SendPropertyChanged("QTITestStudentAssignmentID");
					this.OnQTITestStudentAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int NOT NULL")]
		public int QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					if (this._QTITestClassAssignmentEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQTITestClassAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._QTITestClassAssignmentID = value;
					this.SendPropertyChanged("QTITestClassAssignmentID");
					this.OnQTITestClassAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this.OnIsHideChanging(value);
					this.SendPropertyChanging();
					this._IsHide = value;
					this.SendPropertyChanged("IsHide");
					this.OnIsHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QTITestClassAssignmentEntity_QTITestStudentAssignmentEntity", Storage="_QTITestClassAssignmentEntity", ThisKey="QTITestClassAssignmentID", OtherKey="QTITestClassAssignmentID", IsForeignKey=true)]
		public QTITestClassAssignmentEntity QTITestClassAssignmentEntity
		{
			get
			{
				return this._QTITestClassAssignmentEntity.Entity;
			}
			set
			{
				QTITestClassAssignmentEntity previousValue = this._QTITestClassAssignmentEntity.Entity;
				if (((previousValue != value) 
							|| (this._QTITestClassAssignmentEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QTITestClassAssignmentEntity.Entity = null;
						previousValue.QTITestStudentAssignmentEntities.Remove(this);
					}
					this._QTITestClassAssignmentEntity.Entity = value;
					if ((value != null))
					{
						value.QTITestStudentAssignmentEntities.Add(this);
						this._QTITestClassAssignmentID = value.QTITestClassAssignmentID;
					}
					else
					{
						this._QTITestClassAssignmentID = default(int);
					}
					this.SendPropertyChanged("QTITestClassAssignmentEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetAuthorBySchoolAdminResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _DistrictID;
		
		public GetAuthorBySchoolAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}

    public partial class VirtualSection
    {
        private int _VirtualSectionID;

        private int _VirtualTestID;

        private int _Order;

        private string _Title;

        private string _Instruction;

        private string _MediaReference;

        private string _AudioRef;

        private string _VideoRef;

        private string _MediaSource;

        private System.Nullable<int> _ConversionSetID;

        private System.Nullable<int> _SubjectID;

        private int _Mode;


        public VirtualSection()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualSectionID", DbType = "Int NOT NULL")]
        public int VirtualSectionID
        {
            get
            {
                return this._VirtualSectionID;
            }
            set
            {
                if ((this._VirtualSectionID != value))
                {
                    this._VirtualSectionID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestID", DbType = "Int NOT NULL")]
        public int VirtualTestID
        {
            get
            {
                return this._VirtualTestID;
            }
            set
            {
                if ((this._VirtualTestID != value))
                {
                    this._VirtualTestID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Order", DbType = "Int NOT NULL")]
        public int Order
        {
            get
            {
                return this._Order;
            }
            set
            {
                if ((this._Order != value))
                {
                    this._Order = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "VarChar(100)")]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this._Title = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Instruction", DbType = "VarChar(2000)")]
        public string Instruction
        {
            get
            {
                return this._Instruction;
            }
            set
            {
                if ((this._Instruction != value))
                {
                    this._Instruction = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MediaReference", DbType = "VarChar(500)")]
        public string MediaReference
        {
            get
            {
                return this._MediaReference;
            }
            set
            {
                if ((this._MediaReference != value))
                {
                    this._MediaReference = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AudioRef", DbType = "VarChar(500)")]
        public string AudioRef
        {
            get
            {
                return this._AudioRef;
            }
            set
            {
                if ((this._AudioRef != value))
                {
                    this._AudioRef = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VideoRef", DbType = "VarChar(500)")]
        public string VideoRef
        {
            get
            {
                return this._VideoRef;
            }
            set
            {
                if ((this._VideoRef != value))
                {
                    this._VideoRef = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MediaSource", DbType = "VarChar(500)")]
        public string MediaSource
        {
            get
            {
                return this._MediaSource;
            }
            set
            {
                if ((this._MediaSource != value))
                {
                    this._MediaSource = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConversionSetID", DbType = "Int")]
        public System.Nullable<int> ConversionSetID
        {
            get
            {
                return this._ConversionSetID;
            }
            set
            {
                if ((this._ConversionSetID != value))
                {
                    this._ConversionSetID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubjectID", DbType = "Int")]
        public System.Nullable<int> SubjectID
        {
            get
            {
                return this._SubjectID;
            }
            set
            {
                if ((this._SubjectID != value))
                {
                    this._SubjectID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mode", DbType = "Int NOT NULL")]
        public int Mode
        {
            get
            {
                return this._Mode;
            }
            set
            {
                if ((this._Mode != value))
                {
                    this._Mode = value;
                }
            }
        }
    }

    public partial class AuthorTestProcResult
	{
		
		private string _UserName;
		
		private string _NameLast;
		
		private string _NameFirst;
		
		private int _UserID;
		
		private int _DistrictID;
		
		private int _ClassID;
		
		private int _VirtualTestSourceID;
		
		public AuthorTestProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
	}
	
	public partial class ProcBankResult
	{
		
		private int _bankId;
		
		private string _name;
		
		public ProcBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankId", DbType="Int NOT NULL")]
		public int bankId
		{
			get
			{
				return this._bankId;
			}
			set
			{
				if ((this._bankId != value))
				{
					this._bankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class ProcSubjectResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public ProcSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetQTIBankListResult
	{
		
		private int _QTIBankID;
		
		private string _Name;
		
		private string _Author;
		
		private string _QTIGroupSet;
		
		private string _DistrictName;
		
		private string _SchoolName;
		
		public GetQTIBankListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupSet", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string QTIGroupSet
		{
			get
			{
				return this._QTIGroupSet;
			}
			set
			{
				if ((this._QTIGroupSet != value))
				{
					this._QTIGroupSet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
	}
	
	public partial class GetBanksResult
	{
		
		private int _bankId;
		
		private string _name;
		
		public GetBanksResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankId", DbType="Int NOT NULL")]
		public int bankId
		{
			get
			{
				return this._bankId;
			}
			set
			{
				if ((this._bankId != value))
				{
					this._bankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class CheckValidVirtualTestResult
	{
		
		private System.Nullable<int> _VirtualTestStatus;
		
		public CheckValidVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestStatus", DbType="Int")]
		public System.Nullable<int> VirtualTestStatus
		{
			get
			{
				return this._VirtualTestStatus;
			}
			set
			{
				if ((this._VirtualTestStatus != value))
				{
					this._VirtualTestStatus = value;
				}
			}
		}
	}
	
	public partial class ProcGradeResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public ProcGradeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class GetPreferencesForOnlineTestResult
	{
		
		private string _Column1;
		
		public GetPreferencesForOnlineTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(4000)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetStateStandardGradesByStateAndSubjectResult
	{
		
		private string _State;
		
		private string _Subject;
		
		private System.Nullable<int> _GradeID;
		
		private System.Nullable<int> _GradeOrder;
		
		private string _Grade;
		
		private int _GradeID1;
		
		private string _Name;
		
		private int _Order;
		
		public GetStateStandardGradesByStateAndSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(200)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int")]
		public System.Nullable<int> GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeOrder", DbType="Int")]
		public System.Nullable<int> GradeOrder
		{
			get
			{
				return this._GradeOrder;
			}
			set
			{
				if ((this._GradeOrder != value))
				{
					this._GradeOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID1", DbType="Int NOT NULL")]
		public int GradeID1
		{
			get
			{
				return this._GradeID1;
			}
			set
			{
				if ((this._GradeID1 != value))
				{
					this._GradeID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class ListQTIBanksResult
	{
		
		private int _QTIBankID;
		
		private string _Name;
		
		private int _UserID;
		
		private int _AccessID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _AuthorGroupID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _AuthoGroupName;
		
		public ListQTIBanksResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessID", DbType="Int NOT NULL")]
		public int AccessID
		{
			get
			{
				return this._AccessID;
			}
			set
			{
				if ((this._AccessID != value))
				{
					this._AccessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorGroupID", DbType="Int")]
		public System.Nullable<int> AuthorGroupID
		{
			get
			{
				return this._AuthorGroupID;
			}
			set
			{
				if ((this._AuthorGroupID != value))
				{
					this._AuthorGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthoGroupName", DbType="VarChar(64)")]
		public string AuthoGroupName
		{
			get
			{
				return this._AuthoGroupName;
			}
			set
			{
				if ((this._AuthoGroupName != value))
				{
					this._AuthoGroupName = value;
				}
			}
		}
	}
	
	public partial class GetQTIBankModifiedDateResult
	{
		
		private System.Nullable<System.DateTime> _QTIBankModifiedDate;
		
		private System.Nullable<System.DateTime> _QTIGroupModifiedDate;
		
		private System.Nullable<System.DateTime> _QTIItemModifiedDate;
		
		public GetQTIBankModifiedDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QTIBankModifiedDate
		{
			get
			{
				return this._QTIBankModifiedDate;
			}
			set
			{
				if ((this._QTIBankModifiedDate != value))
				{
					this._QTIBankModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QTIGroupModifiedDate
		{
			get
			{
				return this._QTIGroupModifiedDate;
			}
			set
			{
				if ((this._QTIGroupModifiedDate != value))
				{
					this._QTIGroupModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QTIItemModifiedDate
		{
			get
			{
				return this._QTIItemModifiedDate;
			}
			set
			{
				if ((this._QTIItemModifiedDate != value))
				{
					this._QTIItemModifiedDate = value;
				}
			}
		}
	}
	
	public partial class StudentDistrictProcResult
	{
		
		private int _DistrictID;
		
		private int _StudentID;
		
		private string _StudentCustom;
		
		public StudentDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
	}
	
	public partial class ClassDistrictProcResult
	{
		
		private int _DistrictID;
		
		private int _ClassID;
		
		private string _ClassNameCustom;
		
		public ClassDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
	}
	
	public partial class PrimaryTeacherDitrictProcResult
	{
		
		private string _UserName;
		
		private int _UserID;
		
		public PrimaryTeacherDitrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(155)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	public partial class VirtualTestDistrictProcResult
	{
		
		private string _TestNameCustom;
		
		private int _VirtualTestID;
		
		private int _DistrictID;
		
		public VirtualTestDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(259)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	public partial class SchoolDitrictProcResult
	{
		
		private string _Name;
		
		private int _SchoolID;
		
		public SchoolDitrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
	}
	
	public partial class ACTProcSubjectResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public ACTProcSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class ACTProcBankResult
	{
		
		private int _bankId;
		
		private string _name;
		
		public ACTProcBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankId", DbType="Int NOT NULL")]
		public int bankId
		{
			get
			{
				return this._bankId;
			}
			set
			{
				if ((this._bankId != value))
				{
					this._bankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class ACTProcGradeResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public ACTProcGradeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class ACTProcVirtualTestResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		public ACTProcVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetSubjectsForItemSetSaveTestResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public GetSubjectsForItemSetSaveTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetGradesForItemSetSaveTestResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public GetGradesForItemSetSaveTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class GetBanksForItemSetSaveTestResult
	{
		
		private int _bankId;
		
		private string _name;
		
		public GetBanksForItemSetSaveTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankId", DbType="Int NOT NULL")]
		public int bankId
		{
			get
			{
				return this._bankId;
			}
			set
			{
				if ((this._bankId != value))
				{
					this._bankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class CanDeleteBankResult
	{
		
		private System.Nullable<bool> _Column1;
		
		public CanDeleteBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Bit")]
		public System.Nullable<bool> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetVirtualTestForPrintingResult
	{
		
		private string _TestName;
		
		private string _TestInstruction;
		
		private int _VirtualSectionID;
		
		private string _SectionTitle;
		
		private int _SectionOrder;
		
		private string _SectionInstruction;
		
		private System.Nullable<int> _SectionReferenceID;
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private int _QTIItemID;
		
		private string _Title;
		
		private int _QTIGroupID;
		
		private string _XmlContent;
		
		private string _UrlPath;
		
		public GetVirtualTestForPrintingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInstruction", DbType="VarChar(MAX)")]
		public string TestInstruction
		{
			get
			{
				return this._TestInstruction;
			}
			set
			{
				if ((this._TestInstruction != value))
				{
					this._TestInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="VarChar(100)")]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this._SectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOrder", DbType="Int NOT NULL")]
		public int SectionOrder
		{
			get
			{
				return this._SectionOrder;
			}
			set
			{
				if ((this._SectionOrder != value))
				{
					this._SectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionInstruction", DbType="VarChar(2000)")]
		public string SectionInstruction
		{
			get
			{
				return this._SectionInstruction;
			}
			set
			{
				if ((this._SectionInstruction != value))
				{
					this._SectionInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionReferenceID", DbType="Int")]
		public System.Nullable<int> SectionReferenceID
		{
			get
			{
				return this._SectionReferenceID;
			}
			set
			{
				if ((this._SectionReferenceID != value))
				{
					this._SectionReferenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this._UrlPath = value;
				}
			}
		}
	}
	
	public partial class GetGradesByStateIDForManageTestResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public GetGradesByStateIDForManageTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class CheckAssignSameTest1Result
	{
		
		private int _StudentID;
		
		private string _ClassName;
		
		private string _TeacherName;
		
		private string _SchoolName;
		
		private string _FirstName;
		
		private string _LastName;
		
		public CheckAssignSameTest1Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
	}
	
	public partial class TermDistrictProcResult
	{
		
		private int _DistrictID;
		
		private int _DistrictTermID;
		
		private string _DistrictTermName;
		
		public TermDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
	}
	
	public partial class GetRubricsResult
	{
		
		private string _SubjectName;
		
		private int _SubjectID;
		
		private int _GradeID;
		
		private string _GradeName;
		
		private string _BankName;
		
		private string _Author;
		
		private int _BankID;
		
		private string _FileName;
		
		private System.Nullable<int> _VirtualTestFileID;
		
		private string _FileKey;
		
		private string _TestName;
		
		private System.Nullable<int> _AuthorUserID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _DistrictID;
		
		public GetRubricsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(500)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(103)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(500)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestFileID", DbType="Int")]
		public System.Nullable<int> VirtualTestFileID
		{
			get
			{
				return this._VirtualTestFileID;
			}
			set
			{
				if ((this._VirtualTestFileID != value))
				{
					this._VirtualTestFileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileKey", DbType="VarChar(255)")]
		public string FileKey
		{
			get
			{
				return this._FileKey;
			}
			set
			{
				if ((this._FileKey != value))
				{
					this._FileKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this._AuthorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	public partial class GetSubjectByGradeIdAndAuthorResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public GetSubjectByGradeIdAndAuthorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetBanksBySubjectNameResult
	{
		
		private int _BankID;
		
		private string _Name;

        private int _SubjectID;

        public GetBanksBySubjectNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubjectID", DbType = "Int")]
        public int SubjectID
        {
            get
            {
                return this._SubjectID;
            }
            set
            {
                if ((this._SubjectID != value))
                {
                    this._SubjectID = value;
                }
            }
        }

    }
	
	public partial class GetPreferencesWithDefaultForOnlineTestResult
	{
		
		private string _Level;
		
		private int _ID;
		
		private string _Value;
		
		private System.Nullable<bool> _BankLocked;
		
		public GetPreferencesWithDefaultForOnlineTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankLocked", DbType="Bit")]
		public System.Nullable<bool> BankLocked
		{
			get
			{
				return this._BankLocked;
			}
			set
			{
				if ((this._BankLocked != value))
				{
					this._BankLocked = value;
				}
			}
		}
	}
	
	public partial class GetQtiItemBanksPersonalResult
	{
		
		private int _QTIBankID;
		
		private string _Name;
		
		public GetQtiItemBanksPersonalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class SATProcBankResult
	{
		
		private int _BankID;
		
		private string _Name;
		
		public SATProcBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class SATProcVirtualTestResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		public SATProcVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class SATProcGradeResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public SATProcGradeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class SATProcSubjectResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public SATProcSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetGhostQuestionsResult
	{
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		public GetGhostQuestionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
	}
	
	public partial class GetMaxQuestionOrderResult
	{
		
		private System.Nullable<int> _Column1;
		
		public GetMaxQuestionOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetBaseQuestionsResult
	{
		
		private int _VirtualSectionQuestionId;
		
		private int _VirtualSectionId;
		
		private int _VirtualQuestionId;
		
		private int _Order;
		
		public GetBaseQuestionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionId", DbType="Int NOT NULL")]
		public int VirtualSectionQuestionId
		{
			get
			{
				return this._VirtualSectionQuestionId;
			}
			set
			{
				if ((this._VirtualSectionQuestionId != value))
				{
					this._VirtualSectionQuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionId", DbType="Int NOT NULL")]
		public int VirtualSectionId
		{
			get
			{
				return this._VirtualSectionId;
			}
			set
			{
				if ((this._VirtualSectionId != value))
				{
					this._VirtualSectionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionId", DbType="Int NOT NULL")]
		public int VirtualQuestionId
		{
			get
			{
				return this._VirtualQuestionId;
			}
			set
			{
				if ((this._VirtualQuestionId != value))
				{
					this._VirtualQuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class GetBankByDistrictIdResult
	{
		
		private int _BankID;
		
		private string _Name;
		
		public GetBankByDistrictIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetClassesHaveTestResultResult
	{
		
		private int _ClassID;
		
		private string _NAME;
		
		public GetClassesHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class GetSchoolByDistrictIdAndBankIdResult
	{
		
		private int _SchoolID;
		
		private string _NAME;
		
		public GetSchoolByDistrictIdAndBankIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class GetTeacherByDistrictIdAndBankIdAndSchoolIdResult
	{
		
		private int _UserID;
		
		private string _TeacherName;
		
		public GetTeacherByDistrictIdAndBankIdAndSchoolIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(155)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
	}
	
	public partial class GetTermsHaveTestResultResult
	{
		
		private int _DistrictTermID;
		
		private string _NAME;
		
		public GetTermsHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class SpecializedGetAllTestResultIdByFilterResult
	{
		
		private int _BankID;
		
		private string _Name;
		
		private int _studentID;
		
		private string _StudentCode;
		
		private string _StudentNameCustom;
		
		private string _ClassNameCustom;
		
		private string _TeacherCustom;
		
		private string _SchoolName;
		
		public SpecializedGetAllTestResultIdByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="Int NOT NULL")]
		public int studentID
		{
			get
			{
				return this._studentID;
			}
			set
			{
				if ((this._studentID != value))
				{
					this._studentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentNameCustom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentNameCustom
		{
			get
			{
				return this._StudentNameCustom;
			}
			set
			{
				if ((this._StudentNameCustom != value))
				{
					this._StudentNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(155)")]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
	}
	
	public partial class fnCanPrintQuestionAndAnswerKeyResult
	{
		
		private System.Nullable<bool> _CanPrintQuestion;
		
		private System.Nullable<bool> _CanPrintAnswerKey;
		
		public fnCanPrintQuestionAndAnswerKeyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrintQuestion", DbType="Bit")]
		public System.Nullable<bool> CanPrintQuestion
		{
			get
			{
				return this._CanPrintQuestion;
			}
			set
			{
				if ((this._CanPrintQuestion != value))
				{
					this._CanPrintQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrintAnswerKey", DbType="Bit")]
		public System.Nullable<bool> CanPrintAnswerKey
		{
			get
			{
				return this._CanPrintAnswerKey;
			}
			set
			{
				if ((this._CanPrintAnswerKey != value))
				{
					this._CanPrintAnswerKey = value;
				}
			}
		}
	}
	
	public partial class GetAnswerForLogByTestResultIDResult
	{
		
		private int _AnswerID;
		
		private int _PointsEarned;
		
		private int _PointsPossible;
		
		private bool _WasAnswered;
		
		private int _TestResultID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerLetter;
		
		private bool _Blocked;
		
		private string _AnswerText;
		
		private string _BubbleSheetErrorType;
		
		private string _ResponseIdentifier;
		
		private string _AnswerImage;
		
		private string _HighlightQuestion;
		
		private string _HighlightPassage;
		
		private System.Nullable<bool> _Overridden;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		public GetAnswerForLogByTestResultIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasAnswered", DbType="Bit NOT NULL")]
		public bool WasAnswered
		{
			get
			{
				return this._WasAnswered;
			}
			set
			{
				if ((this._WasAnswered != value))
				{
					this._WasAnswered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetter", DbType="VarChar(200)")]
		public string AnswerLetter
		{
			get
			{
				return this._AnswerLetter;
			}
			set
			{
				if ((this._AnswerLetter != value))
				{
					this._AnswerLetter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blocked", DbType="Bit NOT NULL")]
		public bool Blocked
		{
			get
			{
				return this._Blocked;
			}
			set
			{
				if ((this._Blocked != value))
				{
					this._Blocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this._AnswerText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetErrorType", DbType="VarChar(10)")]
		public string BubbleSheetErrorType
		{
			get
			{
				return this._BubbleSheetErrorType;
			}
			set
			{
				if ((this._BubbleSheetErrorType != value))
				{
					this._BubbleSheetErrorType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseIdentifier", DbType="VarChar(50)")]
		public string ResponseIdentifier
		{
			get
			{
				return this._ResponseIdentifier;
			}
			set
			{
				if ((this._ResponseIdentifier != value))
				{
					this._ResponseIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerImage", DbType="NVarChar(MAX)")]
		public string AnswerImage
		{
			get
			{
				return this._AnswerImage;
			}
			set
			{
				if ((this._AnswerImage != value))
				{
					this._AnswerImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightQuestion", DbType="NVarChar(MAX)")]
		public string HighlightQuestion
		{
			get
			{
				return this._HighlightQuestion;
			}
			set
			{
				if ((this._HighlightQuestion != value))
				{
					this._HighlightQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightPassage", DbType="NVarChar(MAX)")]
		public string HighlightPassage
		{
			get
			{
				return this._HighlightPassage;
			}
			set
			{
				if ((this._HighlightPassage != value))
				{
					this._HighlightPassage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridden", DbType="Bit")]
		public System.Nullable<bool> Overridden
		{
			get
			{
				return this._Overridden;
			}
			set
			{
				if ((this._Overridden != value))
				{
					this._Overridden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
	}
	
	public partial class GetAnswerSubForLogByAnswerIDResult
	{
		
		private int _AnswerSubID;
		
		private int _AnswerID;
		
		private int _VirtualQuestionSubID;
		
		private int _PointsEarned;
		
		private int _PointsPossible;
		
		private string _AnswerLetter;
		
		private string _AnswerText;
		
		private string _ResponseIdentifier;
		
		private System.Nullable<bool> _Overridden;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		public GetAnswerSubForLogByAnswerIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubID", DbType="Int NOT NULL")]
		public int AnswerSubID
		{
			get
			{
				return this._AnswerSubID;
			}
			set
			{
				if ((this._AnswerSubID != value))
				{
					this._AnswerSubID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionSubID", DbType="Int NOT NULL")]
		public int VirtualQuestionSubID
		{
			get
			{
				return this._VirtualQuestionSubID;
			}
			set
			{
				if ((this._VirtualQuestionSubID != value))
				{
					this._VirtualQuestionSubID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetter", DbType="VarChar(200)")]
		public string AnswerLetter
		{
			get
			{
				return this._AnswerLetter;
			}
			set
			{
				if ((this._AnswerLetter != value))
				{
					this._AnswerLetter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this._AnswerText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseIdentifier", DbType="VarChar(50)")]
		public string ResponseIdentifier
		{
			get
			{
				return this._ResponseIdentifier;
			}
			set
			{
				if ((this._ResponseIdentifier != value))
				{
					this._ResponseIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridden", DbType="Bit")]
		public System.Nullable<bool> Overridden
		{
			get
			{
				return this._Overridden;
			}
			set
			{
				if ((this._Overridden != value))
				{
					this._Overridden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
	}
	
	public partial class GetTestResultDetailsResult
	{
		
		private int _TestResultID;
		
		private int _VirtualTestID;
		
		private int _StudentID;
		
		private System.Nullable<int> _TeacherID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.DateTime _ResultDate;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.Nullable<int> _TermID;
		
		private System.Nullable<int> _ClassID;
		
		private int _GradedByID;
		
		private int _ScoreType;
		
		private System.Nullable<decimal> _ScoreValue;
		
		private string _TRData;
		
		private System.Nullable<int> _SubmitType;
		
		private System.Nullable<int> _DistrictTermID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _OriginalUserID;
		
		private string _UIN;
		
		private System.Nullable<int> _LegacyBatchID;
		
		private System.Nullable<int> _BubbleSheetID;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private int _DistrictTermID1;
		
		private string _DistrictTermName;
		
		private int _SchoolID1;
		
		private string _SchoolName;
		
		private int _UserID1;
		
		private string _Username;
		
		private int _ClassID1;
		
		private string _ClassName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _TestName;
		
		public GetTestResultDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this._TeacherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int")]
		public System.Nullable<int> TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this._TermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedByID", DbType="Int NOT NULL")]
		public int GradedByID
		{
			get
			{
				return this._GradedByID;
			}
			set
			{
				if ((this._GradedByID != value))
				{
					this._GradedByID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreType", DbType="Int NOT NULL")]
		public int ScoreType
		{
			get
			{
				return this._ScoreType;
			}
			set
			{
				if ((this._ScoreType != value))
				{
					this._ScoreType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ScoreValue
		{
			get
			{
				return this._ScoreValue;
			}
			set
			{
				if ((this._ScoreValue != value))
				{
					this._ScoreValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRData", DbType="VarChar(4000)")]
		public string TRData
		{
			get
			{
				return this._TRData;
			}
			set
			{
				if ((this._TRData != value))
				{
					this._TRData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitType", DbType="Int")]
		public System.Nullable<int> SubmitType
		{
			get
			{
				return this._SubmitType;
			}
			set
			{
				if ((this._SubmitType != value))
				{
					this._SubmitType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalUserID", DbType="Int")]
		public System.Nullable<int> OriginalUserID
		{
			get
			{
				return this._OriginalUserID;
			}
			set
			{
				if ((this._OriginalUserID != value))
				{
					this._OriginalUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UIN", DbType="VarChar(50)")]
		public string UIN
		{
			get
			{
				return this._UIN;
			}
			set
			{
				if ((this._UIN != value))
				{
					this._UIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyBatchID", DbType="Int")]
		public System.Nullable<int> LegacyBatchID
		{
			get
			{
				return this._LegacyBatchID;
			}
			set
			{
				if ((this._LegacyBatchID != value))
				{
					this._LegacyBatchID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetID", DbType="Int")]
		public System.Nullable<int> BubbleSheetID
		{
			get
			{
				return this._BubbleSheetID;
			}
			set
			{
				if ((this._BubbleSheetID != value))
				{
					this._BubbleSheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID1", DbType="Int NOT NULL")]
		public int DistrictTermID1
		{
			get
			{
				return this._DistrictTermID1;
			}
			set
			{
				if ((this._DistrictTermID1 != value))
				{
					this._DistrictTermID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID1", DbType="Int NOT NULL")]
		public int SchoolID1
		{
			get
			{
				return this._SchoolID1;
			}
			set
			{
				if ((this._SchoolID1 != value))
				{
					this._SchoolID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID1", DbType="Int NOT NULL")]
		public int UserID1
		{
			get
			{
				return this._UserID1;
			}
			set
			{
				if ((this._UserID1 != value))
				{
					this._UserID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID1", DbType="Int NOT NULL")]
		public int ClassID1
		{
			get
			{
				return this._ClassID1;
			}
			set
			{
				if ((this._ClassID1 != value))
				{
					this._ClassID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
	}
	
	public partial class GetTestResultProgramsByTestResultIDResult
	{
		
		private int _TestResultProgramID;
		
		private int _TestResultID;
		
		private int _ProgramID;
		
		public GetTestResultProgramsByTestResultIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultProgramID", DbType="Int NOT NULL")]
		public int TestResultProgramID
		{
			get
			{
				return this._TestResultProgramID;
			}
			set
			{
				if ((this._TestResultProgramID != value))
				{
					this._TestResultProgramID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", DbType="Int NOT NULL")]
		public int ProgramID
		{
			get
			{
				return this._ProgramID;
			}
			set
			{
				if ((this._ProgramID != value))
				{
					this._ProgramID = value;
				}
			}
		}
	}
	
	public partial class GetTestResultProgramsByTestResultIDsResult
	{
		
		private int _TestResultProgramID;
		
		private int _TestResultID;
		
		private int _ProgramID;
		
		public GetTestResultProgramsByTestResultIDsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultProgramID", DbType="Int NOT NULL")]
		public int TestResultProgramID
		{
			get
			{
				return this._TestResultProgramID;
			}
			set
			{
				if ((this._TestResultProgramID != value))
				{
					this._TestResultProgramID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", DbType="Int NOT NULL")]
		public int ProgramID
		{
			get
			{
				return this._ProgramID;
			}
			set
			{
				if ((this._ProgramID != value))
				{
					this._ProgramID = value;
				}
			}
		}
	}
	
	public partial class GetTestResultScoreForLogByTestResultIDResult
	{
		
		private int _TestResultScoreID;
		
		private int _TestResultID;
		
		private System.Nullable<bool> _TookTest;
		
		private System.Nullable<decimal> _ScorePercent;
		
		private System.Nullable<decimal> _ScorePercentage;
		
		private System.Nullable<decimal> _ScoreRaw;
		
		private System.Nullable<decimal> _ScoreScaled;
		
		private System.Nullable<decimal> _ScoreLexile;
		
		private System.Nullable<decimal> _ScoreIndex;
		
		private bool _UsePercent;
		
		private bool _UsePercentage;
		
		private bool _UseRaw;
		
		private bool _UseScaled;
		
		private System.Nullable<bool> _UseLexile;
		
		private System.Nullable<bool> _UseIndex;
		
		private System.Nullable<int> _AchievementLevel;
		
		private System.Nullable<int> _PointsPossible;
		
		private System.Nullable<bool> _UseGradeLevelEquiv;
		
		private System.Nullable<decimal> _ScoreGradeLevelEquiv;
		
		private string _Name;
		
		private System.Nullable<bool> _MetStandard;
		
		private string _AchieveLevelName;
		
		private System.Nullable<decimal> _ScoreCustomN_1;
		
		private System.Nullable<decimal> _ScoreCustomN_2;
		
		private System.Nullable<decimal> _ScoreCustomN_3;
		
		private System.Nullable<decimal> _ScoreCustomN_4;
		
		private string _ScoreCustomA_1;
		
		private string _ScoreCustomA_2;
		
		private string _ScoreCustomA_3;
		
		private string _ScoreCustomA_4;
		
		public GetTestResultScoreForLogByTestResultIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultScoreID", DbType="Int NOT NULL")]
		public int TestResultScoreID
		{
			get
			{
				return this._TestResultScoreID;
			}
			set
			{
				if ((this._TestResultScoreID != value))
				{
					this._TestResultScoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TookTest", DbType="Bit")]
		public System.Nullable<bool> TookTest
		{
			get
			{
				return this._TookTest;
			}
			set
			{
				if ((this._TookTest != value))
				{
					this._TookTest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercent", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScorePercent
		{
			get
			{
				return this._ScorePercent;
			}
			set
			{
				if ((this._ScorePercent != value))
				{
					this._ScorePercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercentage", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScorePercentage
		{
			get
			{
				return this._ScorePercentage;
			}
			set
			{
				if ((this._ScorePercentage != value))
				{
					this._ScorePercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreRaw", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreRaw
		{
			get
			{
				return this._ScoreRaw;
			}
			set
			{
				if ((this._ScoreRaw != value))
				{
					this._ScoreRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreScaled", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreScaled
		{
			get
			{
				return this._ScoreScaled;
			}
			set
			{
				if ((this._ScoreScaled != value))
				{
					this._ScoreScaled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreLexile", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreLexile
		{
			get
			{
				return this._ScoreLexile;
			}
			set
			{
				if ((this._ScoreLexile != value))
				{
					this._ScoreLexile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreIndex", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreIndex
		{
			get
			{
				return this._ScoreIndex;
			}
			set
			{
				if ((this._ScoreIndex != value))
				{
					this._ScoreIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePercent", DbType="Bit NOT NULL")]
		public bool UsePercent
		{
			get
			{
				return this._UsePercent;
			}
			set
			{
				if ((this._UsePercent != value))
				{
					this._UsePercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePercentage", DbType="Bit NOT NULL")]
		public bool UsePercentage
		{
			get
			{
				return this._UsePercentage;
			}
			set
			{
				if ((this._UsePercentage != value))
				{
					this._UsePercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRaw", DbType="Bit NOT NULL")]
		public bool UseRaw
		{
			get
			{
				return this._UseRaw;
			}
			set
			{
				if ((this._UseRaw != value))
				{
					this._UseRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseScaled", DbType="Bit NOT NULL")]
		public bool UseScaled
		{
			get
			{
				return this._UseScaled;
			}
			set
			{
				if ((this._UseScaled != value))
				{
					this._UseScaled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLexile", DbType="Bit")]
		public System.Nullable<bool> UseLexile
		{
			get
			{
				return this._UseLexile;
			}
			set
			{
				if ((this._UseLexile != value))
				{
					this._UseLexile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseIndex", DbType="Bit")]
		public System.Nullable<bool> UseIndex
		{
			get
			{
				return this._UseIndex;
			}
			set
			{
				if ((this._UseIndex != value))
				{
					this._UseIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevel", DbType="Int")]
		public System.Nullable<int> AchievementLevel
		{
			get
			{
				return this._AchievementLevel;
			}
			set
			{
				if ((this._AchievementLevel != value))
				{
					this._AchievementLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int")]
		public System.Nullable<int> PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseGradeLevelEquiv", DbType="Bit")]
		public System.Nullable<bool> UseGradeLevelEquiv
		{
			get
			{
				return this._UseGradeLevelEquiv;
			}
			set
			{
				if ((this._UseGradeLevelEquiv != value))
				{
					this._UseGradeLevelEquiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreGradeLevelEquiv", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreGradeLevelEquiv
		{
			get
			{
				return this._ScoreGradeLevelEquiv;
			}
			set
			{
				if ((this._ScoreGradeLevelEquiv != value))
				{
					this._ScoreGradeLevelEquiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetStandard", DbType="Bit")]
		public System.Nullable<bool> MetStandard
		{
			get
			{
				return this._MetStandard;
			}
			set
			{
				if ((this._MetStandard != value))
				{
					this._MetStandard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchieveLevelName", DbType="VarChar(50)")]
		public string AchieveLevelName
		{
			get
			{
				return this._AchieveLevelName;
			}
			set
			{
				if ((this._AchieveLevelName != value))
				{
					this._AchieveLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_1", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_1
		{
			get
			{
				return this._ScoreCustomN_1;
			}
			set
			{
				if ((this._ScoreCustomN_1 != value))
				{
					this._ScoreCustomN_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_2", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_2
		{
			get
			{
				return this._ScoreCustomN_2;
			}
			set
			{
				if ((this._ScoreCustomN_2 != value))
				{
					this._ScoreCustomN_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_3", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_3
		{
			get
			{
				return this._ScoreCustomN_3;
			}
			set
			{
				if ((this._ScoreCustomN_3 != value))
				{
					this._ScoreCustomN_3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_4", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_4
		{
			get
			{
				return this._ScoreCustomN_4;
			}
			set
			{
				if ((this._ScoreCustomN_4 != value))
				{
					this._ScoreCustomN_4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_1", DbType="VarChar(100)")]
		public string ScoreCustomA_1
		{
			get
			{
				return this._ScoreCustomA_1;
			}
			set
			{
				if ((this._ScoreCustomA_1 != value))
				{
					this._ScoreCustomA_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_2", DbType="VarChar(100)")]
		public string ScoreCustomA_2
		{
			get
			{
				return this._ScoreCustomA_2;
			}
			set
			{
				if ((this._ScoreCustomA_2 != value))
				{
					this._ScoreCustomA_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_3", DbType="VarChar(100)")]
		public string ScoreCustomA_3
		{
			get
			{
				return this._ScoreCustomA_3;
			}
			set
			{
				if ((this._ScoreCustomA_3 != value))
				{
					this._ScoreCustomA_3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_4", DbType="VarChar(100)")]
		public string ScoreCustomA_4
		{
			get
			{
				return this._ScoreCustomA_4;
			}
			set
			{
				if ((this._ScoreCustomA_4 != value))
				{
					this._ScoreCustomA_4 = value;
				}
			}
		}
	}
	
	public partial class GetTestResultSubScoreForLogResult
	{
		
		private int _TestResultSubScoreID;
		
		private int _TestResultScoreID;
		
		private string _Name;
		
		private System.Nullable<decimal> _ScorePercent;
		
		private System.Nullable<decimal> _ScorePercentage;
		
		private System.Nullable<decimal> _ScoreRaw;
		
		private System.Nullable<decimal> _ScoreScaled;
		
		private System.Nullable<decimal> _ScoreLexile;
		
		private bool _UsePercent;
		
		private bool _UsePercentage;
		
		private bool _UseRaw;
		
		private bool _UseScaled;
		
		private bool _UseLexile;
		
		private System.Nullable<int> _AchievementLevel;
		
		private System.Nullable<int> _PointsPossible;
		
		private bool _UseGradeLevelEquiv;
		
		private System.Nullable<decimal> _ScoreGradeLevelEquiv;
		
		private System.Nullable<bool> _MetStandard;
		
		private System.Nullable<decimal> _ScoreCustomN_1;
		
		private System.Nullable<decimal> _ScoreCustomN_2;
		
		private System.Nullable<decimal> _ScoreCustomN_3;
		
		private System.Nullable<decimal> _ScoreCustomN_4;
		
		private string _ScoreCustomA_1;
		
		private string _ScoreCustomA_2;
		
		private string _ScoreCustomA_3;
		
		private string _ScoreCustomA_4;
		
		public GetTestResultSubScoreForLogResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultSubScoreID", DbType="Int NOT NULL")]
		public int TestResultSubScoreID
		{
			get
			{
				return this._TestResultSubScoreID;
			}
			set
			{
				if ((this._TestResultSubScoreID != value))
				{
					this._TestResultSubScoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultScoreID", DbType="Int NOT NULL")]
		public int TestResultScoreID
		{
			get
			{
				return this._TestResultScoreID;
			}
			set
			{
				if ((this._TestResultScoreID != value))
				{
					this._TestResultScoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercent", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScorePercent
		{
			get
			{
				return this._ScorePercent;
			}
			set
			{
				if ((this._ScorePercent != value))
				{
					this._ScorePercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScorePercentage", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScorePercentage
		{
			get
			{
				return this._ScorePercentage;
			}
			set
			{
				if ((this._ScorePercentage != value))
				{
					this._ScorePercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreRaw", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreRaw
		{
			get
			{
				return this._ScoreRaw;
			}
			set
			{
				if ((this._ScoreRaw != value))
				{
					this._ScoreRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreScaled", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreScaled
		{
			get
			{
				return this._ScoreScaled;
			}
			set
			{
				if ((this._ScoreScaled != value))
				{
					this._ScoreScaled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreLexile", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreLexile
		{
			get
			{
				return this._ScoreLexile;
			}
			set
			{
				if ((this._ScoreLexile != value))
				{
					this._ScoreLexile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePercent", DbType="Bit NOT NULL")]
		public bool UsePercent
		{
			get
			{
				return this._UsePercent;
			}
			set
			{
				if ((this._UsePercent != value))
				{
					this._UsePercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePercentage", DbType="Bit NOT NULL")]
		public bool UsePercentage
		{
			get
			{
				return this._UsePercentage;
			}
			set
			{
				if ((this._UsePercentage != value))
				{
					this._UsePercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseRaw", DbType="Bit NOT NULL")]
		public bool UseRaw
		{
			get
			{
				return this._UseRaw;
			}
			set
			{
				if ((this._UseRaw != value))
				{
					this._UseRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseScaled", DbType="Bit NOT NULL")]
		public bool UseScaled
		{
			get
			{
				return this._UseScaled;
			}
			set
			{
				if ((this._UseScaled != value))
				{
					this._UseScaled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLexile", DbType="Bit NOT NULL")]
		public bool UseLexile
		{
			get
			{
				return this._UseLexile;
			}
			set
			{
				if ((this._UseLexile != value))
				{
					this._UseLexile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevel", DbType="Int")]
		public System.Nullable<int> AchievementLevel
		{
			get
			{
				return this._AchievementLevel;
			}
			set
			{
				if ((this._AchievementLevel != value))
				{
					this._AchievementLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int")]
		public System.Nullable<int> PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseGradeLevelEquiv", DbType="Bit NOT NULL")]
		public bool UseGradeLevelEquiv
		{
			get
			{
				return this._UseGradeLevelEquiv;
			}
			set
			{
				if ((this._UseGradeLevelEquiv != value))
				{
					this._UseGradeLevelEquiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreGradeLevelEquiv", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreGradeLevelEquiv
		{
			get
			{
				return this._ScoreGradeLevelEquiv;
			}
			set
			{
				if ((this._ScoreGradeLevelEquiv != value))
				{
					this._ScoreGradeLevelEquiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetStandard", DbType="Bit")]
		public System.Nullable<bool> MetStandard
		{
			get
			{
				return this._MetStandard;
			}
			set
			{
				if ((this._MetStandard != value))
				{
					this._MetStandard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_1", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_1
		{
			get
			{
				return this._ScoreCustomN_1;
			}
			set
			{
				if ((this._ScoreCustomN_1 != value))
				{
					this._ScoreCustomN_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_2", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_2
		{
			get
			{
				return this._ScoreCustomN_2;
			}
			set
			{
				if ((this._ScoreCustomN_2 != value))
				{
					this._ScoreCustomN_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_3", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_3
		{
			get
			{
				return this._ScoreCustomN_3;
			}
			set
			{
				if ((this._ScoreCustomN_3 != value))
				{
					this._ScoreCustomN_3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomN_4", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreCustomN_4
		{
			get
			{
				return this._ScoreCustomN_4;
			}
			set
			{
				if ((this._ScoreCustomN_4 != value))
				{
					this._ScoreCustomN_4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_1", DbType="VarChar(100)")]
		public string ScoreCustomA_1
		{
			get
			{
				return this._ScoreCustomA_1;
			}
			set
			{
				if ((this._ScoreCustomA_1 != value))
				{
					this._ScoreCustomA_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_2", DbType="VarChar(100)")]
		public string ScoreCustomA_2
		{
			get
			{
				return this._ScoreCustomA_2;
			}
			set
			{
				if ((this._ScoreCustomA_2 != value))
				{
					this._ScoreCustomA_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_3", DbType="VarChar(100)")]
		public string ScoreCustomA_3
		{
			get
			{
				return this._ScoreCustomA_3;
			}
			set
			{
				if ((this._ScoreCustomA_3 != value))
				{
					this._ScoreCustomA_3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCustomA_4", DbType="VarChar(100)")]
		public string ScoreCustomA_4
		{
			get
			{
				return this._ScoreCustomA_4;
			}
			set
			{
				if ((this._ScoreCustomA_4 != value))
				{
					this._ScoreCustomA_4 = value;
				}
			}
		}
	}
	
	public partial class CanDeleteVirtualTestResult
	{
		
		private System.Nullable<int> _Column1;
		
		public CanDeleteVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class BankPropertiesResult
	{
		
		private int _BankId;
		
		private string _Name;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private string _Author;
		
		private int _SubjectId;
		
		private string _SubjectName;
		
		private int _GradeID;
		
		private string _GradeName;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _updatedDate;
		
		private int _StateId;
		
		private System.Nullable<bool> _Archived;
		
		public BankPropertiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="Int NOT NULL")]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this._BankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL")]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this._SubjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> updatedDate
		{
			get
			{
				return this._updatedDate;
			}
			set
			{
				if ((this._updatedDate != value))
				{
					this._updatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this._Archived = value;
				}
			}
		}
	}
	
	public partial class CreateTestGetBanksByUserIDResult
	{
		
		private int _BankID;
		
		private string _BankName;
		
		private string _Subject;
		
		private string _Grade;
		
		private int _GradeOrder;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<bool> _Archived;
		
		public CreateTestGetBanksByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(100)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeOrder", DbType="Int NOT NULL")]
		public int GradeOrder
		{
			get
			{
				return this._GradeOrder;
			}
			set
			{
				if ((this._GradeOrder != value))
				{
					this._GradeOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this._Archived = value;
				}
			}
		}
	}
	
	public partial class GetChoiceVariableVirtualQuestionAnswerScoresResult
	{
		
		private int _VirtualQuestionID;
		
		private string _ResponseIdentifier;
		
		private string _Answer;
		
		private string _QTIItemScore;
		
		private int _VirtualQuestionAnswerScoreID;
		
		private int _Score;
		
		private int _QTISchemaID;
		
		public GetChoiceVariableVirtualQuestionAnswerScoresResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseIdentifier", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string ResponseIdentifier
		{
			get
			{
				return this._ResponseIdentifier;
			}
			set
			{
				if ((this._ResponseIdentifier != value))
				{
					this._ResponseIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this._Answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemScore", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string QTIItemScore
		{
			get
			{
				return this._QTIItemScore;
			}
			set
			{
				if ((this._QTIItemScore != value))
				{
					this._QTIItemScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionAnswerScoreID", DbType="Int NOT NULL")]
		public int VirtualQuestionAnswerScoreID
		{
			get
			{
				return this._VirtualQuestionAnswerScoreID;
			}
			set
			{
				if ((this._VirtualQuestionAnswerScoreID != value))
				{
					this._VirtualQuestionAnswerScoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this._Score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
	}
	
	public partial class GetVirtualSectionQuestionQtiItemResult
	{
		
		private int _VirtualSectionID;
		
		private int _VirtualQuestionID;
		
		private int _Order;
		
		private int _QTIItemID;
		
		private string _XmlContent;
		
		private int _QTIGroupID;
		
		private System.Nullable<int> _VirtualSectionOrder;
		
		private string _VirtualSectionTitle;
		
		private int _VirtualSectionQuestionID;
		
		private int _QuestionOrder;
		
		private System.Nullable<int> _BaseVirtualQuestionId;
		
		private int _QTISchemaID;
		
		private string _AnswerIdentifiers;
		
		public GetVirtualSectionQuestionQtiItemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionOrder", DbType="Int")]
		public System.Nullable<int> VirtualSectionOrder
		{
			get
			{
				return this._VirtualSectionOrder;
			}
			set
			{
				if ((this._VirtualSectionOrder != value))
				{
					this._VirtualSectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionTitle", DbType="VarChar(100)")]
		public string VirtualSectionTitle
		{
			get
			{
				return this._VirtualSectionTitle;
			}
			set
			{
				if ((this._VirtualSectionTitle != value))
				{
					this._VirtualSectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionID", DbType="Int NOT NULL")]
		public int VirtualSectionQuestionID
		{
			get
			{
				return this._VirtualSectionQuestionID;
			}
			set
			{
				if ((this._VirtualSectionQuestionID != value))
				{
					this._VirtualSectionQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseVirtualQuestionId", DbType="Int")]
		public System.Nullable<int> BaseVirtualQuestionId
		{
			get
			{
				return this._BaseVirtualQuestionId;
			}
			set
			{
				if ((this._BaseVirtualQuestionId != value))
				{
					this._BaseVirtualQuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
	}
	
	public partial class GetProctorTestViewDataResult
	{
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private System.Nullable<int> _StatusID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _AutoGrading;
		
		private System.Nullable<int> _StudentID;
		
		private string _StudentName;
		
		private string _Questions;
		
		public GetProctorTestViewDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoGrading", DbType="Bit")]
		public System.Nullable<bool> AutoGrading
		{
			get
			{
				return this._AutoGrading;
			}
			set
			{
				if ((this._AutoGrading != value))
				{
					this._AutoGrading = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(500)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questions", DbType="NVarChar(MAX)")]
		public string Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				if ((this._Questions != value))
				{
					this._Questions = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsOTTRefreshResult
	{
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _Paused;
		
		private System.Nullable<int> _Autograding;
		
		private System.Nullable<int> _Started;
		
		private System.Nullable<int> _Completed;
		
		private System.Nullable<int> _WaitingForReview;
		
		private System.Nullable<int> _InActive;
		
		private System.Nullable<int> _NotStarted;
		
		private System.Nullable<int> _Assigned;
		
		public GetTestClassAssignmentsOTTRefreshResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paused", DbType="Int")]
		public System.Nullable<int> Paused
		{
			get
			{
				return this._Paused;
			}
			set
			{
				if ((this._Paused != value))
				{
					this._Paused = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autograding", DbType="Int")]
		public System.Nullable<int> Autograding
		{
			get
			{
				return this._Autograding;
			}
			set
			{
				if ((this._Autograding != value))
				{
					this._Autograding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int")]
		public System.Nullable<int> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int")]
		public System.Nullable<int> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int")]
		public System.Nullable<int> WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InActive", DbType="Int")]
		public System.Nullable<int> InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this._InActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int")]
		public System.Nullable<int> NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="Int")]
		public System.Nullable<int> Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this._Assigned = value;
				}
			}
		}
	}
	
	public partial class fnGetAnswerSubInfoByAnswerSubIDResult
	{
		
		private System.Nullable<int> _QTISchemaID;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		public fnGetAnswerSubInfoByAnswerSubIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int")]
		public System.Nullable<int> QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
	}
	
	public partial class fnGetAnswerInfoByAnswerIDResult
	{
		
		private System.Nullable<int> _QTISchemaID;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		public fnGetAnswerInfoByAnswerIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int")]
		public System.Nullable<int> QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
	}
	
	public partial class GetTestStudentAssignmentsResult
	{
		
		private System.Nullable<int> _Status;
		
		private int _VirtualTestID;
		
		private string _TestName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _QTITestStudentAssignmentID;
		
		private string _PassCode;
		
		private string _AssignmentState;
		
		private System.Nullable<int> _StudentID;
		
		private string _StudentName;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private System.Nullable<int> _QTIOnlineStatusID;
		
		private System.Nullable<bool> _TimeOver;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<bool> _CanBulkGrading;
		
		public GetTestStudentAssignmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestStudentAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestStudentAssignmentID
		{
			get
			{
				return this._QTITestStudentAssignmentID;
			}
			set
			{
				if ((this._QTITestStudentAssignmentID != value))
				{
					this._QTITestStudentAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassCode", DbType="NVarChar(50)")]
		public string PassCode
		{
			get
			{
				return this._PassCode;
			}
			set
			{
				if ((this._PassCode != value))
				{
					this._PassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentState", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string AssignmentState
		{
			get
			{
				return this._AssignmentState;
			}
			set
			{
				if ((this._AssignmentState != value))
				{
					this._AssignmentState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(200)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineStatusID", DbType="Int")]
		public System.Nullable<int> QTIOnlineStatusID
		{
			get
			{
				return this._QTIOnlineStatusID;
			}
			set
			{
				if ((this._QTIOnlineStatusID != value))
				{
					this._QTIOnlineStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOver", DbType="Bit")]
		public System.Nullable<bool> TimeOver
		{
			get
			{
				return this._TimeOver;
			}
			set
			{
				if ((this._TimeOver != value))
				{
					this._TimeOver = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBulkGrading", DbType="Bit")]
		public System.Nullable<bool> CanBulkGrading
		{
			get
			{
				return this._CanBulkGrading;
			}
			set
			{
				if ((this._CanBulkGrading != value))
				{
					this._CanBulkGrading = value;
				}
			}
		}
	}
	
	public partial class GetQtiBankSchoolOfSchoolsResult
	{
		
		private int _QTIBankSchoolID;
		
		private int _QTIBankID;
		
		private int _SchoolID;
		
		private int _EditedByUserID;
		
		public GetQtiBankSchoolOfSchoolsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankSchoolID", DbType="Int NOT NULL")]
		public int QTIBankSchoolID
		{
			get
			{
				return this._QTIBankSchoolID;
			}
			set
			{
				if ((this._QTIBankSchoolID != value))
				{
					this._QTIBankSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int NOT NULL")]
		public int EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this._EditedByUserID = value;
				}
			}
		}
	}
	
	public partial class GetComplexVirtualQuestionAnswerScoresResult
	{
		
		private int _VirtualQuestionID;
		
		private string _ResponseIdentifier;
		
		private string _Answer;
		
		private string _QTIItemScore;
		
		private int _VirtualQuestionAnswerScoreID;
		
		private int _Score;
		
		private string _subPointsPossible;
		
		private string _QiCorrectAnswer;
		
		private string _QiSubCorrectAnswer;
		
		private System.Nullable<int> _QiSubPointsPossible;
		
		private System.Nullable<int> _QTISchemaID;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		public GetComplexVirtualQuestionAnswerScoresResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseIdentifier", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string ResponseIdentifier
		{
			get
			{
				return this._ResponseIdentifier;
			}
			set
			{
				if ((this._ResponseIdentifier != value))
				{
					this._ResponseIdentifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this._Answer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemScore", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string QTIItemScore
		{
			get
			{
				return this._QTIItemScore;
			}
			set
			{
				if ((this._QTIItemScore != value))
				{
					this._QTIItemScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionAnswerScoreID", DbType="Int NOT NULL")]
		public int VirtualQuestionAnswerScoreID
		{
			get
			{
				return this._VirtualQuestionAnswerScoreID;
			}
			set
			{
				if ((this._VirtualQuestionAnswerScoreID != value))
				{
					this._VirtualQuestionAnswerScoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this._Score = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subPointsPossible", DbType="NChar(10)")]
		public string subPointsPossible
		{
			get
			{
				return this._subPointsPossible;
			}
			set
			{
				if ((this._subPointsPossible != value))
				{
					this._subPointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QiCorrectAnswer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string QiCorrectAnswer
		{
			get
			{
				return this._QiCorrectAnswer;
			}
			set
			{
				if ((this._QiCorrectAnswer != value))
				{
					this._QiCorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QiSubCorrectAnswer", DbType="VarChar(500)")]
		public string QiSubCorrectAnswer
		{
			get
			{
				return this._QiSubCorrectAnswer;
			}
			set
			{
				if ((this._QiSubCorrectAnswer != value))
				{
					this._QiSubCorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QiSubPointsPossible", DbType="Int")]
		public System.Nullable<int> QiSubPointsPossible
		{
			get
			{
				return this._QiSubPointsPossible;
			}
			set
			{
				if ((this._QiSubPointsPossible != value))
				{
					this._QiSubPointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int")]
		public System.Nullable<int> QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
	}
	
	public partial class DisplayTestResultDistrictProcResult
	{
		
		private int _Id;
		
		private int _TestResultID;
		
		private string _TestNameCustom;
		
		private string _SchoolName;
		
		private string _TeacherCustom;
		
		private string _ClassNameCustom;
		
		private string _StudentCustom;
		
		public DisplayTestResultDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
	}
	
	public partial class GetAnswerOfStudentResult
	{
		
		private int _QTIOnlineTestSessionAnswerID;
		
		private int _AnswerID;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerChoice;
		
		private string _AnswerText;
		
		private System.Nullable<bool> _Answered;
		
		private int _PointsEarned;
		
		private int _PointsPossible;
		
		private string _AnswerImage;
		
		private System.Nullable<int> _AnswerOrder;
		
		private int _QTISchemaID;
		
		private string _XMLContent;
		
		private string _CorrectAnswer;
		
		private string _AnswerSubs;
		
		public GetAnswerOfStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this._QTIOnlineTestSessionAnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerChoice", DbType="VarChar(200)")]
		public string AnswerChoice
		{
			get
			{
				return this._AnswerChoice;
			}
			set
			{
				if ((this._AnswerChoice != value))
				{
					this._AnswerChoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this._AnswerText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answered", DbType="Bit")]
		public System.Nullable<bool> Answered
		{
			get
			{
				return this._Answered;
			}
			set
			{
				if ((this._Answered != value))
				{
					this._Answered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerImage", DbType="NVarChar(MAX)")]
		public string AnswerImage
		{
			get
			{
				return this._AnswerImage;
			}
			set
			{
				if ((this._AnswerImage != value))
				{
					this._AnswerImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerOrder", DbType="Int")]
		public System.Nullable<int> AnswerOrder
		{
			get
			{
				return this._AnswerOrder;
			}
			set
			{
				if ((this._AnswerOrder != value))
				{
					this._AnswerOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XMLContent
		{
			get
			{
				return this._XMLContent;
			}
			set
			{
				if ((this._XMLContent != value))
				{
					this._XMLContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubs", DbType="NVarChar(MAX)")]
		public string AnswerSubs
		{
			get
			{
				return this._AnswerSubs;
			}
			set
			{
				if ((this._AnswerSubs != value))
				{
					this._AnswerSubs = value;
				}
			}
		}
	}
	
	public partial class ReportingGetBankResult
	{
		
		private int _bankId;
		
		private string _name;
		
		public ReportingGetBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bankId", DbType="Int NOT NULL")]
		public int bankId
		{
			get
			{
				return this._bankId;
			}
			set
			{
				if ((this._bankId != value))
				{
					this._bankId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	public partial class ReportingGetVirtualTestResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		public ReportingGetVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class ReportingGetGradeResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		private string _AltCode;
		
		public ReportingGetGradeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="NVarChar(500)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this._AltCode = value;
				}
			}
		}
	}
	
	public partial class ReportingGetSubjectResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public ReportingGetSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetPrintTestOfStudentResult
	{
		
		private string _TestName;
		
		private string _TestInstruction;
		
		private int _VirtualSectionID;
		
		private string _SectionTitle;
		
		private int _SectionOrder;
		
		private string _SectionInstruction;
		
		private System.Nullable<int> _SectionReferenceID;
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private int _QTIItemID;
		
		private int _QTISchemaID;
		
		private string _Title;
		
		private int _QTIGroupID;
		
		private string _XmlContent;
		
		private string _UrlPath;
		
		private int _VirtualSectionMode;
		
		private string _QTIITemAnswerScoresStr;
		
		public GetPrintTestOfStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInstruction", DbType="VarChar(MAX)")]
		public string TestInstruction
		{
			get
			{
				return this._TestInstruction;
			}
			set
			{
				if ((this._TestInstruction != value))
				{
					this._TestInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="VarChar(100)")]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this._SectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOrder", DbType="Int NOT NULL")]
		public int SectionOrder
		{
			get
			{
				return this._SectionOrder;
			}
			set
			{
				if ((this._SectionOrder != value))
				{
					this._SectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionInstruction", DbType="VarChar(2000)")]
		public string SectionInstruction
		{
			get
			{
				return this._SectionInstruction;
			}
			set
			{
				if ((this._SectionInstruction != value))
				{
					this._SectionInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionReferenceID", DbType="Int")]
		public System.Nullable<int> SectionReferenceID
		{
			get
			{
				return this._SectionReferenceID;
			}
			set
			{
				if ((this._SectionReferenceID != value))
				{
					this._SectionReferenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this._UrlPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionMode", DbType="Int NOT NULL")]
		public int VirtualSectionMode
		{
			get
			{
				return this._VirtualSectionMode;
			}
			set
			{
				if ((this._VirtualSectionMode != value))
				{
					this._VirtualSectionMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIITemAnswerScoresStr", DbType="NVarChar(MAX)")]
		public string QTIITemAnswerScoresStr
		{
			get
			{
				return this._QTIITemAnswerScoresStr;
			}
			set
			{
				if ((this._QTIITemAnswerScoresStr != value))
				{
					this._QTIITemAnswerScoresStr = value;
				}
			}
		}
	}
	
	public partial class TermDistrictValidProcResult
	{
		
		private int _DistrictID;
		
		private int _DistrictTermID;
		
		private string _DistrictTermName;
		
		public TermDistrictValidProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
	}
	
	public partial class PrimaryTeacherValidTermByDitrictProcResult
	{
		
		private string _UserName;
		
		private int _UserID;
		
		public PrimaryTeacherValidTermByDitrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	public partial class SchoolValidTermByDitrictProcResult
	{
		
		private string _Name;
		
		private int _SchoolID;
		
		public SchoolValidTermByDitrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
	}
	
	public partial class StudentValidTermByDistrictProcResult
	{
		
		private int _StudentID;
		
		private string _StudentCustom;
		
		public StudentValidTermByDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(253) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
	}
	
	public partial class ClassValidTermByDistrictProcResult
	{
		
		private int _DistrictID;
		
		private int _ClassID;
		
		private string _ClassNameCustom;
		
		public ClassValidTermByDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
	}
	
	public partial class VirtualTestValidTermByDistrictProcResult
	{
		
		private string _TestNameCustom;
		
		private int _VirtualTestID;
		
		public VirtualTestValidTermByDistrictProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
	}
	
	public partial class GetAblesReportJobResult
	{
		
		private int _AblesReportJobID;
		
		private int _ReportTypeID;
		
		private string _ReportName;
		
		private System.DateTime _CreatedDate;
		
		private string _DownloadUrl;
		
		private string _LearningArea;
		
		private string _SchoolName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private string _ClassName;
		
		private string _AssessmentRound;
		
		public GetAblesReportJobResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AblesReportJobID", DbType="Int NOT NULL")]
		public int AblesReportJobID
		{
			get
			{
				return this._AblesReportJobID;
			}
			set
			{
				if ((this._AblesReportJobID != value))
				{
					this._AblesReportJobID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeID", DbType="Int NOT NULL")]
		public int ReportTypeID
		{
			get
			{
				return this._ReportTypeID;
			}
			set
			{
				if ((this._ReportTypeID != value))
				{
					this._ReportTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this._ReportName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUrl", DbType="VarChar(500)")]
		public string DownloadUrl
		{
			get
			{
				return this._DownloadUrl;
			}
			set
			{
				if ((this._DownloadUrl != value))
				{
					this._DownloadUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LearningArea", DbType="VarChar(200)")]
		public string LearningArea
		{
			get
			{
				return this._LearningArea;
			}
			set
			{
				if ((this._LearningArea != value))
				{
					this._LearningArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentRound", DbType="VarChar(100)")]
		public string AssessmentRound
		{
			get
			{
				return this._AssessmentRound;
			}
			set
			{
				if ((this._AssessmentRound != value))
				{
					this._AssessmentRound = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsOTTResult
	{
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private System.Nullable<int> _Status;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<int> _Paused;
		
		private System.Nullable<int> _Autograding;
		
		private System.Nullable<int> _Started;
		
		private System.Nullable<int> _Completed;
		
		private System.Nullable<int> _WaitingForReview;
		
		private System.Nullable<int> _InActive;
		
		private System.Nullable<int> _NotStarted;
		
		private System.Nullable<int> _Assigned;
		
		private string _Students;
		
		public GetTestClassAssignmentsOTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(500)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(500)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="NVarChar(500)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(500)")]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(500)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(500)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paused", DbType="Int")]
		public System.Nullable<int> Paused
		{
			get
			{
				return this._Paused;
			}
			set
			{
				if ((this._Paused != value))
				{
					this._Paused = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autograding", DbType="Int")]
		public System.Nullable<int> Autograding
		{
			get
			{
				return this._Autograding;
			}
			set
			{
				if ((this._Autograding != value))
				{
					this._Autograding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int")]
		public System.Nullable<int> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int")]
		public System.Nullable<int> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int")]
		public System.Nullable<int> WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InActive", DbType="Int")]
		public System.Nullable<int> InActive
		{
			get
			{
				return this._InActive;
			}
			set
			{
				if ((this._InActive != value))
				{
					this._InActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int")]
		public System.Nullable<int> NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="Int")]
		public System.Nullable<int> Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this._Assigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="NVarChar(MAX)")]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsExportResult
	{
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private System.Nullable<int> _Status;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private int _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		public GetTestClassAssignmentsExportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int NOT NULL")]
		public int BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
	}
	
	public partial class IsExistGradingQueueResult
	{
		
		private System.Nullable<bool> _IsExist;
		
		public IsExistGradingQueueResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExist", DbType="Bit")]
		public System.Nullable<bool> IsExist
		{
			get
			{
				return this._IsExist;
			}
			set
			{
				if ((this._IsExist != value))
				{
					this._IsExist = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentDetailsResult
	{
		
		private int _QTITestClassAssignmentID;
		
		private System.DateTime _AssignmentDate;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _CodeTimestamp;
		
		private string _AssignmentGUID;
		
		private string _TestSetting;
		
		private int _Status;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedUserID;
		
		private System.Nullable<int> _ComparisonPasscodeLength;
		
		private int _Type;
		
		private System.Nullable<int> _Mode;
		
		private int _VirtualTestID;
		
		private string _TestName;
		
		private int _ClassID;
		
		private string _ClassName;
		
		private string _TeacherName;
		
		public GetTestClassAssignmentDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int NOT NULL")]
		public int QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> CodeTimestamp
		{
			get
			{
				return this._CodeTimestamp;
			}
			set
			{
				if ((this._CodeTimestamp != value))
				{
					this._CodeTimestamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentGUID", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AssignmentGUID
		{
			get
			{
				return this._AssignmentGUID;
			}
			set
			{
				if ((this._AssignmentGUID != value))
				{
					this._AssignmentGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSetting", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TestSetting
		{
			get
			{
				return this._TestSetting;
			}
			set
			{
				if ((this._TestSetting != value))
				{
					this._TestSetting = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUserID", DbType="Int")]
		public System.Nullable<int> ModifiedUserID
		{
			get
			{
				return this._ModifiedUserID;
			}
			set
			{
				if ((this._ModifiedUserID != value))
				{
					this._ModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComparisonPasscodeLength", DbType="Int")]
		public System.Nullable<int> ComparisonPasscodeLength
		{
			get
			{
				return this._ComparisonPasscodeLength;
			}
			set
			{
				if ((this._ComparisonPasscodeLength != value))
				{
					this._ComparisonPasscodeLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int")]
		public System.Nullable<int> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(102)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
	}
	
	public partial class GetHelpResourceCategoriesResult
	{
		
		private int _HelpResourceCategoryID;
		
		private string _DisplayText;
		
		private System.Nullable<int> _SortOrder;
		
		public GetHelpResourceCategoriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceCategoryID", DbType="Int NOT NULL")]
		public int HelpResourceCategoryID
		{
			get
			{
				return this._HelpResourceCategoryID;
			}
			set
			{
				if ((this._HelpResourceCategoryID != value))
				{
					this._HelpResourceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(100)")]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
	}
	
	public partial class GetHelpResourceFileTypesResult
	{
		
		private int _HelpResourceFileTypeID;
		
		private string _Name;
		
		private string _Extensions;
		
		public GetHelpResourceFileTypesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceFileTypeID", DbType="Int NOT NULL")]
		public int HelpResourceFileTypeID
		{
			get
			{
				return this._HelpResourceFileTypeID;
			}
			set
			{
				if ((this._HelpResourceFileTypeID != value))
				{
					this._HelpResourceFileTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extensions", DbType="NVarChar(500)")]
		public string Extensions
		{
			get
			{
				return this._Extensions;
			}
			set
			{
				if ((this._Extensions != value))
				{
					this._Extensions = value;
				}
			}
		}
	}
	
	public partial class GetHelpResourceTypesResult
	{
		
		private int _HelpResourceTypeID;
		
		private string _DisplayText;
		
		private string _Description;
		
		private string _ImagePath;
		
		public GetHelpResourceTypesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceTypeID", DbType="Int NOT NULL")]
		public int HelpResourceTypeID
		{
			get
			{
				return this._HelpResourceTypeID;
			}
			set
			{
				if ((this._HelpResourceTypeID != value))
				{
					this._HelpResourceTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(100)")]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(500)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
	}
	
	public partial class GetHelpResourceByIDResult
	{
		
		private int _HelpResourceID;
		
		private System.Nullable<int> _HelpResourceTypeID;
		
		private System.Nullable<int> _HelpResourceCategoryID;
		
		private System.Nullable<int> _HelpResourceFileTypeID;
		
		private string _Topic;
		
		private string _Description;
		
		private System.DateTime _DateUpdated;
		
		private System.DateTime _DateCreated;
		
		private string _KeyWords;
		
		private string _HelpResourceFilePath;
		
		private string _HelpResourceLink;
		
		public GetHelpResourceByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceID", DbType="Int NOT NULL")]
		public int HelpResourceID
		{
			get
			{
				return this._HelpResourceID;
			}
			set
			{
				if ((this._HelpResourceID != value))
				{
					this._HelpResourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceTypeID", DbType="Int")]
		public System.Nullable<int> HelpResourceTypeID
		{
			get
			{
				return this._HelpResourceTypeID;
			}
			set
			{
				if ((this._HelpResourceTypeID != value))
				{
					this._HelpResourceTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceCategoryID", DbType="Int")]
		public System.Nullable<int> HelpResourceCategoryID
		{
			get
			{
				return this._HelpResourceCategoryID;
			}
			set
			{
				if ((this._HelpResourceCategoryID != value))
				{
					this._HelpResourceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceFileTypeID", DbType="Int")]
		public System.Nullable<int> HelpResourceFileTypeID
		{
			get
			{
				return this._HelpResourceFileTypeID;
			}
			set
			{
				if ((this._HelpResourceFileTypeID != value))
				{
					this._HelpResourceFileTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(100)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this._DateUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyWords", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string KeyWords
		{
			get
			{
				return this._KeyWords;
			}
			set
			{
				if ((this._KeyWords != value))
				{
					this._KeyWords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceFilePath", DbType="NVarChar(500)")]
		public string HelpResourceFilePath
		{
			get
			{
				return this._HelpResourceFilePath;
			}
			set
			{
				if ((this._HelpResourceFilePath != value))
				{
					this._HelpResourceFilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceLink", DbType="NVarChar(500)")]
		public string HelpResourceLink
		{
			get
			{
				return this._HelpResourceLink;
			}
			set
			{
				if ((this._HelpResourceLink != value))
				{
					this._HelpResourceLink = value;
				}
			}
		}
	}
	
	public partial class ListQTIBanks_HideTeacherBankResult
	{
		
		private int _QTIBankID;
		
		private string _Name;
		
		private int _UserID;
		
		private int _AccessID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _AuthorGroupID;
		
		private System.Nullable<int> _SourceID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _AuthoGroupName;
		
		public ListQTIBanks_HideTeacherBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessID", DbType="Int NOT NULL")]
		public int AccessID
		{
			get
			{
				return this._AccessID;
			}
			set
			{
				if ((this._AccessID != value))
				{
					this._AccessID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorGroupID", DbType="Int")]
		public System.Nullable<int> AuthorGroupID
		{
			get
			{
				return this._AuthorGroupID;
			}
			set
			{
				if ((this._AuthorGroupID != value))
				{
					this._AuthorGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int")]
		public System.Nullable<int> SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this._SourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthoGroupName", DbType="VarChar(64)")]
		public string AuthoGroupName
		{
			get
			{
				return this._AuthoGroupName;
			}
			set
			{
				if ((this._AuthoGroupName != value))
				{
					this._AuthoGroupName = value;
				}
			}
		}
	}
	
	public partial class HasRightToEditTestBankForNetWorkAdminResult
	{
		
		private System.Nullable<bool> _HasRight;
		
		public HasRightToEditTestBankForNetWorkAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRight", DbType="Bit")]
		public System.Nullable<bool> HasRight
		{
			get
			{
				return this._HasRight;
			}
			set
			{
				if ((this._HasRight != value))
				{
					this._HasRight = value;
				}
			}
		}
	}
	
	public partial class GetNextApplicableQuestionResult
	{
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<int> _VirtualQuestionID;
		
		private System.Nullable<int> _QTIOnlineTestSessionAnswerID;
		
		public GetNextApplicableQuestionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int")]
		public System.Nullable<int> VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this._QTIOnlineTestSessionAnswerID = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsResult
	{
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private System.Nullable<int> _Status;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private int _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private System.Nullable<bool> _IsHide;
		
		public GetTestClassAssignmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int NOT NULL")]
		public int BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsPassThroughResult
	{
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private System.Nullable<int> _Status;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private int _BankIsLocked;
		
		private System.Nullable<bool> _IsHide;
		
		public GetTestClassAssignmentsPassThroughResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(500)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(500)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="NVarChar(500)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(500)")]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(500)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(500)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int NOT NULL")]
		public int BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
	}
	
	public partial class GetAlgorithmicQuestionExpressionResult
	{
		
		private int _VirtualQuestionID;
		
		private int _VirtualTestID;
		
		private int _QTIItemID;
		
		private string _AlgorithmicExpression;
		
		private int _PointsEarned;
		
		private System.Nullable<int> _AlgorithmicOrder;
		
		public GetAlgorithmicQuestionExpressionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlgorithmicExpression", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AlgorithmicExpression
		{
			get
			{
				return this._AlgorithmicExpression;
			}
			set
			{
				if ((this._AlgorithmicExpression != value))
				{
					this._AlgorithmicExpression = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlgorithmicOrder", DbType="Int")]
		public System.Nullable<int> AlgorithmicOrder
		{
			get
			{
				return this._AlgorithmicOrder;
			}
			set
			{
				if ((this._AlgorithmicOrder != value))
				{
					this._AlgorithmicOrder = value;
				}
			}
		}
	}
	
	public partial class GetMaxPointAlgorithmicByVirtualQuestionIDAndQTIItemIDResult
	{
		
		private System.Nullable<int> _QuestionPointEarned;
		
		private System.Nullable<int> _QTIITemPointEarned;
		
		public GetMaxPointAlgorithmicByVirtualQuestionIDAndQTIItemIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionPointEarned", DbType="Int")]
		public System.Nullable<int> QuestionPointEarned
		{
			get
			{
				return this._QuestionPointEarned;
			}
			set
			{
				if ((this._QuestionPointEarned != value))
				{
					this._QuestionPointEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIITemPointEarned", DbType="Int")]
		public System.Nullable<int> QTIITemPointEarned
		{
			get
			{
				return this._QTIITemPointEarned;
			}
			set
			{
				if ((this._QTIITemPointEarned != value))
				{
					this._QTIITemPointEarned = value;
				}
			}
		}
	}
	
	public partial class GetPrintTestOfStudentV2Result
	{
		
		private string _TestName;
		
		private string _TestInstruction;
		
		private int _VirtualSectionID;
		
		private string _SectionTitle;
		
		private int _SectionOrder;
		
		private string _SectionInstruction;
		
		private System.Nullable<int> _SectionReferenceID;
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private int _QTIItemID;
		
		private int _QTISchemaID;
		
		private string _Title;
		
		private int _QTIGroupID;
		
		private string _XmlContent;
		
		private string _UrlPath;
		
		private int _VirtualSectionMode;
		
		private string _QTIITemAnswerScoresStr;
		
		private System.Nullable<int> _QuestionGroupID;
		
		private string _GroupQuestionCommon;
		
		private string _GroupQuestionTitle;
		
		private string _QuestionLabel;
		
		public GetPrintTestOfStudentV2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInstruction", DbType="VarChar(MAX)")]
		public string TestInstruction
		{
			get
			{
				return this._TestInstruction;
			}
			set
			{
				if ((this._TestInstruction != value))
				{
					this._TestInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="VarChar(100)")]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this._SectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOrder", DbType="Int NOT NULL")]
		public int SectionOrder
		{
			get
			{
				return this._SectionOrder;
			}
			set
			{
				if ((this._SectionOrder != value))
				{
					this._SectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionInstruction", DbType="VarChar(2000)")]
		public string SectionInstruction
		{
			get
			{
				return this._SectionInstruction;
			}
			set
			{
				if ((this._SectionInstruction != value))
				{
					this._SectionInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionReferenceID", DbType="Int")]
		public System.Nullable<int> SectionReferenceID
		{
			get
			{
				return this._SectionReferenceID;
			}
			set
			{
				if ((this._SectionReferenceID != value))
				{
					this._SectionReferenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this._UrlPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionMode", DbType="Int NOT NULL")]
		public int VirtualSectionMode
		{
			get
			{
				return this._VirtualSectionMode;
			}
			set
			{
				if ((this._VirtualSectionMode != value))
				{
					this._VirtualSectionMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIITemAnswerScoresStr", DbType="NVarChar(MAX)")]
		public string QTIITemAnswerScoresStr
		{
			get
			{
				return this._QTIITemAnswerScoresStr;
			}
			set
			{
				if ((this._QTIITemAnswerScoresStr != value))
				{
					this._QTIITemAnswerScoresStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int")]
		public System.Nullable<int> QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this._QuestionGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupQuestionCommon", DbType="VarChar(MAX)")]
		public string GroupQuestionCommon
		{
			get
			{
				return this._GroupQuestionCommon;
			}
			set
			{
				if ((this._GroupQuestionCommon != value))
				{
					this._GroupQuestionCommon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupQuestionTitle", DbType="VarChar(1017)")]
		public string GroupQuestionTitle
		{
			get
			{
				return this._GroupQuestionTitle;
			}
			set
			{
				if ((this._GroupQuestionTitle != value))
				{
					this._GroupQuestionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionLabel", DbType="VarChar(4000)")]
		public string QuestionLabel
		{
			get
			{
				return this._QuestionLabel;
			}
			set
			{
				if ((this._QuestionLabel != value))
				{
					this._QuestionLabel = value;
				}
			}
		}
	}
	
	public partial class GetVirtualQuestionToCreateS3ObjectResult
	{
		
		private int _VirtualQuestionID;
		
		private int _QTIItemID;
		
		private int _QTISchemaID;
		
		private string _XmlContent;
		
		private int _QTIGroupID;
		
		private int _PointsPossible;
		
		private int _QuestionOrder;
		
		private System.Nullable<int> _VirtualSectionQuestionID;
		
		private System.Nullable<int> _VirtualSectionQuestionOrder;
		
		private System.Nullable<int> _VirtualSectionID;
		
		private System.Nullable<int> _BaseVirtualQuestionID;
		
		private string _QuestionLabel;
		
		public GetVirtualQuestionToCreateS3ObjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionID", DbType="Int")]
		public System.Nullable<int> VirtualSectionQuestionID
		{
			get
			{
				return this._VirtualSectionQuestionID;
			}
			set
			{
				if ((this._VirtualSectionQuestionID != value))
				{
					this._VirtualSectionQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionOrder", DbType="Int")]
		public System.Nullable<int> VirtualSectionQuestionOrder
		{
			get
			{
				return this._VirtualSectionQuestionOrder;
			}
			set
			{
				if ((this._VirtualSectionQuestionOrder != value))
				{
					this._VirtualSectionQuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int")]
		public System.Nullable<int> VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseVirtualQuestionID", DbType="Int")]
		public System.Nullable<int> BaseVirtualQuestionID
		{
			get
			{
				return this._BaseVirtualQuestionID;
			}
			set
			{
				if ((this._BaseVirtualQuestionID != value))
				{
					this._BaseVirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionLabel", DbType="VarChar(4000)")]
		public string QuestionLabel
		{
			get
			{
				return this._QuestionLabel;
			}
			set
			{
				if ((this._QuestionLabel != value))
				{
					this._QuestionLabel = value;
				}
			}
		}
	}
	
	public partial class GetHelpResourcesResult
	{
		
		private int _HelpResourceID;
		
		private System.Nullable<int> _HelpResourceTypeID;
		
		private string _HelpResourceTypeIcon;
		
		private string _HelpResourceTypeDisplayText;
		
		private System.Nullable<int> _HelpResourceFileTypeID;
		
		private string _HelpResourceFileTypeName;
		
		private string _HelpResourceFilePath;
		
		private string _HelpResourceLink;
		
		private string _CategoryText;
		
		private string _Topic;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		public GetHelpResourcesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceID", DbType="Int NOT NULL")]
		public int HelpResourceID
		{
			get
			{
				return this._HelpResourceID;
			}
			set
			{
				if ((this._HelpResourceID != value))
				{
					this._HelpResourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceTypeID", DbType="Int")]
		public System.Nullable<int> HelpResourceTypeID
		{
			get
			{
				return this._HelpResourceTypeID;
			}
			set
			{
				if ((this._HelpResourceTypeID != value))
				{
					this._HelpResourceTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceTypeIcon", DbType="NVarChar(500)")]
		public string HelpResourceTypeIcon
		{
			get
			{
				return this._HelpResourceTypeIcon;
			}
			set
			{
				if ((this._HelpResourceTypeIcon != value))
				{
					this._HelpResourceTypeIcon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceTypeDisplayText", DbType="NVarChar(500)")]
		public string HelpResourceTypeDisplayText
		{
			get
			{
				return this._HelpResourceTypeDisplayText;
			}
			set
			{
				if ((this._HelpResourceTypeDisplayText != value))
				{
					this._HelpResourceTypeDisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceFileTypeID", DbType="Int")]
		public System.Nullable<int> HelpResourceFileTypeID
		{
			get
			{
				return this._HelpResourceFileTypeID;
			}
			set
			{
				if ((this._HelpResourceFileTypeID != value))
				{
					this._HelpResourceFileTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceFileTypeName", DbType="NVarChar(100)")]
		public string HelpResourceFileTypeName
		{
			get
			{
				return this._HelpResourceFileTypeName;
			}
			set
			{
				if ((this._HelpResourceFileTypeName != value))
				{
					this._HelpResourceFileTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceFilePath", DbType="NVarChar(500)")]
		public string HelpResourceFilePath
		{
			get
			{
				return this._HelpResourceFilePath;
			}
			set
			{
				if ((this._HelpResourceFilePath != value))
				{
					this._HelpResourceFilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceLink", DbType="NVarChar(500)")]
		public string HelpResourceLink
		{
			get
			{
				return this._HelpResourceLink;
			}
			set
			{
				if ((this._HelpResourceLink != value))
				{
					this._HelpResourceLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryText", DbType="NVarChar(100)")]
		public string CategoryText
		{
			get
			{
				return this._CategoryText;
			}
			set
			{
				if ((this._CategoryText != value))
				{
					this._CategoryText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(100)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this._DateUpdated = value;
				}
			}
		}
	}
	
	public partial class GetTestStudentSessionsExportResult
	{
		
		private string _SchoolCode;
		
		private string _SchoolName;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private string _ClassSection;
		
		private string _CourseNumber;
		
		private string _Term;
		
		private System.Nullable<int> _Status;
		
		private string _UserName;
		
		private string _UserCode;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _TestCode;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private System.Nullable<int> _Started;
		
		private System.Nullable<int> _Completed;
		
		private System.Nullable<int> _WaitingForReview;
		
		private System.Nullable<int> _NotStarted;
		
		private string _Students;
		
		private System.Nullable<bool> _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private System.Nullable<bool> _IsHide;
		
		public GetTestStudentSessionsExportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCode", DbType="VarChar(200)")]
		public string SchoolCode
		{
			get
			{
				return this._SchoolCode;
			}
			set
			{
				if ((this._SchoolCode != value))
				{
					this._SchoolCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(200)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassSection", DbType="VarChar(200)")]
		public string ClassSection
		{
			get
			{
				return this._ClassSection;
			}
			set
			{
				if ((this._ClassSection != value))
				{
					this._ClassSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseNumber", DbType="VarChar(200)")]
		public string CourseNumber
		{
			get
			{
				return this._CourseNumber;
			}
			set
			{
				if ((this._CourseNumber != value))
				{
					this._CourseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(200)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(120)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="VarChar(120)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(120)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(60)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(60)")]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCode", DbType="VarChar(60)")]
		public string TestCode
		{
			get
			{
				return this._TestCode;
			}
			set
			{
				if ((this._TestCode != value))
				{
					this._TestCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int")]
		public System.Nullable<int> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int")]
		public System.Nullable<int> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int")]
		public System.Nullable<int> WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int")]
		public System.Nullable<int> NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="NVarChar(MAX)")]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Bit")]
		public System.Nullable<bool> BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(600)")]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(600)")]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
	}
	
	public partial class GetAllQuestionOfVirtualTestResult
	{
		
		private System.Nullable<int> _VirtualQuestionID;
		
		private System.Nullable<int> _PointsPossible;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _BubblesheetID;
		
		private string _Ticket;
		
		private System.Nullable<int> _QuestionOrder;
		
		private System.Nullable<int> _QTISchemaID;
		
		private string _AnswerIdentifiers;
		
		private string _CorrectAnswer;
		
		private string _XmlContent;
		
		private string _BubbleSheetErrorType;
		
		public GetAllQuestionOfVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int")]
		public System.Nullable<int> VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int")]
		public System.Nullable<int> PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubblesheetID", DbType="Int")]
		public System.Nullable<int> BubblesheetID
		{
			get
			{
				return this._BubblesheetID;
			}
			set
			{
				if ((this._BubblesheetID != value))
				{
					this._BubblesheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="NVarChar(50)")]
		public string Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this._Ticket = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int")]
		public System.Nullable<int> QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int")]
		public System.Nullable<int> QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(100)")]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(MAX)")]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX)")]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubbleSheetErrorType", DbType="VarChar(10)")]
		public string BubbleSheetErrorType
		{
			get
			{
				return this._BubbleSheetErrorType;
			}
			set
			{
				if ((this._BubbleSheetErrorType != value))
				{
					this._BubbleSheetErrorType = value;
				}
			}
		}
	}
	
	public partial class SubmitOnlineTestResult
	{
		
		private System.Nullable<int> _AutoGradingQueueID;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _Status;
		
		public SubmitOnlineTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoGradingQueueID", DbType="Int")]
		public System.Nullable<int> AutoGradingQueueID
		{
			get
			{
				return this._AutoGradingQueueID;
			}
			set
			{
				if ((this._AutoGradingQueueID != value))
				{
					this._AutoGradingQueueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class GetNextApplicableStudentResult
	{
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<int> _VirtualQuestionID;
		
		public GetNextApplicableStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int")]
		public System.Nullable<int> VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
	}
	
	public partial class GetTestStateResult
	{
		
		private int _QTIOnlineTestSessionAnswerID;
		
		private int _AnswerID;
		
		private int _QTIOnlineTestSessionID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerChoice;
		
		private bool _WasAnswered;
		
		private string _AnswerText;
		
		private System.Nullable<bool> _Answered;
		
		private System.Nullable<int> _PointsEarned;
		
		private string _AnswerImage;
		
		private string _HighlightQuestion;
		
		private string _HighlightPassage;
		
		private string _AnswerTemp;
		
		private System.Nullable<int> _AnswerOrder;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		private int _QTISchemaID;
		
		private string _XmlContent;
		
		private string _AnswerSubs;
		
		private decimal _ScoreRaw;
		
		private System.Nullable<bool> _Overridden;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _ItemFeedbackID;
		
		private System.Nullable<int> _ItemAnswerID;
		
		private string _Feedback;
		
		private System.Nullable<int> _UserIdFeedback;
		
		private string _UserUpdatedFeedback;
		
		private System.Nullable<System.DateTime> _DateUpdatedFeedback;
		
		private int _VirtualSectionMode;
		
		private System.Nullable<int> _TimesVisited;
		
		private System.Nullable<int> _TimeSpent;
		
		private string _DrawingContent;
		
		public GetTestStateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this._QTIOnlineTestSessionAnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerChoice", DbType="VarChar(200)")]
		public string AnswerChoice
		{
			get
			{
				return this._AnswerChoice;
			}
			set
			{
				if ((this._AnswerChoice != value))
				{
					this._AnswerChoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasAnswered", DbType="Bit NOT NULL")]
		public bool WasAnswered
		{
			get
			{
				return this._WasAnswered;
			}
			set
			{
				if ((this._WasAnswered != value))
				{
					this._WasAnswered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this._AnswerText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answered", DbType="Bit")]
		public System.Nullable<bool> Answered
		{
			get
			{
				return this._Answered;
			}
			set
			{
				if ((this._Answered != value))
				{
					this._Answered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int")]
		public System.Nullable<int> PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerImage", DbType="NVarChar(MAX)")]
		public string AnswerImage
		{
			get
			{
				return this._AnswerImage;
			}
			set
			{
				if ((this._AnswerImage != value))
				{
					this._AnswerImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightQuestion", DbType="NVarChar(MAX)")]
		public string HighlightQuestion
		{
			get
			{
				return this._HighlightQuestion;
			}
			set
			{
				if ((this._HighlightQuestion != value))
				{
					this._HighlightQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightPassage", DbType="NVarChar(MAX)")]
		public string HighlightPassage
		{
			get
			{
				return this._HighlightPassage;
			}
			set
			{
				if ((this._HighlightPassage != value))
				{
					this._HighlightPassage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerTemp", DbType="NVarChar(MAX)")]
		public string AnswerTemp
		{
			get
			{
				return this._AnswerTemp;
			}
			set
			{
				if ((this._AnswerTemp != value))
				{
					this._AnswerTemp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerOrder", DbType="Int")]
		public System.Nullable<int> AnswerOrder
		{
			get
			{
				return this._AnswerOrder;
			}
			set
			{
				if ((this._AnswerOrder != value))
				{
					this._AnswerOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="NVarChar(MAX)")]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubs", DbType="NVarChar(MAX)")]
		public string AnswerSubs
		{
			get
			{
				return this._AnswerSubs;
			}
			set
			{
				if ((this._AnswerSubs != value))
				{
					this._AnswerSubs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreRaw", DbType="Decimal(1,1) NOT NULL")]
		public decimal ScoreRaw
		{
			get
			{
				return this._ScoreRaw;
			}
			set
			{
				if ((this._ScoreRaw != value))
				{
					this._ScoreRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridden", DbType="Bit")]
		public System.Nullable<bool> Overridden
		{
			get
			{
				return this._Overridden;
			}
			set
			{
				if ((this._Overridden != value))
				{
					this._Overridden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(102)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemFeedbackID", DbType="Int")]
		public System.Nullable<int> ItemFeedbackID
		{
			get
			{
				return this._ItemFeedbackID;
			}
			set
			{
				if ((this._ItemFeedbackID != value))
				{
					this._ItemFeedbackID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemAnswerID", DbType="Int")]
		public System.Nullable<int> ItemAnswerID
		{
			get
			{
				return this._ItemAnswerID;
			}
			set
			{
				if ((this._ItemAnswerID != value))
				{
					this._ItemAnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(MAX)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this._Feedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIdFeedback", DbType="Int")]
		public System.Nullable<int> UserIdFeedback
		{
			get
			{
				return this._UserIdFeedback;
			}
			set
			{
				if ((this._UserIdFeedback != value))
				{
					this._UserIdFeedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedFeedback", DbType="VarChar(153)")]
		public string UserUpdatedFeedback
		{
			get
			{
				return this._UserUpdatedFeedback;
			}
			set
			{
				if ((this._UserUpdatedFeedback != value))
				{
					this._UserUpdatedFeedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdatedFeedback", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdatedFeedback
		{
			get
			{
				return this._DateUpdatedFeedback;
			}
			set
			{
				if ((this._DateUpdatedFeedback != value))
				{
					this._DateUpdatedFeedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionMode", DbType="Int NOT NULL")]
		public int VirtualSectionMode
		{
			get
			{
				return this._VirtualSectionMode;
			}
			set
			{
				if ((this._VirtualSectionMode != value))
				{
					this._VirtualSectionMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesVisited", DbType="Int")]
		public System.Nullable<int> TimesVisited
		{
			get
			{
				return this._TimesVisited;
			}
			set
			{
				if ((this._TimesVisited != value))
				{
					this._TimesVisited = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSpent", DbType="Int")]
		public System.Nullable<int> TimeSpent
		{
			get
			{
				return this._TimeSpent;
			}
			set
			{
				if ((this._TimeSpent != value))
				{
					this._TimeSpent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawingContent", DbType="NVarChar(MAX)")]
		public string DrawingContent
		{
			get
			{
				return this._DrawingContent;
			}
			set
			{
				if ((this._DrawingContent != value))
				{
					this._DrawingContent = value;
				}
			}
		}
	}
	
	public partial class GetBankOrderResult
	{
		
		private int _BankID;
		
		private int _Order;
		
		public GetBankOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class GetVirtualTestOrderResult
	{
		
		private int _VirtualTestID;
		
		private int _Order;
		
		public GetVirtualTestOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class GetGradeOrderResult
	{
		
		private int _GradeID;
		
		private int _Order;
		
		public GetGradeOrderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class GetVirtualTestAnswerKeyForPrintingResult
	{
		
		private string _TestName;
		
		private string _TestInstruction;
		
		private int _VirtualSectionID;
		
		private string _SectionTitle;
		
		private int _SectionOrder;
		
		private string _SectionInstruction;
		
		private System.Nullable<int> _SectionReferenceID;
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private int _QTIItemID;
		
		private string _Title;
		
		private string _CorrectAnswer;
		
		private int _QTIGroupID;
		
		private string _XmlContent;
		
		private string _UrlPath;
		
		private int _QTISchemaID;
		
		private string _Answers;
		
		private string _Standards;
		
		private string _Skills;
		
		private string _Topics;
		
		private string _Other;
		
		private string _DistrictTag;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		private System.Nullable<int> _QuestionGroupID;
		
		private string _QuestionLabel;
		
		public GetVirtualTestAnswerKeyForPrintingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInstruction", DbType="VarChar(MAX)")]
		public string TestInstruction
		{
			get
			{
				return this._TestInstruction;
			}
			set
			{
				if ((this._TestInstruction != value))
				{
					this._TestInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="VarChar(100)")]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this._SectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOrder", DbType="Int NOT NULL")]
		public int SectionOrder
		{
			get
			{
				return this._SectionOrder;
			}
			set
			{
				if ((this._SectionOrder != value))
				{
					this._SectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionInstruction", DbType="VarChar(2000)")]
		public string SectionInstruction
		{
			get
			{
				return this._SectionInstruction;
			}
			set
			{
				if ((this._SectionInstruction != value))
				{
					this._SectionInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionReferenceID", DbType="Int")]
		public System.Nullable<int> SectionReferenceID
		{
			get
			{
				return this._SectionReferenceID;
			}
			set
			{
				if ((this._SectionReferenceID != value))
				{
					this._SectionReferenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this._UrlPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answers", DbType="NVarChar(MAX)")]
		public string Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				if ((this._Answers != value))
				{
					this._Answers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standards", DbType="NVarChar(MAX)")]
		public string Standards
		{
			get
			{
				return this._Standards;
			}
			set
			{
				if ((this._Standards != value))
				{
					this._Standards = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skills", DbType="NVarChar(MAX)")]
		public string Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				if ((this._Skills != value))
				{
					this._Skills = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topics", DbType="NVarChar(MAX)")]
		public string Topics
		{
			get
			{
				return this._Topics;
			}
			set
			{
				if ((this._Topics != value))
				{
					this._Topics = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(MAX)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this._Other = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTag", DbType="NVarChar(MAX)")]
		public string DistrictTag
		{
			get
			{
				return this._DistrictTag;
			}
			set
			{
				if ((this._DistrictTag != value))
				{
					this._DistrictTag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int")]
		public System.Nullable<int> QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this._QuestionGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionLabel", DbType="NVarChar(2000)")]
		public string QuestionLabel
		{
			get
			{
				return this._QuestionLabel;
			}
			set
			{
				if ((this._QuestionLabel != value))
				{
					this._QuestionLabel = value;
				}
			}
		}
	}
	
	public partial class GetTestStateTOSResult
	{
		
		private int _QTIOnlineTestSessionAnswerID;
		
		private int _QTIOnlineTestSessionID;
		
		private int _VirtualQuestionID;
		
		private string _AnswerChoice;
		
		private bool _Answered;
		
		private string _AnswerText;
		
		private System.Nullable<int> _PointsEarned;
		
		private string _AnswerImage;
		
		private string _HighlightQuestion;
		
		private string _HighlightPassage;
		
		private string _HighlightQuestionGroupCommon;
		
		private System.Nullable<int> _AnswerOrder;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		private string _AnswerSubs;
		
		private decimal _ScoreRaw;
		
		private System.Nullable<bool> _Overridden;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _ItemFeedbackID;
		
		private System.Nullable<int> _AnswerID;
		
		private string _Feedback;
		
		private System.Nullable<int> _UserIdFeedback;
		
		private string _UserUpdatedFeedback;
		
		private System.Nullable<System.DateTime> _DateUpdatedFeedback;
		
		public GetTestStateTOSResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this._QTIOnlineTestSessionAnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerChoice", DbType="VarChar(200)")]
		public string AnswerChoice
		{
			get
			{
				return this._AnswerChoice;
			}
			set
			{
				if ((this._AnswerChoice != value))
				{
					this._AnswerChoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answered", DbType="Bit NOT NULL")]
		public bool Answered
		{
			get
			{
				return this._Answered;
			}
			set
			{
				if ((this._Answered != value))
				{
					this._Answered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this._AnswerText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int")]
		public System.Nullable<int> PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerImage", DbType="NVarChar(MAX)")]
		public string AnswerImage
		{
			get
			{
				return this._AnswerImage;
			}
			set
			{
				if ((this._AnswerImage != value))
				{
					this._AnswerImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightQuestion", DbType="NVarChar(MAX)")]
		public string HighlightQuestion
		{
			get
			{
				return this._HighlightQuestion;
			}
			set
			{
				if ((this._HighlightQuestion != value))
				{
					this._HighlightQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightPassage", DbType="NVarChar(MAX)")]
		public string HighlightPassage
		{
			get
			{
				return this._HighlightPassage;
			}
			set
			{
				if ((this._HighlightPassage != value))
				{
					this._HighlightPassage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighlightQuestionGroupCommon", DbType="NVarChar(MAX)")]
		public string HighlightQuestionGroupCommon
		{
			get
			{
				return this._HighlightQuestionGroupCommon;
			}
			set
			{
				if ((this._HighlightQuestionGroupCommon != value))
				{
					this._HighlightQuestionGroupCommon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerOrder", DbType="Int")]
		public System.Nullable<int> AnswerOrder
		{
			get
			{
				return this._AnswerOrder;
			}
			set
			{
				if ((this._AnswerOrder != value))
				{
					this._AnswerOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubs", DbType="NVarChar(MAX)")]
		public string AnswerSubs
		{
			get
			{
				return this._AnswerSubs;
			}
			set
			{
				if ((this._AnswerSubs != value))
				{
					this._AnswerSubs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreRaw", DbType="Decimal(1,1) NOT NULL")]
		public decimal ScoreRaw
		{
			get
			{
				return this._ScoreRaw;
			}
			set
			{
				if ((this._ScoreRaw != value))
				{
					this._ScoreRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overridden", DbType="Bit")]
		public System.Nullable<bool> Overridden
		{
			get
			{
				return this._Overridden;
			}
			set
			{
				if ((this._Overridden != value))
				{
					this._Overridden = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemFeedbackID", DbType="Int")]
		public System.Nullable<int> ItemFeedbackID
		{
			get
			{
				return this._ItemFeedbackID;
			}
			set
			{
				if ((this._ItemFeedbackID != value))
				{
					this._ItemFeedbackID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int")]
		public System.Nullable<int> AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this._AnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(MAX)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this._Feedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIdFeedback", DbType="Int")]
		public System.Nullable<int> UserIdFeedback
		{
			get
			{
				return this._UserIdFeedback;
			}
			set
			{
				if ((this._UserIdFeedback != value))
				{
					this._UserIdFeedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedFeedback", DbType="VarChar(153)")]
		public string UserUpdatedFeedback
		{
			get
			{
				return this._UserUpdatedFeedback;
			}
			set
			{
				if ((this._UserUpdatedFeedback != value))
				{
					this._UserUpdatedFeedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdatedFeedback", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdatedFeedback
		{
			get
			{
				return this._DateUpdatedFeedback;
			}
			set
			{
				if ((this._DateUpdatedFeedback != value))
				{
					this._DateUpdatedFeedback = value;
				}
			}
		}
	}
	
	public partial class AblesGetStudentHasDataResult
	{
		
		private int _StudentID;
		
		private string _FullName;
		
		private System.Nullable<bool> _HasTestResult;
		
		public AblesGetStudentHasDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTestResult", DbType="Bit")]
		public System.Nullable<bool> HasTestResult
		{
			get
			{
				return this._HasTestResult;
			}
			set
			{
				if ((this._HasTestResult != value))
				{
					this._HasTestResult = value;
				}
			}
		}
	}
	
	public partial class GetClassForAblesDataDropDownResult
	{
		
		private int _ID;
		
		private string _Name;
		
		public GetClassForAblesDataDropDownResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetMinResultYearBySchoolResult
	{
		
		private System.Nullable<int> _MinYear;
		
		public GetMinResultYearBySchoolResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinYear", DbType="Int")]
		public System.Nullable<int> MinYear
		{
			get
			{
				return this._MinYear;
			}
			set
			{
				if ((this._MinYear != value))
				{
					this._MinYear = value;
				}
			}
		}
	}
	
	public partial class GetGradesByUserIDResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		private string _AltCode;
		
		public GetGradesByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="NVarChar(500)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this._AltCode = value;
				}
			}
		}
	}

    public partial class fnGetUserGroupReportingModules
    {

        private int _Order;

        private int _ModuleID;

        private string _ModuleCode;

        public fnGetUserGroupReportingModules()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Order", DbType = "Int")]
        public int Order
        {
            get
            {
                return this._Order;
            }
            set
            {
                if ((this._Order != value))
                {
                    this._Order = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModuleID", DbType = "Int")]
        public int ModuleID
        {
            get
            {
                return this._ModuleID;
            }
            set
            {
                if ((this._ModuleID != value))
                {
                    this._ModuleID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModuleCode", DbType = "VarChar(10)")]
        public string ModuleCode
        {
            get
            {
                return this._ModuleCode;
            }
            set
            {
                if ((this._ModuleCode != value))
                {
                    this._ModuleCode = value;
                }
            }
        }
    }

    public partial class fnGetTestTypeResult
	{
		
		private System.Nullable<int> _VirtualTestSourceID;
		
		private System.Nullable<int> _AchievementLevelSettingID;
		
		private string _Name;
		
		public fnGetTestTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int")]
		public System.Nullable<int> VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this._VirtualTestSourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevelSettingID", DbType="Int")]
		public System.Nullable<int> AchievementLevelSettingID
		{
			get
			{
				return this._AchievementLevelSettingID;
			}
			set
			{
				if ((this._AchievementLevelSettingID != value))
				{
					this._AchievementLevelSettingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class fnGetSubjectGradeByUserIDResult
	{
		
		private int _SubjectID;
		
		private string _SubjectName;
		
		private int _GradeId;
		
		private string _GradeName;
		
		private System.Nullable<int> _GradeOrder;
		
		public fnGetSubjectGradeByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="Int NOT NULL")]
		public int GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this._GradeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeOrder", DbType="Int")]
		public System.Nullable<int> GradeOrder
		{
			get
			{
				return this._GradeOrder;
			}
			set
			{
				if ((this._GradeOrder != value))
				{
					this._GradeOrder = value;
				}
			}
		}
	}
	
	public partial class CountOpendedByVirtualTestResult
	{
		
		private System.Nullable<int> _TotalQuestionOpended;
		
		public CountOpendedByVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuestionOpended", DbType="Int")]
		public System.Nullable<int> TotalQuestionOpended
		{
			get
			{
				return this._TotalQuestionOpended;
			}
			set
			{
				if ((this._TotalQuestionOpended != value))
				{
					this._TotalQuestionOpended = value;
				}
			}
		}
	}
	
	public partial class AR_GetAblesDataResult
	{
		
		private int _TestResultID;
		
		private System.DateTime _ResultDate;
		
		private string _AblesTestName;
		
		private int _ValueMapping;
		
		private string _StudentCode;
		
		private string _StudentName;
		
		private string _StateCode;
		
		private int _AssessmentRoundID;
		
		private string _ClassName;
		
		private string _SchoolCode;
		
		private string _Answers;
		
		public AR_GetAblesDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AblesTestName", DbType="VarChar(500)")]
		public string AblesTestName
		{
			get
			{
				return this._AblesTestName;
			}
			set
			{
				if ((this._AblesTestName != value))
				{
					this._AblesTestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueMapping", DbType="Int NOT NULL")]
		public int ValueMapping
		{
			get
			{
				return this._ValueMapping;
			}
			set
			{
				if ((this._ValueMapping != value))
				{
					this._ValueMapping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50)")]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(1000)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(50)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentRoundID", DbType="Int NOT NULL")]
		public int AssessmentRoundID
		{
			get
			{
				return this._AssessmentRoundID;
			}
			set
			{
				if ((this._AssessmentRoundID != value))
				{
					this._AssessmentRoundID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCode", DbType="VarChar(50)")]
		public string SchoolCode
		{
			get
			{
				return this._SchoolCode;
			}
			set
			{
				if ((this._SchoolCode != value))
				{
					this._SchoolCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answers", DbType="NVarChar(MAX)")]
		public string Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				if ((this._Answers != value))
				{
					this._Answers = value;
				}
			}
		}
	}
	
	public partial class GetTestBySchoolAndDistrictTermResult
	{
		
		private int _VirtualTestID;
		
		private string _TestNameCustom;
		
		public GetTestBySchoolAndDistrictTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="NVarChar(505)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
	}
	
	public partial class FullTermDistrictValidProcResult
	{
		
		private int _DistrictTermID;
		
		private string _DistrictTermName;
		
		private int _Active;
		
		public FullTermDistrictValidProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	public partial class SchoolValidTermByDitrictTestResultProcResult
	{
		
		private string _Name;
		
		private int _SchoolID;
		
		public SchoolValidTermByDitrictTestResultProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
	}
	
	public partial class GetClassByDistrictSchoolTestResultResult
	{
		
		private int _DistrictID;
		
		private int _ClassID;
		
		private string _ClassNameCustom;
		
		public GetClassByDistrictSchoolTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
	}
	
	public partial class DisplayRemoveTestResultProcResult
	{
		
		private int _Id;
		
		private int _TestResultID;
		
		private string _TestNameCustom;
		
		private string _SchoolName;
		
		private string _TeacherCustom;
		
		private string _ClassNameCustom;
		
		private string _StudentCustom;
		
		private System.Nullable<System.DateTime> _ResultDate;
		
		public DisplayRemoveTestResultProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
	}

    public partial class DisplayRemoveTestResultV2ProcResult
    {
        private int _TestResultID;

        private string _VirtualTestName;

        private string _StudentName;

        private string _ClassTermName;

        private System.Nullable<System.DateTime> _ResultDate;

        private string _CategoryName;

        private string _GradeName;

        private string _SubjectName;

        private int _TotalRecords;

        private int _TotalStudents;

        private int _TotalVirtualTests;


        public DisplayRemoveTestResultV2ProcResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestResultID", DbType = "Int NOT NULL")]
        public int TestResultID
        {
            get
            {
                return this._TestResultID;
            }
            set
            {
                if ((this._TestResultID != value))
                {
                    this._TestResultID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string VirtualTestName
        {
            get
            {
                return this._VirtualTestName;
            }
            set
            {
                if ((this._VirtualTestName != value))
                {
                    this._VirtualTestName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StudentName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string StudentName
        {
            get
            {
                return this._StudentName;
            }
            set
            {
                if ((this._StudentName != value))
                {
                    this._StudentName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClassTermName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string ClassTermName
        {
            get
            {
                return this._ClassTermName;
            }
            set
            {
                if ((this._ClassTermName != value))
                {
                    this._ClassTermName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResultDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ResultDate
        {
            get
            {
                return this._ResultDate;
            }
            set
            {
                if ((this._ResultDate != value))
                {
                    this._ResultDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if ((this._CategoryName != value))
                {
                    this._CategoryName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GradeName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string GradeName
        {
            get
            {
                return this._GradeName;
            }
            set
            {
                if ((this._GradeName != value))
                {
                    this._GradeName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubjectName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string SubjectName
        {
            get
            {
                return this._SubjectName;
            }
            set
            {
                if ((this._SubjectName != value))
                {
                    this._SubjectName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalRecords", DbType = "Int NOT NULL")]
        public int TotalRecords
        {
            get
            {
                return this._TotalRecords;
            }
            set
            {
                if ((this._TotalRecords != value))
                {
                    this._TotalRecords = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalStudents", DbType = "Int NOT NULL")]
        public int TotalStudents
        {
            get
            {
                return this._TotalStudents;
            }
            set
            {
                if ((this._TotalStudents != value))
                {
                    this._TotalStudents = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalVirtualTests", DbType = "Int NOT NULL")]
        public int TotalVirtualTests
        {
            get
            {
                return this._TotalVirtualTests;
            }
            set
            {
                if ((this._TotalVirtualTests != value))
                {
                    this._TotalVirtualTests = value;
                }
            }
        }
    }

    public partial class DisplayRemoveVirtualTestV2ProcResult
    {
        private int _VirtualTestID;

        private string _VirtualTestName;

        private string _CategoryName;

        private string _GradeName;

        private string _SubjectName;

        private int _ResultCount;

        private string _TestResultIDList;

        private string _StudentNameList;

        private string _StudentIDList;

        public DisplayRemoveVirtualTestV2ProcResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestID", DbType = "Int NOT NULL")]
        public int VirtualTestID
        {
            get
            {
                return this._VirtualTestID;
            }
            set
            {
                if ((this._VirtualTestID != value))
                {
                    this._VirtualTestID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string VirtualTestName
        {
            get
            {
                return this._VirtualTestName;
            }
            set
            {
                if ((this._VirtualTestName != value))
                {
                    this._VirtualTestName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if ((this._CategoryName != value))
                {
                    this._CategoryName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GradeName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string GradeName
        {
            get
            {
                return this._GradeName;
            }
            set
            {
                if ((this._GradeName != value))
                {
                    this._GradeName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubjectName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string SubjectName
        {
            get
            {
                return this._SubjectName;
            }
            set
            {
                if ((this._SubjectName != value))
                {
                    this._SubjectName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResultCount", DbType = "Int NOT NULL", CanBeNull = false)]
        public int ResultCount
        {
            get
            {
                return this._ResultCount;
            }
            set
            {
                if ((this._ResultCount != value))
                {
                    this._ResultCount = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestResultIDList", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string TestResultIDList
        {
            get
            {
                return this._TestResultIDList;
            }
            set
            {
                if ((this._TestResultIDList != value))
                {
                    this._TestResultIDList = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StudentNameList", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string StudentNameList
        {
            get
            {
                return this._StudentNameList;
            }
            set
            {
                if ((this._StudentNameList != value))
                {
                    this._StudentNameList = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StudentIDList", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string StudentIDList
        {
            get
            {
                return this._StudentIDList;
            }
            set
            {
                if ((this._StudentIDList != value))
                {
                    this._StudentIDList = value;
                }
            }
        }
    }

    public partial class GetVirtualTestsForTestRegraderResult
	{
		
		private int _VirtualTestID;
		
		private string _TestNameCustom;
		
		public GetVirtualTestsForTestRegraderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
	}
	
	public partial class GetClassesForTestRegraderResult
	{
		
		private int _ClassID;
		
		private string _Name;
		
		public GetClassesForTestRegraderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class DisplayTestResultReGraderProcResult
	{
		
		private int _Id;
		
		private int _TestResultID;

        private int _StudentID;


        private string _TestNameCustom;
		
		private string _SchoolName;
		
		private string _TeacherCustom;
		
		private string _ClassNameCustom;
		
		private string _StudentCustom;
		
		private System.DateTime _ResultDate;
		
		public DisplayTestResultReGraderProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StudentID", DbType = "Int NOT NULL")]
        public int StudentID
        {
            get
            {
                return this._StudentID;
            }
            set
            {
                if ((this._StudentID != value))
                {
                    this._StudentID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
	}
	
	public partial class GetSchoolsForTestRegraderResult
	{
		
		private int _SchoolID;
		
		private string _Name;
		
		public GetSchoolsForTestRegraderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetDistrictTermsForTestRegraderResult
	{
		
		private int _DistrictTermID;
		
		private string _DistrictTermName;
		
		public GetDistrictTermsForTestRegraderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
	}
	
	public partial class DisplayTestResultRetaggedProcResult
	{
		
		private int _Id;
		
		private int _TestResultID;
		
		private string _TestNameCustom;
		
		private string _SchoolName;
		
		private string _TeacherCustom;
		
		private string _ClassNameCustom;
		
		private string _StudentCustom;
		
		private System.Nullable<System.DateTime> _ResultDate;
		
		private System.Nullable<bool> _IsExported;
		
		public DisplayTestResultRetaggedProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExported", DbType="Bit")]
		public System.Nullable<bool> IsExported
		{
			get
			{
				return this._IsExported;
			}
			set
			{
				if ((this._IsExported != value))
				{
					this._IsExported = value;
				}
			}
		}
	}
	
	public partial class CanRemoveQuestionResult
	{
		
		private System.Nullable<bool> _CanRemoveVirtualQuestion;
		
		public CanRemoveQuestionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanRemoveVirtualQuestion", DbType="Bit")]
		public System.Nullable<bool> CanRemoveVirtualQuestion
		{
			get
			{
				return this._CanRemoveVirtualQuestion;
			}
			set
			{
				if ((this._CanRemoveVirtualQuestion != value))
				{
					this._CanRemoveVirtualQuestion = value;
				}
			}
		}
	}
	
	public partial class ProcGradeFormBankResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		private string _AltCode;
		
		public ProcGradeFormBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="NVarChar(500)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this._AltCode = value;
				}
			}
		}
	}
	
	public partial class ProcSubjectFormBankResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		private System.Nullable<int> _SortOrder;
		
		public ProcSubjectFormBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
	}
	
	public partial class GetSubjectsByGradeIdAndAuthorOfAllTestTypeResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public GetSubjectsByGradeIdAndAuthorOfAllTestTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsOTTImproveResult
	{
		
		private System.Nullable<int> _TotalRecord;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private System.Nullable<int> _Status;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<int> _Paused;
		
		private System.Nullable<int> _Autograding;
		
		private System.Nullable<int> _Started;
		
		private System.Nullable<int> _Completed;
		
		private System.Nullable<int> _WaitingForReview;
		
		private System.Nullable<int> _NotStarted;
		
		private string _Students;
		
		public GetTestClassAssignmentsOTTImproveResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecord", DbType="Int")]
		public System.Nullable<int> TotalRecord
		{
			get
			{
				return this._TotalRecord;
			}
			set
			{
				if ((this._TotalRecord != value))
				{
					this._TotalRecord = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paused", DbType="Int")]
		public System.Nullable<int> Paused
		{
			get
			{
				return this._Paused;
			}
			set
			{
				if ((this._Paused != value))
				{
					this._Paused = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autograding", DbType="Int")]
		public System.Nullable<int> Autograding
		{
			get
			{
				return this._Autograding;
			}
			set
			{
				if ((this._Autograding != value))
				{
					this._Autograding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int")]
		public System.Nullable<int> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int")]
		public System.Nullable<int> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int")]
		public System.Nullable<int> WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int")]
		public System.Nullable<int> NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
	}
	
	public partial class GetPreferencesForOnlineTest_MultipleResult
	{
		
		private string _RESULT;
		
		private System.Nullable<int> _QtiTestClassAssignmentId;
		
		public GetPreferencesForOnlineTest_MultipleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULT", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string RESULT
		{
			get
			{
				return this._RESULT;
			}
			set
			{
				if ((this._RESULT != value))
				{
					this._RESULT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiTestClassAssignmentId", DbType="Int")]
		public System.Nullable<int> QtiTestClassAssignmentId
		{
			get
			{
				return this._QtiTestClassAssignmentId;
			}
			set
			{
				if ((this._QtiTestClassAssignmentId != value))
				{
					this._QtiTestClassAssignmentId = value;
				}
			}
		}
	}
	
	public partial class GetAssociatedClassesThatHasTestResultResult
	{
		
		private System.Nullable<int> _ClassId;
		
		private string _ClassName;
		
		public GetAssociatedClassesThatHasTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int")]
		public System.Nullable<int> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
	}
	
	public partial class GetSubjectGradeByUserIDResult
	{
		
		private System.Nullable<int> _SubjectID;
		
		private string _SubjectName;
		
		private System.Nullable<int> _GradeId;
		
		private string _GradeName;
		
		private System.Nullable<int> _GradeOrder;
		
		public GetSubjectGradeByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="Int")]
		public System.Nullable<int> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this._GradeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeOrder", DbType="Int")]
		public System.Nullable<int> GradeOrder
		{
			get
			{
				return this._GradeOrder;
			}
			set
			{
				if ((this._GradeOrder != value))
				{
					this._GradeOrder = value;
				}
			}
		}
	}
	
	public partial class CheckPermissionsEditQTITestClassAssignmentResult
	{
		
		private System.Nullable<bool> _Result;
		
		public CheckPermissionsEditQTITestClassAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit")]
		public System.Nullable<bool> Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this._Result = value;
				}
			}
		}
	}
	
	public partial class GetQTIVirtualTestResult
	{
		
		private string _TestName;
		
		private string _TestInstruction;
		
		private int _VirtualSectionID;
		
		private string _SectionTitle;
		
		private int _SectionOrder;
		
		private string _SectionInstruction;
		
		private string _SectionTitle1;
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private System.Nullable<int> _BaseVirtualQuestionID;
		
		private int _QTIItemID;
		
		private int _QTISchemaID;
		
		private string _Title;
		
		private int _QTIGroupID;
		
		private string _XmlContent;
		
		private string _CorrectAnswer;
		
		private string _ResponseProcessing;
		
		private System.Nullable<bool> _IsRubricBasedQuestion;
		
		private int _VirtualSectionMode;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		public GetQTIVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInstruction", DbType="VarChar(MAX)")]
		public string TestInstruction
		{
			get
			{
				return this._TestInstruction;
			}
			set
			{
				if ((this._TestInstruction != value))
				{
					this._TestInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="VarChar(100)")]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this._SectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOrder", DbType="Int NOT NULL")]
		public int SectionOrder
		{
			get
			{
				return this._SectionOrder;
			}
			set
			{
				if ((this._SectionOrder != value))
				{
					this._SectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionInstruction", DbType="VarChar(2000)")]
		public string SectionInstruction
		{
			get
			{
				return this._SectionInstruction;
			}
			set
			{
				if ((this._SectionInstruction != value))
				{
					this._SectionInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle1", DbType="VarChar(100)")]
		public string SectionTitle1
		{
			get
			{
				return this._SectionTitle1;
			}
			set
			{
				if ((this._SectionTitle1 != value))
				{
					this._SectionTitle1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseVirtualQuestionID", DbType="Int")]
		public System.Nullable<int> BaseVirtualQuestionID
		{
			get
			{
				return this._BaseVirtualQuestionID;
			}
			set
			{
				if ((this._BaseVirtualQuestionID != value))
				{
					this._BaseVirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessing", DbType="NVarChar(MAX)")]
		public string ResponseProcessing
		{
			get
			{
				return this._ResponseProcessing;
			}
			set
			{
				if ((this._ResponseProcessing != value))
				{
					this._ResponseProcessing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRubricBasedQuestion", DbType="Bit")]
		public System.Nullable<bool> IsRubricBasedQuestion
		{
			get
			{
				return this._IsRubricBasedQuestion;
			}
			set
			{
				if ((this._IsRubricBasedQuestion != value))
				{
					this._IsRubricBasedQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionMode", DbType="Int NOT NULL")]
		public int VirtualSectionMode
		{
			get
			{
				return this._VirtualSectionMode;
			}
			set
			{
				if ((this._VirtualSectionMode != value))
				{
					this._VirtualSectionMode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
	}
	
	public partial class GetStudentAssignmentsResult
	{
		
		private string _Type;
		
		private System.Nullable<int> _StudentID;
		
		private string _FullName;
		
		private string _Code;
		
		private string _StudentIDs;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<System.DateTime> _ResultDate;
		
		public GetStudentAssignmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentIDs", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentIDs
		{
			get
			{
				return this._StudentIDs;
			}
			set
			{
				if ((this._StudentIDs != value))
				{
					this._StudentIDs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
	}
	
	public partial class GetVirtualQuestionWithCorrectAnswerResult
	{
		
		private int _VirtualSectionID;
		
		private int _VirtualQuestionID;
		
		private int _Order;
		
		private int _QTIItemID;
		
		private string _XmlContent;
		
		private int _QTIGroupID;
		
		private System.Nullable<int> _VirtualSectionOrder;
		
		private string _VirtualSectionTitle;
		
		private int _VirtualSectionQuestionID;
		
		private int _QuestionOrder;
		
		private System.Nullable<int> _BaseVirtualQuestionId;
		
		private int _QTISchemaID;
		
		private string _AnswerIdentifiers;
		
		private int _PointsPossible;
		
		private string _CorrectAnswer;
		
		private System.Nullable<bool> _IsRubricBasedQuestion;
		
		public GetVirtualQuestionWithCorrectAnswerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionOrder", DbType="Int")]
		public System.Nullable<int> VirtualSectionOrder
		{
			get
			{
				return this._VirtualSectionOrder;
			}
			set
			{
				if ((this._VirtualSectionOrder != value))
				{
					this._VirtualSectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionTitle", DbType="VarChar(100)")]
		public string VirtualSectionTitle
		{
			get
			{
				return this._VirtualSectionTitle;
			}
			set
			{
				if ((this._VirtualSectionTitle != value))
				{
					this._VirtualSectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionQuestionID", DbType="Int NOT NULL")]
		public int VirtualSectionQuestionID
		{
			get
			{
				return this._VirtualSectionQuestionID;
			}
			set
			{
				if ((this._VirtualSectionQuestionID != value))
				{
					this._VirtualSectionQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseVirtualQuestionId", DbType="Int")]
		public System.Nullable<int> BaseVirtualQuestionId
		{
			get
			{
				return this._BaseVirtualQuestionId;
			}
			set
			{
				if ((this._BaseVirtualQuestionId != value))
				{
					this._BaseVirtualQuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerIdentifiers", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AnswerIdentifiers
		{
			get
			{
				return this._AnswerIdentifiers;
			}
			set
			{
				if ((this._AnswerIdentifiers != value))
				{
					this._AnswerIdentifiers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRubricBasedQuestion", DbType="Bit")]
		public System.Nullable<bool> IsRubricBasedQuestion
		{
			get
			{
				return this._IsRubricBasedQuestion;
			}
			set
			{
				if ((this._IsRubricBasedQuestion != value))
				{
					this._IsRubricBasedQuestion = value;
				}
			}
		}
	}
	
	public partial class GetTestTypeByUserIdResult
	{
		
		private System.Nullable<int> _DataSetOriginID;
		
		private System.Nullable<int> _DataSetCategoryID;
		
		private string _DataSetCategoryName;
		
		public GetTestTypeByUserIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetOriginID", DbType="Int")]
		public System.Nullable<int> DataSetOriginID
		{
			get
			{
				return this._DataSetOriginID;
			}
			set
			{
				if ((this._DataSetOriginID != value))
				{
					this._DataSetOriginID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this._DataSetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DataSetCategoryName
		{
			get
			{
				return this._DataSetCategoryName;
			}
			set
			{
				if ((this._DataSetCategoryName != value))
				{
					this._DataSetCategoryName = value;
				}
			}
		}
	}
	
	public partial class GetTestForStudentPreferencesResult
	{
		
		private int _VirtualTestID;
		
		private string _TestName;
		
		private string _DataSetCategory;
		
		private int _DataSetCategoryID;
		
		private string _Subject;
		
		private string _Grade;
		
		private int _ResultCount;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		public GetTestForStudentPreferencesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategory", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DataSetCategory
		{
			get
			{
				return this._DataSetCategory;
			}
			set
			{
				if ((this._DataSetCategory != value))
				{
					this._DataSetCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int NOT NULL")]
		public int DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this._DataSetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCount", DbType="Int NOT NULL")]
		public int ResultCount
		{
			get
			{
				return this._ResultCount;
			}
			set
			{
				if ((this._ResultCount != value))
				{
					this._ResultCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
	}
	
	public partial class VirtualTestProperitesNewResult
	{
		
		private int _VirtualTestID;
		
		private string _NAME;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _Author;
		
		private System.Nullable<int> _AuthorUserID;
		
		private System.Nullable<int> _TotalQuestion;
		
		private System.Nullable<int> _TotalTestResult;
		
		private System.Nullable<System.DateTime> _MinResultDate;
		
		private System.Nullable<System.DateTime> _MaxResultDate;
		
		private string _Instruction;
		
		private System.Nullable<int> _DataSetCategoryID;
		
		public VirtualTestProperitesNewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="VarChar(101)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this._AuthorUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuestion", DbType="Int")]
		public System.Nullable<int> TotalQuestion
		{
			get
			{
				return this._TotalQuestion;
			}
			set
			{
				if ((this._TotalQuestion != value))
				{
					this._TotalQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTestResult", DbType="Int")]
		public System.Nullable<int> TotalTestResult
		{
			get
			{
				return this._TotalTestResult;
			}
			set
			{
				if ((this._TotalTestResult != value))
				{
					this._TotalTestResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MinResultDate
		{
			get
			{
				return this._MinResultDate;
			}
			set
			{
				if ((this._MinResultDate != value))
				{
					this._MinResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaxResultDate
		{
			get
			{
				return this._MaxResultDate;
			}
			set
			{
				if ((this._MaxResultDate != value))
				{
					this._MaxResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="VarChar(MAX)")]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this._Instruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this._DataSetCategoryID = value;
				}
			}
		}
	}
	
	public partial class GetDataSetCategoryForStudentPreferenceResult
	{
		
		private System.Nullable<int> _DataSetCategoryID;
		
		private string _DataSetCategoryName;
		
		private System.Nullable<int> _DistrictID;
		
		private string _DistrictName;
		
		private string _DisplayName;
		
		public GetDataSetCategoryForStudentPreferenceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this._DataSetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DataSetCategoryName
		{
			get
			{
				return this._DataSetCategoryName;
			}
			set
			{
				if ((this._DataSetCategoryName != value))
				{
					this._DataSetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
	}
	
	public partial class AddRetagTestResultsResult
	{
		
		private int _Column1;
		
		public AddRetagTestResultsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetVirtualQuestionPropertiesResult
	{
		
		private int _VirtualTestID;
		
		private int _VirtualQuestionID;
		
		private string _XmlContent;
		
		private int _QTISchemaID;
		
		private string _QtiSchemaDes;
		
		private int _QTIBankID;
		
		private int _QTIGroupID;
		
		private int _PointsPossible;
		
		private string _ItemBank;
		
		private string _ItemSet;
		
		private string _StandardNumberList;
		
		private string _TopicList;
		
		private string _SkillList;
		
		private string _OtherList;
		
		private string _ItemTagList;
		
		private int _QtiPointsPossible;
		
		private System.Nullable<int> _BaseVirtualQuestionId;
		
		private System.Nullable<int> _ResponseProcessingTypeID;
		
		private string _QuestionLabel;
		
		private string _QuestionNumber;
		
		private System.Nullable<bool> _IsRubricBasedQuestion;
		
		private string _ScoreName;
		
		public GetVirtualQuestionPropertiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTISchemaID", DbType="Int NOT NULL")]
		public int QTISchemaID
		{
			get
			{
				return this._QTISchemaID;
			}
			set
			{
				if ((this._QTISchemaID != value))
				{
					this._QTISchemaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiSchemaDes", DbType="NVarChar(500)")]
		public string QtiSchemaDes
		{
			get
			{
				return this._QtiSchemaDes;
			}
			set
			{
				if ((this._QtiSchemaDes != value))
				{
					this._QtiSchemaDes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIBankID", DbType="Int NOT NULL")]
		public int QTIBankID
		{
			get
			{
				return this._QTIBankID;
			}
			set
			{
				if ((this._QTIBankID != value))
				{
					this._QTIBankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBank", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ItemBank
		{
			get
			{
				return this._ItemBank;
			}
			set
			{
				if ((this._ItemBank != value))
				{
					this._ItemBank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSet", DbType="VarChar(300)")]
		public string ItemSet
		{
			get
			{
				return this._ItemSet;
			}
			set
			{
				if ((this._ItemSet != value))
				{
					this._ItemSet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardNumberList", DbType="NVarChar(MAX)")]
		public string StandardNumberList
		{
			get
			{
				return this._StandardNumberList;
			}
			set
			{
				if ((this._StandardNumberList != value))
				{
					this._StandardNumberList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicList", DbType="NVarChar(MAX)")]
		public string TopicList
		{
			get
			{
				return this._TopicList;
			}
			set
			{
				if ((this._TopicList != value))
				{
					this._TopicList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillList", DbType="NVarChar(MAX)")]
		public string SkillList
		{
			get
			{
				return this._SkillList;
			}
			set
			{
				if ((this._SkillList != value))
				{
					this._SkillList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherList", DbType="NVarChar(MAX)")]
		public string OtherList
		{
			get
			{
				return this._OtherList;
			}
			set
			{
				if ((this._OtherList != value))
				{
					this._OtherList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagList", DbType="NVarChar(MAX)")]
		public string ItemTagList
		{
			get
			{
				return this._ItemTagList;
			}
			set
			{
				if ((this._ItemTagList != value))
				{
					this._ItemTagList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiPointsPossible", DbType="Int NOT NULL")]
		public int QtiPointsPossible
		{
			get
			{
				return this._QtiPointsPossible;
			}
			set
			{
				if ((this._QtiPointsPossible != value))
				{
					this._QtiPointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseVirtualQuestionId", DbType="Int")]
		public System.Nullable<int> BaseVirtualQuestionId
		{
			get
			{
				return this._BaseVirtualQuestionId;
			}
			set
			{
				if ((this._BaseVirtualQuestionId != value))
				{
					this._BaseVirtualQuestionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseProcessingTypeID", DbType="Int")]
		public System.Nullable<int> ResponseProcessingTypeID
		{
			get
			{
				return this._ResponseProcessingTypeID;
			}
			set
			{
				if ((this._ResponseProcessingTypeID != value))
				{
					this._ResponseProcessingTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionLabel", DbType="NVarChar(2000)")]
		public string QuestionLabel
		{
			get
			{
				return this._QuestionLabel;
			}
			set
			{
				if ((this._QuestionLabel != value))
				{
					this._QuestionLabel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionNumber", DbType="NVarChar(6)")]
		public string QuestionNumber
		{
			get
			{
				return this._QuestionNumber;
			}
			set
			{
				if ((this._QuestionNumber != value))
				{
					this._QuestionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRubricBasedQuestion", DbType="Bit")]
		public System.Nullable<bool> IsRubricBasedQuestion
		{
			get
			{
				return this._IsRubricBasedQuestion;
			}
			set
			{
				if ((this._IsRubricBasedQuestion != value))
				{
					this._IsRubricBasedQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreName", DbType="NVarChar(100)")]
		public string ScoreName
		{
			get
			{
				return this._ScoreName;
			}
			set
			{
				if ((this._ScoreName != value))
				{
					this._ScoreName = value;
				}
			}
		}
	}
	
	public partial class CreateTestGetBanksByUserID_HideTeacherBankResult
	{
		
		private System.Nullable<int> _BankID;
		
		private string _BankName;
		
		private string _Subject;
		
		private string _Grade;
		
		private System.Nullable<int> _GradeOrder;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<bool> _Archived;

        private System.Nullable<int> _TotalRecords;

        public CreateTestGetBanksByUserID_HideTeacherBankResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(100)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(100)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeOrder", DbType="Int")]
		public System.Nullable<int> GradeOrder
		{
			get
			{
				return this._GradeOrder;
			}
			set
			{
				if ((this._GradeOrder != value))
				{
					this._GradeOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this._CreatedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this._Archived = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalRecords", DbType = "Int")]
        public System.Nullable<int> TotalRecords
        {
            get
            {
                return this._TotalRecords;
            }
            set
            {
                if ((this._TotalRecords != value))
                {
                    this._TotalRecords = value;
                }
            }
        }
    }
	
	public partial class GetSurveyAssignmentResultsByTypeResult
	{
		
		private int _Id;
		
		private int _Status;
		
		private System.DateTime _AssignmentDate;
		
		private string _Respondent;
		
		private string _Email;
		
		private string _ShortLink;
		
		private System.Nullable<System.DateTime> _ResponseDate;
		
		private string _Code;
		
		private System.Nullable<int> _StudentId;
		
		private System.Nullable<int> _TotalRecords;
		
		public GetSurveyAssignmentResultsByTypeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Respondent", DbType="VarChar(202)")]
		public string Respondent
		{
			get
			{
				return this._Respondent;
			}
			set
			{
				if ((this._Respondent != value))
				{
					this._Respondent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortLink", DbType="VarChar(121) NOT NULL", CanBeNull=false)]
		public string ShortLink
		{
			get
			{
				return this._ShortLink;
			}
			set
			{
				if ((this._ShortLink != value))
				{
					this._ShortLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResponseDate
		{
			get
			{
				return this._ResponseDate;
			}
			set
			{
				if ((this._ResponseDate != value))
				{
					this._ResponseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int")]
		public System.Nullable<int> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this._StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecords", DbType="Int")]
		public System.Nullable<int> TotalRecords
		{
			get
			{
				return this._TotalRecords;
			}
			set
			{
				if ((this._TotalRecords != value))
				{
					this._TotalRecords = value;
				}
			}
		}
	}
	
	public partial class GetTestAssignmentsForSurveyResult
	{
		
		private string _AssignmentGUID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private string _Status;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _SurveyAssignmentType;
		
		private System.Nullable<int> _StudentID;
		
		private string _ShortLink;
		
		public GetTestAssignmentsForSurveyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentGUID", DbType="VarChar(1000)")]
		public string AssignmentGUID
		{
			get
			{
				return this._AssignmentGUID;
			}
			set
			{
				if ((this._AssignmentGUID != value))
				{
					this._AssignmentGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1000)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1000)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1000)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyAssignmentType", DbType="Int")]
		public System.Nullable<int> SurveyAssignmentType
		{
			get
			{
				return this._SurveyAssignmentType;
			}
			set
			{
				if ((this._SurveyAssignmentType != value))
				{
					this._SurveyAssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortLink", DbType="VarChar(1000)")]
		public string ShortLink
		{
			get
			{
				return this._ShortLink;
			}
			set
			{
				if ((this._ShortLink != value))
				{
					this._ShortLink = value;
				}
			}
		}
	}
	
	public partial class GetSurveyPrivateAssignmentOfStudentAndParentResult
	{
		
		private int _QTITestClassAssignmentID;
		
		private int _RoleId;
		
		public GetSurveyPrivateAssignmentOfStudentAndParentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int NOT NULL")]
		public int QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	public partial class CheckAllowAssignSurveyResult
	{
		
		private int _Status;
		
		public CheckAllowAssignSurveyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class CheckMatchEmailResult
	{
		
		private int _Column1;
		
		public CheckMatchEmailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetTermBySchoolResult
	{
		
		private System.Nullable<int> _DistrictID;
		
		private string _DistrictTermName;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _DistrictTermID;
		
		public GetTermBySchoolResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="NVarChar(1000)")]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsPassThroughExportResult
	{
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private System.Nullable<int> _Status;
		
		private string _TeacherName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _AssignmentType;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private string _StudentIds;
		
		private int _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		public GetTestClassAssignmentsPassThroughExportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(500)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(500)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="NVarChar(500)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(500)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(500)")]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(500)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int")]
		public System.Nullable<int> AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(500)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int")]
		public System.Nullable<int> CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentIds", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentIds
		{
			get
			{
				return this._StudentIds;
			}
			set
			{
				if ((this._StudentIds != value))
				{
					this._StudentIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int NOT NULL")]
		public int BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
	}
	
	public partial class GetConstructedResponseQuestionsResult
	{
		
		private string _XmlContent;
		
		private int _VirtualQuestionID;
		
		public GetConstructedResponseQuestionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
	}
	
	public partial class GetPointEarnedForAblesReportResult
	{
		
		private int _TestResultID;
		
		private int _StudentID;
		
		private string _StudentName;
		
		private string _StudentCode;
		
		private string _StateCode;
		
		private int _AssessmentRoundID;
		
		private int _VirtualTestID;
		
		private System.Nullable<int> _ClassID;
		
		private System.DateTime _ResultDate;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _AblesTestName;
		
		private int _ValueMapping;
		
		private string _ClassName;
		
		private string _Answers;
		
		public GetPointEarnedForAblesReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(202) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(50)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssessmentRoundID", DbType="Int NOT NULL")]
		public int AssessmentRoundID
		{
			get
			{
				return this._AssessmentRoundID;
			}
			set
			{
				if ((this._AssessmentRoundID != value))
				{
					this._AssessmentRoundID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this._DateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AblesTestName", DbType="VarChar(500)")]
		public string AblesTestName
		{
			get
			{
				return this._AblesTestName;
			}
			set
			{
				if ((this._AblesTestName != value))
				{
					this._AblesTestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueMapping", DbType="Int NOT NULL")]
		public int ValueMapping
		{
			get
			{
				return this._ValueMapping;
			}
			set
			{
				if ((this._ValueMapping != value))
				{
					this._ValueMapping = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answers", DbType="NVarChar(MAX)")]
		public string Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				if ((this._Answers != value))
				{
					this._Answers = value;
				}
			}
		}
	}
	
	public partial class GetSubjectByShortNameResult
	{
		
		private System.Nullable<int> _SubjectID;
		
		private string _Name;
		
		private System.Nullable<int> _GradeId;
		
		private System.Nullable<int> _StateID;
		
		private string _ShortName;
		
		public GetSubjectByShortNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeId", DbType="Int")]
		public System.Nullable<int> GradeId
		{
			get
			{
				return this._GradeId;
			}
			set
			{
				if ((this._GradeId != value))
				{
					this._GradeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(150)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class GetAnswerAttachmentsResult
	{
		
		private int _QTIOnlineTestSessionAnswerID;
		
		private int _AttachmentType;
		
		private System.Nullable<System.Guid> _DocumentGUID;
		
		private string _FilePath;
		
		private string _FileName;
		
		private string _FileType;
		
		public GetAnswerAttachmentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this._QTIOnlineTestSessionAnswerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentType", DbType="Int NOT NULL")]
		public int AttachmentType
		{
			get
			{
				return this._AttachmentType;
			}
			set
			{
				if ((this._AttachmentType != value))
				{
					this._AttachmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DocumentGUID
		{
			get
			{
				return this._DocumentGUID;
			}
			set
			{
				if ((this._DocumentGUID != value))
				{
					this._DocumentGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(2400)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this._FilePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(2000)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="VarChar(10)")]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this._FileType = value;
				}
			}
		}
	}
	
	public partial class CheckUserCanAccessArtifactResult
	{
		
		private System.Nullable<bool> _CanAccess;
		
		public CheckUserCanAccessArtifactResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAccess", DbType="Bit")]
		public System.Nullable<bool> CanAccess
		{
			get
			{
				return this._CanAccess;
			}
			set
			{
				if ((this._CanAccess != value))
				{
					this._CanAccess = value;
				}
			}
		}
	}
	
	public partial class GetStudentStatusForTestRetakeResult
	{
		
		private int _StudentID;
		
		private string _FullName;
		
		private string _TestName;
		
		private int _VirtualTestID;
		
		private int _StudentStatus;
		
		private int _ClassID;
		
		private string _RetakeType;
		
		public GetStudentStatusForTestRetakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentStatus", DbType="Int NOT NULL")]
		public int StudentStatus
		{
			get
			{
				return this._StudentStatus;
			}
			set
			{
				if ((this._StudentStatus != value))
				{
					this._StudentStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetakeType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string RetakeType
		{
			get
			{
				return this._RetakeType;
			}
			set
			{
				if ((this._RetakeType != value))
				{
					this._RetakeType = value;
				}
			}
		}
	}
	
	public partial class VirtualTestWithOutTestResultForPublisherProcResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentTestID;
		
		private System.Nullable<int> _OriginalTestID;
		
		public VirtualTestWithOutTestResultForPublisherProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTestID", DbType="Int")]
		public System.Nullable<int> ParentTestID
		{
			get
			{
				return this._ParentTestID;
			}
			set
			{
				if ((this._ParentTestID != value))
				{
					this._ParentTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTestID", DbType="Int")]
		public System.Nullable<int> OriginalTestID
		{
			get
			{
				return this._OriginalTestID;
			}
			set
			{
				if ((this._OriginalTestID != value))
				{
					this._OriginalTestID = value;
				}
			}
		}
	}
	
	public partial class ClonePBSForTestRetakeResult
	{
		
		private System.Nullable<int> _TotalPerformanceBandVirtualTest;
		
		public ClonePBSForTestRetakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPerformanceBandVirtualTest", DbType="Int")]
		public System.Nullable<int> TotalPerformanceBandVirtualTest
		{
			get
			{
				return this._TotalPerformanceBandVirtualTest;
			}
			set
			{
				if ((this._TotalPerformanceBandVirtualTest != value))
				{
					this._TotalPerformanceBandVirtualTest = value;
				}
			}
		}
	}
	
	public partial class GetTestAssignResultForRetakeResult
	{
		
		private int _Id;
		
		private int _StudentID;
		
		private string _StudentCode;
		
		private string _StudentFirstName;
		
		private string _StudentLastName;
		
		private string _StudentName;
		
		private string _TestCode;
		
		private string _ShortGUID;
		
		private System.DateTime _Assigned;
		
		private string _Test;
		
		private string _ClassName;
		
		private int _Status;
		
		private string _AuthenticationCode;
		
		public GetTestAssignResultForRetakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentFirstName
		{
			get
			{
				return this._StudentFirstName;
			}
			set
			{
				if ((this._StudentFirstName != value))
				{
					this._StudentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentLastName
		{
			get
			{
				return this._StudentLastName;
			}
			set
			{
				if ((this._StudentLastName != value))
				{
					this._StudentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestCode
		{
			get
			{
				return this._TestCode;
			}
			set
			{
				if ((this._TestCode != value))
				{
					this._TestCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortGUID", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ShortGUID
		{
			get
			{
				return this._ShortGUID;
			}
			set
			{
				if ((this._ShortGUID != value))
				{
					this._ShortGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="DateTime NOT NULL")]
		public System.DateTime Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this._Assigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this._Test = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationCode", DbType="Varchar(4)")]
		public string AuthenticationCode
		{
			get
			{
				return this._AuthenticationCode;
			}
			set
			{
				if ((this._AuthenticationCode != value))
				{
					this._AuthenticationCode = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsRemoveTempTableResult
	{
		
		private System.Nullable<int> _TotalRecords;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private int _Status;
		
		private string _TeacherName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private int _AssignmentType;
		
		private string _Code;
		
		private System.DateTime _AssignmentDate;
		
		private int _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private System.Nullable<int> _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private System.Nullable<bool> _IsHide;
		
		private int _IsVirtualTestRetake;
		
		private string _AuthenticationCode;
		
		private System.Nullable<System.DateTime> _AuthenticationCodeExpirationDate;
		
		public GetTestClassAssignmentsRemoveTempTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecords", DbType="Int")]
		public System.Nullable<int> TotalRecords
		{
			get
			{
				return this._TotalRecords;
			}
			set
			{
				if ((this._TotalRecords != value))
				{
					this._TotalRecords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int NOT NULL")]
		public int AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int NOT NULL")]
		public int CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int")]
		public System.Nullable<int> BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualTestRetake", DbType="Int NOT NULL")]
		public int IsVirtualTestRetake
		{
			get
			{
				return this._IsVirtualTestRetake;
			}
			set
			{
				if ((this._IsVirtualTestRetake != value))
				{
					this._IsVirtualTestRetake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationCode", DbType="VarChar(4)")]
		public string AuthenticationCode
		{
			get
			{
				return this._AuthenticationCode;
			}
			set
			{
				if ((this._AuthenticationCode != value))
				{
					this._AuthenticationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationCodeExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuthenticationCodeExpirationDate
		{
			get
			{
				return this._AuthenticationCodeExpirationDate;
			}
			set
			{
				if ((this._AuthenticationCodeExpirationDate != value))
				{
					this._AuthenticationCodeExpirationDate = value;
				}
			}
		}
	}
	
	public partial class GetRetakeListOfDisplayQuestionsResult
	{
		
		private int _StudentID;
		
		private int _ClassID;
		
		private string _ListOfDisplayQuestions;
		
		public GetRetakeListOfDisplayQuestionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListOfDisplayQuestions", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ListOfDisplayQuestions
		{
			get
			{
				return this._ListOfDisplayQuestions;
			}
			set
			{
				if ((this._ListOfDisplayQuestions != value))
				{
					this._ListOfDisplayQuestions = value;
				}
			}
		}
	}
	
	public partial class GetTestRetakeInforResult
	{
		
		private string _GradeName;
		
		private string _SubjectName;
		
		private string _BankName;
		
		private int _OriginalTestID;
		
		private string _OriginalTestName;
		
		private System.Nullable<int> _CurrentTestID;
		
		private System.Nullable<int> _DistrictID;
		
		public GetTestRetakeInforResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTestID", DbType="Int NOT NULL")]
		public int OriginalTestID
		{
			get
			{
				return this._OriginalTestID;
			}
			set
			{
				if ((this._OriginalTestID != value))
				{
					this._OriginalTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTestName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string OriginalTestName
		{
			get
			{
				return this._OriginalTestName;
			}
			set
			{
				if ((this._OriginalTestName != value))
				{
					this._OriginalTestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentTestID", DbType="Int")]
		public System.Nullable<int> CurrentTestID
		{
			get
			{
				return this._CurrentTestID;
			}
			set
			{
				if ((this._CurrentTestID != value))
				{
					this._CurrentTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	public partial class GetTestAssignmentsForStudentResult
	{
		
		private string _AssignmentGUID;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private string _TeacherName;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _BankName;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private System.Nullable<int> _Mode;
		
		private string _Code;
		
		private string _RawCode;
		
		private System.Nullable<System.DateTime> _AssignmentDate;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _QTIOnlineTestSessionID;
		
		private System.Nullable<System.DateTime> _DistrictTermDateStart;
		
		private System.Nullable<System.DateTime> _DistrictTermDateEnd;
		
		public GetTestAssignmentsForStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentGUID", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentGUID
		{
			get
			{
				return this._AssignmentGUID;
			}
			set
			{
				if ((this._AssignmentGUID != value))
				{
					this._AssignmentGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int")]
		public System.Nullable<int> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string RawCode
		{
			get
			{
				return this._RawCode;
			}
			set
			{
				if ((this._RawCode != value))
				{
					this._RawCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int")]
		public System.Nullable<int> QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this._QTIOnlineTestSessionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermDateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DistrictTermDateStart
		{
			get
			{
				return this._DistrictTermDateStart;
			}
			set
			{
				if ((this._DistrictTermDateStart != value))
				{
					this._DistrictTermDateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermDateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DistrictTermDateEnd
		{
			get
			{
				return this._DistrictTermDateEnd;
			}
			set
			{
				if ((this._DistrictTermDateEnd != value))
				{
					this._DistrictTermDateEnd = value;
				}
			}
		}
	}
	
	public partial class CanActiveTestAssignmentForRetakeResult
	{
		
		private System.Nullable<bool> _CanActive;
		
		public CanActiveTestAssignmentForRetakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanActive", DbType="Bit")]
		public System.Nullable<bool> CanActive
		{
			get
			{
				return this._CanActive;
			}
			set
			{
				if ((this._CanActive != value))
				{
					this._CanActive = value;
				}
			}
		}
	}
	
	public partial class GetHelpResourceCategoriesByRoleResult
	{
		
		private int _HelpResourceCategoryID;
		
		private string _DisplayText;
		
		private System.Nullable<int> _SortOrder;
		
		private string _Code;
		
		public GetHelpResourceCategoriesByRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpResourceCategoryID", DbType="Int NOT NULL")]
		public int HelpResourceCategoryID
		{
			get
			{
				return this._HelpResourceCategoryID;
			}
			set
			{
				if ((this._HelpResourceCategoryID != value))
				{
					this._HelpResourceCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayText", DbType="NVarChar(100)")]
		public string DisplayText
		{
			get
			{
				return this._DisplayText;
			}
			set
			{
				if ((this._DisplayText != value))
				{
					this._DisplayText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
	}
	
	public partial class GetTestTypeGradeAndSubjectForPBSResult
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		private string _Kind;
		
		private int _Order;
		
		public GetTestTypeGradeAndSubjectForPBSResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1002) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this._Kind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class LAC_AutoMapPerformanceBandsResult
	{
		
		private System.Nullable<int> _IsAutoMapPerformanceBands;
		
		public LAC_AutoMapPerformanceBandsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAutoMapPerformanceBands", DbType="Int")]
		public System.Nullable<int> IsAutoMapPerformanceBands
		{
			get
			{
				return this._IsAutoMapPerformanceBands;
			}
			set
			{
				if ((this._IsAutoMapPerformanceBands != value))
				{
					this._IsAutoMapPerformanceBands = value;
				}
			}
		}
	}
	
	public partial class GetTestForPBSResult
	{
		
		private int _VirtualTestID;
		
		private System.Nullable<System.DateTime> _ResultDate;
		
		private string _Name;
		
		private string _DataSetCategoryName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private System.Nullable<int> _TotalCount;
		
		private string _PBSInEffect;

        private string _PerformanceBandGroupList;

        public GetTestForPBSResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryName", DbType="VarChar(1002) NOT NULL", CanBeNull=false)]
		public string DataSetCategoryName
		{
			get
			{
				return this._DataSetCategoryName;
			}
			set
			{
				if ((this._DataSetCategoryName != value))
				{
					this._DataSetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCount", DbType="Int")]
		public System.Nullable<int> TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if ((this._TotalCount != value))
				{
					this._TotalCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBSInEffect", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PBSInEffect
		{
			get
			{
				return this._PBSInEffect;
			}
			set
			{
				if ((this._PBSInEffect != value))
				{
					this._PBSInEffect = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PerformanceBandGroupList", DbType = "VarChar(MAX)")]
        public string PerformanceBandGroupList
        {
            get
            {
                return this._PerformanceBandGroupList;
            }
            set
            {
                if ((this._PerformanceBandGroupList != value))
                {
                    this._PerformanceBandGroupList = value;
                }
            }
        }
    }

    public partial class GetPerformanceBandGroupsResult
    {
        private int _PerformanceBandGroupID;

        private string _PerformanceBandGroupName;


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PerformanceBandGroupID", DbType = "Int")]
        public int PerformanceBandGroupID
        {
            get
            {
                return this._PerformanceBandGroupID;
            }
            set
            {
                if ((this._PerformanceBandGroupID != value))
                {
                    this._PerformanceBandGroupID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PerformanceBandGroupName", DbType = "VarChar(300) NOT NULL")]
        public string PerformanceBandGroupName
        {
            get
            {
                return this._PerformanceBandGroupName;
            }
            set
            {
                if ((this._PerformanceBandGroupName != value))
                {
                    this._PerformanceBandGroupName = value;
                }
            }
        }
    }


    public partial class GetVirtualTestForPrintingV2Result
	{
		
		private string _TestName;
		
		private string _TestInstruction;
		
		private int _VirtualSectionID;
		
		private string _SectionTitle;
		
		private int _SectionOrder;
		
		private string _SectionInstruction;
		
		private System.Nullable<int> _SectionReferenceID;
		
		private int _VirtualQuestionID;
		
		private int _QuestionOrder;
		
		private int _PointsPossible;
		
		private int _QTIItemID;
		
		private string _Title;
		
		private int _QTIGroupID;
		
		private string _XmlContent;
		
		private string _UrlPath;
		
		private System.Nullable<int> _QuestionGroupID;
		
		private string _GroupQuestionCommon;
		
		private string _GroupQuestionTitle;
		
		private string _QuestionLabel;
		
		private System.Nullable<bool> _IsNumberQuestions;
		
		public GetVirtualTestForPrintingV2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInstruction", DbType="VarChar(MAX)")]
		public string TestInstruction
		{
			get
			{
				return this._TestInstruction;
			}
			set
			{
				if ((this._TestInstruction != value))
				{
					this._TestInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualSectionID", DbType="Int NOT NULL")]
		public int VirtualSectionID
		{
			get
			{
				return this._VirtualSectionID;
			}
			set
			{
				if ((this._VirtualSectionID != value))
				{
					this._VirtualSectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionTitle", DbType="VarChar(100)")]
		public string SectionTitle
		{
			get
			{
				return this._SectionTitle;
			}
			set
			{
				if ((this._SectionTitle != value))
				{
					this._SectionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionOrder", DbType="Int NOT NULL")]
		public int SectionOrder
		{
			get
			{
				return this._SectionOrder;
			}
			set
			{
				if ((this._SectionOrder != value))
				{
					this._SectionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionInstruction", DbType="VarChar(2000)")]
		public string SectionInstruction
		{
			get
			{
				return this._SectionInstruction;
			}
			set
			{
				if ((this._SectionInstruction != value))
				{
					this._SectionInstruction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionReferenceID", DbType="Int")]
		public System.Nullable<int> SectionReferenceID
		{
			get
			{
				return this._SectionReferenceID;
			}
			set
			{
				if ((this._SectionReferenceID != value))
				{
					this._SectionReferenceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this._VirtualQuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemID", DbType="Int NOT NULL")]
		public int QTIItemID
		{
			get
			{
				return this._QTIItemID;
			}
			set
			{
				if ((this._QTIItemID != value))
				{
					this._QTIItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIGroupID", DbType="Int NOT NULL")]
		public int QTIGroupID
		{
			get
			{
				return this._QTIGroupID;
			}
			set
			{
				if ((this._QTIGroupID != value))
				{
					this._QTIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string XmlContent
		{
			get
			{
				return this._XmlContent;
			}
			set
			{
				if ((this._XmlContent != value))
				{
					this._XmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPath", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string UrlPath
		{
			get
			{
				return this._UrlPath;
			}
			set
			{
				if ((this._UrlPath != value))
				{
					this._UrlPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionGroupID", DbType="Int")]
		public System.Nullable<int> QuestionGroupID
		{
			get
			{
				return this._QuestionGroupID;
			}
			set
			{
				if ((this._QuestionGroupID != value))
				{
					this._QuestionGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupQuestionCommon", DbType="VarChar(MAX)")]
		public string GroupQuestionCommon
		{
			get
			{
				return this._GroupQuestionCommon;
			}
			set
			{
				if ((this._GroupQuestionCommon != value))
				{
					this._GroupQuestionCommon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupQuestionTitle", DbType="VarChar(1000)")]
		public string GroupQuestionTitle
		{
			get
			{
				return this._GroupQuestionTitle;
			}
			set
			{
				if ((this._GroupQuestionTitle != value))
				{
					this._GroupQuestionTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionLabel", DbType="NVarChar(2000)")]
		public string QuestionLabel
		{
			get
			{
				return this._QuestionLabel;
			}
			set
			{
				if ((this._QuestionLabel != value))
				{
					this._QuestionLabel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNumberQuestions", DbType="Bit")]
		public System.Nullable<bool> IsNumberQuestions
		{
			get
			{
				return this._IsNumberQuestions;
			}
			set
			{
				if ((this._IsNumberQuestions != value))
				{
					this._IsNumberQuestions = value;
				}
			}
		}
	}
	
	public partial class GetAvailableTestTypeGradeAndSubjectForStudentPreferenceResult
	{
		
		private string _Kind;
		
		private int _Id;
		
		private string _Name;
		
		private int _Order;
		
		private int _DataSetCategoryID;
		
		private System.Nullable<bool> _IsShow;
		
		private string _Tooltip;
		
		public GetAvailableTestTypeGradeAndSubjectForStudentPreferenceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this._Kind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int NOT NULL")]
		public int DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this._DataSetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="Bit")]
		public System.Nullable<bool> IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this._IsShow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tooltip", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Tooltip
		{
			get
			{
				return this._Tooltip;
			}
			set
			{
				if ((this._Tooltip != value))
				{
					this._Tooltip = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsRemoveTempTableResult1
	{
		
		private System.Nullable<int> _TotalRecords;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private int _Status;
		
		private string _TeacherName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private int _AssignmentType;
		
		private string _Code;
		
		private System.DateTime _AssignmentDate;
		
		private int _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private System.Nullable<int> _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private System.Nullable<bool> _IsHide;
		
		private int _IsVirtualTestRetake;
		
		public GetTestClassAssignmentsRemoveTempTableResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecords", DbType="Int")]
		public System.Nullable<int> TotalRecords
		{
			get
			{
				return this._TotalRecords;
			}
			set
			{
				if ((this._TotalRecords != value))
				{
					this._TotalRecords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int NOT NULL")]
		public int AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int NOT NULL")]
		public int CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int")]
		public System.Nullable<int> BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualTestRetake", DbType="Int NOT NULL")]
		public int IsVirtualTestRetake
		{
			get
			{
				return this._IsVirtualTestRetake;
			}
			set
			{
				if ((this._IsVirtualTestRetake != value))
				{
					this._IsVirtualTestRetake = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsRemoveTempTableResult2
	{
		
		private System.Nullable<int> _TotalRecords;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private int _Status;
		
		private string _TeacherName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private int _AssignmentType;
		
		private string _Code;
		
		private System.DateTime _AssignmentDate;
		
		private int _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private System.Nullable<int> _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private System.Nullable<bool> _IsHide;
		
		private int _IsVirtualTestRetake;
		
		public GetTestClassAssignmentsRemoveTempTableResult2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecords", DbType="Int")]
		public System.Nullable<int> TotalRecords
		{
			get
			{
				return this._TotalRecords;
			}
			set
			{
				if ((this._TotalRecords != value))
				{
					this._TotalRecords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int NOT NULL")]
		public int AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int NOT NULL")]
		public int CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int")]
		public System.Nullable<int> BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualTestRetake", DbType="Int NOT NULL")]
		public int IsVirtualTestRetake
		{
			get
			{
				return this._IsVirtualTestRetake;
			}
			set
			{
				if ((this._IsVirtualTestRetake != value))
				{
					this._IsVirtualTestRetake = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsRemoveTempTableResult3
	{
		
		private System.Nullable<int> _TotalRecords;
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		private int _Status;
		
		private string _TeacherName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _BankName;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _QTITestClassAssignmentID;
		
		private int _AssignmentType;
		
		private string _Code;
		
		private System.DateTime _AssignmentDate;
		
		private int _CodeTime;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private string _Students;
		
		private System.Nullable<int> _BankIsLocked;
		
		private System.Nullable<int> _AssignmentModifiedUserID;
		
		private string _AssignmentFirstName;
		
		private string _AssignmentLastName;
		
		private System.Nullable<bool> _IsHide;
		
		private int _IsVirtualTestRetake;
		
		public GetTestClassAssignmentsRemoveTempTableResult3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRecords", DbType="Int")]
		public System.Nullable<int> TotalRecords
		{
			get
			{
				return this._TotalRecords;
			}
			set
			{
				if ((this._TotalRecords != value))
				{
					this._TotalRecords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int")]
		public System.Nullable<int> QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentType", DbType="Int NOT NULL")]
		public int AssignmentType
		{
			get
			{
				return this._AssignmentType;
			}
			set
			{
				if ((this._AssignmentType != value))
				{
					this._AssignmentType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTime", DbType="Int NOT NULL")]
		public int CodeTime
		{
			get
			{
				return this._CodeTime;
			}
			set
			{
				if ((this._CodeTime != value))
				{
					this._CodeTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this._IsTeacherLed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Students", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				if ((this._Students != value))
				{
					this._Students = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankIsLocked", DbType="Int")]
		public System.Nullable<int> BankIsLocked
		{
			get
			{
				return this._BankIsLocked;
			}
			set
			{
				if ((this._BankIsLocked != value))
				{
					this._BankIsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentModifiedUserID", DbType="Int")]
		public System.Nullable<int> AssignmentModifiedUserID
		{
			get
			{
				return this._AssignmentModifiedUserID;
			}
			set
			{
				if ((this._AssignmentModifiedUserID != value))
				{
					this._AssignmentModifiedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentFirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentFirstName
		{
			get
			{
				return this._AssignmentFirstName;
			}
			set
			{
				if ((this._AssignmentFirstName != value))
				{
					this._AssignmentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentLastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AssignmentLastName
		{
			get
			{
				return this._AssignmentLastName;
			}
			set
			{
				if ((this._AssignmentLastName != value))
				{
					this._AssignmentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHide", DbType="Bit")]
		public System.Nullable<bool> IsHide
		{
			get
			{
				return this._IsHide;
			}
			set
			{
				if ((this._IsHide != value))
				{
					this._IsHide = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualTestRetake", DbType="Int NOT NULL")]
		public int IsVirtualTestRetake
		{
			get
			{
				return this._IsVirtualTestRetake;
			}
			set
			{
				if ((this._IsVirtualTestRetake != value))
				{
					this._IsVirtualTestRetake = value;
				}
			}
		}
	}
	
	public partial class GetTestClassAssignmentsByIdResult
	{
		
		private int _StudentId;
		
		private string _StudentFullName;
		
		private int _Started;
		
		private int _Completed;
		
		private int _WaitingForReview;
		
		private int _NotStarted;
		
		private System.Nullable<int> _Status;
		
		public GetTestClassAssignmentsByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int NOT NULL")]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this._StudentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentFullName", DbType="VarChar(202) NOT NULL", CanBeNull=false)]
		public string StudentFullName
		{
			get
			{
				return this._StudentFullName;
			}
			set
			{
				if ((this._StudentFullName != value))
				{
					this._StudentFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int NOT NULL")]
		public int Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int NOT NULL")]
		public int Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int NOT NULL")]
		public int WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int NOT NULL")]
		public int NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}

    public partial class RemovePerformanceBandsResult
    {

        private int _VirtualTestID;

        public RemovePerformanceBandsResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestID", DbType = "Int NOT NULL")]
        public int VirtualTestID
        {
            get
            {
                return this._VirtualTestID;
            }
            set
            {
                if ((this._VirtualTestID != value))
                {
                    this._VirtualTestID = value;
                }
            }
        }
    }

    public partial class GetTestPropertyToExportResult
    {
        private int _VirtualTestID;
        private string _TestName;
        private System.Nullable<System.DateTime> _CreatedDate;
        private System.Nullable<System.DateTime> _UpdatedDate;
        private string _CreatedBy;
        private int _QuestionCount;
        private int _TotalPointsPossible;
        private int _TestResultCount;
        private System.Nullable<System.DateTime> _EarliestResultDate;
        private System.Nullable<System.DateTime> _MostRecentResultDate;
        private string _TestCategory;
        private System.Nullable<bool> _InterviewStyleAssessment;
        private string _BankName;
        private string _BankGrade;
        private string _BankSubject;
        private System.Nullable<int> _QuestionNumber;
        private string _PassageNumber;
        private System.Nullable<int> _QTIItemID;
        private string _QTIItemTitle;
        private string _VirtualQuestionTags;
        private string _QTISchemaName;
        private System.Nullable<int> _PointsPossible;
        private string _StandardNumbers;
        private System.Nullable<bool> _IsRubricBasedQuestion;
        private string _CorrectAnswer;
        private int _QTISchemaID;
        private string _XmlContent;
        private string _ResponseProcessing;
        private string _AlgorithmicExpression;
        private int _VirtualQuestionID;

        public GetTestPropertyToExportResult()
        {

        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestID", DbType = "Int NOT NULL")]
        public int VirtualTestID
        {
            get
            {
                return this._VirtualTestID;
            }
            set
            {
                if ((this._VirtualTestID != value))
                {
                    this._VirtualTestID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestName", DbType = "VarChar(MAX)")]
        public string TestName
        {
            get
            {
                return this._TestName;
            }
            set
            {
                if ((this._TestName != value))
                {
                    this._TestName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this._CreatedDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdatedDate
        {
            get
            {
                return this._UpdatedDate;
            }
            set
            {
                if ((this._UpdatedDate != value))
                {
                    this._UpdatedDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "VarChar(120)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this._CreatedBy = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QuestionCount", DbType = "Int NOT NULL")]
        public int QuestionCount
        {
            get
            {
                return this._QuestionCount;
            }
            set
            {
                if ((this._QuestionCount != value))
                {
                    this._QuestionCount = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalPointsPossible", DbType = "Int NOT NULL")]
        public int TotalPointsPossible
        {
            get
            {
                return this._TotalPointsPossible;
            }
            set
            {
                if ((this._TotalPointsPossible != value))
                {
                    this._TotalPointsPossible = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestResultCount", DbType = "Int NOT NULL")]
        public int TestResultCount
        {
            get
            {
                return this._TestResultCount;
            }
            set
            {
                if ((this._TestResultCount != value))
                {
                    this._TestResultCount = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EarliestResultDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EarliestResultDate
        {
            get
            {
                return this._EarliestResultDate;
            }
            set
            {
                if ((this._EarliestResultDate != value))
                {
                    this._EarliestResultDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MostRecentResultDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> MostRecentResultDate
        {
            get
            {
                return this._MostRecentResultDate;
            }
            set
            {
                if ((this._MostRecentResultDate != value))
                {
                    this._MostRecentResultDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestCategory", DbType = "VarChar(MAX)")]
        public string TestCategory
        {
            get
            {
                return this._TestCategory;
            }
            set
            {
                if ((this._TestCategory != value))
                {
                    this._TestCategory = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InterviewStyleAssessment", DbType = "Bit")]
        public System.Nullable<bool> InterviewStyleAssessment
        {
            get
            {
                return this._InterviewStyleAssessment;
            }
            set
            {
                if ((this._InterviewStyleAssessment != value))
                {
                    this._InterviewStyleAssessment = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankName", DbType = "VarChar(MAX)")]
        public string BankName
        {
            get
            {
                return this._BankName;
            }
            set
            {
                if ((this._BankName != value))
                {
                    this._BankName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankGrade", DbType = "VarChar(MAX)")]
        public string BankGrade
        {
            get
            {
                return this._BankGrade;
            }
            set
            {
                if ((this._BankGrade != value))
                {
                    this._BankGrade = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankSubject", DbType = "VarChar(MAX)")]
        public string BankSubject
        {
            get
            {
                return this._BankSubject;
            }
            set
            {
                if ((this._BankSubject != value))
                {
                    this._BankSubject = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QuestionNumber", DbType = "Int")]
        public System.Nullable<int> QuestionNumber
        {
            get
            {
                return this._QuestionNumber;
            }
            set
            {
                if ((this._QuestionNumber != value))
                {
                    this._QuestionNumber = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PassageNumber", DbType = "VarChar(MAX)")]
        public string PassageNumber
        {
            get
            {
                return this._PassageNumber;
            }
            set
            {
                if ((this._PassageNumber != value))
                {
                    this._PassageNumber = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QTIItemID", DbType = "Int")]
        public System.Nullable<int> QTIItemID
        {
            get
            {
                return this._QTIItemID;
            }
            set
            {
                if ((this._QTIItemID != value))
                {
                    this._QTIItemID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QTIItemTitle", DbType = "VarChar(50)")]
        public string QTIItemTitle
        {
            get
            {
                return this._QTIItemTitle;
            }
            set
            {
                if ((this._QTIItemTitle != value))
                {
                    this._QTIItemTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualQuestionTags", DbType = "VarChar(MAX)")]
        public string VirtualQuestionTags
        {
            get
            {
                return this._VirtualQuestionTags;
            }
            set
            {
                if ((this._VirtualQuestionTags != value))
                {
                    this._VirtualQuestionTags = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QTISchemaName", DbType = "VarChar(50)")]
        public string QTISchemaName
        {
            get
            {
                return this._QTISchemaName;
            }
            set
            {
                if ((this._QTISchemaName != value))
                {
                    this._QTISchemaName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PointsPossible", DbType = "Int")]
        public System.Nullable<int> PointsPossible
        {
            get
            {
                return this._PointsPossible;
            }
            set
            {
                if ((this._PointsPossible != value))
                {
                    this._PointsPossible = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StandardNumbers", DbType = "VarChar(MAX)")]
        public string StandardNumbers
        {
            get
            {
                return this._StandardNumbers;
            }
            set
            {
                if ((this._StandardNumbers != value))
                {
                    this._StandardNumbers = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsRubricBasedQuestion", DbType = "Bit")]
        public System.Nullable<bool> IsRubricBasedQuestion
        {
            get
            {
                return this._IsRubricBasedQuestion;
            }
            set
            {
                if ((this._IsRubricBasedQuestion != value))
                {
                    this._IsRubricBasedQuestion = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CorrectAnswer", DbType = "VarChar(MAX)")]
        public string CorrectAnswer
        {
            get
            {
                return this._CorrectAnswer;
            }
            set
            {
                if ((this._CorrectAnswer != value))
                {
                    this._CorrectAnswer = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QTISchemaID", DbType = "Int NOT NULL")]
        public int QTISchemaID
        {
            get
            {
                return this._QTISchemaID;
            }
            set
            {
                if ((this._QTISchemaID != value))
                {
                    this._QTISchemaID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_XmlContent", DbType = "VarChar(MAX)")]
        public string XmlContent
        {
            get
            {
                return this._XmlContent;
            }
            set
            {
                if ((this._XmlContent != value))
                {
                    this._XmlContent = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResponseProcessing", DbType = "VarChar(MAX)")]
        public string ResponseProcessing
        {
            get
            {
                return this._ResponseProcessing;
            }
            set
            {
                if ((this._ResponseProcessing != value))
                {
                    this._ResponseProcessing = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlgorithmicExpression", DbType = "VarChar(MAX)")]
        public string AlgorithmicExpression
        {
            get
            {
                return this._AlgorithmicExpression;
            }
            set
            {
                if ((this._AlgorithmicExpression != value))
                {
                    this._AlgorithmicExpression = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualQuestionID", DbType = "Int NOT NULL")]
        public int VirtualQuestionID
        {
            get
            {
                return this._VirtualQuestionID;
            }
            set
            {
                if ((this._VirtualQuestionID != value))
                {
                    this._VirtualQuestionID = value;
                }
            }
        }

    }

    public partial class GetTestLibraryToExportResult
    {
        private int _VirtualTestID;
        private string _TestName;
        private System.Nullable<System.DateTime> _CreatedDate;
        private System.Nullable<System.DateTime> _UpdatedDate;
        private string _CreatedBy;
        private int _QuestionCount;
        private int _TotalPointsPossible;
        private int _TestResultCount;
        private System.Nullable<System.DateTime> _EarliestResultDate;
        private System.Nullable<System.DateTime> _MostRecentResultDate;
        private string _TestCategory;
        private System.Nullable<bool> _InterviewStyleAssessment;
        private string _BankName;
        private string _BankGrade;
        private string _BankSubject;

        public GetTestLibraryToExportResult()
        {

        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VirtualTestID", DbType = "Int NOT NULL")]
        public int VirtualTestID
        {
            get
            {
                return this._VirtualTestID;
            }
            set
            {
                if ((this._VirtualTestID != value))
                {
                    this._VirtualTestID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestName", DbType = "VarChar(MAX)")]
        public string TestName
        {
            get
            {
                return this._TestName;
            }
            set
            {
                if ((this._TestName != value))
                {
                    this._TestName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this._CreatedDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdatedDate
        {
            get
            {
                return this._UpdatedDate;
            }
            set
            {
                if ((this._UpdatedDate != value))
                {
                    this._UpdatedDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "VarChar(120)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this._CreatedBy = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QuestionCount", DbType = "Int NOT NULL")]
        public int QuestionCount
        {
            get
            {
                return this._QuestionCount;
            }
            set
            {
                if ((this._QuestionCount != value))
                {
                    this._QuestionCount = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalPointsPossible", DbType = "Int NOT NULL")]
        public int TotalPointsPossible
        {
            get
            {
                return this._TotalPointsPossible;
            }
            set
            {
                if ((this._TotalPointsPossible != value))
                {
                    this._TotalPointsPossible = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestResultCount", DbType = "Int NOT NULL")]
        public int TestResultCount
        {
            get
            {
                return this._TestResultCount;
            }
            set
            {
                if ((this._TestResultCount != value))
                {
                    this._TestResultCount = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EarliestResultDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EarliestResultDate
        {
            get
            {
                return this._EarliestResultDate;
            }
            set
            {
                if ((this._EarliestResultDate != value))
                {
                    this._EarliestResultDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MostRecentResultDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> MostRecentResultDate
        {
            get
            {
                return this._MostRecentResultDate;
            }
            set
            {
                if ((this._MostRecentResultDate != value))
                {
                    this._MostRecentResultDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TestCategory", DbType = "VarChar(MAX)")]
        public string TestCategory
        {
            get
            {
                return this._TestCategory;
            }
            set
            {
                if ((this._TestCategory != value))
                {
                    this._TestCategory = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InterviewStyleAssessment", DbType = "Bit")]
        public System.Nullable<bool> InterviewStyleAssessment
        {
            get
            {
                return this._InterviewStyleAssessment;
            }
            set
            {
                if ((this._InterviewStyleAssessment != value))
                {
                    this._InterviewStyleAssessment = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankName", DbType = "VarChar(MAX)")]
        public string BankName
        {
            get
            {
                return this._BankName;
            }
            set
            {
                if ((this._BankName != value))
                {
                    this._BankName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankGrade", DbType = "VarChar(MAX)")]
        public string BankGrade
        {
            get
            {
                return this._BankGrade;
            }
            set
            {
                if ((this._BankGrade != value))
                {
                    this._BankGrade = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankSubject", DbType = "VarChar(MAX)")]
        public string BankSubject
        {
            get
            {
                return this._BankSubject;
            }
            set
            {
                if ((this._BankSubject != value))
                {
                    this._BankSubject = value;
                }
            }
        }

    }

}
#pragma warning restore 1591
