#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdminReportingStage")]
	internal partial class UserDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSchoolStudentDataEntity(SchoolStudentDataEntity instance);
    partial void UpdateSchoolStudentDataEntity(SchoolStudentDataEntity instance);
    partial void DeleteSchoolStudentDataEntity(SchoolStudentDataEntity instance);
    partial void InsertAPIAccountEntity(APIAccountEntity instance);
    partial void UpdateAPIAccountEntity(APIAccountEntity instance);
    partial void DeleteAPIAccountEntity(APIAccountEntity instance);
    partial void InsertAPIFunctionEntity(APIFunctionEntity instance);
    partial void UpdateAPIFunctionEntity(APIFunctionEntity instance);
    partial void DeleteAPIFunctionEntity(APIFunctionEntity instance);
    partial void InsertAPIPermissionEntity(APIPermissionEntity instance);
    partial void UpdateAPIPermissionEntity(APIPermissionEntity instance);
    partial void DeleteAPIPermissionEntity(APIPermissionEntity instance);
    partial void InsertDistrictSlideEntity(DistrictSlideEntity instance);
    partial void UpdateDistrictSlideEntity(DistrictSlideEntity instance);
    partial void DeleteDistrictSlideEntity(DistrictSlideEntity instance);
    partial void InsertImpersonateLogEntity(ImpersonateLogEntity instance);
    partial void UpdateImpersonateLogEntity(ImpersonateLogEntity instance);
    partial void DeleteImpersonateLogEntity(ImpersonateLogEntity instance);
    partial void InsertPasswordResetQuestionEntity(PasswordResetQuestionEntity instance);
    partial void UpdatePasswordResetQuestionEntity(PasswordResetQuestionEntity instance);
    partial void DeletePasswordResetQuestionEntity(PasswordResetQuestionEntity instance);
    partial void InsertASPsessionEntity(ASPsessionEntity instance);
    partial void UpdateASPsessionEntity(ASPsessionEntity instance);
    partial void DeleteASPsessionEntity(ASPsessionEntity instance);
    partial void InsertFileLinksEntity(FileLinksEntity instance);
    partial void UpdateFileLinksEntity(FileLinksEntity instance);
    partial void DeleteFileLinksEntity(FileLinksEntity instance);
    partial void InsertDistrictEntity(DistrictEntity instance);
    partial void UpdateDistrictEntity(DistrictEntity instance);
    partial void DeleteDistrictEntity(DistrictEntity instance);
    partial void InsertSchoolEntity(SchoolEntity instance);
    partial void UpdateSchoolEntity(SchoolEntity instance);
    partial void DeleteSchoolEntity(SchoolEntity instance);
    partial void InsertUserEntity(UserEntity instance);
    partial void UpdateUserEntity(UserEntity instance);
    partial void DeleteUserEntity(UserEntity instance);
    partial void InsertTeacherEntity(TeacherEntity instance);
    partial void UpdateTeacherEntity(TeacherEntity instance);
    partial void DeleteTeacherEntity(TeacherEntity instance);
    partial void InsertDistrictDecodeEntity(DistrictDecodeEntity instance);
    partial void UpdateDistrictDecodeEntity(DistrictDecodeEntity instance);
    partial void DeleteDistrictDecodeEntity(DistrictDecodeEntity instance);
    partial void InsertDSPDistrictEntity(DSPDistrictEntity instance);
    partial void UpdateDSPDistrictEntity(DSPDistrictEntity instance);
    partial void DeleteDSPDistrictEntity(DSPDistrictEntity instance);
    partial void InsertUserSchoolEntity(UserSchoolEntity instance);
    partial void UpdateUserSchoolEntity(UserSchoolEntity instance);
    partial void DeleteUserSchoolEntity(UserSchoolEntity instance);
    partial void InsertCEESchoolEntity(CEESchoolEntity instance);
    partial void UpdateCEESchoolEntity(CEESchoolEntity instance);
    partial void DeleteCEESchoolEntity(CEESchoolEntity instance);
    partial void InsertTermEntity(TermEntity instance);
    partial void UpdateTermEntity(TermEntity instance);
    partial void DeleteTermEntity(TermEntity instance);
    partial void InsertLocalizeResourceEntity(LocalizeResourceEntity instance);
    partial void UpdateLocalizeResourceEntity(LocalizeResourceEntity instance);
    partial void DeleteLocalizeResourceEntity(LocalizeResourceEntity instance);
    partial void InsertXLIGroupEntity(XLIGroupEntity instance);
    partial void UpdateXLIGroupEntity(XLIGroupEntity instance);
    partial void DeleteXLIGroupEntity(XLIGroupEntity instance);
    partial void InsertNotificationMessageEntity(NotificationMessageEntity instance);
    partial void UpdateNotificationMessageEntity(NotificationMessageEntity instance);
    partial void DeleteNotificationMessageEntity(NotificationMessageEntity instance);
    partial void InsertSSOInformationEntity(SSOInformationEntity instance);
    partial void UpdateSSOInformationEntity(SSOInformationEntity instance);
    partial void DeleteSSOInformationEntity(SSOInformationEntity instance);
    partial void InsertSSOUserMappingEntity(SSOUserMappingEntity instance);
    partial void UpdateSSOUserMappingEntity(SSOUserMappingEntity instance);
    partial void DeleteSSOUserMappingEntity(SSOUserMappingEntity instance);
    partial void InsertSSODistrictGroupEntity(SSODistrictGroupEntity instance);
    partial void UpdateSSODistrictGroupEntity(SSODistrictGroupEntity instance);
    partial void DeleteSSODistrictGroupEntity(SSODistrictGroupEntity instance);
    partial void InsertStateEntity(StateEntity instance);
    partial void UpdateStateEntity(StateEntity instance);
    partial void DeleteStateEntity(StateEntity instance);
    partial void InsertXLIAreaGroup(XLIAreaGroup instance);
    partial void UpdateXLIAreaGroup(XLIAreaGroup instance);
    partial void DeleteXLIAreaGroup(XLIAreaGroup instance);
    partial void InsertXLIAreaGroupModule(XLIAreaGroupModule instance);
    partial void UpdateXLIAreaGroupModule(XLIAreaGroupModule instance);
    partial void DeleteXLIAreaGroupModule(XLIAreaGroupModule instance);
    partial void InsertXLIAreaGMRole(XLIAreaGMRole instance);
    partial void UpdateXLIAreaGMRole(XLIAreaGMRole instance);
    partial void DeleteXLIAreaGMRole(XLIAreaGMRole instance);
    partial void InsertXLIGroupUser(XLIGroupUser instance);
    partial void UpdateXLIGroupUser(XLIGroupUser instance);
    partial void DeleteXLIGroupUser(XLIGroupUser instance);
    partial void InsertDistrictMetaEntity(DistrictMetaEntity instance);
    partial void UpdateDistrictMetaEntity(DistrictMetaEntity instance);
    partial void DeleteDistrictMetaEntity(DistrictMetaEntity instance);
    partial void InsertUserMetaEntity(UserMetaEntity instance);
    partial void UpdateUserMetaEntity(UserMetaEntity instance);
    partial void DeleteUserMetaEntity(UserMetaEntity instance);
    partial void InsertAutoFocusGroupConfigEntity(AutoFocusGroupConfigEntity instance);
    partial void UpdateAutoFocusGroupConfigEntity(AutoFocusGroupConfigEntity instance);
    partial void DeleteAutoFocusGroupConfigEntity(AutoFocusGroupConfigEntity instance);
    partial void InsertSharingGroupEntity(SharingGroupEntity instance);
    partial void UpdateSharingGroupEntity(SharingGroupEntity instance);
    partial void DeleteSharingGroupEntity(SharingGroupEntity instance);
    partial void InsertSharingGroupUserEntity(SharingGroupUserEntity instance);
    partial void UpdateSharingGroupUserEntity(SharingGroupUserEntity instance);
    partial void DeleteSharingGroupUserEntity(SharingGroupUserEntity instance);
    partial void InsertSharingReportEntity(SharingReportEntity instance);
    partial void UpdateSharingReportEntity(SharingReportEntity instance);
    partial void DeleteSharingReportEntity(SharingReportEntity instance);
    partial void InsertSharingReportPropertyEntity(SharingReportPropertyEntity instance);
    partial void UpdateSharingReportPropertyEntity(SharingReportPropertyEntity instance);
    partial void DeleteSharingReportPropertyEntity(SharingReportPropertyEntity instance);
    #endregion
		
		public UserDataContext() : 
				base(global::LinkIt.BubbleSheetPortal.Data.Properties.Settings.Default.AdminReportingStageConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<TeacherDistrictTermEntity> TeacherDistrictTermEntities
		{
			get
			{
				return this.GetTable<TeacherDistrictTermEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DistrictTermClassView> DistrictTermClassViews
		{
			get
			{
				return this.GetTable<DistrictTermClassView>();
			}
		}
		
		internal System.Data.Linq.Table<SchoolTeacherListView> SchoolTeacherListViews
		{
			get
			{
				return this.GetTable<SchoolTeacherListView>();
			}
		}
		
		internal System.Data.Linq.Table<SchoolStudentDataEntity> SchoolStudentDataEntities
		{
			get
			{
				return this.GetTable<SchoolStudentDataEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserBankView> UserBankViews
		{
			get
			{
				return this.GetTable<UserBankView>();
			}
		}
		
		internal System.Data.Linq.Table<UserSchoolView> UserSchoolViews
		{
			get
			{
				return this.GetTable<UserSchoolView>();
			}
		}
		
		internal System.Data.Linq.Table<SchoolTeacherView> SchoolTeacherViews
		{
			get
			{
				return this.GetTable<SchoolTeacherView>();
			}
		}
		
		internal System.Data.Linq.Table<APIAccountEntity> APIAccountEntities
		{
			get
			{
				return this.GetTable<APIAccountEntity>();
			}
		}
		
		internal System.Data.Linq.Table<APIFunctionEntity> APIFunctionEntities
		{
			get
			{
				return this.GetTable<APIFunctionEntity>();
			}
		}
		
		internal System.Data.Linq.Table<APIPermissionEntity> APIPermissionEntities
		{
			get
			{
				return this.GetTable<APIPermissionEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserManageView> UserManageViews
		{
			get
			{
				return this.GetTable<UserManageView>();
			}
		}
		
		public System.Data.Linq.Table<UserByUserSchoolView> UserByUserSchoolViews
		{
			get
			{
				return this.GetTable<UserByUserSchoolView>();
			}
		}
		
		public System.Data.Linq.Table<DistrictSlideEntity> DistrictSlideEntities
		{
			get
			{
				return this.GetTable<DistrictSlideEntity>();
			}
		}
		
		internal System.Data.Linq.Table<NetworkAdminView> NetworkAdminViews
		{
			get
			{
				return this.GetTable<NetworkAdminView>();
			}
		}
		
		internal System.Data.Linq.Table<ImpersonateLogEntity> ImpersonateLogEntities
		{
			get
			{
				return this.GetTable<ImpersonateLogEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TeacherDistrictTermView> TeacherDistrictTermViews
		{
			get
			{
				return this.GetTable<TeacherDistrictTermView>();
			}
		}
		
		internal System.Data.Linq.Table<PasswordResetQuestionEntity> PasswordResetQuestionEntities
		{
			get
			{
				return this.GetTable<PasswordResetQuestionEntity>();
			}
		}
		
		public System.Data.Linq.Table<ASPsessionEntity> ASPsessionEntities
		{
			get
			{
				return this.GetTable<ASPsessionEntity>();
			}
		}
		
		public System.Data.Linq.Table<TeacherTestDistrictTermView> TeacherTestDistrictTermViews
		{
			get
			{
				return this.GetTable<TeacherTestDistrictTermView>();
			}
		}
		
		public System.Data.Linq.Table<FileLinksEntity> FileLinksEntities
		{
			get
			{
				return this.GetTable<FileLinksEntity>();
			}
		}
		
		public System.Data.Linq.Table<StudentTestDistrictTermView> StudentTestDistrictTermViews
		{
			get
			{
				return this.GetTable<StudentTestDistrictTermView>();
			}
		}
		
		public System.Data.Linq.Table<DistrictEntity> DistrictEntities
		{
			get
			{
				return this.GetTable<DistrictEntity>();
			}
		}
		
		public System.Data.Linq.Table<SchoolEntity> SchoolEntities
		{
			get
			{
				return this.GetTable<SchoolEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserEntity> UserEntities
		{
			get
			{
				return this.GetTable<UserEntity>();
			}
		}
		
		public System.Data.Linq.Table<TeacherEntity> TeacherEntities
		{
			get
			{
				return this.GetTable<TeacherEntity>();
			}
		}
		
		public System.Data.Linq.Table<DistrictDecodeEntity> DistrictDecodeEntities
		{
			get
			{
				return this.GetTable<DistrictDecodeEntity>();
			}
		}
		
		public System.Data.Linq.Table<DSPDistrictEntity> DSPDistrictEntities
		{
			get
			{
				return this.GetTable<DSPDistrictEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserSchoolEntity> UserSchoolEntities
		{
			get
			{
				return this.GetTable<UserSchoolEntity>();
			}
		}
		
		public System.Data.Linq.Table<CEESchoolEntity> CEESchoolEntities
		{
			get
			{
				return this.GetTable<CEESchoolEntity>();
			}
		}
		
		public System.Data.Linq.Table<TermEntity> TermEntities
		{
			get
			{
				return this.GetTable<TermEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DisplayUserGroupAndRoleView> DisplayUserGroupAndRoleViews
		{
			get
			{
				return this.GetTable<DisplayUserGroupAndRoleView>();
			}
		}
		
		public System.Data.Linq.Table<LocalizeResourceEntity> LocalizeResourceEntities
		{
			get
			{
				return this.GetTable<LocalizeResourceEntity>();
			}
		}
		
		public System.Data.Linq.Table<TeacherListView> TeacherListViews
		{
			get
			{
				return this.GetTable<TeacherListView>();
			}
		}
		
		public System.Data.Linq.Table<XLIGroupEntity> XLIGroupEntities
		{
			get
			{
				return this.GetTable<XLIGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<DSPDistrictView> DSPDistrictViews
		{
			get
			{
				return this.GetTable<DSPDistrictView>();
			}
		}
		
		public System.Data.Linq.Table<NotificationMessageEntity> NotificationMessageEntities
		{
			get
			{
				return this.GetTable<NotificationMessageEntity>();
			}
		}
		
		public System.Data.Linq.Table<SSOInformationEntity> SSOInformationEntities
		{
			get
			{
				return this.GetTable<SSOInformationEntity>();
			}
		}
		
		public System.Data.Linq.Table<SSOUserMappingEntity> SSOUserMappingEntities
		{
			get
			{
				return this.GetTable<SSOUserMappingEntity>();
			}
		}
		
		public System.Data.Linq.Table<SSODistrictGroupEntity> SSODistrictGroupEntities
		{
			get
			{
				return this.GetTable<SSODistrictGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<StateEntity> StateEntities
		{
			get
			{
				return this.GetTable<StateEntity>();
			}
		}
		
		public System.Data.Linq.Table<XLIAreaGroup> XLIAreaGroups
		{
			get
			{
				return this.GetTable<XLIAreaGroup>();
			}
		}
		
		public System.Data.Linq.Table<XLIAreaGroupModule> XLIAreaGroupModules
		{
			get
			{
				return this.GetTable<XLIAreaGroupModule>();
			}
		}
		
		public System.Data.Linq.Table<XLIAreaGMRole> XLIAreaGMRoles
		{
			get
			{
				return this.GetTable<XLIAreaGMRole>();
			}
		}
		
		public System.Data.Linq.Table<XLIGroupUser> XLIGroupUsers
		{
			get
			{
				return this.GetTable<XLIGroupUser>();
			}
		}
		
		public System.Data.Linq.Table<UserContext_SchoolManagementView> UserContext_SchoolManagementViews
		{
			get
			{
				return this.GetTable<UserContext_SchoolManagementView>();
			}
		}
		
		public System.Data.Linq.Table<DistrictMetaEntity> DistrictMetaEntities
		{
			get
			{
				return this.GetTable<DistrictMetaEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserMetaEntity> UserMetaEntities
		{
			get
			{
				return this.GetTable<UserMetaEntity>();
			}
		}
		
		public System.Data.Linq.Table<AutoFocusGroupConfigEntity> AutoFocusGroupConfigEntities
		{
			get
			{
				return this.GetTable<AutoFocusGroupConfigEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserStudentView> UserStudentViews
		{
			get
			{
				return this.GetTable<UserStudentView>();
			}
		}
		
		public System.Data.Linq.Table<SharingGroupEntity> SharingGroupEntities
		{
			get
			{
				return this.GetTable<SharingGroupEntity>();
			}
		}
		
		public System.Data.Linq.Table<SharingGroupUserEntity> SharingGroupUserEntities
		{
			get
			{
				return this.GetTable<SharingGroupUserEntity>();
			}
		}
		
		public System.Data.Linq.Table<SharingReportEntity> SharingReportEntities
		{
			get
			{
				return this.GetTable<SharingReportEntity>();
			}
		}
		
		public System.Data.Linq.Table<SharingReportPropertyEntity> SharingReportPropertyEntities
		{
			get
			{
				return this.GetTable<SharingReportPropertyEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStateByDistrictNetWorkAdminID")]
		public ISingleResult<GetStateByDistrictNetWorkAdminIDResult> GetStateByDistrictNetWorkAdminID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictOrganizationID", DbType="Int")] System.Nullable<int> districtOrganizationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtOrganizationID);
			return ((ISingleResult<GetStateByDistrictNetWorkAdminIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTeacherBySchoolIDAndDistricttermID")]
		public ISingleResult<GetTeacherBySchoolIDAndDistricttermIDResult> GetTeacherBySchoolIDAndDistricttermID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistricttermID", DbType="Int")] System.Nullable<int> districttermID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolID, districttermID);
			return ((ISingleResult<GetTeacherBySchoolIDAndDistricttermIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserLoginFailedCount")]
		public ISingleResult<GetUserLoginFailedCountResult> GetUserLoginFailedCount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<GetUserLoginFailedCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUserFailedCount")]
		public int DeleteUserFailedCount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IncreaseUserLoginFailedCount")]
		public int IncreaseUserLoginFailedCount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllUserStartWithCodeByDistrictID")]
		public ISingleResult<GetAllUserStartWithCodeByDistrictIDResult> GetAllUserStartWithCodeByDistrictID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocalCode", DbType="NVarChar(50)")] string localCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, localCode);
			return ((ISingleResult<GetAllUserStartWithCodeByDistrictIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fnGetStateForUser", IsComposable=true)]
		public IQueryable<fnGetStateForUserResult> fnGetStateForUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UseStateOfDistrictSchool", DbType="Bit")] System.Nullable<bool> useStateOfDistrictSchool, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UseStateSchool", DbType="Bit")] System.Nullable<bool> useStateSchool)
		{
			return this.CreateMethodCallQuery<fnGetStateForUserResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, districtId, useStateOfDistrictSchool, useStateSchool);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddUsersToGroup")]
		public int AddUsersToGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserIDs", DbType="VarChar(MAX)")] string userIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userIDs, xLIGroupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveUserFromGroup")]
		public int RemoveUserFromGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, xLIGroupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserAvailableForAddGroup")]
		public ISingleResult<GetUserAvailableForAddGroupResult> GetUserAvailableForAddGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsShowInactiveUser", DbType="Bit")] System.Nullable<bool> isShowInactiveUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(500)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(100)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(100)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleID, userID, districtID, xLIGroupID, isShowInactiveUser, generalSearch, schoolID, roleID, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(12)));
			return ((ISingleResult<GetUserAvailableForAddGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserManageByRoleInGroup")]
		public ISingleResult<GetUserManageByRoleInGroupResult> GetUserManageByRoleInGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsShowInactiveUser", DbType="Bit")] System.Nullable<bool> isShowInactiveUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(500)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(100)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(100)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, userID, districtID, xLIGroupID, isShowInactiveUser, generalSearch, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((ISingleResult<GetUserManageByRoleInGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRolesForManageUserGroup")]
		public ISingleResult<GetRolesForManageUserGroupResult> GetRolesForManageUserGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleID, xLIGroupID);
			return ((ISingleResult<GetRolesForManageUserGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserManageByRole")]
		public ISingleResult<GetUserManageByRoleResult> GetUserManageByRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StaffName", DbType="NVarChar(255)")] string staffName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Inactive", DbType="Bit")] System.Nullable<bool> inactive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OtherUserId", DbType="Int")] System.Nullable<int> otherUserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID, roleID, schoolID, staffName, inactive, otherUserId);
			return ((ISingleResult<GetUserManageByRoleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTeacherForAddClass")]
		public ISingleResult<GetTeacherForAddClassResult> GetTeacherForAddClass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolId", DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolId, userId, roleId, districtId);
			return ((ISingleResult<GetTeacherForAddClassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTeacherSchoolByTerm")]
		public ISingleResult<GetTeacherSchoolByTermResult> GetTeacherSchoolByTerm([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> termOnly, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string validUserSchoolRoleId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isIncludeDistrictAdmin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolId, termOnly, userId, roleId, validUserSchoolRoleId, isIncludeDistrictAdmin);
			return ((ISingleResult<GetTeacherSchoolByTermResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllTeacherBySchoolIDAndDistrictTermID")]
		public ISingleResult<GetAllTeacherBySchoolIDAndDistrictTermIDResult> GetAllTeacherBySchoolIDAndDistrictTermID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistricttermID", DbType="Int")] System.Nullable<int> districttermID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolID, districttermID);
			return ((ISingleResult<GetAllTeacherBySchoolIDAndDistrictTermIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStudentTestDistrictTerm")]
		public ISingleResult<GetStudentTestDistrictTermResult> GetStudentTestDistrictTerm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolId", DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherId", DbType="Int")] System.Nullable<int> teacherId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermId", DbType="Int")] System.Nullable<int> districtTermId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassId", DbType="Int")] System.Nullable<int> classId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestIds", DbType="VarChar(200)")] string virtualTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestSubTypeIds", DbType="VarChar(200)")] string virtualTestSubTypeIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateFrom", DbType="DateTime")] System.Nullable<System.DateTime> resultDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResultDateTo", DbType="DateTime")] System.Nullable<System.DateTime> resultDateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, schoolId, teacherId, districtTermId, classId, virtualTestIds, virtualTestSubTypeIds, resultDateFrom, resultDateTo);
			return ((ISingleResult<GetStudentTestDistrictTermResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.XLICreateGroup")]
		public ISingleResult<XLICreateGroupResult> XLICreateGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InheritRoleFunctionality", DbType="Bit")] System.Nullable<bool> inheritRoleFunctionality)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, districtID, inheritRoleFunctionality);
			return ((ISingleResult<XLICreateGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.XLIDeleteGroup")]
		public int XLIDeleteGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xLIGroupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.XLIUpdateGroup")]
		public int XLIUpdateGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InheritRoleFunctionality", DbType="Bit")] System.Nullable<bool> inheritRoleFunctionality, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, inheritRoleFunctionality, xLIGroupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAvailableClassesBySchoolAndStudentId")]
		public ISingleResult<GetAvailableClassesBySchoolAndStudentIdResult> GetAvailableClassesBySchoolAndStudentId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolId", DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentId", DbType="Int")] System.Nullable<int> studentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OffSetRowCount", DbType="Int")] System.Nullable<int> offSetRowCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FetchRowCount", DbType="Int")] System.Nullable<int> fetchRowCount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchStr", DbType="NVarChar(450)")] string searchStr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortBy", DbType="VarChar(25)")] string sortBy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(5)")] string sortDirection)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolId, studentId, userId, offSetRowCount, fetchRowCount, searchStr, sortBy, sortDirection);
			return ((ISingleResult<GetAvailableClassesBySchoolAndStudentIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_GetUserAvailableAddSharingGroup")]
		public ISingleResult<SP_SharingGroup_GetUserAvailableAddSharingGroupResult> SP_SharingGroup_GetUserAvailableAddSharingGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharingGroupID", DbType="Int")] System.Nullable<int> sharingGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectedRoleIds", DbType="VarChar(500)")] string selectedRoleIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectedSchoolIds", DbType="VarChar(500)")] string selectedSchoolIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsShowInactiveUser", DbType="Bit")] System.Nullable<bool> isShowInactiveUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(500)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(100)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(100)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, userID, districtID, sharingGroupID, selectedRoleIds, selectedSchoolIds, isShowInactiveUser, generalSearch, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(12)));
			return ((ISingleResult<SP_SharingGroup_GetUserAvailableAddSharingGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_GetUserInSharingGroup")]
		public ISingleResult<SP_SharingGroup_GetUserInSharingGroupResult> SP_SharingGroup_GetUserInSharingGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharingGroupID", DbType="Int")] System.Nullable<int> sharingGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsShowInactiveUser", DbType="Bit")] System.Nullable<bool> isShowInactiveUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(500)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(100)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(100)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, userID, districtID, sharingGroupID, isShowInactiveUser, generalSearch, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((ISingleResult<SP_SharingGroup_GetUserInSharingGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_CloneSharingGroup")]
		public int SP_SharingGroup_CloneSharingGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharingGroupID", DbType="Int")] System.Nullable<int> sharingGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(250)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID, sharingGroupID, name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_PublishSharingGroup")]
		public int SP_SharingGroup_PublishSharingGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharingGroupID", DbType="Int")] System.Nullable<int> sharingGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublished", DbType="Bit")] System.Nullable<bool> isPublished)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, sharingGroupID, isPublished);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_AssignUsersIntoSharingGroup")]
		public int SP_SharingGroup_AssignUsersIntoSharingGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharingGroupID", DbType="Int")] System.Nullable<int> sharingGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserIds", DbType="VarChar(MAX)")] string userIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sharingGroupID, userIds);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_DeleteSharingGroup")]
		public int SP_SharingGroup_DeleteSharingGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SharingGroupID", DbType="Int")] System.Nullable<int> sharingGroupID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sharingGroupID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_SharingGroup_GetSharingGroups")]
		public ISingleResult<SP_SharingGroup_GetSharingGroupsResult> SP_SharingGroup_GetSharingGroups([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(500)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowInactiveSharingGroup", DbType="Bit")] System.Nullable<bool> showInactiveSharingGroup, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShowCreatedByOtherSharingGroup", DbType="Bit")] System.Nullable<bool> showCreatedByOtherSharingGroup, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(100)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(100)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roleID, userID, districtID, generalSearch, showInactiveSharingGroup, showCreatedByOtherSharingGroup, sortColumn, sortDirection, startRow, pageSize, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(10)));
			return ((ISingleResult<SP_SharingGroup_GetSharingGroupsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddNewUser")]
		public int AddNewUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(200)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateID", DbType="Int")] System.Nullable<int> stateID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameFirst", DbType="VarChar(50)")] string nameFirst, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NameLast", DbType="VarChar(50)")] string nameLast, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(50)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HashedPassword", DbType="VarChar(100)")] string hashedPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastLoginDate", DbType="DateTime")] System.Nullable<System.DateTime> lastLoginDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordLastSetDate", DbType="Date")] System.Nullable<System.DateTime> passwordLastSetDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SISID", DbType="VarChar(50)")] string sISID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, districtID, stateID, roleID, userName, nameFirst, nameLast, code, hashedPassword, lastLoginDate, passwordLastSetDate, sISID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherDistrictTermView")]
	internal partial class TeacherDistrictTermEntity
	{
		
		private int _UserID;
		
		private string _DistrictName;
		
		private int _DistrictTermID;
		
		private System.Nullable<int> _SchoolID;
		
		public TeacherDistrictTermEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictTermClassView")]
	internal partial class DistrictTermClassView
	{
		
		private int _DistrictID;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _ClassID;
		
		private int _DistrictTermID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserID;
		
		private int _TermID;
		
		private int _TeacherID;
		
		public DistrictTermClassView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this._DateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", DbType="Int NOT NULL")]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this._TermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int NOT NULL")]
		public int TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this._TeacherID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolTeacherListView")]
	internal partial class SchoolTeacherListView
	{
		
		private int _UserID;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private string _UserName;
		
		private int _SchoolID;
		
		private int _RoleID;
		
		private string _ClassName;
		
		private string _ClassID;
		
		private System.Nullable<bool> _Active;
		
		public SchoolTeacherListView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(MAX)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="NVarChar(MAX)")]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolStudent")]
	internal partial class SchoolStudentDataEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchoolStudentID;
		
		private int _SchoolID;
		
		private int _StudentID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolStudentIDChanging(int value);
    partial void OnSchoolStudentIDChanged();
    partial void OnSchoolIDChanging(int value);
    partial void OnSchoolIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    #endregion
		
		public SchoolStudentDataEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolStudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SchoolStudentID
		{
			get
			{
				return this._SchoolStudentID;
			}
			set
			{
				if ((this._SchoolStudentID != value))
				{
					this.OnSchoolStudentIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolStudentID = value;
					this.SendPropertyChanged("SchoolStudentID");
					this.OnSchoolStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBanks")]
	internal partial class UserBankView
	{
		
		private int _BankID;
		
		private string _BankName;
		
		private int _SubjectID;
		
		private int _UserID;
		
		public UserBankView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSchoolView")]
	internal partial class UserSchoolView
	{
		
		private int _UserID;
		
		private System.Nullable<int> _UserSchoolID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private int _RoleID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _SchoolCount;
		
		private System.Nullable<int> _UserStatusID;
		
		private System.Nullable<bool> _IsActive;
		
		private string _DistrictName;
		
		private string _StateName;
		
		private string _RoleName;
		
		public UserSchoolView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSchoolID", DbType="Int")]
		public System.Nullable<int> UserSchoolID
		{
			get
			{
				return this._UserSchoolID;
			}
			set
			{
				if ((this._UserSchoolID != value))
				{
					this._UserSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCount", DbType="Int")]
		public System.Nullable<int> SchoolCount
		{
			get
			{
				return this._SchoolCount;
			}
			set
			{
				if ((this._SchoolCount != value))
				{
					this._SchoolCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(50)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolTeacherView")]
	internal partial class SchoolTeacherView
	{
		
		private int _UserID;
		
		private int _SchoolID;
		
		private string _NameLast;
		
		private string _NameFirst;
		
		private string _UserName;
		
		public SchoolTeacherView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIAccount")]
	internal partial class APIAccountEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APIAccountID;
		
		private System.Guid _ClientAccessKeyID;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private int _Status;
		
		private int _Type;
		
		private string _LinkitPublicKey;
		
		private string _LinkitPrivateKey;
		
		private int _APIAccountTypeID;
		
		private int _TargetID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPIAccountIDChanging(int value);
    partial void OnAPIAccountIDChanged();
    partial void OnClientAccessKeyIDChanging(System.Guid value);
    partial void OnClientAccessKeyIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnLinkitPublicKeyChanging(string value);
    partial void OnLinkitPublicKeyChanged();
    partial void OnLinkitPrivateKeyChanging(string value);
    partial void OnLinkitPrivateKeyChanged();
    partial void OnAPIAccountTypeIDChanging(int value);
    partial void OnAPIAccountTypeIDChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    #endregion
		
		public APIAccountEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIAccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APIAccountID
		{
			get
			{
				return this._APIAccountID;
			}
			set
			{
				if ((this._APIAccountID != value))
				{
					this.OnAPIAccountIDChanging(value);
					this.SendPropertyChanging();
					this._APIAccountID = value;
					this.SendPropertyChanged("APIAccountID");
					this.OnAPIAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAccessKeyID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ClientAccessKeyID
		{
			get
			{
				return this._ClientAccessKeyID;
			}
			set
			{
				if ((this._ClientAccessKeyID != value))
				{
					this.OnClientAccessKeyIDChanging(value);
					this.SendPropertyChanging();
					this._ClientAccessKeyID = value;
					this.SendPropertyChanged("ClientAccessKeyID");
					this.OnClientAccessKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkitPublicKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LinkitPublicKey
		{
			get
			{
				return this._LinkitPublicKey;
			}
			set
			{
				if ((this._LinkitPublicKey != value))
				{
					this.OnLinkitPublicKeyChanging(value);
					this.SendPropertyChanging();
					this._LinkitPublicKey = value;
					this.SendPropertyChanged("LinkitPublicKey");
					this.OnLinkitPublicKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkitPrivateKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LinkitPrivateKey
		{
			get
			{
				return this._LinkitPrivateKey;
			}
			set
			{
				if ((this._LinkitPrivateKey != value))
				{
					this.OnLinkitPrivateKeyChanging(value);
					this.SendPropertyChanging();
					this._LinkitPrivateKey = value;
					this.SendPropertyChanged("LinkitPrivateKey");
					this.OnLinkitPrivateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIAccountTypeID", DbType="Int NOT NULL")]
		public int APIAccountTypeID
		{
			get
			{
				return this._APIAccountTypeID;
			}
			set
			{
				if ((this._APIAccountTypeID != value))
				{
					this.OnAPIAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._APIAccountTypeID = value;
					this.SendPropertyChanged("APIAccountTypeID");
					this.OnAPIAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIFunction")]
	internal partial class APIFunctionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APIFunctionID;
		
		private string _URI;
		
		private int _Status;
		
		private string _Version;
		
		private string _HttpAction;
		
		private EntitySet<APIPermissionEntity> _APIPermissionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPIFunctionIDChanging(int value);
    partial void OnAPIFunctionIDChanged();
    partial void OnURIChanging(string value);
    partial void OnURIChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnHttpActionChanging(string value);
    partial void OnHttpActionChanged();
    #endregion
		
		public APIFunctionEntity()
		{
			this._APIPermissionEntities = new EntitySet<APIPermissionEntity>(new Action<APIPermissionEntity>(this.attach_APIPermissionEntities), new Action<APIPermissionEntity>(this.detach_APIPermissionEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIFunctionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APIFunctionID
		{
			get
			{
				return this._APIFunctionID;
			}
			set
			{
				if ((this._APIFunctionID != value))
				{
					this.OnAPIFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._APIFunctionID = value;
					this.SendPropertyChanged("APIFunctionID");
					this.OnAPIFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URI", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string URI
		{
			get
			{
				return this._URI;
			}
			set
			{
				if ((this._URI != value))
				{
					this.OnURIChanging(value);
					this.SendPropertyChanging();
					this._URI = value;
					this.SendPropertyChanged("URI");
					this.OnURIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HttpAction", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string HttpAction
		{
			get
			{
				return this._HttpAction;
			}
			set
			{
				if ((this._HttpAction != value))
				{
					this.OnHttpActionChanging(value);
					this.SendPropertyChanging();
					this._HttpAction = value;
					this.SendPropertyChanged("HttpAction");
					this.OnHttpActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIFunctionEntity_APIPermissionEntity", Storage="_APIPermissionEntities", ThisKey="APIFunctionID", OtherKey="APIFunctionID")]
		public EntitySet<APIPermissionEntity> APIPermissionEntities
		{
			get
			{
				return this._APIPermissionEntities;
			}
			set
			{
				this._APIPermissionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_APIPermissionEntities(APIPermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.APIFunctionEntity = this;
		}
		
		private void detach_APIPermissionEntities(APIPermissionEntity entity)
		{
			this.SendPropertyChanging();
			entity.APIFunctionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APIPermission")]
	internal partial class APIPermissionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APIPermissionID;
		
		private int _APIFunctionID;
		
		private int _TargetID;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsAllow;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _APIAccountTypeID;
		
		private EntityRef<APIFunctionEntity> _APIFunctionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPIPermissionIDChanging(int value);
    partial void OnAPIPermissionIDChanged();
    partial void OnAPIFunctionIDChanging(int value);
    partial void OnAPIFunctionIDChanged();
    partial void OnTargetIDChanging(int value);
    partial void OnTargetIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsAllowChanging(bool value);
    partial void OnIsAllowChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnAPIAccountTypeIDChanging(System.Nullable<int> value);
    partial void OnAPIAccountTypeIDChanged();
    #endregion
		
		public APIPermissionEntity()
		{
			this._APIFunctionEntity = default(EntityRef<APIFunctionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIPermissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APIPermissionID
		{
			get
			{
				return this._APIPermissionID;
			}
			set
			{
				if ((this._APIPermissionID != value))
				{
					this.OnAPIPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._APIPermissionID = value;
					this.SendPropertyChanged("APIPermissionID");
					this.OnAPIPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIFunctionID", DbType="Int NOT NULL")]
		public int APIFunctionID
		{
			get
			{
				return this._APIFunctionID;
			}
			set
			{
				if ((this._APIFunctionID != value))
				{
					if (this._APIFunctionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPIFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._APIFunctionID = value;
					this.SendPropertyChanged("APIFunctionID");
					this.OnAPIFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetID", DbType="Int NOT NULL")]
		public int TargetID
		{
			get
			{
				return this._TargetID;
			}
			set
			{
				if ((this._TargetID != value))
				{
					this.OnTargetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetID = value;
					this.SendPropertyChanged("TargetID");
					this.OnTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllow", DbType="Bit NOT NULL")]
		public bool IsAllow
		{
			get
			{
				return this._IsAllow;
			}
			set
			{
				if ((this._IsAllow != value))
				{
					this.OnIsAllowChanging(value);
					this.SendPropertyChanging();
					this._IsAllow = value;
					this.SendPropertyChanged("IsAllow");
					this.OnIsAllowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIAccountTypeID", DbType="Int")]
		public System.Nullable<int> APIAccountTypeID
		{
			get
			{
				return this._APIAccountTypeID;
			}
			set
			{
				if ((this._APIAccountTypeID != value))
				{
					this.OnAPIAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._APIAccountTypeID = value;
					this.SendPropertyChanged("APIAccountTypeID");
					this.OnAPIAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="APIFunctionEntity_APIPermissionEntity", Storage="_APIFunctionEntity", ThisKey="APIFunctionID", OtherKey="APIFunctionID", IsForeignKey=true)]
		public APIFunctionEntity APIFunctionEntity
		{
			get
			{
				return this._APIFunctionEntity.Entity;
			}
			set
			{
				APIFunctionEntity previousValue = this._APIFunctionEntity.Entity;
				if (((previousValue != value) 
							|| (this._APIFunctionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._APIFunctionEntity.Entity = null;
						previousValue.APIPermissionEntities.Remove(this);
					}
					this._APIFunctionEntity.Entity = value;
					if ((value != null))
					{
						value.APIPermissionEntities.Add(this);
						this._APIFunctionID = value.APIFunctionID;
					}
					else
					{
						this._APIFunctionID = default(int);
					}
					this.SendPropertyChanged("APIFunctionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserManageView")]
	public partial class UserManageView
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _UserStatusID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _DistrictName;
		
		private System.Nullable<int> _StateID;
		
		private string _StateName;
		
		private int _RoleID;
		
		private string _RoleName;
		
		private string _SchoolList;
		
		private string _SchoolIDList;
		
		public UserManageView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(50)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList", DbType="NVarChar(MAX)")]
		public string SchoolList
		{
			get
			{
				return this._SchoolList;
			}
			set
			{
				if ((this._SchoolList != value))
				{
					this._SchoolList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolIDList", DbType="NVarChar(MAX)")]
		public string SchoolIDList
		{
			get
			{
				return this._SchoolIDList;
			}
			set
			{
				if ((this._SchoolIDList != value))
				{
					this._SchoolIDList = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserByUserSchoolView")]
	public partial class UserByUserSchoolView
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private int _RoleID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _TeacherID;
		
		private string _Hint;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _Privileges;
		
		private System.Nullable<int> _DistrictGroupID;
		
		private System.Nullable<bool> _APIaccess;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _Email;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private string _Phone;
		
		private System.Nullable<int> _AddedByUserID;
		
		private string _Code;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.Guid> _GUIDcode;
		
		private string _AltCode;
		
		private string _SISID;
		
		private string _HashedPassword;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _HasTemporaryPassword;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _PasswordLastSetDate;
		
		private System.Nullable<System.DateTime> _DateConfirmedActive;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedUser;
		
		private string _ModifiedBy;
		
		private string _MessageNumber;
		
		private int _UserSchoolUserID;
		
		private int _UserSchoolSchoolID;
		
		public UserByUserSchoolView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this._TeacherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hint", DbType="VarChar(100)")]
		public string Hint
		{
			get
			{
				return this._Hint;
			}
			set
			{
				if ((this._Hint != value))
				{
					this._Hint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Privileges]", Storage="_Privileges", DbType="VarChar(100)")]
		public string Privileges
		{
			get
			{
				return this._Privileges;
			}
			set
			{
				if ((this._Privileges != value))
				{
					this._Privileges = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictGroupID", DbType="Int")]
		public System.Nullable<int> DistrictGroupID
		{
			get
			{
				return this._DistrictGroupID;
			}
			set
			{
				if ((this._DistrictGroupID != value))
				{
					this._DistrictGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIaccess", DbType="Bit")]
		public System.Nullable<bool> APIaccess
		{
			get
			{
				return this._APIaccess;
			}
			set
			{
				if ((this._APIaccess != value))
				{
					this._APIaccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByUserID", DbType="Int")]
		public System.Nullable<int> AddedByUserID
		{
			get
			{
				return this._AddedByUserID;
			}
			set
			{
				if ((this._AddedByUserID != value))
				{
					this._AddedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUIDcode", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUIDcode
		{
			get
			{
				return this._GUIDcode;
			}
			set
			{
				if ((this._GUIDcode != value))
				{
					this._GUIDcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="VarChar(100)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this._AltCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="VarChar(50)")]
		public string SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this._SISID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="VarChar(100)")]
		public string HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this._HashedPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="VarChar(500)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this._PasswordQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="VarChar(500)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this._PasswordAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTemporaryPassword", DbType="Bit NOT NULL")]
		public bool HasTemporaryPassword
		{
			get
			{
				return this._HasTemporaryPassword;
			}
			set
			{
				if ((this._HasTemporaryPassword != value))
				{
					this._HasTemporaryPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordLastSetDate", DbType="Date NOT NULL")]
		public System.DateTime PasswordLastSetDate
		{
			get
			{
				return this._PasswordLastSetDate;
			}
			set
			{
				if ((this._PasswordLastSetDate != value))
				{
					this._PasswordLastSetDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConfirmedActive", DbType="Date")]
		public System.Nullable<System.DateTime> DateConfirmedActive
		{
			get
			{
				return this._DateConfirmedActive;
			}
			set
			{
				if ((this._DateConfirmedActive != value))
				{
					this._DateConfirmedActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUser", DbType="Int")]
		public System.Nullable<int> ModifiedUser
		{
			get
			{
				return this._ModifiedUser;
			}
			set
			{
				if ((this._ModifiedUser != value))
				{
					this._ModifiedUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageNumber", DbType="VarChar(50)")]
		public string MessageNumber
		{
			get
			{
				return this._MessageNumber;
			}
			set
			{
				if ((this._MessageNumber != value))
				{
					this._MessageNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSchoolUserID", DbType="Int NOT NULL")]
		public int UserSchoolUserID
		{
			get
			{
				return this._UserSchoolUserID;
			}
			set
			{
				if ((this._UserSchoolUserID != value))
				{
					this._UserSchoolUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSchoolSchoolID", DbType="Int NOT NULL")]
		public int UserSchoolSchoolID
		{
			get
			{
				return this._UserSchoolSchoolID;
			}
			set
			{
				if ((this._UserSchoolSchoolID != value))
				{
					this._UserSchoolSchoolID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictSlide")]
	public partial class DistrictSlideEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictID;
		
		private int _SlideOrder;
		
		private string _ImageName;
		
		private string _LinkTo;
		
		private bool _NewTabOpen;
		
		private System.Nullable<int> _RoleID;
		
		private int _DistrictSlideID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnSlideOrderChanging(int value);
    partial void OnSlideOrderChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnLinkToChanging(string value);
    partial void OnLinkToChanged();
    partial void OnNewTabOpenChanging(bool value);
    partial void OnNewTabOpenChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnDistrictSlideIDChanging(int value);
    partial void OnDistrictSlideIDChanged();
    #endregion
		
		public DistrictSlideEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlideOrder", DbType="Int NOT NULL")]
		public int SlideOrder
		{
			get
			{
				return this._SlideOrder;
			}
			set
			{
				if ((this._SlideOrder != value))
				{
					this.OnSlideOrderChanging(value);
					this.SendPropertyChanging();
					this._SlideOrder = value;
					this.SendPropertyChanged("SlideOrder");
					this.OnSlideOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTo", DbType="VarChar(200)")]
		public string LinkTo
		{
			get
			{
				return this._LinkTo;
			}
			set
			{
				if ((this._LinkTo != value))
				{
					this.OnLinkToChanging(value);
					this.SendPropertyChanging();
					this._LinkTo = value;
					this.SendPropertyChanged("LinkTo");
					this.OnLinkToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTabOpen", DbType="Bit NOT NULL")]
		public bool NewTabOpen
		{
			get
			{
				return this._NewTabOpen;
			}
			set
			{
				if ((this._NewTabOpen != value))
				{
					this.OnNewTabOpenChanging(value);
					this.SendPropertyChanging();
					this._NewTabOpen = value;
					this.SendPropertyChanged("NewTabOpen");
					this.OnNewTabOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictSlideID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictSlideID
		{
			get
			{
				return this._DistrictSlideID;
			}
			set
			{
				if ((this._DistrictSlideID != value))
				{
					this.OnDistrictSlideIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictSlideID = value;
					this.SendPropertyChanged("DistrictSlideID");
					this.OnDistrictSlideIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetworkAdminView")]
	internal partial class NetworkAdminView
	{
		
		private int _DistrictID;
		
		private int _StateID;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<int> _DistrictGroupID;
		
		private System.Nullable<int> _TimeZoneOffsetID;
		
		private string _LICode;
		
		private int _UserID;
		
		public NetworkAdminView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictGroupID", DbType="Int")]
		public System.Nullable<int> DistrictGroupID
		{
			get
			{
				return this._DistrictGroupID;
			}
			set
			{
				if ((this._DistrictGroupID != value))
				{
					this._DistrictGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneOffsetID", DbType="Int")]
		public System.Nullable<int> TimeZoneOffsetID
		{
			get
			{
				return this._TimeZoneOffsetID;
			}
			set
			{
				if ((this._TimeZoneOffsetID != value))
				{
					this._TimeZoneOffsetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICode", DbType="VarChar(20)")]
		public string LICode
		{
			get
			{
				return this._LICode;
			}
			set
			{
				if ((this._LICode != value))
				{
					this._LICode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImpersonateLog")]
	internal partial class ImpersonateLogEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImpersonateLogID;
		
		private string _SessionCookieGUID;
		
		private string _ActionType;
		
		private System.DateTime _ActionTime;
		
		private System.Nullable<int> _OriginalUserId;
		
		private int _CurrentUserId;
		
		private System.Nullable<int> _ImpersonatedUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImpersonateLogIDChanging(long value);
    partial void OnImpersonateLogIDChanged();
    partial void OnSessionCookieGUIDChanging(string value);
    partial void OnSessionCookieGUIDChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnActionTimeChanging(System.DateTime value);
    partial void OnActionTimeChanged();
    partial void OnOriginalUserIdChanging(System.Nullable<int> value);
    partial void OnOriginalUserIdChanged();
    partial void OnCurrentUserIdChanging(int value);
    partial void OnCurrentUserIdChanged();
    partial void OnImpersonatedUserIdChanging(System.Nullable<int> value);
    partial void OnImpersonatedUserIdChanged();
    #endregion
		
		public ImpersonateLogEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpersonateLogID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ImpersonateLogID
		{
			get
			{
				return this._ImpersonateLogID;
			}
			set
			{
				if ((this._ImpersonateLogID != value))
				{
					this.OnImpersonateLogIDChanging(value);
					this.SendPropertyChanging();
					this._ImpersonateLogID = value;
					this.SendPropertyChanged("ImpersonateLogID");
					this.OnImpersonateLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionCookieGUID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SessionCookieGUID
		{
			get
			{
				return this._SessionCookieGUID;
			}
			set
			{
				if ((this._SessionCookieGUID != value))
				{
					this.OnSessionCookieGUIDChanging(value);
					this.SendPropertyChanging();
					this._SessionCookieGUID = value;
					this.SendPropertyChanged("SessionCookieGUID");
					this.OnSessionCookieGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActionTime
		{
			get
			{
				return this._ActionTime;
			}
			set
			{
				if ((this._ActionTime != value))
				{
					this.OnActionTimeChanging(value);
					this.SendPropertyChanging();
					this._ActionTime = value;
					this.SendPropertyChanged("ActionTime");
					this.OnActionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalUserId", DbType="Int")]
		public System.Nullable<int> OriginalUserId
		{
			get
			{
				return this._OriginalUserId;
			}
			set
			{
				if ((this._OriginalUserId != value))
				{
					this.OnOriginalUserIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalUserId = value;
					this.SendPropertyChanged("OriginalUserId");
					this.OnOriginalUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentUserId", DbType="Int NOT NULL")]
		public int CurrentUserId
		{
			get
			{
				return this._CurrentUserId;
			}
			set
			{
				if ((this._CurrentUserId != value))
				{
					this.OnCurrentUserIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentUserId = value;
					this.SendPropertyChanged("CurrentUserId");
					this.OnCurrentUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpersonatedUserId", DbType="Int")]
		public System.Nullable<int> ImpersonatedUserId
		{
			get
			{
				return this._ImpersonatedUserId;
			}
			set
			{
				if ((this._ImpersonatedUserId != value))
				{
					this.OnImpersonatedUserIdChanging(value);
					this.SendPropertyChanging();
					this._ImpersonatedUserId = value;
					this.SendPropertyChanged("ImpersonatedUserId");
					this.OnImpersonatedUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherDistrictTermView")]
	internal partial class TeacherDistrictTermView
	{
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private int _DistrictTermID;
		
		private System.Nullable<int> _SchoolID;
		
		private int _UserID;
		
		private System.Nullable<int> _UserStatusID;
		
		public TeacherDistrictTermView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PasswordResetQuestion")]
	internal partial class PasswordResetQuestionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PasswordQuestionID;
		
		private string _Text;
		
		private System.Nullable<int> _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPasswordQuestionIDChanging(int value);
    partial void OnPasswordQuestionIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public PasswordResetQuestionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PasswordQuestionID
		{
			get
			{
				return this._PasswordQuestionID;
			}
			set
			{
				if ((this._PasswordQuestionID != value))
				{
					this.OnPasswordQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestionID = value;
					this.SendPropertyChanged("PasswordQuestionID");
					this.OnPasswordQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(200)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ASPsession")]
	public partial class ASPsessionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ASPSessionTokenID;
		
		private string _SessionToken;
		
		private System.DateTime _expires;
		
		private int _UserID;
		
		private string _UserName;
		
		private System.Nullable<int> _LoginID;
		
		private string _CKSession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnASPSessionTokenIDChanging(int value);
    partial void OnASPSessionTokenIDChanged();
    partial void OnSessionTokenChanging(string value);
    partial void OnSessionTokenChanged();
    partial void OnexpiresChanging(System.DateTime value);
    partial void OnexpiresChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginIDChanging(System.Nullable<int> value);
    partial void OnLoginIDChanged();
    partial void OnCKSessionChanging(string value);
    partial void OnCKSessionChanged();
    #endregion
		
		public ASPsessionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ASPSessionTokenID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ASPSessionTokenID
		{
			get
			{
				return this._ASPSessionTokenID;
			}
			set
			{
				if ((this._ASPSessionTokenID != value))
				{
					this.OnASPSessionTokenIDChanging(value);
					this.SendPropertyChanging();
					this._ASPSessionTokenID = value;
					this.SendPropertyChanged("ASPSessionTokenID");
					this.OnASPSessionTokenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionToken", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SessionToken
		{
			get
			{
				return this._SessionToken;
			}
			set
			{
				if ((this._SessionToken != value))
				{
					this.OnSessionTokenChanging(value);
					this.SendPropertyChanging();
					this._SessionToken = value;
					this.SendPropertyChanged("SessionToken");
					this.OnSessionTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expires", DbType="DateTime NOT NULL")]
		public System.DateTime expires
		{
			get
			{
				return this._expires;
			}
			set
			{
				if ((this._expires != value))
				{
					this.OnexpiresChanging(value);
					this.SendPropertyChanging();
					this._expires = value;
					this.SendPropertyChanged("expires");
					this.OnexpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="Int")]
		public System.Nullable<int> LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CKSession", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CKSession
		{
			get
			{
				return this._CKSession;
			}
			set
			{
				if ((this._CKSession != value))
				{
					this.OnCKSessionChanging(value);
					this.SendPropertyChanging();
					this._CKSession = value;
					this.SendPropertyChanged("CKSession");
					this.OnCKSessionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherTestDistrictTermView")]
	public partial class TeacherTestDistrictTermView
	{
		
		private int _DistrictTermID;
		
		private string _DistrictTermName;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _VirtualTestID;
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameLast;
		
		private string _NameFirst;
		
		private int _ClassID;
		
		private string _ClassName;
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _VirtualTestSubTypeID;
		
		private System.DateTime _ResultDate;
		
		public TeacherTestDistrictTermView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this._DateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSubTypeID", DbType="Int")]
		public System.Nullable<int> VirtualTestSubTypeID
		{
			get
			{
				return this._VirtualTestSubTypeID;
			}
			set
			{
				if ((this._VirtualTestSubTypeID != value))
				{
					this._VirtualTestSubTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileLinks")]
	public partial class FileLinksEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DownloadID;
		
		private string _FilePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDownloadIDChanging(System.Guid value);
    partial void OnDownloadIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    #endregion
		
		public FileLinksEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DownloadID
		{
			get
			{
				return this._DownloadID;
			}
			set
			{
				if ((this._DownloadID != value))
				{
					this.OnDownloadIDChanging(value);
					this.SendPropertyChanging();
					this._DownloadID = value;
					this.SendPropertyChanged("DownloadID");
					this.OnDownloadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentTestDistrictTermView")]
	public partial class StudentTestDistrictTermView
	{
		
		private int _DistrictTermID;
		
		private string _DistrictTermName;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _VirtualTestID;
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameLast;
		
		private string _NameFirst;
		
		private int _ClassID;
		
		private string _ClassName;
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private int _DistrictID;
		
		private System.Nullable<int> _VirtualTestSubTypeID;
		
		private System.DateTime _ResultDate;
		
		private int _StudentID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _TakenTestClassID;
		
		private System.Nullable<int> _TakenTestDistrictTermID;
		
		private System.Nullable<int> _TakenTestSchoolID;
		
		private int _TakenTestTeacherID;
		
		public StudentTestDistrictTermView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this._DateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSubTypeID", DbType="Int")]
		public System.Nullable<int> VirtualTestSubTypeID
		{
			get
			{
				return this._VirtualTestSubTypeID;
			}
			set
			{
				if ((this._VirtualTestSubTypeID != value))
				{
					this._VirtualTestSubTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTestClassID", DbType="Int NOT NULL")]
		public int TakenTestClassID
		{
			get
			{
				return this._TakenTestClassID;
			}
			set
			{
				if ((this._TakenTestClassID != value))
				{
					this._TakenTestClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTestDistrictTermID", DbType="Int")]
		public System.Nullable<int> TakenTestDistrictTermID
		{
			get
			{
				return this._TakenTestDistrictTermID;
			}
			set
			{
				if ((this._TakenTestDistrictTermID != value))
				{
					this._TakenTestDistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTestSchoolID", DbType="Int")]
		public System.Nullable<int> TakenTestSchoolID
		{
			get
			{
				return this._TakenTestSchoolID;
			}
			set
			{
				if ((this._TakenTestSchoolID != value))
				{
					this._TakenTestSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenTestTeacherID", DbType="Int NOT NULL")]
		public int TakenTestTeacherID
		{
			get
			{
				return this._TakenTestTeacherID;
			}
			set
			{
				if ((this._TakenTestTeacherID != value))
				{
					this._TakenTestTeacherID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.District")]
	public partial class DistrictEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictID;
		
		private int _StateID;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<int> _DistrictGroupID;
		
		private System.Nullable<int> _TimeZoneOffsetID;
		
		private string _LICode;
		
		private EntitySet<SchoolEntity> _SchoolEntities;
		
		private EntitySet<UserEntity> _UserEntities;
		
		private EntitySet<TeacherEntity> _TeacherEntities;
		
		private EntitySet<DistrictDecodeEntity> _DistrictDecodeEntities;
		
		private EntitySet<DSPDistrictEntity> _DSPDistricts;
		
		private EntitySet<DSPDistrictEntity> _DSPDistrictEntities;
		
		private EntitySet<LocalizeResourceEntity> _LocalizeResourceEntities;
		
		private EntitySet<SSOUserMappingEntity> _SSOUserMappingEntities;
		
		private EntitySet<SSODistrictGroupEntity> _SSODistrictGroupEntities;
		
		private EntityRef<StateEntity> _StateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDistrictGroupIDChanging(System.Nullable<int> value);
    partial void OnDistrictGroupIDChanged();
    partial void OnTimeZoneOffsetIDChanging(System.Nullable<int> value);
    partial void OnTimeZoneOffsetIDChanged();
    partial void OnLICodeChanging(string value);
    partial void OnLICodeChanged();
    #endregion
		
		public DistrictEntity()
		{
			this._SchoolEntities = new EntitySet<SchoolEntity>(new Action<SchoolEntity>(this.attach_SchoolEntities), new Action<SchoolEntity>(this.detach_SchoolEntities));
			this._UserEntities = new EntitySet<UserEntity>(new Action<UserEntity>(this.attach_UserEntities), new Action<UserEntity>(this.detach_UserEntities));
			this._TeacherEntities = new EntitySet<TeacherEntity>(new Action<TeacherEntity>(this.attach_TeacherEntities), new Action<TeacherEntity>(this.detach_TeacherEntities));
			this._DistrictDecodeEntities = new EntitySet<DistrictDecodeEntity>(new Action<DistrictDecodeEntity>(this.attach_DistrictDecodeEntities), new Action<DistrictDecodeEntity>(this.detach_DistrictDecodeEntities));
			this._DSPDistricts = new EntitySet<DSPDistrictEntity>(new Action<DSPDistrictEntity>(this.attach_DSPDistricts), new Action<DSPDistrictEntity>(this.detach_DSPDistricts));
			this._DSPDistrictEntities = new EntitySet<DSPDistrictEntity>(new Action<DSPDistrictEntity>(this.attach_DSPDistrictEntities), new Action<DSPDistrictEntity>(this.detach_DSPDistrictEntities));
			this._LocalizeResourceEntities = new EntitySet<LocalizeResourceEntity>(new Action<LocalizeResourceEntity>(this.attach_LocalizeResourceEntities), new Action<LocalizeResourceEntity>(this.detach_LocalizeResourceEntities));
			this._SSOUserMappingEntities = new EntitySet<SSOUserMappingEntity>(new Action<SSOUserMappingEntity>(this.attach_SSOUserMappingEntities), new Action<SSOUserMappingEntity>(this.detach_SSOUserMappingEntities));
			this._SSODistrictGroupEntities = new EntitySet<SSODistrictGroupEntity>(new Action<SSODistrictGroupEntity>(this.attach_SSODistrictGroupEntities), new Action<SSODistrictGroupEntity>(this.detach_SSODistrictGroupEntities));
			this._StateEntity = default(EntityRef<StateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._StateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictGroupID", DbType="Int")]
		public System.Nullable<int> DistrictGroupID
		{
			get
			{
				return this._DistrictGroupID;
			}
			set
			{
				if ((this._DistrictGroupID != value))
				{
					this.OnDistrictGroupIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictGroupID = value;
					this.SendPropertyChanged("DistrictGroupID");
					this.OnDistrictGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneOffsetID", DbType="Int")]
		public System.Nullable<int> TimeZoneOffsetID
		{
			get
			{
				return this._TimeZoneOffsetID;
			}
			set
			{
				if ((this._TimeZoneOffsetID != value))
				{
					this.OnTimeZoneOffsetIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneOffsetID = value;
					this.SendPropertyChanged("TimeZoneOffsetID");
					this.OnTimeZoneOffsetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICode", DbType="VarChar(20)")]
		public string LICode
		{
			get
			{
				return this._LICode;
			}
			set
			{
				if ((this._LICode != value))
				{
					this.OnLICodeChanging(value);
					this.SendPropertyChanging();
					this._LICode = value;
					this.SendPropertyChanged("LICode");
					this.OnLICodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_SchoolEntity", Storage="_SchoolEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<SchoolEntity> SchoolEntities
		{
			get
			{
				return this._SchoolEntities;
			}
			set
			{
				this._SchoolEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_UserEntity", Storage="_UserEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<UserEntity> UserEntities
		{
			get
			{
				return this._UserEntities;
			}
			set
			{
				this._UserEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_TeacherEntity", Storage="_TeacherEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<TeacherEntity> TeacherEntities
		{
			get
			{
				return this._TeacherEntities;
			}
			set
			{
				this._TeacherEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_DistrictDecodeEntity", Storage="_DistrictDecodeEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<DistrictDecodeEntity> DistrictDecodeEntities
		{
			get
			{
				return this._DistrictDecodeEntities;
			}
			set
			{
				this._DistrictDecodeEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_DSPDistrictEntity", Storage="_DSPDistricts", ThisKey="DistrictID", OtherKey="MemberDistrictID")]
		public EntitySet<DSPDistrictEntity> DSPDistricts
		{
			get
			{
				return this._DSPDistricts;
			}
			set
			{
				this._DSPDistricts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_DSPDistrictEntity1", Storage="_DSPDistrictEntities", ThisKey="DistrictID", OtherKey="OrganizationDistrictID")]
		public EntitySet<DSPDistrictEntity> DSPDistrictEntities
		{
			get
			{
				return this._DSPDistrictEntities;
			}
			set
			{
				this._DSPDistrictEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_LocalizeResourceEntity", Storage="_LocalizeResourceEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<LocalizeResourceEntity> LocalizeResourceEntities
		{
			get
			{
				return this._LocalizeResourceEntities;
			}
			set
			{
				this._LocalizeResourceEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_SSOUserMappingEntity", Storage="_SSOUserMappingEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<SSOUserMappingEntity> SSOUserMappingEntities
		{
			get
			{
				return this._SSOUserMappingEntities;
			}
			set
			{
				this._SSOUserMappingEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_SSODistrictGroupEntity", Storage="_SSODistrictGroupEntities", ThisKey="DistrictID", OtherKey="DistrictID")]
		public EntitySet<SSODistrictGroupEntity> SSODistrictGroupEntities
		{
			get
			{
				return this._SSODistrictGroupEntities;
			}
			set
			{
				this._SSODistrictGroupEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateEntity_DistrictEntity", Storage="_StateEntity", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public StateEntity StateEntity
		{
			get
			{
				return this._StateEntity.Entity;
			}
			set
			{
				StateEntity previousValue = this._StateEntity.Entity;
				if (((previousValue != value) 
							|| (this._StateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StateEntity.Entity = null;
						previousValue.DistrictEntities.Remove(this);
					}
					this._StateEntity.Entity = value;
					if ((value != null))
					{
						value.DistrictEntities.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("StateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SchoolEntities(SchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_SchoolEntities(SchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_UserEntities(UserEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_UserEntities(UserEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_TeacherEntities(TeacherEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_TeacherEntities(TeacherEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_DistrictDecodeEntities(DistrictDecodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_DistrictDecodeEntities(DistrictDecodeEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_DSPDistricts(DSPDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_DSPDistricts(DSPDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_DSPDistrictEntities(DSPDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity1 = this;
		}
		
		private void detach_DSPDistrictEntities(DSPDistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity1 = null;
		}
		
		private void attach_LocalizeResourceEntities(LocalizeResourceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_LocalizeResourceEntities(LocalizeResourceEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_SSOUserMappingEntities(SSOUserMappingEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_SSOUserMappingEntities(SSOUserMappingEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
		
		private void attach_SSODistrictGroupEntities(SSODistrictGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = this;
		}
		
		private void detach_SSODistrictGroupEntities(SSODistrictGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.DistrictEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.School")]
	public partial class SchoolEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchoolID;
		
		private int _DistrictID;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<bool> _TempName;
		
		private string _StateCode;
		
		private System.Nullable<int> _SISID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _ModifiedUser;
		
		private string _ModifiedBy;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _StateID;
		
		private string _LocationCode;
		
		private EntitySet<UserSchoolEntity> _UserSchoolEntities;
		
		private EntitySet<CEESchoolEntity> _CEESchoolEntities;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
		private EntityRef<StateEntity> _StateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolIDChanging(int value);
    partial void OnSchoolIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTempNameChanging(System.Nullable<bool> value);
    partial void OnTempNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnSISIDChanging(System.Nullable<int> value);
    partial void OnSISIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedUserChanging(System.Nullable<int> value);
    partial void OnModifiedUserChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    #endregion
		
		public SchoolEntity()
		{
			this._UserSchoolEntities = new EntitySet<UserSchoolEntity>(new Action<UserSchoolEntity>(this.attach_UserSchoolEntities), new Action<UserSchoolEntity>(this.detach_UserSchoolEntities));
			this._CEESchoolEntities = new EntitySet<CEESchoolEntity>(new Action<CEESchoolEntity>(this.attach_CEESchoolEntities), new Action<CEESchoolEntity>(this.detach_CEESchoolEntities));
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			this._StateEntity = default(EntityRef<StateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempName", DbType="Bit")]
		public System.Nullable<bool> TempName
		{
			get
			{
				return this._TempName;
			}
			set
			{
				if ((this._TempName != value))
				{
					this.OnTempNameChanging(value);
					this.SendPropertyChanging();
					this._TempName = value;
					this.SendPropertyChanged("TempName");
					this.OnTempNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(20)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="Int")]
		public System.Nullable<int> SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this.OnSISIDChanging(value);
					this.SendPropertyChanging();
					this._SISID = value;
					this.SendPropertyChanged("SISID");
					this.OnSISIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUser", DbType="Int")]
		public System.Nullable<int> ModifiedUser
		{
			get
			{
				return this._ModifiedUser;
			}
			set
			{
				if ((this._ModifiedUser != value))
				{
					this.OnModifiedUserChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUser = value;
					this.SendPropertyChanged("ModifiedUser");
					this.OnModifiedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._StateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(10)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolEntity_UserSchoolEntity", Storage="_UserSchoolEntities", ThisKey="SchoolID", OtherKey="SchoolID")]
		public EntitySet<UserSchoolEntity> UserSchoolEntities
		{
			get
			{
				return this._UserSchoolEntities;
			}
			set
			{
				this._UserSchoolEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolEntity_CEESchoolEntity", Storage="_CEESchoolEntities", ThisKey="SchoolID", OtherKey="SchoolID")]
		public EntitySet<CEESchoolEntity> CEESchoolEntities
		{
			get
			{
				return this._CEESchoolEntities;
			}
			set
			{
				this._CEESchoolEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_SchoolEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.SchoolEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.SchoolEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateEntity_SchoolEntity", Storage="_StateEntity", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public StateEntity StateEntity
		{
			get
			{
				return this._StateEntity.Entity;
			}
			set
			{
				StateEntity previousValue = this._StateEntity.Entity;
				if (((previousValue != value) 
							|| (this._StateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StateEntity.Entity = null;
						previousValue.SchoolEntities.Remove(this);
					}
					this._StateEntity.Entity = value;
					if ((value != null))
					{
						value.SchoolEntities.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserSchoolEntities(UserSchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.SchoolEntity = this;
		}
		
		private void detach_UserSchoolEntities(UserSchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.SchoolEntity = null;
		}
		
		private void attach_CEESchoolEntities(CEESchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.SchoolEntity = this;
		}
		
		private void detach_CEESchoolEntities(CEESchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.SchoolEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class UserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private int _RoleID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _TeacherID;
		
		private string _Hint;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _Privileges;
		
		private System.Nullable<int> _DistrictGroupID;
		
		private System.Nullable<bool> _APIaccess;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _Email;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private string _Phone;
		
		private System.Nullable<int> _AddedByUserID;
		
		private string _Code;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.Guid> _GUIDcode;
		
		private string _AltCode;
		
		private string _SISID;
		
		private string _HashedPassword;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _HasTemporaryPassword;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _PasswordLastSetDate;
		
		private System.Nullable<System.DateTime> _DateConfirmedActive;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedUser;
		
		private string _ModifiedBy;
		
		private string _MessageNumber;
		
		private System.Nullable<System.DateTime> _TermOfUseAccepted;
		
		private EntitySet<SSOUserMappingEntity> _SSOUserMappingEntities;
		
		private EntitySet<XLIGroupUser> _XLIGroupUsers;
		
		private EntitySet<UserMetaEntity> _UserMetaEntities;
		
		private EntitySet<SharingGroupUserEntity> _SharingGroupUserEntities;
		
		private EntitySet<SharingReportEntity> _SharingReportEntities;
		
		private EntitySet<SharingReportPropertyEntity> _SharingReportPropertyEntities;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
		private EntityRef<TeacherEntity> _TeacherEntity;
		
		private EntityRef<StateEntity> _StateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnHintChanging(string value);
    partial void OnHintChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnPrivilegesChanging(string value);
    partial void OnPrivilegesChanged();
    partial void OnDistrictGroupIDChanging(System.Nullable<int> value);
    partial void OnDistrictGroupIDChanged();
    partial void OnAPIaccessChanging(System.Nullable<bool> value);
    partial void OnAPIaccessChanged();
    partial void OnUserStatusIDChanging(System.Nullable<int> value);
    partial void OnUserStatusIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNameFirstChanging(string value);
    partial void OnNameFirstChanged();
    partial void OnNameLastChanging(string value);
    partial void OnNameLastChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddedByUserIDChanging(System.Nullable<int> value);
    partial void OnAddedByUserIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnGUIDcodeChanging(System.Nullable<System.Guid> value);
    partial void OnGUIDcodeChanged();
    partial void OnAltCodeChanging(string value);
    partial void OnAltCodeChanged();
    partial void OnSISIDChanging(string value);
    partial void OnSISIDChanged();
    partial void OnHashedPasswordChanging(string value);
    partial void OnHashedPasswordChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnHasTemporaryPasswordChanging(bool value);
    partial void OnHasTemporaryPasswordChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnPasswordLastSetDateChanging(System.DateTime value);
    partial void OnPasswordLastSetDateChanged();
    partial void OnDateConfirmedActiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateConfirmedActiveChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedUserChanging(System.Nullable<int> value);
    partial void OnModifiedUserChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnMessageNumberChanging(string value);
    partial void OnMessageNumberChanged();
    partial void OnTermOfUseAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnTermOfUseAcceptedChanged();
    #endregion
		
		public UserEntity()
		{
			this._SSOUserMappingEntities = new EntitySet<SSOUserMappingEntity>(new Action<SSOUserMappingEntity>(this.attach_SSOUserMappingEntities), new Action<SSOUserMappingEntity>(this.detach_SSOUserMappingEntities));
			this._XLIGroupUsers = new EntitySet<XLIGroupUser>(new Action<XLIGroupUser>(this.attach_XLIGroupUsers), new Action<XLIGroupUser>(this.detach_XLIGroupUsers));
			this._UserMetaEntities = new EntitySet<UserMetaEntity>(new Action<UserMetaEntity>(this.attach_UserMetaEntities), new Action<UserMetaEntity>(this.detach_UserMetaEntities));
			this._SharingGroupUserEntities = new EntitySet<SharingGroupUserEntity>(new Action<SharingGroupUserEntity>(this.attach_SharingGroupUserEntities), new Action<SharingGroupUserEntity>(this.detach_SharingGroupUserEntities));
			this._SharingReportEntities = new EntitySet<SharingReportEntity>(new Action<SharingReportEntity>(this.attach_SharingReportEntities), new Action<SharingReportEntity>(this.detach_SharingReportEntities));
			this._SharingReportPropertyEntities = new EntitySet<SharingReportPropertyEntity>(new Action<SharingReportPropertyEntity>(this.attach_SharingReportPropertyEntities), new Action<SharingReportPropertyEntity>(this.detach_SharingReportPropertyEntities));
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			this._TeacherEntity = default(EntityRef<TeacherEntity>);
			this._StateEntity = default(EntityRef<StateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					if (this._TeacherEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hint", DbType="VarChar(100)")]
		public string Hint
		{
			get
			{
				return this._Hint;
			}
			set
			{
				if ((this._Hint != value))
				{
					this.OnHintChanging(value);
					this.SendPropertyChanging();
					this._Hint = value;
					this.SendPropertyChanged("Hint");
					this.OnHintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._StateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Privileges]", Storage="_Privileges", DbType="VarChar(100)")]
		public string Privileges
		{
			get
			{
				return this._Privileges;
			}
			set
			{
				if ((this._Privileges != value))
				{
					this.OnPrivilegesChanging(value);
					this.SendPropertyChanging();
					this._Privileges = value;
					this.SendPropertyChanged("Privileges");
					this.OnPrivilegesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictGroupID", DbType="Int")]
		public System.Nullable<int> DistrictGroupID
		{
			get
			{
				return this._DistrictGroupID;
			}
			set
			{
				if ((this._DistrictGroupID != value))
				{
					this.OnDistrictGroupIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictGroupID = value;
					this.SendPropertyChanged("DistrictGroupID");
					this.OnDistrictGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIaccess", DbType="Bit")]
		public System.Nullable<bool> APIaccess
		{
			get
			{
				return this._APIaccess;
			}
			set
			{
				if ((this._APIaccess != value))
				{
					this.OnAPIaccessChanging(value);
					this.SendPropertyChanging();
					this._APIaccess = value;
					this.SendPropertyChanged("APIaccess");
					this.OnAPIaccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this.OnUserStatusIDChanging(value);
					this.SendPropertyChanging();
					this._UserStatusID = value;
					this.SendPropertyChanged("UserStatusID");
					this.OnUserStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this.OnNameFirstChanging(value);
					this.SendPropertyChanging();
					this._NameFirst = value;
					this.SendPropertyChanged("NameFirst");
					this.OnNameFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this.OnNameLastChanging(value);
					this.SendPropertyChanging();
					this._NameLast = value;
					this.SendPropertyChanged("NameLast");
					this.OnNameLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByUserID", DbType="Int")]
		public System.Nullable<int> AddedByUserID
		{
			get
			{
				return this._AddedByUserID;
			}
			set
			{
				if ((this._AddedByUserID != value))
				{
					this.OnAddedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._AddedByUserID = value;
					this.SendPropertyChanged("AddedByUserID");
					this.OnAddedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUIDcode", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUIDcode
		{
			get
			{
				return this._GUIDcode;
			}
			set
			{
				if ((this._GUIDcode != value))
				{
					this.OnGUIDcodeChanging(value);
					this.SendPropertyChanging();
					this._GUIDcode = value;
					this.SendPropertyChanged("GUIDcode");
					this.OnGUIDcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="VarChar(100)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this.OnAltCodeChanging(value);
					this.SendPropertyChanging();
					this._AltCode = value;
					this.SendPropertyChanged("AltCode");
					this.OnAltCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="VarChar(50)")]
		public string SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this.OnSISIDChanging(value);
					this.SendPropertyChanging();
					this._SISID = value;
					this.SendPropertyChanged("SISID");
					this.OnSISIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="VarChar(100)")]
		public string HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this.OnHashedPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashedPassword = value;
					this.SendPropertyChanged("HashedPassword");
					this.OnHashedPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="VarChar(500)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="VarChar(500)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTemporaryPassword", DbType="Bit NOT NULL")]
		public bool HasTemporaryPassword
		{
			get
			{
				return this._HasTemporaryPassword;
			}
			set
			{
				if ((this._HasTemporaryPassword != value))
				{
					this.OnHasTemporaryPasswordChanging(value);
					this.SendPropertyChanging();
					this._HasTemporaryPassword = value;
					this.SendPropertyChanged("HasTemporaryPassword");
					this.OnHasTemporaryPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime2(7) NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordLastSetDate", DbType="Date NOT NULL")]
		public System.DateTime PasswordLastSetDate
		{
			get
			{
				return this._PasswordLastSetDate;
			}
			set
			{
				if ((this._PasswordLastSetDate != value))
				{
					this.OnPasswordLastSetDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordLastSetDate = value;
					this.SendPropertyChanged("PasswordLastSetDate");
					this.OnPasswordLastSetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConfirmedActive", DbType="Date")]
		public System.Nullable<System.DateTime> DateConfirmedActive
		{
			get
			{
				return this._DateConfirmedActive;
			}
			set
			{
				if ((this._DateConfirmedActive != value))
				{
					this.OnDateConfirmedActiveChanging(value);
					this.SendPropertyChanging();
					this._DateConfirmedActive = value;
					this.SendPropertyChanged("DateConfirmedActive");
					this.OnDateConfirmedActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUser", DbType="Int")]
		public System.Nullable<int> ModifiedUser
		{
			get
			{
				return this._ModifiedUser;
			}
			set
			{
				if ((this._ModifiedUser != value))
				{
					this.OnModifiedUserChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUser = value;
					this.SendPropertyChanged("ModifiedUser");
					this.OnModifiedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageNumber", DbType="VarChar(50)")]
		public string MessageNumber
		{
			get
			{
				return this._MessageNumber;
			}
			set
			{
				if ((this._MessageNumber != value))
				{
					this.OnMessageNumberChanging(value);
					this.SendPropertyChanging();
					this._MessageNumber = value;
					this.SendPropertyChanged("MessageNumber");
					this.OnMessageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermOfUseAccepted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TermOfUseAccepted
		{
			get
			{
				return this._TermOfUseAccepted;
			}
			set
			{
				if ((this._TermOfUseAccepted != value))
				{
					this.OnTermOfUseAcceptedChanging(value);
					this.SendPropertyChanging();
					this._TermOfUseAccepted = value;
					this.SendPropertyChanged("TermOfUseAccepted");
					this.OnTermOfUseAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SSOUserMappingEntity", Storage="_SSOUserMappingEntities", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<SSOUserMappingEntity> SSOUserMappingEntities
		{
			get
			{
				return this._SSOUserMappingEntities;
			}
			set
			{
				this._SSOUserMappingEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_XLIGroupUser", Storage="_XLIGroupUsers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<XLIGroupUser> XLIGroupUsers
		{
			get
			{
				return this._XLIGroupUsers;
			}
			set
			{
				this._XLIGroupUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_UserMetaEntity", Storage="_UserMetaEntities", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserMetaEntity> UserMetaEntities
		{
			get
			{
				return this._UserMetaEntities;
			}
			set
			{
				this._UserMetaEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SharingGroupUserEntity", Storage="_SharingGroupUserEntities", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<SharingGroupUserEntity> SharingGroupUserEntities
		{
			get
			{
				return this._SharingGroupUserEntities;
			}
			set
			{
				this._SharingGroupUserEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SharingReportEntity", Storage="_SharingReportEntities", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<SharingReportEntity> SharingReportEntities
		{
			get
			{
				return this._SharingReportEntities;
			}
			set
			{
				this._SharingReportEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SharingReportPropertyEntity", Storage="_SharingReportPropertyEntities", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<SharingReportPropertyEntity> SharingReportPropertyEntities
		{
			get
			{
				return this._SharingReportPropertyEntities;
			}
			set
			{
				this._SharingReportPropertyEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_UserEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.UserEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.UserEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherEntity_UserEntity", Storage="_TeacherEntity", ThisKey="TeacherID", OtherKey="TeacherID", IsForeignKey=true)]
		public TeacherEntity TeacherEntity
		{
			get
			{
				return this._TeacherEntity.Entity;
			}
			set
			{
				TeacherEntity previousValue = this._TeacherEntity.Entity;
				if (((previousValue != value) 
							|| (this._TeacherEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherEntity.Entity = null;
						previousValue.UserEntities.Remove(this);
					}
					this._TeacherEntity.Entity = value;
					if ((value != null))
					{
						value.UserEntities.Add(this);
						this._TeacherID = value.TeacherID;
					}
					else
					{
						this._TeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TeacherEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateEntity_UserEntity", Storage="_StateEntity", ThisKey="StateID", OtherKey="StateID", IsForeignKey=true)]
		public StateEntity StateEntity
		{
			get
			{
				return this._StateEntity.Entity;
			}
			set
			{
				StateEntity previousValue = this._StateEntity.Entity;
				if (((previousValue != value) 
							|| (this._StateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StateEntity.Entity = null;
						previousValue.UserEntities.Remove(this);
					}
					this._StateEntity.Entity = value;
					if ((value != null))
					{
						value.UserEntities.Add(this);
						this._StateID = value.StateID;
					}
					else
					{
						this._StateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSOUserMappingEntities(SSOUserMappingEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_SSOUserMappingEntities(SSOUserMappingEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
		
		private void attach_XLIGroupUsers(XLIGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_XLIGroupUsers(XLIGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
		
		private void attach_UserMetaEntities(UserMetaEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_UserMetaEntities(UserMetaEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
		
		private void attach_SharingGroupUserEntities(SharingGroupUserEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_SharingGroupUserEntities(SharingGroupUserEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
		
		private void attach_SharingReportEntities(SharingReportEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_SharingReportEntities(SharingReportEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
		
		private void attach_SharingReportPropertyEntities(SharingReportPropertyEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = this;
		}
		
		private void detach_SharingReportPropertyEntities(SharingReportPropertyEntity entity)
		{
			this.SendPropertyChanging();
			entity.UserEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class TeacherEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeacherID;
		
		private int _DistrictID;
		
		private string _LastName;
		
		private string _Code;
		
		private string _Password;
		
		private string _Hint;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _AddedByUserID;
		
		private EntitySet<UserEntity> _UserEntities;
		
		private EntitySet<TermEntity> _TermEntities;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherIDChanging(int value);
    partial void OnTeacherIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHintChanging(string value);
    partial void OnHintChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAddedByUserIDChanging(System.Nullable<int> value);
    partial void OnAddedByUserIDChanged();
    #endregion
		
		public TeacherEntity()
		{
			this._UserEntities = new EntitySet<UserEntity>(new Action<UserEntity>(this.attach_UserEntities), new Action<UserEntity>(this.detach_UserEntities));
			this._TermEntities = new EntitySet<TermEntity>(new Action<TermEntity>(this.attach_TermEntities), new Action<TermEntity>(this.detach_TermEntities));
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hint", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hint
		{
			get
			{
				return this._Hint;
			}
			set
			{
				if ((this._Hint != value))
				{
					this.OnHintChanging(value);
					this.SendPropertyChanging();
					this._Hint = value;
					this.SendPropertyChanged("Hint");
					this.OnHintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByUserID", DbType="Int")]
		public System.Nullable<int> AddedByUserID
		{
			get
			{
				return this._AddedByUserID;
			}
			set
			{
				if ((this._AddedByUserID != value))
				{
					this.OnAddedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._AddedByUserID = value;
					this.SendPropertyChanged("AddedByUserID");
					this.OnAddedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherEntity_UserEntity", Storage="_UserEntities", ThisKey="TeacherID", OtherKey="TeacherID")]
		public EntitySet<UserEntity> UserEntities
		{
			get
			{
				return this._UserEntities;
			}
			set
			{
				this._UserEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherEntity_TermEntity", Storage="_TermEntities", ThisKey="TeacherID", OtherKey="TeacherID")]
		public EntitySet<TermEntity> TermEntities
		{
			get
			{
				return this._TermEntities;
			}
			set
			{
				this._TermEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_TeacherEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.TeacherEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.TeacherEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserEntities(UserEntity entity)
		{
			this.SendPropertyChanging();
			entity.TeacherEntity = this;
		}
		
		private void detach_UserEntities(UserEntity entity)
		{
			this.SendPropertyChanging();
			entity.TeacherEntity = null;
		}
		
		private void attach_TermEntities(TermEntity entity)
		{
			this.SendPropertyChanging();
			entity.TeacherEntity = this;
		}
		
		private void detach_TermEntities(TermEntity entity)
		{
			this.SendPropertyChanging();
			entity.TeacherEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictDecode")]
	public partial class DistrictDecodeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictDeCodeID;
		
		private int _DistrictID;
		
		private string _Label;
		
		private string _Value;
		
		private EntityRef<DistrictDecodeEntity> _DistrictDecodeEntity1;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
		private EntityRef<DistrictDecodeEntity> _DistrictDecode1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictDeCodeIDChanging(int value);
    partial void OnDistrictDeCodeIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public DistrictDecodeEntity()
		{
			this._DistrictDecodeEntity1 = default(EntityRef<DistrictDecodeEntity>);
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			this._DistrictDecode1 = default(EntityRef<DistrictDecodeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictDeCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictDeCodeID
		{
			get
			{
				return this._DistrictDeCodeID;
			}
			set
			{
				if ((this._DistrictDeCodeID != value))
				{
					if (this._DistrictDecode1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictDeCodeIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictDeCodeID = value;
					this.SendPropertyChanged("DistrictDeCodeID");
					this.OnDistrictDeCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictDecodeEntity_DistrictDecodeEntity", Storage="_DistrictDecodeEntity1", ThisKey="DistrictDeCodeID", OtherKey="DistrictDeCodeID", IsUnique=true, IsForeignKey=false)]
		public DistrictDecodeEntity DistrictDecodeEntity1
		{
			get
			{
				return this._DistrictDecodeEntity1.Entity;
			}
			set
			{
				DistrictDecodeEntity previousValue = this._DistrictDecodeEntity1.Entity;
				if (((previousValue != value) 
							|| (this._DistrictDecodeEntity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictDecodeEntity1.Entity = null;
						previousValue.DistrictDecode1 = null;
					}
					this._DistrictDecodeEntity1.Entity = value;
					if ((value != null))
					{
						value.DistrictDecode1 = this;
					}
					this.SendPropertyChanged("DistrictDecodeEntity1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_DistrictDecodeEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.DistrictDecodeEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.DistrictDecodeEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictDecodeEntity_DistrictDecodeEntity", Storage="_DistrictDecode1", ThisKey="DistrictDeCodeID", OtherKey="DistrictDeCodeID", IsForeignKey=true)]
		public DistrictDecodeEntity DistrictDecode1
		{
			get
			{
				return this._DistrictDecode1.Entity;
			}
			set
			{
				DistrictDecodeEntity previousValue = this._DistrictDecode1.Entity;
				if (((previousValue != value) 
							|| (this._DistrictDecode1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictDecode1.Entity = null;
						previousValue.DistrictDecodeEntity1 = null;
					}
					this._DistrictDecode1.Entity = value;
					if ((value != null))
					{
						value.DistrictDecodeEntity1 = this;
						this._DistrictDeCodeID = value.DistrictDeCodeID;
					}
					else
					{
						this._DistrictDeCodeID = default(int);
					}
					this.SendPropertyChanged("DistrictDecode1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSPDistrict")]
	public partial class DSPDistrictEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DSPDistrictID;
		
		private int _OrganizationDistrictID;
		
		private int _MemberDistrictID;
		
		private string _Type;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
		private EntityRef<DistrictEntity> _DistrictEntity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDSPDistrictIDChanging(int value);
    partial void OnDSPDistrictIDChanged();
    partial void OnOrganizationDistrictIDChanging(int value);
    partial void OnOrganizationDistrictIDChanged();
    partial void OnMemberDistrictIDChanging(int value);
    partial void OnMemberDistrictIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public DSPDistrictEntity()
		{
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			this._DistrictEntity1 = default(EntityRef<DistrictEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPDistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DSPDistrictID
		{
			get
			{
				return this._DSPDistrictID;
			}
			set
			{
				if ((this._DSPDistrictID != value))
				{
					this.OnDSPDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DSPDistrictID = value;
					this.SendPropertyChanged("DSPDistrictID");
					this.OnDSPDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationDistrictID", DbType="Int NOT NULL")]
		public int OrganizationDistrictID
		{
			get
			{
				return this._OrganizationDistrictID;
			}
			set
			{
				if ((this._OrganizationDistrictID != value))
				{
					if (this._DistrictEntity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationDistrictID = value;
					this.SendPropertyChanged("OrganizationDistrictID");
					this.OnOrganizationDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberDistrictID", DbType="Int NOT NULL")]
		public int MemberDistrictID
		{
			get
			{
				return this._MemberDistrictID;
			}
			set
			{
				if ((this._MemberDistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._MemberDistrictID = value;
					this.SendPropertyChanged("MemberDistrictID");
					this.OnMemberDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_DSPDistrictEntity", Storage="_DistrictEntity", ThisKey="MemberDistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.DSPDistricts.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.DSPDistricts.Add(this);
						this._MemberDistrictID = value.DistrictID;
					}
					else
					{
						this._MemberDistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_DSPDistrictEntity1", Storage="_DistrictEntity1", ThisKey="OrganizationDistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity1
		{
			get
			{
				return this._DistrictEntity1.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity1.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity1.Entity = null;
						previousValue.DSPDistrictEntities.Remove(this);
					}
					this._DistrictEntity1.Entity = value;
					if ((value != null))
					{
						value.DSPDistrictEntities.Add(this);
						this._OrganizationDistrictID = value.DistrictID;
					}
					else
					{
						this._OrganizationDistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSchool")]
	public partial class UserSchoolEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserSchoolID;
		
		private int _SchoolID;
		
		private int _UserID;
		
		private System.Nullable<System.DateTime> _DateInactive;
		
		private System.Nullable<System.DateTime> _DateActive;
		
		private System.Nullable<bool> _Inactive;
		
		private EntityRef<SchoolEntity> _SchoolEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserSchoolIDChanging(int value);
    partial void OnUserSchoolIDChanged();
    partial void OnSchoolIDChanging(int value);
    partial void OnSchoolIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateInactiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInactiveChanged();
    partial void OnDateActiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateActiveChanged();
    partial void OnInactiveChanging(System.Nullable<bool> value);
    partial void OnInactiveChanged();
    #endregion
		
		public UserSchoolEntity()
		{
			this._SchoolEntity = default(EntityRef<SchoolEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSchoolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserSchoolID
		{
			get
			{
				return this._UserSchoolID;
			}
			set
			{
				if ((this._UserSchoolID != value))
				{
					this.OnUserSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._UserSchoolID = value;
					this.SendPropertyChanged("UserSchoolID");
					this.OnUserSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._SchoolEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInactive", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInactive
		{
			get
			{
				return this._DateInactive;
			}
			set
			{
				if ((this._DateInactive != value))
				{
					this.OnDateInactiveChanging(value);
					this.SendPropertyChanging();
					this._DateInactive = value;
					this.SendPropertyChanged("DateInactive");
					this.OnDateInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateActive", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateActive
		{
			get
			{
				return this._DateActive;
			}
			set
			{
				if ((this._DateActive != value))
				{
					this.OnDateActiveChanging(value);
					this.SendPropertyChanging();
					this._DateActive = value;
					this.SendPropertyChanged("DateActive");
					this.OnDateActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="Bit")]
		public System.Nullable<bool> Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this.OnInactiveChanging(value);
					this.SendPropertyChanging();
					this._Inactive = value;
					this.SendPropertyChanged("Inactive");
					this.OnInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolEntity_UserSchoolEntity", Storage="_SchoolEntity", ThisKey="SchoolID", OtherKey="SchoolID", IsForeignKey=true)]
		public SchoolEntity SchoolEntity
		{
			get
			{
				return this._SchoolEntity.Entity;
			}
			set
			{
				SchoolEntity previousValue = this._SchoolEntity.Entity;
				if (((previousValue != value) 
							|| (this._SchoolEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolEntity.Entity = null;
						previousValue.UserSchoolEntities.Remove(this);
					}
					this._SchoolEntity.Entity = value;
					if ((value != null))
					{
						value.UserSchoolEntities.Add(this);
						this._SchoolID = value.SchoolID;
					}
					else
					{
						this._SchoolID = default(int);
					}
					this.SendPropertyChanged("SchoolEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CEESchool")]
	public partial class CEESchoolEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CEESchoolID;
		
		private string _Name;
		
		private string _LocationCode;
		
		private System.Nullable<int> _SchoolID;
		
		private string _StateCode;
		
		private EntityRef<SchoolEntity> _SchoolEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEESchoolIDChanging(int value);
    partial void OnCEESchoolIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    #endregion
		
		public CEESchoolEntity()
		{
			this._SchoolEntity = default(EntityRef<SchoolEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEESchoolID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CEESchoolID
		{
			get
			{
				return this._CEESchoolID;
			}
			set
			{
				if ((this._CEESchoolID != value))
				{
					this.OnCEESchoolIDChanging(value);
					this.SendPropertyChanging();
					this._CEESchoolID = value;
					this.SendPropertyChanged("CEESchoolID");
					this.OnCEESchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(10)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					if (this._SchoolEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="NVarChar(20)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SchoolEntity_CEESchoolEntity", Storage="_SchoolEntity", ThisKey="SchoolID", OtherKey="SchoolID", IsForeignKey=true)]
		public SchoolEntity SchoolEntity
		{
			get
			{
				return this._SchoolEntity.Entity;
			}
			set
			{
				SchoolEntity previousValue = this._SchoolEntity.Entity;
				if (((previousValue != value) 
							|| (this._SchoolEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SchoolEntity.Entity = null;
						previousValue.CEESchoolEntities.Remove(this);
					}
					this._SchoolEntity.Entity = value;
					if ((value != null))
					{
						value.CEESchoolEntities.Add(this);
						this._SchoolID = value.SchoolID;
					}
					else
					{
						this._SchoolID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SchoolEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Term")]
	public partial class TermEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TermID;
		
		private string _Name;
		
		private System.Nullable<int> _TeacherID;
		
		private bool _Locked;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<TeacherEntity> _TeacherEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermIDChanging(int value);
    partial void OnTermIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public TermEntity()
		{
			this._TeacherEntity = default(EntityRef<TeacherEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TermID
		{
			get
			{
				return this._TermID;
			}
			set
			{
				if ((this._TermID != value))
				{
					this.OnTermIDChanging(value);
					this.SendPropertyChanging();
					this._TermID = value;
					this.SendPropertyChanged("TermID");
					this.OnTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					if (this._TeacherEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherEntity_TermEntity", Storage="_TeacherEntity", ThisKey="TeacherID", OtherKey="TeacherID", IsForeignKey=true)]
		public TeacherEntity TeacherEntity
		{
			get
			{
				return this._TeacherEntity.Entity;
			}
			set
			{
				TeacherEntity previousValue = this._TeacherEntity.Entity;
				if (((previousValue != value) 
							|| (this._TeacherEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherEntity.Entity = null;
						previousValue.TermEntities.Remove(this);
					}
					this._TeacherEntity.Entity = value;
					if ((value != null))
					{
						value.TermEntities.Add(this);
						this._TeacherID = value.TeacherID;
					}
					else
					{
						this._TeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TeacherEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisplayUserGroupAndRoleView")]
	internal partial class DisplayUserGroupAndRoleView
	{
		
		private string _GroupName;
		
		private int _XLIGroupID;
		
		private string _RoleDisplay;
		
		private string _RoleName;
		
		private int _UserID;
		
		public DisplayUserGroupAndRoleView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIGroupID", DbType="Int NOT NULL")]
		public int XLIGroupID
		{
			get
			{
				return this._XLIGroupID;
			}
			set
			{
				if ((this._XLIGroupID != value))
				{
					this._XLIGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDisplay", DbType="VarChar(50)")]
		public string RoleDisplay
		{
			get
			{
				return this._RoleDisplay;
			}
			set
			{
				if ((this._RoleDisplay != value))
				{
					this._RoleDisplay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocalizeResource")]
	public partial class LocalizeResourceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocalizeResourceID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _Key;
		
		private string _Label;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocalizeResourceIDChanging(int value);
    partial void OnLocalizeResourceIDChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    #endregion
		
		public LocalizeResourceEntity()
		{
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizeResourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocalizeResourceID
		{
			get
			{
				return this._LocalizeResourceID;
			}
			set
			{
				if ((this._LocalizeResourceID != value))
				{
					this.OnLocalizeResourceIDChanging(value);
					this.SendPropertyChanging();
					this._LocalizeResourceID = value;
					this.SendPropertyChanged("LocalizeResourceID");
					this.OnLocalizeResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(MAX)")]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_LocalizeResourceEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.LocalizeResourceEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.LocalizeResourceEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherListView")]
	public partial class TeacherListView
	{
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _UserStatusID;
		
		private System.Nullable<int> _RoleID;
		
		private string _UserName;
		
		public TeacherListView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIGroup")]
	public partial class XLIGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIGroupID;
		
		private string _Name;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<bool> _InheritRoleFunctionality;
		
		private EntitySet<XLIAreaGroup> _XLIAreaGroups;
		
		private EntitySet<XLIGroupUser> _XLIGroupUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIGroupIDChanging(int value);
    partial void OnXLIGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnInheritRoleFunctionalityChanging(System.Nullable<bool> value);
    partial void OnInheritRoleFunctionalityChanged();
    #endregion
		
		public XLIGroupEntity()
		{
			this._XLIAreaGroups = new EntitySet<XLIAreaGroup>(new Action<XLIAreaGroup>(this.attach_XLIAreaGroups), new Action<XLIAreaGroup>(this.detach_XLIAreaGroups));
			this._XLIGroupUsers = new EntitySet<XLIGroupUser>(new Action<XLIGroupUser>(this.attach_XLIGroupUsers), new Action<XLIGroupUser>(this.detach_XLIGroupUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIGroupID
		{
			get
			{
				return this._XLIGroupID;
			}
			set
			{
				if ((this._XLIGroupID != value))
				{
					this.OnXLIGroupIDChanging(value);
					this.SendPropertyChanging();
					this._XLIGroupID = value;
					this.SendPropertyChanged("XLIGroupID");
					this.OnXLIGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritRoleFunctionality", DbType="Bit")]
		public System.Nullable<bool> InheritRoleFunctionality
		{
			get
			{
				return this._InheritRoleFunctionality;
			}
			set
			{
				if ((this._InheritRoleFunctionality != value))
				{
					this.OnInheritRoleFunctionalityChanging(value);
					this.SendPropertyChanging();
					this._InheritRoleFunctionality = value;
					this.SendPropertyChanged("InheritRoleFunctionality");
					this.OnInheritRoleFunctionalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIGroupEntity_XLIAreaGroup", Storage="_XLIAreaGroups", ThisKey="XLIGroupID", OtherKey="XLIGroupID")]
		public EntitySet<XLIAreaGroup> XLIAreaGroups
		{
			get
			{
				return this._XLIAreaGroups;
			}
			set
			{
				this._XLIAreaGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIGroupEntity_XLIGroupUser", Storage="_XLIGroupUsers", ThisKey="XLIGroupID", OtherKey="XLIGroupID")]
		public EntitySet<XLIGroupUser> XLIGroupUsers
		{
			get
			{
				return this._XLIGroupUsers;
			}
			set
			{
				this._XLIGroupUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XLIAreaGroups(XLIAreaGroup entity)
		{
			this.SendPropertyChanging();
			entity.XLIGroupEntity = this;
		}
		
		private void detach_XLIAreaGroups(XLIAreaGroup entity)
		{
			this.SendPropertyChanging();
			entity.XLIGroupEntity = null;
		}
		
		private void attach_XLIGroupUsers(XLIGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.XLIGroupEntity = this;
		}
		
		private void detach_XLIGroupUsers(XLIGroupUser entity)
		{
			this.SendPropertyChanging();
			entity.XLIGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DSPDistrictView")]
	public partial class DSPDistrictView
	{
		
		private int _OrganizationDistrictID;
		
		private int _DistrictID;
		
		private string _LICode;
		
		private string _Name;
		
		private int _StateID;
		
		private string _StateName;
		
		private System.Nullable<int> _TimeZoneOffsetID;
		
		public DSPDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationDistrictID", DbType="Int NOT NULL")]
		public int OrganizationDistrictID
		{
			get
			{
				return this._OrganizationDistrictID;
			}
			set
			{
				if ((this._OrganizationDistrictID != value))
				{
					this._OrganizationDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICode", DbType="VarChar(20)")]
		public string LICode
		{
			get
			{
				return this._LICode;
			}
			set
			{
				if ((this._LICode != value))
				{
					this._LICode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneOffsetID", DbType="Int")]
		public System.Nullable<int> TimeZoneOffsetID
		{
			get
			{
				return this._TimeZoneOffsetID;
			}
			set
			{
				if ((this._TimeZoneOffsetID != value))
				{
					this._TimeZoneOffsetID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationMessage")]
	public partial class NotificationMessageEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationMessageID;
		
		private string _Status;
		
		private System.DateTime _PublishedTime;
		
		private string _HtmlContent;
		
		private string _AccessedDistrict;
		
		private System.Nullable<int> _ReceivingUserID;
		
		private string _NotificationType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationMessageIDChanging(int value);
    partial void OnNotificationMessageIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPublishedTimeChanging(System.DateTime value);
    partial void OnPublishedTimeChanged();
    partial void OnHtmlContentChanging(string value);
    partial void OnHtmlContentChanged();
    partial void OnAccessedDistrictChanging(string value);
    partial void OnAccessedDistrictChanged();
    partial void OnReceivingUserIDChanging(System.Nullable<int> value);
    partial void OnReceivingUserIDChanged();
    partial void OnNotificationTypeChanging(string value);
    partial void OnNotificationTypeChanged();
    #endregion
		
		public NotificationMessageEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationMessageID
		{
			get
			{
				return this._NotificationMessageID;
			}
			set
			{
				if ((this._NotificationMessageID != value))
				{
					this.OnNotificationMessageIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationMessageID = value;
					this.SendPropertyChanged("NotificationMessageID");
					this.OnNotificationMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedTime", DbType="DateTime NOT NULL")]
		public System.DateTime PublishedTime
		{
			get
			{
				return this._PublishedTime;
			}
			set
			{
				if ((this._PublishedTime != value))
				{
					this.OnPublishedTimeChanging(value);
					this.SendPropertyChanging();
					this._PublishedTime = value;
					this.SendPropertyChanged("PublishedTime");
					this.OnPublishedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HtmlContent
		{
			get
			{
				return this._HtmlContent;
			}
			set
			{
				if ((this._HtmlContent != value))
				{
					this.OnHtmlContentChanging(value);
					this.SendPropertyChanging();
					this._HtmlContent = value;
					this.SendPropertyChanged("HtmlContent");
					this.OnHtmlContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessedDistrict", DbType="NVarChar(2000)")]
		public string AccessedDistrict
		{
			get
			{
				return this._AccessedDistrict;
			}
			set
			{
				if ((this._AccessedDistrict != value))
				{
					this.OnAccessedDistrictChanging(value);
					this.SendPropertyChanging();
					this._AccessedDistrict = value;
					this.SendPropertyChanged("AccessedDistrict");
					this.OnAccessedDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingUserID", DbType="Int")]
		public System.Nullable<int> ReceivingUserID
		{
			get
			{
				return this._ReceivingUserID;
			}
			set
			{
				if ((this._ReceivingUserID != value))
				{
					this.OnReceivingUserIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivingUserID = value;
					this.SendPropertyChanged("ReceivingUserID");
					this.OnReceivingUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationType", DbType="VarChar(50)")]
		public string NotificationType
		{
			get
			{
				return this._NotificationType;
			}
			set
			{
				if ((this._NotificationType != value))
				{
					this.OnNotificationTypeChanging(value);
					this.SendPropertyChanging();
					this._NotificationType = value;
					this.SendPropertyChanged("NotificationType");
					this.OnNotificationTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSOInformation")]
	public partial class SSOInformationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SSOInformationID;
		
		private string _Auth0ClientId;
		
		private string _Auth0ClientSecret;
		
		private string _DefaultConnection;
		
		private string _UrlLandingPage;
		
		private string _UrlLogoutPage;
		
		private string _Type;
		
		private EntitySet<SSODistrictGroupEntity> _SSODistrictGroupEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSOInformationIDChanging(int value);
    partial void OnSSOInformationIDChanged();
    partial void OnAuth0ClientIdChanging(string value);
    partial void OnAuth0ClientIdChanged();
    partial void OnAuth0ClientSecretChanging(string value);
    partial void OnAuth0ClientSecretChanged();
    partial void OnDefaultConnectionChanging(string value);
    partial void OnDefaultConnectionChanged();
    partial void OnUrlLandingPageChanging(string value);
    partial void OnUrlLandingPageChanged();
    partial void OnUrlLogoutPageChanging(string value);
    partial void OnUrlLogoutPageChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SSOInformationEntity()
		{
			this._SSODistrictGroupEntities = new EntitySet<SSODistrictGroupEntity>(new Action<SSODistrictGroupEntity>(this.attach_SSODistrictGroupEntities), new Action<SSODistrictGroupEntity>(this.detach_SSODistrictGroupEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSOInformationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SSOInformationID
		{
			get
			{
				return this._SSOInformationID;
			}
			set
			{
				if ((this._SSOInformationID != value))
				{
					this.OnSSOInformationIDChanging(value);
					this.SendPropertyChanging();
					this._SSOInformationID = value;
					this.SendPropertyChanged("SSOInformationID");
					this.OnSSOInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auth0ClientId", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Auth0ClientId
		{
			get
			{
				return this._Auth0ClientId;
			}
			set
			{
				if ((this._Auth0ClientId != value))
				{
					this.OnAuth0ClientIdChanging(value);
					this.SendPropertyChanging();
					this._Auth0ClientId = value;
					this.SendPropertyChanged("Auth0ClientId");
					this.OnAuth0ClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auth0ClientSecret", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Auth0ClientSecret
		{
			get
			{
				return this._Auth0ClientSecret;
			}
			set
			{
				if ((this._Auth0ClientSecret != value))
				{
					this.OnAuth0ClientSecretChanging(value);
					this.SendPropertyChanging();
					this._Auth0ClientSecret = value;
					this.SendPropertyChanged("Auth0ClientSecret");
					this.OnAuth0ClientSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultConnection", DbType="VarChar(100)")]
		public string DefaultConnection
		{
			get
			{
				return this._DefaultConnection;
			}
			set
			{
				if ((this._DefaultConnection != value))
				{
					this.OnDefaultConnectionChanging(value);
					this.SendPropertyChanging();
					this._DefaultConnection = value;
					this.SendPropertyChanged("DefaultConnection");
					this.OnDefaultConnectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLandingPage", DbType="VarChar(300)")]
		public string UrlLandingPage
		{
			get
			{
				return this._UrlLandingPage;
			}
			set
			{
				if ((this._UrlLandingPage != value))
				{
					this.OnUrlLandingPageChanging(value);
					this.SendPropertyChanging();
					this._UrlLandingPage = value;
					this.SendPropertyChanged("UrlLandingPage");
					this.OnUrlLandingPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlLogoutPage", DbType="VarChar(300)")]
		public string UrlLogoutPage
		{
			get
			{
				return this._UrlLogoutPage;
			}
			set
			{
				if ((this._UrlLogoutPage != value))
				{
					this.OnUrlLogoutPageChanging(value);
					this.SendPropertyChanging();
					this._UrlLogoutPage = value;
					this.SendPropertyChanged("UrlLogoutPage");
					this.OnUrlLogoutPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSOInformationEntity_SSODistrictGroupEntity", Storage="_SSODistrictGroupEntities", ThisKey="SSOInformationID", OtherKey="SSOInformationID")]
		public EntitySet<SSODistrictGroupEntity> SSODistrictGroupEntities
		{
			get
			{
				return this._SSODistrictGroupEntities;
			}
			set
			{
				this._SSODistrictGroupEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSODistrictGroupEntities(SSODistrictGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.SSOInformationEntity = this;
		}
		
		private void detach_SSODistrictGroupEntities(SSODistrictGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.SSOInformationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSOUserMapping")]
	public partial class SSOUserMappingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SSOUserMappingID;
		
		private int _UserID;
		
		private string _ADUsername;
		
		private int _DistrictID;
		
		private string _Type;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSOUserMappingIDChanging(int value);
    partial void OnSSOUserMappingIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnADUsernameChanging(string value);
    partial void OnADUsernameChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public SSOUserMappingEntity()
		{
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSOUserMappingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SSOUserMappingID
		{
			get
			{
				return this._SSOUserMappingID;
			}
			set
			{
				if ((this._SSOUserMappingID != value))
				{
					this.OnSSOUserMappingIDChanging(value);
					this.SendPropertyChanging();
					this._SSOUserMappingID = value;
					this.SendPropertyChanged("SSOUserMappingID");
					this.OnSSOUserMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADUsername", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ADUsername
		{
			get
			{
				return this._ADUsername;
			}
			set
			{
				if ((this._ADUsername != value))
				{
					this.OnADUsernameChanging(value);
					this.SendPropertyChanging();
					this._ADUsername = value;
					this.SendPropertyChanged("ADUsername");
					this.OnADUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_SSOUserMappingEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.SSOUserMappingEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.SSOUserMappingEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SSOUserMappingEntity", Storage="_UserEntity", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.SSOUserMappingEntities.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.SSOUserMappingEntities.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSODistrictGroup")]
	public partial class SSODistrictGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SSODistrictGroupID;
		
		private int _SSOInformationID;
		
		private int _DistrictID;
		
		private System.Nullable<int> _TenantID;
		
		private EntityRef<DistrictEntity> _DistrictEntity;
		
		private EntityRef<SSOInformationEntity> _SSOInformationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSODistrictGroupIDChanging(int value);
    partial void OnSSODistrictGroupIDChanged();
    partial void OnSSOInformationIDChanging(int value);
    partial void OnSSOInformationIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnTenantIDChanging(System.Nullable<int> value);
    partial void OnTenantIDChanged();
    #endregion
		
		public SSODistrictGroupEntity()
		{
			this._DistrictEntity = default(EntityRef<DistrictEntity>);
			this._SSOInformationEntity = default(EntityRef<SSOInformationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSODistrictGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SSODistrictGroupID
		{
			get
			{
				return this._SSODistrictGroupID;
			}
			set
			{
				if ((this._SSODistrictGroupID != value))
				{
					this.OnSSODistrictGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SSODistrictGroupID = value;
					this.SendPropertyChanged("SSODistrictGroupID");
					this.OnSSODistrictGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSOInformationID", DbType="Int NOT NULL")]
		public int SSOInformationID
		{
			get
			{
				return this._SSOInformationID;
			}
			set
			{
				if ((this._SSOInformationID != value))
				{
					if (this._SSOInformationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSSOInformationIDChanging(value);
					this.SendPropertyChanging();
					this._SSOInformationID = value;
					this.SendPropertyChanged("SSOInformationID");
					this.OnSSOInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					if (this._DistrictEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenantID", DbType="Int")]
		public System.Nullable<int> TenantID
		{
			get
			{
				return this._TenantID;
			}
			set
			{
				if ((this._TenantID != value))
				{
					this.OnTenantIDChanging(value);
					this.SendPropertyChanging();
					this._TenantID = value;
					this.SendPropertyChanged("TenantID");
					this.OnTenantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DistrictEntity_SSODistrictGroupEntity", Storage="_DistrictEntity", ThisKey="DistrictID", OtherKey="DistrictID", IsForeignKey=true)]
		public DistrictEntity DistrictEntity
		{
			get
			{
				return this._DistrictEntity.Entity;
			}
			set
			{
				DistrictEntity previousValue = this._DistrictEntity.Entity;
				if (((previousValue != value) 
							|| (this._DistrictEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DistrictEntity.Entity = null;
						previousValue.SSODistrictGroupEntities.Remove(this);
					}
					this._DistrictEntity.Entity = value;
					if ((value != null))
					{
						value.SSODistrictGroupEntities.Add(this);
						this._DistrictID = value.DistrictID;
					}
					else
					{
						this._DistrictID = default(int);
					}
					this.SendPropertyChanged("DistrictEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSOInformationEntity_SSODistrictGroupEntity", Storage="_SSOInformationEntity", ThisKey="SSOInformationID", OtherKey="SSOInformationID", IsForeignKey=true)]
		public SSOInformationEntity SSOInformationEntity
		{
			get
			{
				return this._SSOInformationEntity.Entity;
			}
			set
			{
				SSOInformationEntity previousValue = this._SSOInformationEntity.Entity;
				if (((previousValue != value) 
							|| (this._SSOInformationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSOInformationEntity.Entity = null;
						previousValue.SSODistrictGroupEntities.Remove(this);
					}
					this._SSOInformationEntity.Entity = value;
					if ((value != null))
					{
						value.SSODistrictGroupEntities.Add(this);
						this._SSOInformationID = value.SSOInformationID;
					}
					else
					{
						this._SSOInformationID = default(int);
					}
					this.SendPropertyChanged("SSOInformationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class StateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _Name;
		
		private string _Code;
		
		private int _DefaultTimeZoneID;
		
		private string _ZipRange;
		
		private System.Nullable<bool> _International;
		
		private string _TimeZoneID;
		
		private EntitySet<DistrictEntity> _DistrictEntities;
		
		private EntitySet<SchoolEntity> _SchoolEntities;
		
		private EntitySet<UserEntity> _UserEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDefaultTimeZoneIDChanging(int value);
    partial void OnDefaultTimeZoneIDChanged();
    partial void OnZipRangeChanging(string value);
    partial void OnZipRangeChanged();
    partial void OnInternationalChanging(System.Nullable<bool> value);
    partial void OnInternationalChanged();
    partial void OnTimeZoneIDChanging(string value);
    partial void OnTimeZoneIDChanged();
    #endregion
		
		public StateEntity()
		{
			this._DistrictEntities = new EntitySet<DistrictEntity>(new Action<DistrictEntity>(this.attach_DistrictEntities), new Action<DistrictEntity>(this.detach_DistrictEntities));
			this._SchoolEntities = new EntitySet<SchoolEntity>(new Action<SchoolEntity>(this.attach_SchoolEntities), new Action<SchoolEntity>(this.detach_SchoolEntities));
			this._UserEntities = new EntitySet<UserEntity>(new Action<UserEntity>(this.attach_UserEntities), new Action<UserEntity>(this.detach_UserEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTimeZoneID", DbType="Int NOT NULL")]
		public int DefaultTimeZoneID
		{
			get
			{
				return this._DefaultTimeZoneID;
			}
			set
			{
				if ((this._DefaultTimeZoneID != value))
				{
					this.OnDefaultTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultTimeZoneID = value;
					this.SendPropertyChanged("DefaultTimeZoneID");
					this.OnDefaultTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipRange", DbType="VarChar(100)")]
		public string ZipRange
		{
			get
			{
				return this._ZipRange;
			}
			set
			{
				if ((this._ZipRange != value))
				{
					this.OnZipRangeChanging(value);
					this.SendPropertyChanging();
					this._ZipRange = value;
					this.SendPropertyChanged("ZipRange");
					this.OnZipRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_International", DbType="Bit")]
		public System.Nullable<bool> International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this.OnInternationalChanging(value);
					this.SendPropertyChanging();
					this._International = value;
					this.SendPropertyChanged("International");
					this.OnInternationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneID", DbType="NVarChar(200)")]
		public string TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					this.OnTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneID = value;
					this.SendPropertyChanged("TimeZoneID");
					this.OnTimeZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateEntity_DistrictEntity", Storage="_DistrictEntities", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<DistrictEntity> DistrictEntities
		{
			get
			{
				return this._DistrictEntities;
			}
			set
			{
				this._DistrictEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateEntity_SchoolEntity", Storage="_SchoolEntities", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<SchoolEntity> SchoolEntities
		{
			get
			{
				return this._SchoolEntities;
			}
			set
			{
				this._SchoolEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateEntity_UserEntity", Storage="_UserEntities", ThisKey="StateID", OtherKey="StateID")]
		public EntitySet<UserEntity> UserEntities
		{
			get
			{
				return this._UserEntities;
			}
			set
			{
				this._UserEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistrictEntities(DistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.StateEntity = this;
		}
		
		private void detach_DistrictEntities(DistrictEntity entity)
		{
			this.SendPropertyChanging();
			entity.StateEntity = null;
		}
		
		private void attach_SchoolEntities(SchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.StateEntity = this;
		}
		
		private void detach_SchoolEntities(SchoolEntity entity)
		{
			this.SendPropertyChanging();
			entity.StateEntity = null;
		}
		
		private void attach_UserEntities(UserEntity entity)
		{
			this.SendPropertyChanging();
			entity.StateEntity = this;
		}
		
		private void detach_UserEntities(UserEntity entity)
		{
			this.SendPropertyChanging();
			entity.StateEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIAreaGroup")]
	public partial class XLIAreaGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIAreaGroupID;
		
		private int _XLIAreaID;
		
		private int _XLIGroupID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _Expires;
		
		private EntitySet<XLIAreaGroupModule> _XLIAreaGroupModules;
		
		private EntityRef<XLIGroupEntity> _XLIGroupEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIAreaGroupIDChanging(int value);
    partial void OnXLIAreaGroupIDChanged();
    partial void OnXLIAreaIDChanging(int value);
    partial void OnXLIAreaIDChanged();
    partial void OnXLIGroupIDChanging(int value);
    partial void OnXLIGroupIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnExpiresChanging(bool value);
    partial void OnExpiresChanged();
    #endregion
		
		public XLIAreaGroup()
		{
			this._XLIAreaGroupModules = new EntitySet<XLIAreaGroupModule>(new Action<XLIAreaGroupModule>(this.attach_XLIAreaGroupModules), new Action<XLIAreaGroupModule>(this.detach_XLIAreaGroupModules));
			this._XLIGroupEntity = default(EntityRef<XLIGroupEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIAreaGroupID
		{
			get
			{
				return this._XLIAreaGroupID;
			}
			set
			{
				if ((this._XLIAreaGroupID != value))
				{
					this.OnXLIAreaGroupIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaGroupID = value;
					this.SendPropertyChanged("XLIAreaGroupID");
					this.OnXLIAreaGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaID", DbType="Int NOT NULL")]
		public int XLIAreaID
		{
			get
			{
				return this._XLIAreaID;
			}
			set
			{
				if ((this._XLIAreaID != value))
				{
					this.OnXLIAreaIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaID = value;
					this.SendPropertyChanged("XLIAreaID");
					this.OnXLIAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIGroupID", DbType="Int NOT NULL")]
		public int XLIGroupID
		{
			get
			{
				return this._XLIGroupID;
			}
			set
			{
				if ((this._XLIGroupID != value))
				{
					if (this._XLIGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXLIGroupIDChanging(value);
					this.SendPropertyChanging();
					this._XLIGroupID = value;
					this.SendPropertyChanged("XLIGroupID");
					this.OnXLIGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="Bit NOT NULL")]
		public bool Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this.OnExpiresChanging(value);
					this.SendPropertyChanging();
					this._Expires = value;
					this.SendPropertyChanged("Expires");
					this.OnExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIAreaGroup_XLIAreaGroupModule", Storage="_XLIAreaGroupModules", ThisKey="XLIAreaGroupID", OtherKey="XLIAreaGroupID")]
		public EntitySet<XLIAreaGroupModule> XLIAreaGroupModules
		{
			get
			{
				return this._XLIAreaGroupModules;
			}
			set
			{
				this._XLIAreaGroupModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIGroupEntity_XLIAreaGroup", Storage="_XLIGroupEntity", ThisKey="XLIGroupID", OtherKey="XLIGroupID", IsForeignKey=true)]
		public XLIGroupEntity XLIGroupEntity
		{
			get
			{
				return this._XLIGroupEntity.Entity;
			}
			set
			{
				XLIGroupEntity previousValue = this._XLIGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._XLIGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XLIGroupEntity.Entity = null;
						previousValue.XLIAreaGroups.Remove(this);
					}
					this._XLIGroupEntity.Entity = value;
					if ((value != null))
					{
						value.XLIAreaGroups.Add(this);
						this._XLIGroupID = value.XLIGroupID;
					}
					else
					{
						this._XLIGroupID = default(int);
					}
					this.SendPropertyChanged("XLIGroupEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XLIAreaGroupModules(XLIAreaGroupModule entity)
		{
			this.SendPropertyChanging();
			entity.XLIAreaGroup = this;
		}
		
		private void detach_XLIAreaGroupModules(XLIAreaGroupModule entity)
		{
			this.SendPropertyChanging();
			entity.XLIAreaGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIAreaGroupModule")]
	public partial class XLIAreaGroupModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIAreaGroupModuleID;
		
		private int _XLIAreaGroupID;
		
		private int _XLIModuleID;
		
		private bool _AllRoles;
		
		private EntitySet<XLIAreaGMRole> _XLIAreaGMRoles;
		
		private EntityRef<XLIAreaGroup> _XLIAreaGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIAreaGroupModuleIDChanging(int value);
    partial void OnXLIAreaGroupModuleIDChanged();
    partial void OnXLIAreaGroupIDChanging(int value);
    partial void OnXLIAreaGroupIDChanged();
    partial void OnXLIModuleIDChanging(int value);
    partial void OnXLIModuleIDChanged();
    partial void OnAllRolesChanging(bool value);
    partial void OnAllRolesChanged();
    #endregion
		
		public XLIAreaGroupModule()
		{
			this._XLIAreaGMRoles = new EntitySet<XLIAreaGMRole>(new Action<XLIAreaGMRole>(this.attach_XLIAreaGMRoles), new Action<XLIAreaGMRole>(this.detach_XLIAreaGMRoles));
			this._XLIAreaGroup = default(EntityRef<XLIAreaGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaGroupModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIAreaGroupModuleID
		{
			get
			{
				return this._XLIAreaGroupModuleID;
			}
			set
			{
				if ((this._XLIAreaGroupModuleID != value))
				{
					this.OnXLIAreaGroupModuleIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaGroupModuleID = value;
					this.SendPropertyChanged("XLIAreaGroupModuleID");
					this.OnXLIAreaGroupModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaGroupID", DbType="Int NOT NULL")]
		public int XLIAreaGroupID
		{
			get
			{
				return this._XLIAreaGroupID;
			}
			set
			{
				if ((this._XLIAreaGroupID != value))
				{
					if (this._XLIAreaGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXLIAreaGroupIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaGroupID = value;
					this.SendPropertyChanged("XLIAreaGroupID");
					this.OnXLIAreaGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIModuleID", DbType="Int NOT NULL")]
		public int XLIModuleID
		{
			get
			{
				return this._XLIModuleID;
			}
			set
			{
				if ((this._XLIModuleID != value))
				{
					this.OnXLIModuleIDChanging(value);
					this.SendPropertyChanging();
					this._XLIModuleID = value;
					this.SendPropertyChanged("XLIModuleID");
					this.OnXLIModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllRoles", DbType="Bit NOT NULL")]
		public bool AllRoles
		{
			get
			{
				return this._AllRoles;
			}
			set
			{
				if ((this._AllRoles != value))
				{
					this.OnAllRolesChanging(value);
					this.SendPropertyChanging();
					this._AllRoles = value;
					this.SendPropertyChanged("AllRoles");
					this.OnAllRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIAreaGroupModule_XLIAreaGMRole", Storage="_XLIAreaGMRoles", ThisKey="XLIAreaGroupModuleID", OtherKey="XLIAreaGroupModuleID")]
		public EntitySet<XLIAreaGMRole> XLIAreaGMRoles
		{
			get
			{
				return this._XLIAreaGMRoles;
			}
			set
			{
				this._XLIAreaGMRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIAreaGroup_XLIAreaGroupModule", Storage="_XLIAreaGroup", ThisKey="XLIAreaGroupID", OtherKey="XLIAreaGroupID", IsForeignKey=true)]
		public XLIAreaGroup XLIAreaGroup
		{
			get
			{
				return this._XLIAreaGroup.Entity;
			}
			set
			{
				XLIAreaGroup previousValue = this._XLIAreaGroup.Entity;
				if (((previousValue != value) 
							|| (this._XLIAreaGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XLIAreaGroup.Entity = null;
						previousValue.XLIAreaGroupModules.Remove(this);
					}
					this._XLIAreaGroup.Entity = value;
					if ((value != null))
					{
						value.XLIAreaGroupModules.Add(this);
						this._XLIAreaGroupID = value.XLIAreaGroupID;
					}
					else
					{
						this._XLIAreaGroupID = default(int);
					}
					this.SendPropertyChanged("XLIAreaGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XLIAreaGMRoles(XLIAreaGMRole entity)
		{
			this.SendPropertyChanging();
			entity.XLIAreaGroupModule = this;
		}
		
		private void detach_XLIAreaGMRoles(XLIAreaGMRole entity)
		{
			this.SendPropertyChanging();
			entity.XLIAreaGroupModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIAreaGMRole")]
	public partial class XLIAreaGMRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIAreaGMRoleID;
		
		private int _RoleID;
		
		private int _XLIAreaGroupModuleID;
		
		private EntityRef<XLIAreaGroupModule> _XLIAreaGroupModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIAreaGMRoleIDChanging(int value);
    partial void OnXLIAreaGMRoleIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnXLIAreaGroupModuleIDChanging(int value);
    partial void OnXLIAreaGroupModuleIDChanged();
    #endregion
		
		public XLIAreaGMRole()
		{
			this._XLIAreaGroupModule = default(EntityRef<XLIAreaGroupModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaGMRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIAreaGMRoleID
		{
			get
			{
				return this._XLIAreaGMRoleID;
			}
			set
			{
				if ((this._XLIAreaGMRoleID != value))
				{
					this.OnXLIAreaGMRoleIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaGMRoleID = value;
					this.SendPropertyChanged("XLIAreaGMRoleID");
					this.OnXLIAreaGMRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaGroupModuleID", DbType="Int NOT NULL")]
		public int XLIAreaGroupModuleID
		{
			get
			{
				return this._XLIAreaGroupModuleID;
			}
			set
			{
				if ((this._XLIAreaGroupModuleID != value))
				{
					if (this._XLIAreaGroupModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXLIAreaGroupModuleIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaGroupModuleID = value;
					this.SendPropertyChanged("XLIAreaGroupModuleID");
					this.OnXLIAreaGroupModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIAreaGroupModule_XLIAreaGMRole", Storage="_XLIAreaGroupModule", ThisKey="XLIAreaGroupModuleID", OtherKey="XLIAreaGroupModuleID", IsForeignKey=true)]
		public XLIAreaGroupModule XLIAreaGroupModule
		{
			get
			{
				return this._XLIAreaGroupModule.Entity;
			}
			set
			{
				XLIAreaGroupModule previousValue = this._XLIAreaGroupModule.Entity;
				if (((previousValue != value) 
							|| (this._XLIAreaGroupModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XLIAreaGroupModule.Entity = null;
						previousValue.XLIAreaGMRoles.Remove(this);
					}
					this._XLIAreaGroupModule.Entity = value;
					if ((value != null))
					{
						value.XLIAreaGMRoles.Add(this);
						this._XLIAreaGroupModuleID = value.XLIAreaGroupModuleID;
					}
					else
					{
						this._XLIAreaGroupModuleID = default(int);
					}
					this.SendPropertyChanged("XLIAreaGroupModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIGroupUser")]
	public partial class XLIGroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIGroupUserID;
		
		private int _XLIGroupID;
		
		private int _UserID;
		
		private EntityRef<XLIGroupEntity> _XLIGroupEntity;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIGroupUserIDChanging(int value);
    partial void OnXLIGroupUserIDChanged();
    partial void OnXLIGroupIDChanging(int value);
    partial void OnXLIGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public XLIGroupUser()
		{
			this._XLIGroupEntity = default(EntityRef<XLIGroupEntity>);
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIGroupUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIGroupUserID
		{
			get
			{
				return this._XLIGroupUserID;
			}
			set
			{
				if ((this._XLIGroupUserID != value))
				{
					this.OnXLIGroupUserIDChanging(value);
					this.SendPropertyChanging();
					this._XLIGroupUserID = value;
					this.SendPropertyChanged("XLIGroupUserID");
					this.OnXLIGroupUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIGroupID", DbType="Int NOT NULL")]
		public int XLIGroupID
		{
			get
			{
				return this._XLIGroupID;
			}
			set
			{
				if ((this._XLIGroupID != value))
				{
					if (this._XLIGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXLIGroupIDChanging(value);
					this.SendPropertyChanging();
					this._XLIGroupID = value;
					this.SendPropertyChanged("XLIGroupID");
					this.OnXLIGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIGroupEntity_XLIGroupUser", Storage="_XLIGroupEntity", ThisKey="XLIGroupID", OtherKey="XLIGroupID", IsForeignKey=true)]
		public XLIGroupEntity XLIGroupEntity
		{
			get
			{
				return this._XLIGroupEntity.Entity;
			}
			set
			{
				XLIGroupEntity previousValue = this._XLIGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._XLIGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XLIGroupEntity.Entity = null;
						previousValue.XLIGroupUsers.Remove(this);
					}
					this._XLIGroupEntity.Entity = value;
					if ((value != null))
					{
						value.XLIGroupUsers.Add(this);
						this._XLIGroupID = value.XLIGroupID;
					}
					else
					{
						this._XLIGroupID = default(int);
					}
					this.SendPropertyChanged("XLIGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_XLIGroupUser", Storage="_UserEntity", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.XLIGroupUsers.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.XLIGroupUsers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolManagementView")]
	public partial class UserContext_SchoolManagementView
	{
		
		private System.Nullable<int> _UserSchoolID;
		
		private int _UserID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private int _RoleID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _SchoolName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _DistrictName;
		
		private string _StateName;
		
		private string _RoleName;
		
		public UserContext_SchoolManagementView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSchoolID", DbType="Int")]
		public System.Nullable<int> UserSchoolID
		{
			get
			{
				return this._UserSchoolID;
			}
			set
			{
				if ((this._UserSchoolID != value))
				{
					this._UserSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(50)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictMeta")]
	public partial class DistrictMetaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictMetaID;
		
		private int _DistrictID;
		
		private string _Name;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictMetaIDChanging(int value);
    partial void OnDistrictMetaIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public DistrictMetaEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictMetaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictMetaID
		{
			get
			{
				return this._DistrictMetaID;
			}
			set
			{
				if ((this._DistrictMetaID != value))
				{
					this.OnDistrictMetaIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictMetaID = value;
					this.SendPropertyChanged("DistrictMetaID");
					this.OnDistrictMetaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(500) NOT NULL")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMeta")]
	public partial class UserMetaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserMetaID;
		
		private int _UserID;
		
		private string _MetaValue;
		
		private string _MetaLabel;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserMetaIDChanging(int value);
    partial void OnUserMetaIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnMetaValueChanging(string value);
    partial void OnMetaValueChanged();
    partial void OnMetaLabelChanging(string value);
    partial void OnMetaLabelChanged();
    #endregion
		
		public UserMetaEntity()
		{
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMetaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserMetaID
		{
			get
			{
				return this._UserMetaID;
			}
			set
			{
				if ((this._UserMetaID != value))
				{
					this.OnUserMetaIDChanging(value);
					this.SendPropertyChanging();
					this._UserMetaID = value;
					this.SendPropertyChanged("UserMetaID");
					this.OnUserMetaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaValue", DbType="VarChar(MAX)")]
		public string MetaValue
		{
			get
			{
				return this._MetaValue;
			}
			set
			{
				if ((this._MetaValue != value))
				{
					this.OnMetaValueChanging(value);
					this.SendPropertyChanging();
					this._MetaValue = value;
					this.SendPropertyChanged("MetaValue");
					this.OnMetaValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaLabel", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MetaLabel
		{
			get
			{
				return this._MetaLabel;
			}
			set
			{
				if ((this._MetaLabel != value))
				{
					this.OnMetaLabelChanging(value);
					this.SendPropertyChanging();
					this._MetaLabel = value;
					this.SendPropertyChanged("MetaLabel");
					this.OnMetaLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_UserMetaEntity", Storage="_UserEntity", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.UserMetaEntities.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.UserMetaEntities.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoFocusGroupConfig")]
	public partial class AutoFocusGroupConfigEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutoFocusGroupConfigID;
		
		private int _DistrictID;
		
		private string _AutoGroupType;
		
		private string _JSONConfig;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.TimeSpan _ScheduledTime;
		
		private System.Nullable<System.DateTime> _LastRunDate;
		
		private bool _Run;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutoFocusGroupConfigIDChanging(int value);
    partial void OnAutoFocusGroupConfigIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnAutoGroupTypeChanging(string value);
    partial void OnAutoGroupTypeChanged();
    partial void OnJSONConfigChanging(string value);
    partial void OnJSONConfigChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnScheduledTimeChanging(System.TimeSpan value);
    partial void OnScheduledTimeChanged();
    partial void OnLastRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRunDateChanged();
    partial void OnRunChanging(bool value);
    partial void OnRunChanged();
    #endregion
		
		public AutoFocusGroupConfigEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoFocusGroupConfigID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutoFocusGroupConfigID
		{
			get
			{
				return this._AutoFocusGroupConfigID;
			}
			set
			{
				if ((this._AutoFocusGroupConfigID != value))
				{
					this.OnAutoFocusGroupConfigIDChanging(value);
					this.SendPropertyChanging();
					this._AutoFocusGroupConfigID = value;
					this.SendPropertyChanged("AutoFocusGroupConfigID");
					this.OnAutoFocusGroupConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoGroupType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AutoGroupType
		{
			get
			{
				return this._AutoGroupType;
			}
			set
			{
				if ((this._AutoGroupType != value))
				{
					this.OnAutoGroupTypeChanging(value);
					this.SendPropertyChanging();
					this._AutoGroupType = value;
					this.SendPropertyChanged("AutoGroupType");
					this.OnAutoGroupTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSONConfig", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSONConfig
		{
			get
			{
				return this._JSONConfig;
			}
			set
			{
				if ((this._JSONConfig != value))
				{
					this.OnJSONConfigChanging(value);
					this.SendPropertyChanging();
					this._JSONConfig = value;
					this.SendPropertyChanged("JSONConfig");
					this.OnJSONConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledTime", DbType="Time NOT NULL")]
		public System.TimeSpan ScheduledTime
		{
			get
			{
				return this._ScheduledTime;
			}
			set
			{
				if ((this._ScheduledTime != value))
				{
					this.OnScheduledTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledTime = value;
					this.SendPropertyChanged("ScheduledTime");
					this.OnScheduledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRunDate
		{
			get
			{
				return this._LastRunDate;
			}
			set
			{
				if ((this._LastRunDate != value))
				{
					this.OnLastRunDateChanging(value);
					this.SendPropertyChanging();
					this._LastRunDate = value;
					this.SendPropertyChanged("LastRunDate");
					this.OnLastRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Run", DbType="Bit NOT NULL")]
		public bool Run
		{
			get
			{
				return this._Run;
			}
			set
			{
				if ((this._Run != value))
				{
					this.OnRunChanging(value);
					this.SendPropertyChanging();
					this._Run = value;
					this.SendPropertyChanged("Run");
					this.OnRunChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserStudentView")]
	public partial class UserStudentView
	{
		
		private int _UserID;
		
		private int _SchoolID;
		
		private int _ClassID;
		
		private System.Nullable<int> _TeacherID;
		
		private System.Nullable<int> _StudentID;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private string _TermName;
		
		private string _TeacherName;
		
		private string _ModifiedBy;
		
		public UserStudentView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this._TeacherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TermName
		{
			get
			{
				return this._TermName;
			}
			set
			{
				if ((this._TermName != value))
				{
					this._TermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(101)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SharingGroup")]
	public partial class SharingGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SharingGroupID;
		
		private string _Name;
		
		private bool _Active;
		
		private int _DistrictID;
		
		private System.Nullable<bool> _IsPublished;
		
		private System.Nullable<System.DateTime> _PublishTime;
		
		private System.Nullable<int> _PublisherId;
		
		private int _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntitySet<SharingGroupUserEntity> _SharingGroupUserEntities;
		
		private EntitySet<SharingReportEntity> _SharingReportEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSharingGroupIDChanging(int value);
    partial void OnSharingGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnIsPublishedChanging(System.Nullable<bool> value);
    partial void OnIsPublishedChanged();
    partial void OnPublishTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishTimeChanged();
    partial void OnPublisherIdChanging(System.Nullable<int> value);
    partial void OnPublisherIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public SharingGroupEntity()
		{
			this._SharingGroupUserEntities = new EntitySet<SharingGroupUserEntity>(new Action<SharingGroupUserEntity>(this.attach_SharingGroupUserEntities), new Action<SharingGroupUserEntity>(this.detach_SharingGroupUserEntities));
			this._SharingReportEntities = new EntitySet<SharingReportEntity>(new Action<SharingReportEntity>(this.attach_SharingReportEntities), new Action<SharingReportEntity>(this.detach_SharingReportEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SharingGroupID
		{
			get
			{
				return this._SharingGroupID;
			}
			set
			{
				if ((this._SharingGroupID != value))
				{
					this.OnSharingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SharingGroupID = value;
					this.SendPropertyChanged("SharingGroupID");
					this.OnSharingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTime
		{
			get
			{
				return this._PublishTime;
			}
			set
			{
				if ((this._PublishTime != value))
				{
					this.OnPublishTimeChanging(value);
					this.SendPropertyChanging();
					this._PublishTime = value;
					this.SendPropertyChanged("PublishTime");
					this.OnPublishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherId", DbType="Int")]
		public System.Nullable<int> PublisherId
		{
			get
			{
				return this._PublisherId;
			}
			set
			{
				if ((this._PublisherId != value))
				{
					this.OnPublisherIdChanging(value);
					this.SendPropertyChanging();
					this._PublisherId = value;
					this.SendPropertyChanged("PublisherId");
					this.OnPublisherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SharingGroupEntity_SharingGroupUserEntity", Storage="_SharingGroupUserEntities", ThisKey="SharingGroupID", OtherKey="SharingGroupID")]
		public EntitySet<SharingGroupUserEntity> SharingGroupUserEntities
		{
			get
			{
				return this._SharingGroupUserEntities;
			}
			set
			{
				this._SharingGroupUserEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SharingGroupEntity_SharingReportEntity", Storage="_SharingReportEntities", ThisKey="SharingGroupID", OtherKey="SharingGroupID")]
		public EntitySet<SharingReportEntity> SharingReportEntities
		{
			get
			{
				return this._SharingReportEntities;
			}
			set
			{
				this._SharingReportEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SharingGroupUserEntities(SharingGroupUserEntity entity)
		{
			this.SendPropertyChanging();
			entity.SharingGroupEntity = this;
		}
		
		private void detach_SharingGroupUserEntities(SharingGroupUserEntity entity)
		{
			this.SendPropertyChanging();
			entity.SharingGroupEntity = null;
		}
		
		private void attach_SharingReportEntities(SharingReportEntity entity)
		{
			this.SendPropertyChanging();
			entity.SharingGroupEntity = this;
		}
		
		private void detach_SharingReportEntities(SharingReportEntity entity)
		{
			this.SendPropertyChanging();
			entity.SharingGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SharingGroupUser")]
	public partial class SharingGroupUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SharingGroupUserID;
		
		private int _SharingGroupID;
		
		private int _UserID;
		
		private EntityRef<SharingGroupEntity> _SharingGroupEntity;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSharingGroupUserIDChanging(int value);
    partial void OnSharingGroupUserIDChanged();
    partial void OnSharingGroupIDChanging(int value);
    partial void OnSharingGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public SharingGroupUserEntity()
		{
			this._SharingGroupEntity = default(EntityRef<SharingGroupEntity>);
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SharingGroupUserID
		{
			get
			{
				return this._SharingGroupUserID;
			}
			set
			{
				if ((this._SharingGroupUserID != value))
				{
					this.OnSharingGroupUserIDChanging(value);
					this.SendPropertyChanging();
					this._SharingGroupUserID = value;
					this.SendPropertyChanged("SharingGroupUserID");
					this.OnSharingGroupUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupID", DbType="Int NOT NULL")]
		public int SharingGroupID
		{
			get
			{
				return this._SharingGroupID;
			}
			set
			{
				if ((this._SharingGroupID != value))
				{
					if (this._SharingGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSharingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SharingGroupID = value;
					this.SendPropertyChanged("SharingGroupID");
					this.OnSharingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SharingGroupEntity_SharingGroupUserEntity", Storage="_SharingGroupEntity", ThisKey="SharingGroupID", OtherKey="SharingGroupID", IsForeignKey=true)]
		public SharingGroupEntity SharingGroupEntity
		{
			get
			{
				return this._SharingGroupEntity.Entity;
			}
			set
			{
				SharingGroupEntity previousValue = this._SharingGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._SharingGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SharingGroupEntity.Entity = null;
						previousValue.SharingGroupUserEntities.Remove(this);
					}
					this._SharingGroupEntity.Entity = value;
					if ((value != null))
					{
						value.SharingGroupUserEntities.Add(this);
						this._SharingGroupID = value.SharingGroupID;
					}
					else
					{
						this._SharingGroupID = default(int);
					}
					this.SendPropertyChanged("SharingGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SharingGroupUserEntity", Storage="_UserEntity", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.SharingGroupUserEntities.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.SharingGroupUserEntities.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SharingReport")]
	public partial class SharingReportEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SharingReportID;
		
		private System.Nullable<int> _SharingGroupID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _RoleID;
		
		private System.Nullable<int> _SavedReportID;
		
		private System.Nullable<int> _ImDashboardID;
		
		private System.Nullable<int> _ArDashboardID;
		
		private EntityRef<SharingGroupEntity> _SharingGroupEntity;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSharingReportIDChanging(int value);
    partial void OnSharingReportIDChanged();
    partial void OnSharingGroupIDChanging(System.Nullable<int> value);
    partial void OnSharingGroupIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnSavedReportIDChanging(System.Nullable<int> value);
    partial void OnSavedReportIDChanged();
    partial void OnImDashboardIDChanging(System.Nullable<int> value);
    partial void OnImDashboardIDChanged();
    partial void OnArDashboardIDChanging(System.Nullable<int> value);
    partial void OnArDashboardIDChanged();
    #endregion
		
		public SharingReportEntity()
		{
			this._SharingGroupEntity = default(EntityRef<SharingGroupEntity>);
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SharingReportID
		{
			get
			{
				return this._SharingReportID;
			}
			set
			{
				if ((this._SharingReportID != value))
				{
					this.OnSharingReportIDChanging(value);
					this.SendPropertyChanging();
					this._SharingReportID = value;
					this.SendPropertyChanged("SharingReportID");
					this.OnSharingReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupID", DbType="Int")]
		public System.Nullable<int> SharingGroupID
		{
			get
			{
				return this._SharingGroupID;
			}
			set
			{
				if ((this._SharingGroupID != value))
				{
					if (this._SharingGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSharingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SharingGroupID = value;
					this.SendPropertyChanged("SharingGroupID");
					this.OnSharingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedReportID", DbType="Int")]
		public System.Nullable<int> SavedReportID
		{
			get
			{
				return this._SavedReportID;
			}
			set
			{
				if ((this._SavedReportID != value))
				{
					this.OnSavedReportIDChanging(value);
					this.SendPropertyChanging();
					this._SavedReportID = value;
					this.SendPropertyChanged("SavedReportID");
					this.OnSavedReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImDashboardID", DbType="Int")]
		public System.Nullable<int> ImDashboardID
		{
			get
			{
				return this._ImDashboardID;
			}
			set
			{
				if ((this._ImDashboardID != value))
				{
					this.OnImDashboardIDChanging(value);
					this.SendPropertyChanging();
					this._ImDashboardID = value;
					this.SendPropertyChanged("ImDashboardID");
					this.OnImDashboardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArDashboardID", DbType="Int")]
		public System.Nullable<int> ArDashboardID
		{
			get
			{
				return this._ArDashboardID;
			}
			set
			{
				if ((this._ArDashboardID != value))
				{
					this.OnArDashboardIDChanging(value);
					this.SendPropertyChanging();
					this._ArDashboardID = value;
					this.SendPropertyChanged("ArDashboardID");
					this.OnArDashboardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SharingGroupEntity_SharingReportEntity", Storage="_SharingGroupEntity", ThisKey="SharingGroupID", OtherKey="SharingGroupID", IsForeignKey=true, DeleteRule="CASCADE")]
		public SharingGroupEntity SharingGroupEntity
		{
			get
			{
				return this._SharingGroupEntity.Entity;
			}
			set
			{
				SharingGroupEntity previousValue = this._SharingGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._SharingGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SharingGroupEntity.Entity = null;
						previousValue.SharingReportEntities.Remove(this);
					}
					this._SharingGroupEntity.Entity = value;
					if ((value != null))
					{
						value.SharingReportEntities.Add(this);
						this._SharingGroupID = value.SharingGroupID;
					}
					else
					{
						this._SharingGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SharingGroupEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SharingReportEntity", Storage="_UserEntity", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.SharingReportEntities.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.SharingReportEntities.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SharingReportProperty")]
	public partial class SharingReportPropertyEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SharingReportPropertyID;
		
		private int _UserID;
		
		private bool _Favorite;
		
		private bool _Visibility;
		
		private System.Nullable<int> _SavedReportID;
		
		private System.Nullable<int> _ImDashboardID;
		
		private System.Nullable<int> _ArDashboardID;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<UserEntity> _UserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSharingReportPropertyIDChanging(int value);
    partial void OnSharingReportPropertyIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFavoriteChanging(bool value);
    partial void OnFavoriteChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnSavedReportIDChanging(System.Nullable<int> value);
    partial void OnSavedReportIDChanged();
    partial void OnImDashboardIDChanging(System.Nullable<int> value);
    partial void OnImDashboardIDChanged();
    partial void OnArDashboardIDChanging(System.Nullable<int> value);
    partial void OnArDashboardIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public SharingReportPropertyEntity()
		{
			this._UserEntity = default(EntityRef<UserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingReportPropertyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SharingReportPropertyID
		{
			get
			{
				return this._SharingReportPropertyID;
			}
			set
			{
				if ((this._SharingReportPropertyID != value))
				{
					this.OnSharingReportPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._SharingReportPropertyID = value;
					this.SendPropertyChanged("SharingReportPropertyID");
					this.OnSharingReportPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Favorite", DbType="Bit NOT NULL")]
		public bool Favorite
		{
			get
			{
				return this._Favorite;
			}
			set
			{
				if ((this._Favorite != value))
				{
					this.OnFavoriteChanging(value);
					this.SendPropertyChanging();
					this._Favorite = value;
					this.SendPropertyChanged("Favorite");
					this.OnFavoriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
		public bool Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavedReportID", DbType="Int")]
		public System.Nullable<int> SavedReportID
		{
			get
			{
				return this._SavedReportID;
			}
			set
			{
				if ((this._SavedReportID != value))
				{
					this.OnSavedReportIDChanging(value);
					this.SendPropertyChanging();
					this._SavedReportID = value;
					this.SendPropertyChanged("SavedReportID");
					this.OnSavedReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImDashboardID", DbType="Int")]
		public System.Nullable<int> ImDashboardID
		{
			get
			{
				return this._ImDashboardID;
			}
			set
			{
				if ((this._ImDashboardID != value))
				{
					this.OnImDashboardIDChanging(value);
					this.SendPropertyChanging();
					this._ImDashboardID = value;
					this.SendPropertyChanged("ImDashboardID");
					this.OnImDashboardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArDashboardID", DbType="Int")]
		public System.Nullable<int> ArDashboardID
		{
			get
			{
				return this._ArDashboardID;
			}
			set
			{
				if ((this._ArDashboardID != value))
				{
					this.OnArDashboardIDChanging(value);
					this.SendPropertyChanging();
					this._ArDashboardID = value;
					this.SendPropertyChanged("ArDashboardID");
					this.OnArDashboardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserEntity_SharingReportPropertyEntity", Storage="_UserEntity", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public UserEntity UserEntity
		{
			get
			{
				return this._UserEntity.Entity;
			}
			set
			{
				UserEntity previousValue = this._UserEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserEntity.Entity = null;
						previousValue.SharingReportPropertyEntities.Remove(this);
					}
					this._UserEntity.Entity = value;
					if ((value != null))
					{
						value.SharingReportPropertyEntities.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetStateByDistrictNetWorkAdminIDResult
	{
		
		private int _StateID;
		
		private string _Name;
		
		private string _Code;
		
		private int _DefaultTimeZoneID;
		
		private string _ZipRange;
		
		public GetStateByDistrictNetWorkAdminIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTimeZoneID", DbType="Int NOT NULL")]
		public int DefaultTimeZoneID
		{
			get
			{
				return this._DefaultTimeZoneID;
			}
			set
			{
				if ((this._DefaultTimeZoneID != value))
				{
					this._DefaultTimeZoneID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipRange", DbType="VarChar(100)")]
		public string ZipRange
		{
			get
			{
				return this._ZipRange;
			}
			set
			{
				if ((this._ZipRange != value))
				{
					this._ZipRange = value;
				}
			}
		}
	}
	
	public partial class GetTeacherBySchoolIDAndDistricttermIDResult
	{
		
		private int _UserID;
		
		private string _FullName;
		
		public GetTeacherBySchoolIDAndDistricttermIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(102)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
	}
	
	public partial class GetUserLoginFailedCountResult
	{
		
		private System.Nullable<int> _LoginFailedCount;
		
		public GetUserLoginFailedCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginFailedCount", DbType="Int")]
		public System.Nullable<int> LoginFailedCount
		{
			get
			{
				return this._LoginFailedCount;
			}
			set
			{
				if ((this._LoginFailedCount != value))
				{
					this._LoginFailedCount = value;
				}
			}
		}
	}
	
	public partial class GetAllUserStartWithCodeByDistrictIDResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private int _RoleID;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _TeacherID;
		
		private string _Hint;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _SchoolID;
		
		private string _Privileges;
		
		private System.Nullable<int> _DistrictGroupID;
		
		private System.Nullable<bool> _APIaccess;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _Email;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private string _Phone;
		
		private System.Nullable<int> _AddedByUserID;
		
		private string _Code;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.Guid> _GUIDcode;
		
		private string _AltCode;
		
		private string _SISID;
		
		private string _HashedPassword;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _HasTemporaryPassword;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _PasswordLastSetDate;
		
		private System.Nullable<System.DateTime> _DateConfirmedActive;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _ModifiedUser;
		
		private string _ModifiedBy;
		
		private string _MessageNumber;
		
		private System.Nullable<System.DateTime> _TermOfUseAccepted;
		
		public GetAllUserStartWithCodeByDistrictIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this._TeacherID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hint", DbType="VarChar(100)")]
		public string Hint
		{
			get
			{
				return this._Hint;
			}
			set
			{
				if ((this._Hint != value))
				{
					this._Hint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Privileges]", Storage="_Privileges", DbType="VarChar(100)")]
		public string Privileges
		{
			get
			{
				return this._Privileges;
			}
			set
			{
				if ((this._Privileges != value))
				{
					this._Privileges = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictGroupID", DbType="Int")]
		public System.Nullable<int> DistrictGroupID
		{
			get
			{
				return this._DistrictGroupID;
			}
			set
			{
				if ((this._DistrictGroupID != value))
				{
					this._DistrictGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIaccess", DbType="Bit")]
		public System.Nullable<bool> APIaccess
		{
			get
			{
				return this._APIaccess;
			}
			set
			{
				if ((this._APIaccess != value))
				{
					this._APIaccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedByUserID", DbType="Int")]
		public System.Nullable<int> AddedByUserID
		{
			get
			{
				return this._AddedByUserID;
			}
			set
			{
				if ((this._AddedByUserID != value))
				{
					this._AddedByUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUIDcode", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUIDcode
		{
			get
			{
				return this._GUIDcode;
			}
			set
			{
				if ((this._GUIDcode != value))
				{
					this._GUIDcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltCode", DbType="VarChar(100)")]
		public string AltCode
		{
			get
			{
				return this._AltCode;
			}
			set
			{
				if ((this._AltCode != value))
				{
					this._AltCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISID", DbType="VarChar(50)")]
		public string SISID
		{
			get
			{
				return this._SISID;
			}
			set
			{
				if ((this._SISID != value))
				{
					this._SISID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="VarChar(100)")]
		public string HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this._HashedPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="VarChar(500)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this._PasswordQuestion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="VarChar(500)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this._PasswordAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTemporaryPassword", DbType="Bit NOT NULL")]
		public bool HasTemporaryPassword
		{
			get
			{
				return this._HasTemporaryPassword;
			}
			set
			{
				if ((this._HasTemporaryPassword != value))
				{
					this._HasTemporaryPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="Date NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordLastSetDate", DbType="Date NOT NULL")]
		public System.DateTime PasswordLastSetDate
		{
			get
			{
				return this._PasswordLastSetDate;
			}
			set
			{
				if ((this._PasswordLastSetDate != value))
				{
					this._PasswordLastSetDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateConfirmedActive", DbType="Date")]
		public System.Nullable<System.DateTime> DateConfirmedActive
		{
			get
			{
				return this._DateConfirmedActive;
			}
			set
			{
				if ((this._DateConfirmedActive != value))
				{
					this._DateConfirmedActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUser", DbType="Int")]
		public System.Nullable<int> ModifiedUser
		{
			get
			{
				return this._ModifiedUser;
			}
			set
			{
				if ((this._ModifiedUser != value))
				{
					this._ModifiedUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageNumber", DbType="VarChar(50)")]
		public string MessageNumber
		{
			get
			{
				return this._MessageNumber;
			}
			set
			{
				if ((this._MessageNumber != value))
				{
					this._MessageNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermOfUseAccepted", DbType="DateTime")]
		public System.Nullable<System.DateTime> TermOfUseAccepted
		{
			get
			{
				return this._TermOfUseAccepted;
			}
			set
			{
				if ((this._TermOfUseAccepted != value))
				{
					this._TermOfUseAccepted = value;
				}
			}
		}
	}
	
	public partial class fnGetStateForUserResult
	{
		
		private System.Nullable<int> _StateId;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<int> _DefaultTimeZoneID;
		
		private string _ZipRange;
		
		private System.Nullable<bool> _International;
		
		public fnGetStateForUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
		public System.Nullable<int> StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					this._StateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(2)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTimeZoneID", DbType="Int")]
		public System.Nullable<int> DefaultTimeZoneID
		{
			get
			{
				return this._DefaultTimeZoneID;
			}
			set
			{
				if ((this._DefaultTimeZoneID != value))
				{
					this._DefaultTimeZoneID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipRange", DbType="VarChar(100)")]
		public string ZipRange
		{
			get
			{
				return this._ZipRange;
			}
			set
			{
				if ((this._ZipRange != value))
				{
					this._ZipRange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_International", DbType="Bit")]
		public System.Nullable<bool> International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this._International = value;
				}
			}
		}
	}
	
	public partial class GetUserAvailableForAddGroupResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _UserStatusID;
		
		private int _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _DistrictID;
		
		private string _GroupName;
		
		private string _SchoolList;
		
		public GetUserAvailableForAddGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(500)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(500)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(100)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolList
		{
			get
			{
				return this._SchoolList;
			}
			set
			{
				if ((this._SchoolList != value))
				{
					this._SchoolList = value;
				}
			}
		}
	}
	
	public partial class GetUserManageByRoleInGroupResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _UserStatusID;
		
		private int _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _DistrictID;
		
		private string _SchoolList;
		
		private string _GroupName;
		
		public GetUserManageByRoleInGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(500)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(500)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolList
		{
			get
			{
				return this._SchoolList;
			}
			set
			{
				if ((this._SchoolList != value))
				{
					this._SchoolList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
	}
	
	public partial class GetRolesForManageUserGroupResult
	{
		
		private System.Nullable<int> _RoleID;
		
		private string _RoleName;
		
		public GetRolesForManageUserGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
	}
	
	public partial class GetUserManageByRoleResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private int _UserStatusID;
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private string _RoleName;
		
		private string _StateName;
		
		private int _RoleID;
		
		private string _SchoolIDList;
		
		private string _SchoolList;
		
		private int _StateID;
		
		private string _SchoolList1;
		
		public GetUserManageByRoleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int NOT NULL")]
		public int UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolIDList", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolIDList
		{
			get
			{
				return this._SchoolIDList;
			}
			set
			{
				if ((this._SchoolIDList != value))
				{
					this._SchoolIDList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolList
		{
			get
			{
				return this._SchoolList;
			}
			set
			{
				if ((this._SchoolList != value))
				{
					this._SchoolList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList1", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolList1
		{
			get
			{
				return this._SchoolList1;
			}
			set
			{
				if ((this._SchoolList1 != value))
				{
					this._SchoolList1 = value;
				}
			}
		}
	}
	
	public partial class GetTeacherForAddClassResult
	{
		
		private int _UserId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		public GetTeacherForAddClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	public partial class GetTeacherSchoolByTermResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		public GetTeacherSchoolByTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
	}
	
	public partial class GetAllTeacherBySchoolIDAndDistrictTermIDResult
	{
		
		private int _UserID;
		
		private string _FullName;
		
		public GetAllTeacherBySchoolIDAndDistrictTermIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(102)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
	}
	
	public partial class GetStudentTestDistrictTermResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _DistrictTermID;
		
		private string _DistrictTermName;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<int> _ClassId;
		
		private string _ClassName;
		
		private System.Nullable<int> _SchoolID;
		
		private string _SchoolName;
		
		private System.Nullable<int> _StudentID;
		
		private string _FirstName;
		
		private string _LastName;
		
		public GetStudentTestDistrictTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(500)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(500)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(500)")]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this._DateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="Int")]
		public System.Nullable<int> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this._ClassId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(500)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(500)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(500)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(500)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
	}
	
	public partial class XLICreateGroupResult
	{
		
		private System.Nullable<decimal> _XLIGroupID;
		
		public XLICreateGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIGroupID", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> XLIGroupID
		{
			get
			{
				return this._XLIGroupID;
			}
			set
			{
				if ((this._XLIGroupID != value))
				{
					this._XLIGroupID = value;
				}
			}
		}
	}
	
	public partial class GetAvailableClassesBySchoolAndStudentIdResult
	{
		
		private int _ClassID;
		
		private string _SchoolName;
		
		private string _ClassName;
		
		private string _TermName;
		
		private string _TeacherName;
		
		private int _TotalCount;
		
		public GetAvailableClassesBySchoolAndStudentIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TermName
		{
			get
			{
				return this._TermName;
			}
			set
			{
				if ((this._TermName != value))
				{
					this._TermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCount", DbType="Int NOT NULL")]
		public int TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if ((this._TotalCount != value))
				{
					this._TotalCount = value;
				}
			}
		}
	}
	
	public partial class SP_SharingGroup_GetUserAvailableAddSharingGroupResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _UserStatusName;
		
		private int _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _DistrictID;
		
		private string _SchoolList;
		
		private string _SharingGroupName;
		
		public SP_SharingGroup_GetUserAvailableAddSharingGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(500)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(500)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusName", DbType="VarChar(50)")]
		public string UserStatusName
		{
			get
			{
				return this._UserStatusName;
			}
			set
			{
				if ((this._UserStatusName != value))
				{
					this._UserStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList", DbType="NVarChar(MAX)")]
		public string SchoolList
		{
			get
			{
				return this._SchoolList;
			}
			set
			{
				if ((this._SchoolList != value))
				{
					this._SchoolList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupName", DbType="NVarChar(MAX)")]
		public string SharingGroupName
		{
			get
			{
				return this._SharingGroupName;
			}
			set
			{
				if ((this._SharingGroupName != value))
				{
					this._SharingGroupName = value;
				}
			}
		}
	}
	
	public partial class SP_SharingGroup_GetUserInSharingGroupResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _UserStatusName;
		
		private int _RoleID;
		
		private string _RoleName;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _SharingGroupID;
		
		private string _SchoolList;
		
		private string _SharingGroupName;
		
		public SP_SharingGroup_GetUserInSharingGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(500)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(500)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(500)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusName", DbType="VarChar(50)")]
		public string UserStatusName
		{
			get
			{
				return this._UserStatusName;
			}
			set
			{
				if ((this._UserStatusName != value))
				{
					this._UserStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupID", DbType="Int")]
		public System.Nullable<int> SharingGroupID
		{
			get
			{
				return this._SharingGroupID;
			}
			set
			{
				if ((this._SharingGroupID != value))
				{
					this._SharingGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolList", DbType="NVarChar(MAX)")]
		public string SchoolList
		{
			get
			{
				return this._SchoolList;
			}
			set
			{
				if ((this._SchoolList != value))
				{
					this._SchoolList = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupName", DbType="NVarChar(MAX)")]
		public string SharingGroupName
		{
			get
			{
				return this._SharingGroupName;
			}
			set
			{
				if ((this._SharingGroupName != value))
				{
					this._SharingGroupName = value;
				}
			}
		}
	}
	
	public partial class SP_SharingGroup_GetSharingGroupsResult
	{
		
		private System.Nullable<int> _SharingGroupID;
		
		private string _Name;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _DistrictID;
		
		private string _OwnerName;
		
		private System.Nullable<bool> _IsPublished;
		
		private System.Nullable<int> _CreatedBy;
		
		private string _StrUserGroupName;
		
		public SP_SharingGroup_GetSharingGroupsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharingGroupID", DbType="Int")]
		public System.Nullable<int> SharingGroupID
		{
			get
			{
				return this._SharingGroupID;
			}
			set
			{
				if ((this._SharingGroupID != value))
				{
					this._SharingGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerName", DbType="VarChar(500)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this._OwnerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this._IsPublished = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrUserGroupName", DbType="VarChar(500)")]
		public string StrUserGroupName
		{
			get
			{
				return this._StrUserGroupName;
			}
			set
			{
				if ((this._StrUserGroupName != value))
				{
					this._StrUserGroupName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
