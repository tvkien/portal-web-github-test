#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdminReportingLog")]
	internal partial class TestAuditDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnswerAuditEntity(AnswerAuditEntity instance);
    partial void UpdateAnswerAuditEntity(AnswerAuditEntity instance);
    partial void DeleteAnswerAuditEntity(AnswerAuditEntity instance);
    partial void InsertAnswerSubAuditEntity(AnswerSubAuditEntity instance);
    partial void UpdateAnswerSubAuditEntity(AnswerSubAuditEntity instance);
    partial void DeleteAnswerSubAuditEntity(AnswerSubAuditEntity instance);
    partial void InsertQTIOnlineTestSessionAnswerAuditEntity(QTIOnlineTestSessionAnswerAuditEntity instance);
    partial void UpdateQTIOnlineTestSessionAnswerAuditEntity(QTIOnlineTestSessionAnswerAuditEntity instance);
    partial void DeleteQTIOnlineTestSessionAnswerAuditEntity(QTIOnlineTestSessionAnswerAuditEntity instance);
    partial void InsertQTIOnlineTestSessionAnswerSubAuditEntity(QTIOnlineTestSessionAnswerSubAuditEntity instance);
    partial void UpdateQTIOnlineTestSessionAnswerSubAuditEntity(QTIOnlineTestSessionAnswerSubAuditEntity instance);
    partial void DeleteQTIOnlineTestSessionAnswerSubAuditEntity(QTIOnlineTestSessionAnswerSubAuditEntity instance);
    #endregion
		
		public TestAuditDataContext() : 
				base(global::LinkIt.BubbleSheetPortal.Data.Properties.Settings.Default.AdminReportingLogConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TestAuditDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestAuditDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestAuditDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestAuditDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<AnswerAuditEntity> AnswerAuditEntities
		{
			get
			{
				return this.GetTable<AnswerAuditEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AnswerSubAuditEntity> AnswerSubAuditEntities
		{
			get
			{
				return this.GetTable<AnswerSubAuditEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QTIOnlineTestSessionAnswerAuditEntity> QTIOnlineTestSessionAnswerAuditEntities
		{
			get
			{
				return this.GetTable<QTIOnlineTestSessionAnswerAuditEntity>();
			}
		}
		
		internal System.Data.Linq.Table<QTIOnlineTestSessionAnswerSubAuditEntity> QTIOnlineTestSessionAnswerSubAuditEntities
		{
			get
			{
				return this.GetTable<QTIOnlineTestSessionAnswerSubAuditEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnswerAudit")]
	internal partial class AnswerAuditEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnswerAuditID;
		
		private int _AnswerID;
		
		private int _UserID;
		
		private System.DateTime _DateTimeStamp;
		
		private System.Nullable<int> _PreviousValue;
		
		private System.Nullable<int> _NewValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerAuditIDChanging(int value);
    partial void OnAnswerAuditIDChanged();
    partial void OnAnswerIDChanging(int value);
    partial void OnAnswerIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateTimeStampChanging(System.DateTime value);
    partial void OnDateTimeStampChanged();
    partial void OnPreviousValueChanging(System.Nullable<int> value);
    partial void OnPreviousValueChanged();
    partial void OnNewValueChanging(System.Nullable<int> value);
    partial void OnNewValueChanged();
    #endregion
		
		public AnswerAuditEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerAuditID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnswerAuditID
		{
			get
			{
				return this._AnswerAuditID;
			}
			set
			{
				if ((this._AnswerAuditID != value))
				{
					this.OnAnswerAuditIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerAuditID = value;
					this.SendPropertyChanged("AnswerAuditID");
					this.OnAnswerAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerID", DbType="Int NOT NULL")]
		public int AnswerID
		{
			get
			{
				return this._AnswerID;
			}
			set
			{
				if ((this._AnswerID != value))
				{
					this.OnAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerID = value;
					this.SendPropertyChanged("AnswerID");
					this.OnAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeStamp
		{
			get
			{
				return this._DateTimeStamp;
			}
			set
			{
				if ((this._DateTimeStamp != value))
				{
					this.OnDateTimeStampChanging(value);
					this.SendPropertyChanging();
					this._DateTimeStamp = value;
					this.SendPropertyChanged("DateTimeStamp");
					this.OnDateTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousValue", DbType="Int")]
		public System.Nullable<int> PreviousValue
		{
			get
			{
				return this._PreviousValue;
			}
			set
			{
				if ((this._PreviousValue != value))
				{
					this.OnPreviousValueChanging(value);
					this.SendPropertyChanging();
					this._PreviousValue = value;
					this.SendPropertyChanged("PreviousValue");
					this.OnPreviousValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="Int")]
		public System.Nullable<int> NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnswerSubAudit")]
	internal partial class AnswerSubAuditEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnswerSubAuditID;
		
		private int _AnswerSubID;
		
		private int _UserID;
		
		private System.DateTime _DateTimeStamp;
		
		private System.Nullable<int> _PreviousValue;
		
		private System.Nullable<int> _NewValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnswerSubAuditIDChanging(int value);
    partial void OnAnswerSubAuditIDChanged();
    partial void OnAnswerSubIDChanging(int value);
    partial void OnAnswerSubIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateTimeStampChanging(System.DateTime value);
    partial void OnDateTimeStampChanged();
    partial void OnPreviousValueChanging(System.Nullable<int> value);
    partial void OnPreviousValueChanged();
    partial void OnNewValueChanging(System.Nullable<int> value);
    partial void OnNewValueChanged();
    #endregion
		
		public AnswerSubAuditEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubAuditID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnswerSubAuditID
		{
			get
			{
				return this._AnswerSubAuditID;
			}
			set
			{
				if ((this._AnswerSubAuditID != value))
				{
					this.OnAnswerSubAuditIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerSubAuditID = value;
					this.SendPropertyChanged("AnswerSubAuditID");
					this.OnAnswerSubAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerSubID", DbType="Int NOT NULL")]
		public int AnswerSubID
		{
			get
			{
				return this._AnswerSubID;
			}
			set
			{
				if ((this._AnswerSubID != value))
				{
					this.OnAnswerSubIDChanging(value);
					this.SendPropertyChanging();
					this._AnswerSubID = value;
					this.SendPropertyChanged("AnswerSubID");
					this.OnAnswerSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeStamp
		{
			get
			{
				return this._DateTimeStamp;
			}
			set
			{
				if ((this._DateTimeStamp != value))
				{
					this.OnDateTimeStampChanging(value);
					this.SendPropertyChanging();
					this._DateTimeStamp = value;
					this.SendPropertyChanged("DateTimeStamp");
					this.OnDateTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousValue", DbType="Int")]
		public System.Nullable<int> PreviousValue
		{
			get
			{
				return this._PreviousValue;
			}
			set
			{
				if ((this._PreviousValue != value))
				{
					this.OnPreviousValueChanging(value);
					this.SendPropertyChanging();
					this._PreviousValue = value;
					this.SendPropertyChanged("PreviousValue");
					this.OnPreviousValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="Int")]
		public System.Nullable<int> NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIOnlineTestSessionAnswerAudit")]
	internal partial class QTIOnlineTestSessionAnswerAuditEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTIOnlineTestSessionAnswerAuditID;
		
		private int _QTIOnlineTestSessionAnswerID;
		
		private int _UserID;
		
		private System.DateTime _DateTimeStamp;
		
		private System.Nullable<int> _PreviousValue;
		
		private System.Nullable<int> _NewValue;
		
		private int _VirtualQuestionID;
		
		private int _QTIOnlineTestSessionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIOnlineTestSessionAnswerAuditIDChanging(int value);
    partial void OnQTIOnlineTestSessionAnswerAuditIDChanged();
    partial void OnQTIOnlineTestSessionAnswerIDChanging(int value);
    partial void OnQTIOnlineTestSessionAnswerIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateTimeStampChanging(System.DateTime value);
    partial void OnDateTimeStampChanged();
    partial void OnPreviousValueChanging(System.Nullable<int> value);
    partial void OnPreviousValueChanged();
    partial void OnNewValueChanging(System.Nullable<int> value);
    partial void OnNewValueChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnQTIOnlineTestSessionIDChanging(int value);
    partial void OnQTIOnlineTestSessionIDChanged();
    #endregion
		
		public QTIOnlineTestSessionAnswerAuditEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerAuditID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTIOnlineTestSessionAnswerAuditID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerAuditID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerAuditID != value))
				{
					this.OnQTIOnlineTestSessionAnswerAuditIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionAnswerAuditID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionAnswerAuditID");
					this.OnQTIOnlineTestSessionAnswerAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerID != value))
				{
					this.OnQTIOnlineTestSessionAnswerIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionAnswerID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionAnswerID");
					this.OnQTIOnlineTestSessionAnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeStamp
		{
			get
			{
				return this._DateTimeStamp;
			}
			set
			{
				if ((this._DateTimeStamp != value))
				{
					this.OnDateTimeStampChanging(value);
					this.SendPropertyChanging();
					this._DateTimeStamp = value;
					this.SendPropertyChanged("DateTimeStamp");
					this.OnDateTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousValue", DbType="Int")]
		public System.Nullable<int> PreviousValue
		{
			get
			{
				return this._PreviousValue;
			}
			set
			{
				if ((this._PreviousValue != value))
				{
					this.OnPreviousValueChanging(value);
					this.SendPropertyChanging();
					this._PreviousValue = value;
					this.SendPropertyChanged("PreviousValue");
					this.OnPreviousValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="Int")]
		public System.Nullable<int> NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this.OnQTIOnlineTestSessionIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionID");
					this.OnQTIOnlineTestSessionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QTIOnlineTestSessionAnswerSubAudit")]
	internal partial class QTIOnlineTestSessionAnswerSubAuditEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QTIOnlineTestSessionAnswerSubAuditID;
		
		private int _QTIOnlineTestSessionAnswerSubID;
		
		private int _UserID;
		
		private System.DateTime _DateTimeStamp;
		
		private System.Nullable<int> _PreviousValue;
		
		private System.Nullable<int> _NewValue;
		
		private int _VirtualQuestionSubID;
		
		private int _QTIOnlineTestSessionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQTIOnlineTestSessionAnswerSubAuditIDChanging(int value);
    partial void OnQTIOnlineTestSessionAnswerSubAuditIDChanged();
    partial void OnQTIOnlineTestSessionAnswerSubIDChanging(int value);
    partial void OnQTIOnlineTestSessionAnswerSubIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateTimeStampChanging(System.DateTime value);
    partial void OnDateTimeStampChanged();
    partial void OnPreviousValueChanging(System.Nullable<int> value);
    partial void OnPreviousValueChanged();
    partial void OnNewValueChanging(System.Nullable<int> value);
    partial void OnNewValueChanged();
    partial void OnVirtualQuestionSubIDChanging(int value);
    partial void OnVirtualQuestionSubIDChanged();
    partial void OnQTIOnlineTestSessionIDChanging(int value);
    partial void OnQTIOnlineTestSessionIDChanged();
    #endregion
		
		public QTIOnlineTestSessionAnswerSubAuditEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerSubAuditID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QTIOnlineTestSessionAnswerSubAuditID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerSubAuditID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerSubAuditID != value))
				{
					this.OnQTIOnlineTestSessionAnswerSubAuditIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionAnswerSubAuditID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionAnswerSubAuditID");
					this.OnQTIOnlineTestSessionAnswerSubAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionAnswerSubID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionAnswerSubID
		{
			get
			{
				return this._QTIOnlineTestSessionAnswerSubID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionAnswerSubID != value))
				{
					this.OnQTIOnlineTestSessionAnswerSubIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionAnswerSubID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionAnswerSubID");
					this.OnQTIOnlineTestSessionAnswerSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateTimeStamp
		{
			get
			{
				return this._DateTimeStamp;
			}
			set
			{
				if ((this._DateTimeStamp != value))
				{
					this.OnDateTimeStampChanging(value);
					this.SendPropertyChanging();
					this._DateTimeStamp = value;
					this.SendPropertyChanged("DateTimeStamp");
					this.OnDateTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousValue", DbType="Int")]
		public System.Nullable<int> PreviousValue
		{
			get
			{
				return this._PreviousValue;
			}
			set
			{
				if ((this._PreviousValue != value))
				{
					this.OnPreviousValueChanging(value);
					this.SendPropertyChanging();
					this._PreviousValue = value;
					this.SendPropertyChanged("PreviousValue");
					this.OnPreviousValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="Int")]
		public System.Nullable<int> NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionSubID", DbType="Int NOT NULL")]
		public int VirtualQuestionSubID
		{
			get
			{
				return this._VirtualQuestionSubID;
			}
			set
			{
				if ((this._VirtualQuestionSubID != value))
				{
					this.OnVirtualQuestionSubIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionSubID = value;
					this.SendPropertyChanged("VirtualQuestionSubID");
					this.OnVirtualQuestionSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIOnlineTestSessionID", DbType="Int NOT NULL")]
		public int QTIOnlineTestSessionID
		{
			get
			{
				return this._QTIOnlineTestSessionID;
			}
			set
			{
				if ((this._QTIOnlineTestSessionID != value))
				{
					this.OnQTIOnlineTestSessionIDChanging(value);
					this.SendPropertyChanging();
					this._QTIOnlineTestSessionID = value;
					this.SendPropertyChanged("QTIOnlineTestSessionID");
					this.OnQTIOnlineTestSessionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
