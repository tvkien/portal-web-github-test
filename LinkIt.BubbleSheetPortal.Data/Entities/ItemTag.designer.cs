#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdminReportingVNS")]
	public partial class ItemTagDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertItemTagCategoryEntity(ItemTagCategoryEntity instance);
    partial void UpdateItemTagCategoryEntity(ItemTagCategoryEntity instance);
    partial void DeleteItemTagCategoryEntity(ItemTagCategoryEntity instance);
    partial void InsertQtiItemItemTagEntity(QtiItemItemTagEntity instance);
    partial void UpdateQtiItemItemTagEntity(QtiItemItemTagEntity instance);
    partial void DeleteQtiItemItemTagEntity(QtiItemItemTagEntity instance);
    partial void InsertItemTagEntity(ItemTagEntity instance);
    partial void UpdateItemTagEntity(ItemTagEntity instance);
    partial void DeleteItemTagEntity(ItemTagEntity instance);
    #endregion		
		
		
		public ItemTagDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ItemTagDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ItemTagDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ItemTagDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ItemTagCategoryEntity> ItemTagCategoryEntities
		{
			get
			{
				return this.GetTable<ItemTagCategoryEntity>();
			}
		}
		
		public System.Data.Linq.Table<QtiItemItemTagEntity> QtiItemItemTagEntities
		{
			get
			{
				return this.GetTable<QtiItemItemTagEntity>();
			}
		}
		
		public System.Data.Linq.Table<ItemTagEntity> ItemTagEntities
		{
			get
			{
				return this.GetTable<ItemTagEntity>();
			}
		}
		
		public System.Data.Linq.Table<QtiItemItemTagView> QtiItemItemTagViews
		{
			get
			{
				return this.GetTable<QtiItemItemTagView>();
			}
		}
		
		public System.Data.Linq.Table<ItemTagView> ItemTagViews
		{
			get
			{
				return this.GetTable<ItemTagView>();
			}
		}
		
		public System.Data.Linq.Table<ItemTagCategoryView> ItemTagCategoryViews
		{
			get
			{
				return this.GetTable<ItemTagCategoryView>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSuggestTags")]
		public ISingleResult<GetSuggestTagsResult> GetSuggestTags([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchValue", DbType="NVarChar(200)")] string searchValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, searchValue);
			return ((ISingleResult<GetSuggestTagsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTopicBySearchText")]
		public ISingleResult<GetTopicBySearchTextResult> GetTopicBySearchText([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchValue", DbType="NVarChar(200)")] string searchValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InputIdString", DbType="NVarChar(MAX)")] string inputIdString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(20)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchValue, inputIdString, type);
			return ((ISingleResult<GetTopicBySearchTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLessonTwoBySearchText")]
		public ISingleResult<GetLessonTwoBySearchTextResult> GetLessonTwoBySearchText([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchValue", DbType="NVarChar(200)")] string searchValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InputIdString", DbType="NVarChar(MAX)")] string inputIdString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(20)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchValue, inputIdString, type);
			return ((ISingleResult<GetLessonTwoBySearchTextResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLessonOneBySearchText")]
		public ISingleResult<GetLessonOneBySearchTextResult> GetLessonOneBySearchText([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SearchValue", DbType="NVarChar(200)")] string searchValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InputIdString", DbType="NVarChar(MAX)")] string inputIdString, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(20)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchValue, inputIdString, type);
			return ((ISingleResult<GetLessonOneBySearchTextResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemTagCategory")]
	public partial class ItemTagCategoryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemTagCategoryID;
		
		private string _Name;
		
		private System.Nullable<int> _DistrictID;
		
		private string _Description;
		
		private EntitySet<ItemTagEntity> _ItemTagEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemTagCategoryIDChanging(int value);
    partial void OnItemTagCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ItemTagCategoryEntity()
		{
			this._ItemTagEntities = new EntitySet<ItemTagEntity>(new Action<ItemTagEntity>(this.attach_ItemTagEntities), new Action<ItemTagEntity>(this.detach_ItemTagEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemTagCategoryID
		{
			get
			{
				return this._ItemTagCategoryID;
			}
			set
			{
				if ((this._ItemTagCategoryID != value))
				{
					this.OnItemTagCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTagCategoryID = value;
					this.SendPropertyChanged("ItemTagCategoryID");
					this.OnItemTagCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTagCategoryEntity_ItemTagEntity", Storage="_ItemTagEntities", ThisKey="ItemTagCategoryID", OtherKey="ItemTagCategoryID")]
		public EntitySet<ItemTagEntity> ItemTagEntities
		{
			get
			{
				return this._ItemTagEntities;
			}
			set
			{
				this._ItemTagEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemTagEntities(ItemTagEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTagCategoryEntity = this;
		}
		
		private void detach_ItemTagEntities(ItemTagEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTagCategoryEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QtiItemItemTag")]
	public partial class QtiItemItemTagEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QtiItemItemTagID;
		
		private int _QtiItemID;
		
		private int _ItemTagID;
		
		private EntityRef<ItemTagEntity> _ItemTagEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQtiItemItemTagIDChanging(int value);
    partial void OnQtiItemItemTagIDChanged();
    partial void OnQtiItemIDChanging(int value);
    partial void OnQtiItemIDChanged();
    partial void OnItemTagIDChanging(int value);
    partial void OnItemTagIDChanged();
    #endregion
		
		public QtiItemItemTagEntity()
		{
			this._ItemTagEntity = default(EntityRef<ItemTagEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiItemItemTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QtiItemItemTagID
		{
			get
			{
				return this._QtiItemItemTagID;
			}
			set
			{
				if ((this._QtiItemItemTagID != value))
				{
					this.OnQtiItemItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._QtiItemItemTagID = value;
					this.SendPropertyChanged("QtiItemItemTagID");
					this.OnQtiItemItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiItemID", DbType="Int NOT NULL")]
		public int QtiItemID
		{
			get
			{
				return this._QtiItemID;
			}
			set
			{
				if ((this._QtiItemID != value))
				{
					this.OnQtiItemIDChanging(value);
					this.SendPropertyChanging();
					this._QtiItemID = value;
					this.SendPropertyChanged("QtiItemID");
					this.OnQtiItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagID", DbType="Int NOT NULL")]
		public int ItemTagID
		{
			get
			{
				return this._ItemTagID;
			}
			set
			{
				if ((this._ItemTagID != value))
				{
					if (this._ItemTagEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTagID = value;
					this.SendPropertyChanged("ItemTagID");
					this.OnItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTagEntity_QtiItemItemTagEntity", Storage="_ItemTagEntity", ThisKey="ItemTagID", OtherKey="ItemTagID", IsForeignKey=true)]
		public ItemTagEntity ItemTagEntity
		{
			get
			{
				return this._ItemTagEntity.Entity;
			}
			set
			{
				ItemTagEntity previousValue = this._ItemTagEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTagEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTagEntity.Entity = null;
						previousValue.QtiItemItemTagEntities.Remove(this);
					}
					this._ItemTagEntity.Entity = value;
					if ((value != null))
					{
						value.QtiItemItemTagEntities.Add(this);
						this._ItemTagID = value.ItemTagID;
					}
					else
					{
						this._ItemTagID = default(int);
					}
					this.SendPropertyChanged("ItemTagEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemTag")]
	public partial class ItemTagEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemTagID;
		
		private int _ItemTagCategoryID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<QtiItemItemTagEntity> _QtiItemItemTagEntities;
		
		private EntityRef<ItemTagCategoryEntity> _ItemTagCategoryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemTagIDChanging(int value);
    partial void OnItemTagIDChanged();
    partial void OnItemTagCategoryIDChanging(int value);
    partial void OnItemTagCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ItemTagEntity()
		{
			this._QtiItemItemTagEntities = new EntitySet<QtiItemItemTagEntity>(new Action<QtiItemItemTagEntity>(this.attach_QtiItemItemTagEntities), new Action<QtiItemItemTagEntity>(this.detach_QtiItemItemTagEntities));
			this._ItemTagCategoryEntity = default(EntityRef<ItemTagCategoryEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemTagID
		{
			get
			{
				return this._ItemTagID;
			}
			set
			{
				if ((this._ItemTagID != value))
				{
					this.OnItemTagIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTagID = value;
					this.SendPropertyChanged("ItemTagID");
					this.OnItemTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagCategoryID", DbType="Int NOT NULL")]
		public int ItemTagCategoryID
		{
			get
			{
				return this._ItemTagCategoryID;
			}
			set
			{
				if ((this._ItemTagCategoryID != value))
				{
					if (this._ItemTagCategoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTagCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTagCategoryID = value;
					this.SendPropertyChanged("ItemTagCategoryID");
					this.OnItemTagCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTagEntity_QtiItemItemTagEntity", Storage="_QtiItemItemTagEntities", ThisKey="ItemTagID", OtherKey="ItemTagID")]
		public EntitySet<QtiItemItemTagEntity> QtiItemItemTagEntities
		{
			get
			{
				return this._QtiItemItemTagEntities;
			}
			set
			{
				this._QtiItemItemTagEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemTagCategoryEntity_ItemTagEntity", Storage="_ItemTagCategoryEntity", ThisKey="ItemTagCategoryID", OtherKey="ItemTagCategoryID", IsForeignKey=true)]
		public ItemTagCategoryEntity ItemTagCategoryEntity
		{
			get
			{
				return this._ItemTagCategoryEntity.Entity;
			}
			set
			{
				ItemTagCategoryEntity previousValue = this._ItemTagCategoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._ItemTagCategoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemTagCategoryEntity.Entity = null;
						previousValue.ItemTagEntities.Remove(this);
					}
					this._ItemTagCategoryEntity.Entity = value;
					if ((value != null))
					{
						value.ItemTagEntities.Add(this);
						this._ItemTagCategoryID = value.ItemTagCategoryID;
					}
					else
					{
						this._ItemTagCategoryID = default(int);
					}
					this.SendPropertyChanged("ItemTagCategoryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QtiItemItemTagEntities(QtiItemItemTagEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTagEntity = this;
		}
		
		private void detach_QtiItemItemTagEntities(QtiItemItemTagEntity entity)
		{
			this.SendPropertyChanging();
			entity.ItemTagEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QtiItemItemTagView")]
	public partial class QtiItemItemTagView
	{
		
		private int _QtiItemItemTagID;
		
		private int _QtiItemID;
		
		private int _ItemTagCategoryID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _CategoryName;
		
		private string _CategoryDescription;
		
		private int _ItemTagID;
		
		private string _TagName;
		
		private string _TagDescription;
		
		public QtiItemItemTagView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiItemItemTagID", DbType="Int NOT NULL")]
		public int QtiItemItemTagID
		{
			get
			{
				return this._QtiItemItemTagID;
			}
			set
			{
				if ((this._QtiItemItemTagID != value))
				{
					this._QtiItemItemTagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiItemID", DbType="Int NOT NULL")]
		public int QtiItemID
		{
			get
			{
				return this._QtiItemID;
			}
			set
			{
				if ((this._QtiItemID != value))
				{
					this._QtiItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagCategoryID", DbType="Int NOT NULL")]
		public int ItemTagCategoryID
		{
			get
			{
				return this._ItemTagCategoryID;
			}
			set
			{
				if ((this._ItemTagCategoryID != value))
				{
					this._ItemTagCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="NVarChar(1000)")]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this._CategoryDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagID", DbType="Int NOT NULL")]
		public int ItemTagID
		{
			get
			{
				return this._ItemTagID;
			}
			set
			{
				if ((this._ItemTagID != value))
				{
					this._ItemTagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this._TagName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagDescription", DbType="NVarChar(1000)")]
		public string TagDescription
		{
			get
			{
				return this._TagDescription;
			}
			set
			{
				if ((this._TagDescription != value))
				{
					this._TagDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemTagView")]
	public partial class ItemTagView
	{
		
		private int _ItemTagCategoryID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _CategoryName;
		
		private string _CategoryDescription;
		
		private int _ItemTagID;
		
		private string _TagName;
		
		private string _TagDescription;
		
		private System.Nullable<int> _CountQtiItem;
		
		public ItemTagView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagCategoryID", DbType="Int NOT NULL")]
		public int ItemTagCategoryID
		{
			get
			{
				return this._ItemTagCategoryID;
			}
			set
			{
				if ((this._ItemTagCategoryID != value))
				{
					this._ItemTagCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="NVarChar(1000)")]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this._CategoryDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagID", DbType="Int NOT NULL")]
		public int ItemTagID
		{
			get
			{
				return this._ItemTagID;
			}
			set
			{
				if ((this._ItemTagID != value))
				{
					this._ItemTagID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this._TagName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagDescription", DbType="NVarChar(1000)")]
		public string TagDescription
		{
			get
			{
				return this._TagDescription;
			}
			set
			{
				if ((this._TagDescription != value))
				{
					this._TagDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountQtiItem", DbType="Int")]
		public System.Nullable<int> CountQtiItem
		{
			get
			{
				return this._CountQtiItem;
			}
			set
			{
				if ((this._CountQtiItem != value))
				{
					this._CountQtiItem = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemTagCategoryView")]
	public partial class ItemTagCategoryView
	{
		
		private int _ItemTagCategoryID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _District;
		
		private string _Name;
		
		private string _Description;
		
		private int _StateID;
		
		private int _CountQtiItem;
		
		public ItemTagCategoryView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTagCategoryID", DbType="Int NOT NULL")]
		public int ItemTagCategoryID
		{
			get
			{
				return this._ItemTagCategoryID;
			}
			set
			{
				if ((this._ItemTagCategoryID != value))
				{
					this._ItemTagCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountQtiItem", DbType="Int NOT NULL")]
		public int CountQtiItem
		{
			get
			{
				return this._CountQtiItem;
			}
			set
			{
				if ((this._CountQtiItem != value))
				{
					this._CountQtiItem = value;
				}
			}
		}
	}
	
	public partial class GetSuggestTagsResult
	{
		
		private string _Name;
		
		public GetSuggestTagsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetTopicBySearchTextResult
	{
		
		private System.Nullable<int> _GroupTag;
		
		private string _Name;
		
		public GetTopicBySearchTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupTag", DbType="Int")]
		public System.Nullable<int> GroupTag
		{
			get
			{
				return this._GroupTag;
			}
			set
			{
				if ((this._GroupTag != value))
				{
					this._GroupTag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(2000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetLessonTwoBySearchTextResult
	{
		
		private System.Nullable<int> _GroupTag;
		
		private string _Name;
		
		public GetLessonTwoBySearchTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupTag", DbType="Int")]
		public System.Nullable<int> GroupTag
		{
			get
			{
				return this._GroupTag;
			}
			set
			{
				if ((this._GroupTag != value))
				{
					this._GroupTag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetLessonOneBySearchTextResult
	{
		
		private System.Nullable<int> _GroupTag;
		
		private string _Name;
		
		public GetLessonOneBySearchTextResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupTag", DbType="Int")]
		public System.Nullable<int> GroupTag
		{
			get
			{
				return this._GroupTag;
			}
			set
			{
				if ((this._GroupTag != value))
				{
					this._GroupTag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
