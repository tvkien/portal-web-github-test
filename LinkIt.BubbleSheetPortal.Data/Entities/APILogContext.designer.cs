#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdminReportingVNS")]
	internal partial class APILogContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAPILogEntity(APILogEntity instance);
    partial void UpdateAPILogEntity(APILogEntity instance);
    partial void DeleteAPILogEntity(APILogEntity instance);
    partial void InsertResetPasswordLogEntity(ResetPasswordLogEntity instance);
    partial void UpdateResetPasswordLogEntity(ResetPasswordLogEntity instance);
    partial void DeleteResetPasswordLogEntity(ResetPasswordLogEntity instance);
    partial void InsertConfigurationPortalLogEntity(ConfigurationPortalLogEntity instance);
    partial void UpdateConfigurationPortalLogEntity(ConfigurationPortalLogEntity instance);
    partial void DeleteConfigurationPortalLogEntity(ConfigurationPortalLogEntity instance);
    #endregion		
		
		
		public APILogContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public APILogContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public APILogContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public APILogContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<APILogEntity> APILogEntities
		{
			get
			{
				return this.GetTable<APILogEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ResetPasswordLogEntity> ResetPasswordLogEntities
		{
			get
			{
				return this.GetTable<ResetPasswordLogEntity>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationPortalLogEntity> ConfigurationPortalLogEntities
		{
			get
			{
				return this.GetTable<ConfigurationPortalLogEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAPILogByListIDs")]
		public int DeleteAPILogByListIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAPILogByFilter")]
		public int DeleteAPILogByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="APIName", DbType="NVarChar(200)")] string aPIName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResponseStatus", DbType="NVarChar(100)")] string responseStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate, aPIName, responseStatus, districtId);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.APILog")]
	internal partial class APILogEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APILogID;
		
		private System.DateTime _RequestDate;
		
		private System.DateTime _ResponseDate;
		
		private string _RequestURL;
		
		private string _HTTPMethod;
		
		private string _ResponseCode;
		
		private string _Exception;
		
		private string _ResponseStatus;
		
		private string _DataPosted;
		
		private string _APIName;
		
		private System.Nullable<int> _DistrictID;
		
		private string _IPAddress;
		
		private string _ExceptionDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPILogIDChanging(int value);
    partial void OnAPILogIDChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnResponseDateChanging(System.DateTime value);
    partial void OnResponseDateChanged();
    partial void OnRequestURLChanging(string value);
    partial void OnRequestURLChanged();
    partial void OnHTTPMethodChanging(string value);
    partial void OnHTTPMethodChanged();
    partial void OnResponseCodeChanging(string value);
    partial void OnResponseCodeChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnResponseStatusChanging(string value);
    partial void OnResponseStatusChanged();
    partial void OnDataPostedChanging(string value);
    partial void OnDataPostedChanged();
    partial void OnAPINameChanging(string value);
    partial void OnAPINameChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnExceptionDetailsChanging(string value);
    partial void OnExceptionDetailsChanged();
    #endregion
		
		public APILogEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APILogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APILogID
		{
			get
			{
				return this._APILogID;
			}
			set
			{
				if ((this._APILogID != value))
				{
					this.OnAPILogIDChanging(value);
					this.SendPropertyChanging();
					this._APILogID = value;
					this.SendPropertyChanged("APILogID");
					this.OnAPILogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResponseDate
		{
			get
			{
				return this._ResponseDate;
			}
			set
			{
				if ((this._ResponseDate != value))
				{
					this.OnResponseDateChanging(value);
					this.SendPropertyChanging();
					this._ResponseDate = value;
					this.SendPropertyChanged("ResponseDate");
					this.OnResponseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestURL", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string RequestURL
		{
			get
			{
				return this._RequestURL;
			}
			set
			{
				if ((this._RequestURL != value))
				{
					this.OnRequestURLChanging(value);
					this.SendPropertyChanging();
					this._RequestURL = value;
					this.SendPropertyChanged("RequestURL");
					this.OnRequestURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTTPMethod", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string HTTPMethod
		{
			get
			{
				return this._HTTPMethod;
			}
			set
			{
				if ((this._HTTPMethod != value))
				{
					this.OnHTTPMethodChanging(value);
					this.SendPropertyChanging();
					this._HTTPMethod = value;
					this.SendPropertyChanged("HTTPMethod");
					this.OnHTTPMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseStatus", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string ResponseStatus
		{
			get
			{
				return this._ResponseStatus;
			}
			set
			{
				if ((this._ResponseStatus != value))
				{
					this.OnResponseStatusChanging(value);
					this.SendPropertyChanging();
					this._ResponseStatus = value;
					this.SendPropertyChanged("ResponseStatus");
					this.OnResponseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPosted", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string DataPosted
		{
			get
			{
				return this._DataPosted;
			}
			set
			{
				if ((this._DataPosted != value))
				{
					this.OnDataPostedChanging(value);
					this.SendPropertyChanging();
					this._DataPosted = value;
					this.SendPropertyChanged("DataPosted");
					this.OnDataPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APIName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string APIName
		{
			get
			{
				return this._APIName;
			}
			set
			{
				if ((this._APIName != value))
				{
					this.OnAPINameChanging(value);
					this.SendPropertyChanging();
					this._APIName = value;
					this.SendPropertyChanged("APIName");
					this.OnAPINameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="Char(100)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDetails", DbType="NVarChar(MAX)")]
		public string ExceptionDetails
		{
			get
			{
				return this._ExceptionDetails;
			}
			set
			{
				if ((this._ExceptionDetails != value))
				{
					this.OnExceptionDetailsChanging(value);
					this.SendPropertyChanging();
					this._ExceptionDetails = value;
					this.SendPropertyChanged("ExceptionDetails");
					this.OnExceptionDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResetPasswordLog")]
	internal partial class ResetPasswordLogEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResetPasswordID;
		
		private System.DateTime _RequestDate;
		
		private System.Nullable<int> _DistrictCode;
		
		private string _UserName;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResetPasswordIDChanging(int value);
    partial void OnResetPasswordIDChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnDistrictCodeChanging(System.Nullable<int> value);
    partial void OnDistrictCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public ResetPasswordLogEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetPasswordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResetPasswordID
		{
			get
			{
				return this._ResetPasswordID;
			}
			set
			{
				if ((this._ResetPasswordID != value))
				{
					this.OnResetPasswordIDChanging(value);
					this.SendPropertyChanging();
					this._ResetPasswordID = value;
					this.SendPropertyChanged("ResetPasswordID");
					this.OnResetPasswordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictCode", DbType="Int")]
		public System.Nullable<int> DistrictCode
		{
			get
			{
				return this._DistrictCode;
			}
			set
			{
				if ((this._DistrictCode != value))
				{
					this.OnDistrictCodeChanging(value);
					this.SendPropertyChanging();
					this._DistrictCode = value;
					this.SendPropertyChanged("DistrictCode");
					this.OnDistrictCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="Char(100)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigurationPortalLog")]
	public partial class ConfigurationPortalLogEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Controller;
		
		private string _Action;
		
		private string _Method;
		
		private System.Nullable<bool> _IsLogInput;
		
		private System.Nullable<bool> _IsLogOutput;
		
		private System.Nullable<bool> _IsDisable;
		
		private string _LogKeys;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnIsLogInputChanging(System.Nullable<bool> value);
    partial void OnIsLogInputChanged();
    partial void OnIsLogOutputChanging(System.Nullable<bool> value);
    partial void OnIsLogOutputChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnLogKeysChanging(string value);
    partial void OnLogKeysChanged();
    #endregion
		
		public ConfigurationPortalLogEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="VarChar(255)")]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(255)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="VarChar(10)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogInput", DbType="Bit")]
		public System.Nullable<bool> IsLogInput
		{
			get
			{
				return this._IsLogInput;
			}
			set
			{
				if ((this._IsLogInput != value))
				{
					this.OnIsLogInputChanging(value);
					this.SendPropertyChanging();
					this._IsLogInput = value;
					this.SendPropertyChanged("IsLogInput");
					this.OnIsLogInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLogOutput", DbType="Bit")]
		public System.Nullable<bool> IsLogOutput
		{
			get
			{
				return this._IsLogOutput;
			}
			set
			{
				if ((this._IsLogOutput != value))
				{
					this.OnIsLogOutputChanging(value);
					this.SendPropertyChanging();
					this._IsLogOutput = value;
					this.SendPropertyChanged("IsLogOutput");
					this.OnIsLogOutputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogKeys", DbType="VarChar(255)")]
		public string LogKeys
		{
			get
			{
				return this._LogKeys;
			}
			set
			{
				if ((this._LogKeys != value))
				{
					this.OnLogKeysChanging(value);
					this.SendPropertyChanging();
					this._LogKeys = value;
					this.SendPropertyChanged("LogKeys");
					this.OnLogKeysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
