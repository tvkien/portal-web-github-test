#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class RestrictionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertXLITestRestrictionModule(XLITestRestrictionModule instance);
    partial void UpdateXLITestRestrictionModule(XLITestRestrictionModule instance);
    partial void DeleteXLITestRestrictionModule(XLITestRestrictionModule instance);
    partial void InsertXLITestRestrictionModuleRole(XLITestRestrictionModuleRole instance);
    partial void UpdateXLITestRestrictionModuleRole(XLITestRestrictionModuleRole instance);
    partial void DeleteXLITestRestrictionModuleRole(XLITestRestrictionModuleRole instance);
    #endregion
		
		public RestrictionDataContext() : 
				base(global::LinkIt.BubbleSheetPortal.Data.Properties.Settings.Default.AdminReportingVNSConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public RestrictionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestrictionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestrictionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RestrictionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<XLITestRestrictionModule> XLITestRestrictionModules
		{
			get
			{
				return this.GetTable<XLITestRestrictionModule>();
			}
		}
		
		public System.Data.Linq.Table<XLITestRestrictionModuleRole> XLITestRestrictionModuleRoles
		{
			get
			{
				return this.GetTable<XLITestRestrictionModuleRole>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTestRestriction")]
		public ISingleResult<GetTestRestrictionResult> GetTestRestriction([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryIds", DbType="VarChar(1000)")] string categoryIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeIDs", DbType="VarChar(1000)")] string gradeIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectIDs", DbType="VarChar(1000)")] string subjectIDs, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartRow", DbType="Int")] System.Nullable<int> startRow, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumn", DbType="VarChar(255)")] string sortColumn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortDirection", DbType="VarChar(4)")] string sortDirection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecord", DbType="Int")] ref System.Nullable<int> totalRecord)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, roleID, categoryIds, gradeIDs, subjectIDs, startRow, pageSize, generalSearch, sortColumn, sortDirection, totalRecord);
			totalRecord = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((ISingleResult<GetTestRestrictionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCateSubjectGradeByDistrict")]
		public ISingleResult<GetCateSubjectGradeByDistrictResult> GetCateSubjectGradeByDistrict([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID);
			return ((ISingleResult<GetCateSubjectGradeByDistrictResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Name;
		
		private string _Display;
		
		private EntitySet<XLITestRestrictionModuleRole> _XLITestRestrictionModuleRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayChanging(string value);
    partial void OnDisplayChanged();
    #endregion
		
		public Role()
		{
			this._XLITestRestrictionModuleRoles = new EntitySet<XLITestRestrictionModuleRole>(new Action<XLITestRestrictionModuleRole>(this.attach_XLITestRestrictionModuleRoles), new Action<XLITestRestrictionModuleRole>(this.detach_XLITestRestrictionModuleRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="VarChar(50)")]
		public string Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_XLITestRestrictionModuleRole", Storage="_XLITestRestrictionModuleRoles", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<XLITestRestrictionModuleRole> XLITestRestrictionModuleRoles
		{
			get
			{
				return this._XLITestRestrictionModuleRoles;
			}
			set
			{
				this._XLITestRestrictionModuleRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XLITestRestrictionModuleRoles(XLITestRestrictionModuleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_XLITestRestrictionModuleRoles(XLITestRestrictionModuleRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLITestRestrictionModule")]
	public partial class XLITestRestrictionModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLITestRestrictionModuleID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<XLITestRestrictionModuleRole> _XLITestRestrictionModuleRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLITestRestrictionModuleIDChanging(int value);
    partial void OnXLITestRestrictionModuleIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public XLITestRestrictionModule()
		{
			this._XLITestRestrictionModuleRoles = new EntitySet<XLITestRestrictionModuleRole>(new Action<XLITestRestrictionModuleRole>(this.attach_XLITestRestrictionModuleRoles), new Action<XLITestRestrictionModuleRole>(this.detach_XLITestRestrictionModuleRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLITestRestrictionModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLITestRestrictionModuleID
		{
			get
			{
				return this._XLITestRestrictionModuleID;
			}
			set
			{
				if ((this._XLITestRestrictionModuleID != value))
				{
					this.OnXLITestRestrictionModuleIDChanging(value);
					this.SendPropertyChanging();
					this._XLITestRestrictionModuleID = value;
					this.SendPropertyChanged("XLITestRestrictionModuleID");
					this.OnXLITestRestrictionModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLITestRestrictionModule_XLITestRestrictionModuleRole", Storage="_XLITestRestrictionModuleRoles", ThisKey="XLITestRestrictionModuleID", OtherKey="XLITestRestrictionModuleID")]
		public EntitySet<XLITestRestrictionModuleRole> XLITestRestrictionModuleRoles
		{
			get
			{
				return this._XLITestRestrictionModuleRoles;
			}
			set
			{
				this._XLITestRestrictionModuleRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XLITestRestrictionModuleRoles(XLITestRestrictionModuleRole entity)
		{
			this.SendPropertyChanging();
			entity.XLITestRestrictionModule = this;
		}
		
		private void detach_XLITestRestrictionModuleRoles(XLITestRestrictionModuleRole entity)
		{
			this.SendPropertyChanging();
			entity.XLITestRestrictionModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLITestRestrictionModuleRole")]
	public partial class XLITestRestrictionModuleRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLITestRestrictionModuleRoleID;
		
		private string _PublishedLevelName;
		
		private int _PublishedLevelID;
		
		private int _XLITestRestrictionModuleID;
		
		private string _RestrictedObjectName;
		
		private int _RestrictedObjectID;
		
		private int _RoleID;
		
		private System.DateTime _ModifiedDate;
		
		private int _ModifiedUser;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<XLITestRestrictionModule> _XLITestRestrictionModule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLITestRestrictionModuleRoleIDChanging(int value);
    partial void OnXLITestRestrictionModuleRoleIDChanged();
    partial void OnPublishedLevelNameChanging(string value);
    partial void OnPublishedLevelNameChanged();
    partial void OnPublishedLevelIDChanging(int value);
    partial void OnPublishedLevelIDChanged();
    partial void OnXLITestRestrictionModuleIDChanging(int value);
    partial void OnXLITestRestrictionModuleIDChanged();
    partial void OnRestrictedObjectNameChanging(string value);
    partial void OnRestrictedObjectNameChanged();
    partial void OnRestrictedObjectIDChanging(int value);
    partial void OnRestrictedObjectIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedUserChanging(int value);
    partial void OnModifiedUserChanged();
    #endregion
		
		public XLITestRestrictionModuleRole()
		{
			this._Role = default(EntityRef<Role>);
			this._XLITestRestrictionModule = default(EntityRef<XLITestRestrictionModule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLITestRestrictionModuleRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLITestRestrictionModuleRoleID
		{
			get
			{
				return this._XLITestRestrictionModuleRoleID;
			}
			set
			{
				if ((this._XLITestRestrictionModuleRoleID != value))
				{
					this.OnXLITestRestrictionModuleRoleIDChanging(value);
					this.SendPropertyChanging();
					this._XLITestRestrictionModuleRoleID = value;
					this.SendPropertyChanged("XLITestRestrictionModuleRoleID");
					this.OnXLITestRestrictionModuleRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedLevelName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PublishedLevelName
		{
			get
			{
				return this._PublishedLevelName;
			}
			set
			{
				if ((this._PublishedLevelName != value))
				{
					this.OnPublishedLevelNameChanging(value);
					this.SendPropertyChanging();
					this._PublishedLevelName = value;
					this.SendPropertyChanged("PublishedLevelName");
					this.OnPublishedLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedLevelID", DbType="Int NOT NULL")]
		public int PublishedLevelID
		{
			get
			{
				return this._PublishedLevelID;
			}
			set
			{
				if ((this._PublishedLevelID != value))
				{
					this.OnPublishedLevelIDChanging(value);
					this.SendPropertyChanging();
					this._PublishedLevelID = value;
					this.SendPropertyChanged("PublishedLevelID");
					this.OnPublishedLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLITestRestrictionModuleID", DbType="Int NOT NULL")]
		public int XLITestRestrictionModuleID
		{
			get
			{
				return this._XLITestRestrictionModuleID;
			}
			set
			{
				if ((this._XLITestRestrictionModuleID != value))
				{
					if (this._XLITestRestrictionModule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXLITestRestrictionModuleIDChanging(value);
					this.SendPropertyChanging();
					this._XLITestRestrictionModuleID = value;
					this.SendPropertyChanged("XLITestRestrictionModuleID");
					this.OnXLITestRestrictionModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictedObjectName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RestrictedObjectName
		{
			get
			{
				return this._RestrictedObjectName;
			}
			set
			{
				if ((this._RestrictedObjectName != value))
				{
					this.OnRestrictedObjectNameChanging(value);
					this.SendPropertyChanging();
					this._RestrictedObjectName = value;
					this.SendPropertyChanged("RestrictedObjectName");
					this.OnRestrictedObjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictedObjectID", DbType="Int NOT NULL")]
		public int RestrictedObjectID
		{
			get
			{
				return this._RestrictedObjectID;
			}
			set
			{
				if ((this._RestrictedObjectID != value))
				{
					this.OnRestrictedObjectIDChanging(value);
					this.SendPropertyChanging();
					this._RestrictedObjectID = value;
					this.SendPropertyChanged("RestrictedObjectID");
					this.OnRestrictedObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedUser", DbType="Int NOT NULL")]
		public int ModifiedUser
		{
			get
			{
				return this._ModifiedUser;
			}
			set
			{
				if ((this._ModifiedUser != value))
				{
					this.OnModifiedUserChanging(value);
					this.SendPropertyChanging();
					this._ModifiedUser = value;
					this.SendPropertyChanged("ModifiedUser");
					this.OnModifiedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_XLITestRestrictionModuleRole", Storage="_Role", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.XLITestRestrictionModuleRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.XLITestRestrictionModuleRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLITestRestrictionModule_XLITestRestrictionModuleRole", Storage="_XLITestRestrictionModule", ThisKey="XLITestRestrictionModuleID", OtherKey="XLITestRestrictionModuleID", IsForeignKey=true)]
		public XLITestRestrictionModule XLITestRestrictionModule
		{
			get
			{
				return this._XLITestRestrictionModule.Entity;
			}
			set
			{
				XLITestRestrictionModule previousValue = this._XLITestRestrictionModule.Entity;
				if (((previousValue != value) 
							|| (this._XLITestRestrictionModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XLITestRestrictionModule.Entity = null;
						previousValue.XLITestRestrictionModuleRoles.Remove(this);
					}
					this._XLITestRestrictionModule.Entity = value;
					if ((value != null))
					{
						value.XLITestRestrictionModuleRoles.Add(this);
						this._XLITestRestrictionModuleID = value.XLITestRestrictionModuleID;
					}
					else
					{
						this._XLITestRestrictionModuleID = default(int);
					}
					this.SendPropertyChanged("XLITestRestrictionModule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetTestRestrictionResult
	{
		
		private int _VirtualTestID;
		
		private string _TestName;
		
		private int _CategoryID;
		
		private string _CategoryName;
		
		private string _SubjectName;
		
		private string _GradeName;
		
		private string _TeacherRestriction;
		
		private string _SchoolAdminRestriction;
		
		private string _SchoolAdminRestrictionContent;
		
		private string _TeacherRestrictionContent;
		
		private string _TeacherRestrictionDisplay;
		
		private string _SchoolAdminRestrictionDisplay;
		
		public GetTestRestrictionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherRestriction", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherRestriction
		{
			get
			{
				return this._TeacherRestriction;
			}
			set
			{
				if ((this._TeacherRestriction != value))
				{
					this._TeacherRestriction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAdminRestriction", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolAdminRestriction
		{
			get
			{
				return this._SchoolAdminRestriction;
			}
			set
			{
				if ((this._SchoolAdminRestriction != value))
				{
					this._SchoolAdminRestriction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAdminRestrictionContent", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolAdminRestrictionContent
		{
			get
			{
				return this._SchoolAdminRestrictionContent;
			}
			set
			{
				if ((this._SchoolAdminRestrictionContent != value))
				{
					this._SchoolAdminRestrictionContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherRestrictionContent", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherRestrictionContent
		{
			get
			{
				return this._TeacherRestrictionContent;
			}
			set
			{
				if ((this._TeacherRestrictionContent != value))
				{
					this._TeacherRestrictionContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherRestrictionDisplay", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherRestrictionDisplay
		{
			get
			{
				return this._TeacherRestrictionDisplay;
			}
			set
			{
				if ((this._TeacherRestrictionDisplay != value))
				{
					this._TeacherRestrictionDisplay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAdminRestrictionDisplay", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolAdminRestrictionDisplay
		{
			get
			{
				return this._SchoolAdminRestrictionDisplay;
			}
			set
			{
				if ((this._SchoolAdminRestrictionDisplay != value))
				{
					this._SchoolAdminRestrictionDisplay = value;
				}
			}
		}
	}
	
	public partial class GetCateSubjectGradeByDistrictResult
	{
		
		private string _Kind;
		
		private int _Id;
		
		private string _Name;
		
		private int _Order;
		
		public GetCateSubjectGradeByDistrictResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this._Kind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
