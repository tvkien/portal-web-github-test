#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdminReportingStage")]
	internal partial class ExtractTestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertS3PermissionEntity(S3PermissionEntity instance);
    partial void UpdateS3PermissionEntity(S3PermissionEntity instance);
    partial void DeleteS3PermissionEntity(S3PermissionEntity instance);
    partial void InsertS3PortalLinkEntity(S3PortalLinkEntity instance);
    partial void UpdateS3PortalLinkEntity(S3PortalLinkEntity instance);
    partial void DeleteS3PortalLinkEntity(S3PortalLinkEntity instance);
    partial void InsertTestExtractTemplateEntity(TestExtractTemplateEntity instance);
    partial void UpdateTestExtractTemplateEntity(TestExtractTemplateEntity instance);
    partial void DeleteTestExtractTemplateEntity(TestExtractTemplateEntity instance);
    partial void InsertExtractTestResultParamEntity(ExtractTestResultParamEntity instance);
    partial void UpdateExtractTestResultParamEntity(ExtractTestResultParamEntity instance);
    partial void DeleteExtractTestResultParamEntity(ExtractTestResultParamEntity instance);
    partial void InsertExtractLocalTestResultsQueueEntity(ExtractLocalTestResultsQueueEntity instance);
    partial void UpdateExtractLocalTestResultsQueueEntity(ExtractLocalTestResultsQueueEntity instance);
    partial void DeleteExtractLocalTestResultsQueueEntity(ExtractLocalTestResultsQueueEntity instance);
    #endregion
		
		//public ExtractTestDataContext() : 
		//		base(global::LinkIt.BubbleSheetPortal.Data.Properties.Settings.Default.AdminReportingVNSConnectionString, mappingSource)
		//{
		//	OnCreated();
		//}
		
		public ExtractTestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtractTestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtractTestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtractTestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<ExtractTestResultsView> ExtractTestResultsViews
		{
			get
			{
				return this.GetTable<ExtractTestResultsView>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestTimingOptionView> VirtualTestTimingOptionViews
		{
			get
			{
				return this.GetTable<VirtualTestTimingOptionView>();
			}
		}
		
		internal System.Data.Linq.Table<S3PermissionEntity> S3PermissionEntities
		{
			get
			{
				return this.GetTable<S3PermissionEntity>();
			}
		}
		
		internal System.Data.Linq.Table<S3PortalLinkEntity> S3PortalLinkEntities
		{
			get
			{
				return this.GetTable<S3PortalLinkEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestExtractTemplateEntity> TestExtractTemplateEntities
		{
			get
			{
				return this.GetTable<TestExtractTemplateEntity>();
			}
		}
		
		public System.Data.Linq.Table<ExtractTestResultParamEntity> ExtractTestResultParamEntities
		{
			get
			{
				return this.GetTable<ExtractTestResultParamEntity>();
			}
		}
		
		public System.Data.Linq.Table<ExtractLocalTestResultsQueueEntity> ExtractLocalTestResultsQueueEntities
		{
			get
			{
				return this.GetTable<ExtractLocalTestResultsQueueEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportAssessmentItemResponse_New")]
		public ISingleResult<ExportAssessmentItemResponse_NewResult> ExportAssessmentItemResponse_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportAssessmentItemResponse_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Export_ASMNT_ITEMR_ACADEMIC_STDS_New")]
		public ISingleResult<Export_ASMNT_ITEMR_ACADEMIC_STDS_NewResult> Export_ASMNT_ITEMR_ACADEMIC_STDS_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<Export_ASMNT_ITEMR_ACADEMIC_STDS_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Export_ASSESSMENT_RESPONSE_New")]
		public ISingleResult<Export_ASSESSMENT_RESPONSE_NewResult> Export_ASSESSMENT_RESPONSE_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<Export_ASSESSMENT_RESPONSE_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportAssessmentItem_New")]
		public ISingleResult<ExportAssessmentItem_NewResult> ExportAssessmentItem_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportAssessmentItem_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportAssessmentAchievedDetail_New")]
		public ISingleResult<ExportAssessmentAchievedDetail_NewResult> ExportAssessmentAchievedDetail_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportAssessmentAchievedDetail_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportUserInformation")]
		public ISingleResult<ExportUserInformationResult> ExportUserInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportUserInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportTest")]
		public ISingleResult<ExportTestResult> ExportTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportQuestionTemplate")]
		public ISingleResult<ExportQuestionTemplateResult> ExportQuestionTemplate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportQuestionTemplateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportTestResultTemplate")]
		public ISingleResult<ExportTestResultTemplateResult> ExportTestResultTemplate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportTestResultTemplateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportPointsEarned")]
		public ISingleResult<ExportPointsEarnedResult> ExportPointsEarned([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportPointsEarnedResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportStudentResponse")]
		public ISingleResult<ExportStudentResponseResult> ExportStudentResponse([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Guid", DbType="VarChar(36)")] string guid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId, guid);
			return ((ISingleResult<ExportStudentResponseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportClassTestAssignmentsTemplate")]
		public ISingleResult<ExportClassTestAssignmentsTemplateResult> ExportClassTestAssignmentsTemplate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportClassTestAssignmentsTemplateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ExportRosterTemplate")]
		public ISingleResult<ExportRosterTemplateResult> ExportRosterTemplate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<ExportRosterTemplateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Export_ASMNT_SUBTEST_ACADEMIC_STDS_New")]
		public ISingleResult<Export_ASMNT_SUBTEST_ACADEMIC_STDS_NewResult> Export_ASMNT_SUBTEST_ACADEMIC_STDS_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<Export_ASMNT_SUBTEST_ACADEMIC_STDS_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Export_ASSESSMENT_ACC_MOD_FACT_New")]
		public ISingleResult<Export_ASSESSMENT_ACC_MOD_FACT_NewResult> Export_ASSESSMENT_ACC_MOD_FACT_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<Export_ASSESSMENT_ACC_MOD_FACT_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Export_ASSESSMENT_FACT_New")]
		public ISingleResult<Export_ASSESSMENT_FACT_NewResult> Export_ASSESSMENT_FACT_New([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIds", DbType="NVarChar(MAX)")] string listTestResultIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listTestResultIds, districtId);
			return ((ISingleResult<Export_ASSESSMENT_FACT_NewResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetGradeHaveTest")]
		public ISingleResult<extrGetGradeHaveTestResult> extrGetGradeHaveTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID);
			return ((ISingleResult<extrGetGradeHaveTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSubjectHaveTest")]
		public ISingleResult<extrGetSubjectHaveTestResult> extrGetSubjectHaveTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID, gradeID);
			return ((ISingleResult<extrGetSubjectHaveTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetBankHaveTest")]
		public ISingleResult<extrGetBankHaveTestResult> extrGetBankHaveTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(50)")] string subjectName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID, gradeID, subjectId, subjectName);
			return ((ISingleResult<extrGetBankHaveTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetVirtualTest")]
		public ISingleResult<extrGetVirtualTestResult> extrGetVirtualTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankID);
			return ((ISingleResult<extrGetVirtualTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSchoolsHaveTestResult")]
		public ISingleResult<extrGetSchoolsHaveTestResultResult> extrGetSchoolsHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetSchoolsHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSchoolsHaveUser")]
		public ISingleResult<extrGetSchoolsHaveUserResult> extrGetSchoolsHaveUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, userRoleID);
			return ((ISingleResult<extrGetSchoolsHaveUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetTeachersHaveTestResult")]
		public ISingleResult<extrGetTeachersHaveTestResultResult> extrGetTeachersHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetTeachersHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetClassesHaveTestResult")]
		public ISingleResult<extrGetClassesHaveTestResultResult> extrGetClassesHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, teacherID, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetClassesHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetStudentsHaveTestResult")]
		public ISingleResult<extrGetStudentsHaveTestResultResult> extrGetStudentsHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, teacherID, classID, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetStudentsHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetAllTestResultIdByFilter")]
		public ISingleResult<extrGetAllTestResultIdByFilterResult> extrGetAllTestResultIdByFilter(
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] DateTime fromDate,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType= "DateTime")] DateTime toDate,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID,
            [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankID, studentID, listTestIds, schoolID, classID, teacherID, userID, roleID);
			return ((ISingleResult<extrGetAllTestResultIdByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetVirtualTestByFilter")]
		public ISingleResult<extrGetVirtualTestByFilterResult> extrGetVirtualTestByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(100)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID, gradeID, subjectName, bankID, listTestIds);
			return ((ISingleResult<extrGetVirtualTestByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetGradeHaveTestResult")]
		public ISingleResult<extrGetGradeHaveTestResultResult> extrGetGradeHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID);
			return ((ISingleResult<extrGetGradeHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetBankHaveTestAssignment")]
		public ISingleResult<extrGetBankHaveTestAssignmentResult> extrGetBankHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="Int")] System.Nullable<int> subjectId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(50)")] string subjectName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID, gradeID, subjectId, subjectName);
			return ((ISingleResult<extrGetBankHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetClassesHaveTestAssignment")]
		public ISingleResult<extrGetClassesHaveTestAssignmentResult> extrGetClassesHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, teacherID, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetClassesHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetGradeHaveTestAssignment")]
		public ISingleResult<extrGetGradeHaveTestAssignmentResult> extrGetGradeHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID);
			return ((ISingleResult<extrGetGradeHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSchoolsHaveTestAssignment")]
		public ISingleResult<extrGetSchoolsHaveTestAssignmentResult> extrGetSchoolsHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetSchoolsHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSubjectHaveTestAssignment")]
		public ISingleResult<extrGetSubjectHaveTestAssignmentResult> extrGetSubjectHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID, gradeID);
			return ((ISingleResult<extrGetSubjectHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetTeachersHaveTestAssignment")]
		public ISingleResult<extrGetTeachersHaveTestAssignmentResult> extrGetTeachersHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankId", DbType="Int")] System.Nullable<int> bankId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, bankId, listTestIds, userID, roleID);
			return ((ISingleResult<extrGetTeachersHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSubjectHaveTestResult")]
		public ISingleResult<extrGetSubjectHaveTestResultResult> extrGetSubjectHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, gradeID, userID, userRoleID);
			return ((ISingleResult<extrGetSubjectHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetBankHaveTestResult")]
		public ISingleResult<extrGetBankHaveTestResultResult> extrGetBankHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(100)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, gradeID, subjectName, userID, userRoleID);
			return ((ISingleResult<extrGetBankHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetVirtualTestHaveTestAssignment")]
		public ISingleResult<extrGetVirtualTestHaveTestAssignmentResult> extrGetVirtualTestHaveTestAssignment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankID, userID, roleID);
			return ((ISingleResult<extrGetVirtualTestHaveTestAssignmentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetVirtualTestHaveTestResult")]
		public ISingleResult<extrGetVirtualTestHaveTestResultResult> extrGetVirtualTestHaveTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankID, userID, roleID);
			return ((ISingleResult<extrGetVirtualTestHaveTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetTestAssignmentByFilter")]
		public ISingleResult<extrGetTestAssignmentByFilterResult> extrGetTestAssignmentByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeID", DbType="Int")] System.Nullable<int> gradeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="NVarChar(50)")] string subjectName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, gradeID, subjectName, bankID, listTestIds, schoolID, classID, teacherID, userID, roleID);
			return ((ISingleResult<extrGetTestAssignmentByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetTermHaveStudent")]
		public ISingleResult<extrGetTermHaveStudentResult> extrGetTermHaveStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID, userRoleID);
			return ((ISingleResult<extrGetTermHaveStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetUserByFilter")]
		public ISingleResult<extrGetUserByFilterResult> extrGetUserByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListSchoolIds", DbType="NVarChar(1000)")] string listSchoolIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, listSchoolIds, userID, userRoleID);
			return ((ISingleResult<extrGetUserByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetRosterByFilter")]
		public ISingleResult<extrGetRosterByFilterResult> extrGetRosterByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolId", DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherId", DbType="Int")] System.Nullable<int> teacherId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListClassIds", DbType="NVarChar(1000)")] string listClassIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolId, teacherId, listClassIds, userID, userRoleID);
			return ((ISingleResult<extrGetRosterByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetSchoolHaveStudent")]
		public ISingleResult<extrGetSchoolHaveStudentResult> extrGetSchoolHaveStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, userID, userRoleID);
			return ((ISingleResult<extrGetSchoolHaveStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetClassHaveStudent")]
		public ISingleResult<extrGetClassHaveStudentResult> extrGetClassHaveStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, teacherID, userID, userRoleID);
			return ((ISingleResult<extrGetClassHaveStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetTeacherHaveStudent")]
		public ISingleResult<extrGetTeacherHaveStudentResult> extrGetTeacherHaveStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolID, userID, userRoleID);
			return ((ISingleResult<extrGetTeacherHaveStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetClassIDsByFilter")]
		public ISingleResult<extrGetClassIDsByFilterResult> extrGetClassIDsByFilter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolId", DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherId", DbType="Int")] System.Nullable<int> teacherId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListClassIds", DbType="NVarChar(1000)")] string listClassIds, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, schoolId, teacherId, listClassIds, userID, userRoleID);
			return ((ISingleResult<extrGetClassIDsByFilterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrAddExtrTestResultToQueue")]
		public int extrAddExtrTestResultToQueue(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="NVarChar(50)")] string fromDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="NVarChar(50)")] string toDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTimeZoneOffset", DbType="Int")] System.Nullable<int> userTimeZoneOffset, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExtractType", DbType="Int")] System.Nullable<int> extractType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedDate", DbType="DateTime")] System.Nullable<System.DateTime> createdDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BaseHostURL", DbType="VarChar(100)")] string baseHostURL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExportTemplate", DbType="VarChar(100)")] string exportTemplate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestResultIDUncheck", DbType="NVarChar(MAX)")] string listTestResultIDUncheck)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankID, studentID, listTestIds, schoolID, classID, teacherID, userID, roleID, userTimeZoneOffset, extractType, createdDate, baseHostURL, exportTemplate, listTestResultIDUncheck);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.extrGetTestResultByFilter")]
		public ISingleResult<extrGetTestResultByFilterResult> extrGetTestResultByFilter(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType= "DateTime")] DateTime fromDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType= "DateTime")] DateTime toDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankID", DbType="Int")] System.Nullable<int> bankID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="Int")] System.Nullable<int> studentID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListTestIds", DbType="NVarChar(1000)")] string listTestIds, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherID", DbType="Int")] System.Nullable<int> teacherID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeId", DbType="Int")] System.Nullable<int> gradeId, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectName", DbType="VarChar(50)")] string subjectName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsHideStudentName", DbType="Bit")] System.Nullable<bool> isHideStudentName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, fromDate, toDate, bankID, studentID, listTestIds, schoolID, classID, teacherID, userID, roleID, pageIndex, pageSize, sortColumns, gradeId, subjectName, generalSearch, isHideStudentName);
			return ((ISingleResult<extrGetTestResultByFilterResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtractTestResultsView")]
	internal partial class ExtractTestResultsView
	{
		
		private int _TestResultID;
		
		private string _TestNameCustom;
		
		private string _ClassNameCustom;
		
		private string _StudentCustom;
		
		private int _StudentID;
		
		private string _TeacherCustom;
		
		private string _SchoolName;
		
		private int _DistrictID;
		
		private string _TestName;
		
		private System.DateTime _UpdatedDate;
		
		private string _GradeName;
		
		private string _SubjectName;
		
		private string _BankName;
		
		private string _ClassName;
		
		private int _StudentDistrictID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _ClassID;
		
		public ExtractTestResultsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(259)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(155)")]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDistrictID", DbType="Int NOT NULL")]
		public int StudentDistrictID
		{
			get
			{
				return this._StudentDistrictID;
			}
			set
			{
				if ((this._StudentDistrictID != value))
				{
					this._StudentDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTestTimingOptionView")]
	internal partial class VirtualTestTimingOptionView
	{
		
		private int _TimingSettingID;
		
		private string _TimingSettingName;
		
		private int _VirtualTestTimingID;
		
		private int _DistrictID;
		
		private int _Value;
		
		public VirtualTestTimingOptionView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimingSettingID", DbType="Int NOT NULL")]
		public int TimingSettingID
		{
			get
			{
				return this._TimingSettingID;
			}
			set
			{
				if ((this._TimingSettingID != value))
				{
					this._TimingSettingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimingSettingName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TimingSettingName
		{
			get
			{
				return this._TimingSettingName;
			}
			set
			{
				if ((this._TimingSettingName != value))
				{
					this._TimingSettingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestTimingID", DbType="Int NOT NULL")]
		public int VirtualTestTimingID
		{
			get
			{
				return this._VirtualTestTimingID;
			}
			set
			{
				if ((this._VirtualTestTimingID != value))
				{
					this._VirtualTestTimingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.S3Permission")]
	internal partial class S3PermissionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _S3PortalLinkID;
		
		private int _UserID;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnS3PortalLinkIDChanging(int value);
    partial void OnS3PortalLinkIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public S3PermissionEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S3PortalLinkID", DbType="Int NOT NULL")]
		public int S3PortalLinkID
		{
			get
			{
				return this._S3PortalLinkID;
			}
			set
			{
				if ((this._S3PortalLinkID != value))
				{
					this.OnS3PortalLinkIDChanging(value);
					this.SendPropertyChanging();
					this._S3PortalLinkID = value;
					this.SendPropertyChanged("S3PortalLinkID");
					this.OnS3PortalLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.S3PortalLink")]
	internal partial class S3PortalLinkEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _S3PortalLinkID;
		
		private System.Nullable<int> _ServiceType;
		
		private System.Nullable<int> _DistrictID;
		
		private string _BucketName;
		
		private string _FilePath;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private string _PortalKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS3PortalLinkIDChanging(int value);
    partial void OnS3PortalLinkIDChanged();
    partial void OnServiceTypeChanging(System.Nullable<int> value);
    partial void OnServiceTypeChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnBucketNameChanging(string value);
    partial void OnBucketNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnPortalKeyChanging(string value);
    partial void OnPortalKeyChanged();
    #endregion
		
		public S3PortalLinkEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S3PortalLinkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int S3PortalLinkID
		{
			get
			{
				return this._S3PortalLinkID;
			}
			set
			{
				if ((this._S3PortalLinkID != value))
				{
					this.OnS3PortalLinkIDChanging(value);
					this.SendPropertyChanging();
					this._S3PortalLinkID = value;
					this.SendPropertyChanged("S3PortalLinkID");
					this.OnS3PortalLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="Int")]
		public System.Nullable<int> ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BucketName", DbType="VarChar(255)")]
		public string BucketName
		{
			get
			{
				return this._BucketName;
			}
			set
			{
				if ((this._BucketName != value))
				{
					this.OnBucketNameChanging(value);
					this.SendPropertyChanging();
					this._BucketName = value;
					this.SendPropertyChanged("BucketName");
					this.OnBucketNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(500)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalKey", DbType="VarChar(22)")]
		public string PortalKey
		{
			get
			{
				return this._PortalKey;
			}
			set
			{
				if ((this._PortalKey != value))
				{
					this.OnPortalKeyChanging(value);
					this.SendPropertyChanging();
					this._PortalKey = value;
					this.SendPropertyChanged("PortalKey");
					this.OnPortalKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestExtractTemplate")]
	internal partial class TestExtractTemplateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _DisplayOrder;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public TestExtractTemplateEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtractTestResultParam")]
	public partial class ExtractTestResultParamEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtractTestResultParamID;
		
		private System.DateTime _FromDate;
		
		private System.DateTime _ToDate;
		
		private System.Nullable<int> _GradeID;
		
		private System.Nullable<int> _SubjectID;
		
		private System.Nullable<int> _BankID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _TeacherID;
		
		private System.Nullable<int> _ClassID;
		
		private System.Nullable<int> _StudentID;
		
		private string _ListTestIDs;
		
		private string _ListIdsUncheck;
		
		private int _UserID;
		
		private int _UserRoleID;
		
		private string _SubjectName;
		
		private string _GeneralSearch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtractTestResultParamIDChanging(int value);
    partial void OnExtractTestResultParamIDChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    partial void OnGradeIDChanging(System.Nullable<int> value);
    partial void OnGradeIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnBankIDChanging(System.Nullable<int> value);
    partial void OnBankIDChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnClassIDChanging(System.Nullable<int> value);
    partial void OnClassIDChanged();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnListTestIDsChanging(string value);
    partial void OnListTestIDsChanged();
    partial void OnListIdsUncheckChanging(string value);
    partial void OnListIdsUncheckChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserRoleIDChanging(int value);
    partial void OnUserRoleIDChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnGeneralSearchChanging(string value);
    partial void OnGeneralSearchChanged();
    #endregion
		
		public ExtractTestResultParamEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractTestResultParamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtractTestResultParamID
		{
			get
			{
				return this._ExtractTestResultParamID;
			}
			set
			{
				if ((this._ExtractTestResultParamID != value))
				{
					this.OnExtractTestResultParamIDChanging(value);
					this.SendPropertyChanging();
					this._ExtractTestResultParamID = value;
					this.SendPropertyChanged("ExtractTestResultParamID");
					this.OnExtractTestResultParamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime NOT NULL")]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int")]
		public System.Nullable<int> GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this.OnGradeIDChanging(value);
					this.SendPropertyChanging();
					this._GradeID = value;
					this.SendPropertyChanged("GradeID");
					this.OnGradeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int")]
		public System.Nullable<int> BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListTestIDs", DbType="VarChar(MAX)")]
		public string ListTestIDs
		{
			get
			{
				return this._ListTestIDs;
			}
			set
			{
				if ((this._ListTestIDs != value))
				{
					this.OnListTestIDsChanging(value);
					this.SendPropertyChanging();
					this._ListTestIDs = value;
					this.SendPropertyChanged("ListTestIDs");
					this.OnListTestIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListIdsUncheck", DbType="NVarChar(MAX)")]
		public string ListIdsUncheck
		{
			get
			{
				return this._ListIdsUncheck;
			}
			set
			{
				if ((this._ListIdsUncheck != value))
				{
					this.OnListIdsUncheckChanging(value);
					this.SendPropertyChanging();
					this._ListIdsUncheck = value;
					this.SendPropertyChanged("ListIdsUncheck");
					this.OnListIdsUncheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleID", DbType="Int NOT NULL")]
		public int UserRoleID
		{
			get
			{
				return this._UserRoleID;
			}
			set
			{
				if ((this._UserRoleID != value))
				{
					this.OnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._UserRoleID = value;
					this.SendPropertyChanged("UserRoleID");
					this.OnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralSearch", DbType="VarChar(255)")]
		public string GeneralSearch
		{
			get
			{
				return this._GeneralSearch;
			}
			set
			{
				if ((this._GeneralSearch != value))
				{
					this.OnGeneralSearchChanging(value);
					this.SendPropertyChanging();
					this._GeneralSearch = value;
					this.SendPropertyChanged("GeneralSearch");
					this.OnGeneralSearchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtractLocalTestResultsQueue")]
	public partial class ExtractLocalTestResultsQueueEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtractLocalTestResultsQueueID;
		
		private int _DistrictID;
		
		private int _UserID;
		
		private int _UserTimeZoneOffset;
		
		private string _ExportTemplates;
		
		private string _ListIDsInput;
		
		private string _ListSchoolIDs;
		
		private string _ListClassIDs;
		
		private System.Nullable<int> _ExtractType;
		
		private System.DateTime _CreatedDate;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _ProcessingDate;
		
		private System.Nullable<int> _ProcessingTime;
		
		private System.Nullable<System.DateTime> _EndProcessingDate;
		
		private string _BaseHostURL;
		
		private string _UrlDownload;
		
		private System.Nullable<int> _ExtractTestResultParamID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtractLocalTestResultsQueueIDChanging(int value);
    partial void OnExtractLocalTestResultsQueueIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserTimeZoneOffsetChanging(int value);
    partial void OnUserTimeZoneOffsetChanged();
    partial void OnExportTemplatesChanging(string value);
    partial void OnExportTemplatesChanged();
    partial void OnListIDsInputChanging(string value);
    partial void OnListIDsInputChanged();
    partial void OnListSchoolIDsChanging(string value);
    partial void OnListSchoolIDsChanged();
    partial void OnListClassIDsChanging(string value);
    partial void OnListClassIDsChanged();
    partial void OnExtractTypeChanging(System.Nullable<int> value);
    partial void OnExtractTypeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnProcessingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessingDateChanged();
    partial void OnProcessingTimeChanging(System.Nullable<int> value);
    partial void OnProcessingTimeChanged();
    partial void OnEndProcessingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndProcessingDateChanged();
    partial void OnBaseHostURLChanging(string value);
    partial void OnBaseHostURLChanged();
    partial void OnUrlDownloadChanging(string value);
    partial void OnUrlDownloadChanged();
    partial void OnExtractTestResultParamIDChanging(System.Nullable<int> value);
    partial void OnExtractTestResultParamIDChanged();
    #endregion
		
		public ExtractLocalTestResultsQueueEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractLocalTestResultsQueueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtractLocalTestResultsQueueID
		{
			get
			{
				return this._ExtractLocalTestResultsQueueID;
			}
			set
			{
				if ((this._ExtractLocalTestResultsQueueID != value))
				{
					this.OnExtractLocalTestResultsQueueIDChanging(value);
					this.SendPropertyChanging();
					this._ExtractLocalTestResultsQueueID = value;
					this.SendPropertyChanged("ExtractLocalTestResultsQueueID");
					this.OnExtractLocalTestResultsQueueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTimeZoneOffset", DbType="Int NOT NULL")]
		public int UserTimeZoneOffset
		{
			get
			{
				return this._UserTimeZoneOffset;
			}
			set
			{
				if ((this._UserTimeZoneOffset != value))
				{
					this.OnUserTimeZoneOffsetChanging(value);
					this.SendPropertyChanging();
					this._UserTimeZoneOffset = value;
					this.SendPropertyChanged("UserTimeZoneOffset");
					this.OnUserTimeZoneOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportTemplates", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ExportTemplates
		{
			get
			{
				return this._ExportTemplates;
			}
			set
			{
				if ((this._ExportTemplates != value))
				{
					this.OnExportTemplatesChanging(value);
					this.SendPropertyChanging();
					this._ExportTemplates = value;
					this.SendPropertyChanged("ExportTemplates");
					this.OnExportTemplatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListIDsInput", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ListIDsInput
		{
			get
			{
				return this._ListIDsInput;
			}
			set
			{
				if ((this._ListIDsInput != value))
				{
					this.OnListIDsInputChanging(value);
					this.SendPropertyChanging();
					this._ListIDsInput = value;
					this.SendPropertyChanged("ListIDsInput");
					this.OnListIDsInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListSchoolIDs", DbType="VarChar(1000)")]
		public string ListSchoolIDs
		{
			get
			{
				return this._ListSchoolIDs;
			}
			set
			{
				if ((this._ListSchoolIDs != value))
				{
					this.OnListSchoolIDsChanging(value);
					this.SendPropertyChanging();
					this._ListSchoolIDs = value;
					this.SendPropertyChanged("ListSchoolIDs");
					this.OnListSchoolIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListClassIDs", DbType="VarChar(MAX)")]
		public string ListClassIDs
		{
			get
			{
				return this._ListClassIDs;
			}
			set
			{
				if ((this._ListClassIDs != value))
				{
					this.OnListClassIDsChanging(value);
					this.SendPropertyChanging();
					this._ListClassIDs = value;
					this.SendPropertyChanged("ListClassIDs");
					this.OnListClassIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractType", DbType="Int")]
		public System.Nullable<int> ExtractType
		{
			get
			{
				return this._ExtractType;
			}
			set
			{
				if ((this._ExtractType != value))
				{
					this.OnExtractTypeChanging(value);
					this.SendPropertyChanging();
					this._ExtractType = value;
					this.SendPropertyChanged("ExtractType");
					this.OnExtractTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessingDate
		{
			get
			{
				return this._ProcessingDate;
			}
			set
			{
				if ((this._ProcessingDate != value))
				{
					this.OnProcessingDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessingDate = value;
					this.SendPropertyChanged("ProcessingDate");
					this.OnProcessingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingTime", DbType="Int")]
		public System.Nullable<int> ProcessingTime
		{
			get
			{
				return this._ProcessingTime;
			}
			set
			{
				if ((this._ProcessingTime != value))
				{
					this.OnProcessingTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessingTime = value;
					this.SendPropertyChanged("ProcessingTime");
					this.OnProcessingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndProcessingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndProcessingDate
		{
			get
			{
				return this._EndProcessingDate;
			}
			set
			{
				if ((this._EndProcessingDate != value))
				{
					this.OnEndProcessingDateChanging(value);
					this.SendPropertyChanging();
					this._EndProcessingDate = value;
					this.SendPropertyChanged("EndProcessingDate");
					this.OnEndProcessingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseHostURL", DbType="VarChar(100)")]
		public string BaseHostURL
		{
			get
			{
				return this._BaseHostURL;
			}
			set
			{
				if ((this._BaseHostURL != value))
				{
					this.OnBaseHostURLChanging(value);
					this.SendPropertyChanging();
					this._BaseHostURL = value;
					this.SendPropertyChanged("BaseHostURL");
					this.OnBaseHostURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlDownload", DbType="VarChar(500)")]
		public string UrlDownload
		{
			get
			{
				return this._UrlDownload;
			}
			set
			{
				if ((this._UrlDownload != value))
				{
					this.OnUrlDownloadChanging(value);
					this.SendPropertyChanging();
					this._UrlDownload = value;
					this.SendPropertyChanged("UrlDownload");
					this.OnUrlDownloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractTestResultParamID", DbType="Int")]
		public System.Nullable<int> ExtractTestResultParamID
		{
			get
			{
				return this._ExtractTestResultParamID;
			}
			set
			{
				if ((this._ExtractTestResultParamID != value))
				{
					this.OnExtractTestResultParamIDChanging(value);
					this.SendPropertyChanging();
					this._ExtractTestResultParamID = value;
					this.SendPropertyChanged("ExtractTestResultParamID");
					this.OnExtractTestResultParamIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ExportAssessmentItemResponse_NewResult
	{
		
		private string _Code;
		
		private string _TestName;
		
		private int _QuestionOrder;
		
		private string _Number;
		
		private int _PointsPossible;
		
		private string _CorrectAnswer;
		
		private string _QtiSchemaId;
		
		private string _ResponseLongType;
		
		private System.Nullable<int> _Year;
		
		public ExportAssessmentItemResponse_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this._CorrectAnswer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtiSchemaId", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string QtiSchemaId
		{
			get
			{
				return this._QtiSchemaId;
			}
			set
			{
				if ((this._QtiSchemaId != value))
				{
					this._QtiSchemaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseLongType", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ResponseLongType
		{
			get
			{
				return this._ResponseLongType;
			}
			set
			{
				if ((this._ResponseLongType != value))
				{
					this._ResponseLongType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class Export_ASMNT_ITEMR_ACADEMIC_STDS_NewResult
	{
		
		private string _Code;
		
		private string _TestName;
		
		private int _QuestionOrder;
		
		private string _Document;
		
		private int _Year;
		
		private string _Number;
		
		private System.Nullable<int> _YearResultDate;
		
		public Export_ASMNT_ITEMR_ACADEMIC_STDS_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Document", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Document
		{
			get
			{
				return this._Document;
			}
			set
			{
				if ((this._Document != value))
				{
					this._Document = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearResultDate", DbType="Int")]
		public System.Nullable<int> YearResultDate
		{
			get
			{
				return this._YearResultDate;
			}
			set
			{
				if ((this._YearResultDate != value))
				{
					this._YearResultDate = value;
				}
			}
		}
	}
	
	public partial class Export_ASSESSMENT_RESPONSE_NewResult
	{
		
		private string _Code;
		
		private string _TestName;
		
		private string _StudentCode;
		
		private int _QuestionOrder;
		
		private string _AnswerText;
		
		private int _PointsEarned;
		
		private System.DateTime _ResultDate;
		
		public Export_ASSESSMENT_RESPONSE_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerText", DbType="NVarChar(MAX)")]
		public string AnswerText
		{
			get
			{
				return this._AnswerText;
			}
			set
			{
				if ((this._AnswerText != value))
				{
					this._AnswerText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
	}
	
	public partial class ExportAssessmentItem_NewResult
	{
		
		private string _Code;
		
		private string _TestName;
		
		private string _SubjectName;
		
		private string _BankName;
		
		private string _GradeName;
		
		private string _DistrictTermName;
		
		private string _SubtestHighestGradeLevel;
		
		private string _SubtestLowestGradeLevel;
		
		private System.Nullable<int> _Year;
		
		public ExportAssessmentItem_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this._GradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubtestHighestGradeLevel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubtestHighestGradeLevel
		{
			get
			{
				return this._SubtestHighestGradeLevel;
			}
			set
			{
				if ((this._SubtestHighestGradeLevel != value))
				{
					this._SubtestHighestGradeLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubtestLowestGradeLevel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubtestLowestGradeLevel
		{
			get
			{
				return this._SubtestLowestGradeLevel;
			}
			set
			{
				if ((this._SubtestLowestGradeLevel != value))
				{
					this._SubtestLowestGradeLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class ExportAssessmentAchievedDetail_NewResult
	{
		
		private string _Code;
		
		private string _TestName;
		
		private int _AchievementLevel;
		
		private string _AchieveLevelName;
		
		private System.Nullable<int> _Year;
		
		public ExportAssessmentAchievedDetail_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevel", DbType="Int NOT NULL")]
		public int AchievementLevel
		{
			get
			{
				return this._AchievementLevel;
			}
			set
			{
				if ((this._AchievementLevel != value))
				{
					this._AchievementLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchieveLevelName", DbType="VarChar(50)")]
		public string AchieveLevelName
		{
			get
			{
				return this._AchieveLevelName;
			}
			set
			{
				if ((this._AchieveLevelName != value))
				{
					this._AchieveLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class ExportUserInformationResult
	{
		
		private System.Nullable<int> _SchoolID;
		
		private string _SchoolName;
		
		private System.Nullable<int> _UserID;
		
		private string _Username;
		
		private string _Email;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public ExportUserInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	public partial class ExportTestResult
	{
		
		private int _BankID;
		
		private int _VirtualTestID;
		
		private string _BankName;
		
		private string _TestName;
		
		private string _Grade;
		
		private string _Subject;
		
		public ExportTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
	}
	
	public partial class ExportQuestionTemplateResult
	{
		
		private int _VirtualTestID;
		
		private string _name;
		
		private int _PointsPossible;
		
		private int _QuestionOrder;
		
		private string _Standard;
		
		private string _Topic;
		
		private string _Skill;
		
		private string _Other;
		
		public ExportQuestionTemplateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(MAX)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this._Standard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(MAX)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this._Topic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill", DbType="NVarChar(MAX)")]
		public string Skill
		{
			get
			{
				return this._Skill;
			}
			set
			{
				if ((this._Skill != value))
				{
					this._Skill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(MAX)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this._Other = value;
				}
			}
		}
	}
	
	public partial class ExportTestResultTemplateResult
	{
		
		private int _VirtualTestID;
		
		private string _TestName;
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private string _DistrictTermName;
		
		private string _ClassName;
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private int _StudentID;
		
		private string _StudentCode;
		
		private System.Nullable<decimal> _ScoreRaw;
		
		private System.DateTime _ResultDate;
		
		private string _Code;
		
		private string _StatusName;
		
		private string _TimeSettingValue;
		
		public ExportTestResultTemplateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreRaw", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ScoreRaw
		{
			get
			{
				return this._ScoreRaw;
			}
			set
			{
				if ((this._ScoreRaw != value))
				{
					this._ScoreRaw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(64)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSettingValue", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TimeSettingValue
		{
			get
			{
				return this._TimeSettingValue;
			}
			set
			{
				if ((this._TimeSettingValue != value))
				{
					this._TimeSettingValue = value;
				}
			}
		}
	}
	
	public partial class ExportPointsEarnedResult
	{
		
		private int _TestResultID;
		
		private string _ClassName;
		
		private System.Nullable<int> _UserID;
		
		private string _UserName;
		
		private string _Term;
		
		private System.Nullable<int> _SchoolID;
		
		private string _SchoolName;
		
		private int _StudentID;
		
		private string _StudentCode;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private int _QuestionOrder;
		
		private int _PointsEarned;
		
		private int _PointsPossible;
		
		private bool _WasAnswered;
		
		public ExportPointsEarnedResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(100)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50)")]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionOrder", DbType="Int NOT NULL")]
		public int QuestionOrder
		{
			get
			{
				return this._QuestionOrder;
			}
			set
			{
				if ((this._QuestionOrder != value))
				{
					this._QuestionOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsEarned", DbType="Int NOT NULL")]
		public int PointsEarned
		{
			get
			{
				return this._PointsEarned;
			}
			set
			{
				if ((this._PointsEarned != value))
				{
					this._PointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="Int NOT NULL")]
		public int PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this._PointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasAnswered", DbType="Bit NOT NULL")]
		public bool WasAnswered
		{
			get
			{
				return this._WasAnswered;
			}
			set
			{
				if ((this._WasAnswered != value))
				{
					this._WasAnswered = value;
				}
			}
		}
	}
	
	public partial class ExportStudentResponseResult
	{
		
		private int _TestResultID;
		
		private string _ClassName;
		
		private System.Nullable<int> _UserID;
		
		private string _UserName;
		
		private string _Term;
		
		private System.Nullable<int> _SchoolID;
		
		private string _SchoolName;
		
		private int _StudentID;
		
		private string _StudentCode;
		
		private System.Nullable<int> _VirtualTestID;
		
		private string _TestName;
		
		private string _AnswerLetterString;
		
		public ExportStudentResponseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(100)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50)")]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int")]
		public System.Nullable<int> VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerLetterString", DbType="VarChar(MAX)")]
		public string AnswerLetterString
		{
			get
			{
				return this._AnswerLetterString;
			}
			set
			{
				if ((this._AnswerLetterString != value))
				{
					this._AnswerLetterString = value;
				}
			}
		}
	}
	
	public partial class ExportClassTestAssignmentsTemplateResult
	{
		
		private System.DateTime _Assigned;
		
		private int _VirtualtestID;
		
		private string _Test;
		
		private System.Nullable<int> _UserID;
		
		private string _Username;
		
		private System.Nullable<int> _SchoolID;
		
		private string _SchoolName;
		
		private string _ClassName;
		
		private string _Code;
		
		private System.Nullable<int> _Started;
		
		private System.Nullable<int> _Completed;
		
		private System.Nullable<int> _WaitingForReview;
		
		private System.Nullable<int> _NotStarted;
		
		public ExportClassTestAssignmentsTemplateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="DateTime NOT NULL")]
		public System.DateTime Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this._Assigned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualtestID", DbType="Int NOT NULL")]
		public int VirtualtestID
		{
			get
			{
				return this._VirtualtestID;
			}
			set
			{
				if ((this._VirtualtestID != value))
				{
					this._VirtualtestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this._Test = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="Int")]
		public System.Nullable<int> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Int")]
		public System.Nullable<int> Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this._Completed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingForReview", DbType="Int")]
		public System.Nullable<int> WaitingForReview
		{
			get
			{
				return this._WaitingForReview;
			}
			set
			{
				if ((this._WaitingForReview != value))
				{
					this._WaitingForReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotStarted", DbType="Int")]
		public System.Nullable<int> NotStarted
		{
			get
			{
				return this._NotStarted;
			}
			set
			{
				if ((this._NotStarted != value))
				{
					this._NotStarted = value;
				}
			}
		}
	}
	
	public partial class ExportRosterTemplateResult
	{
		
		private string _LocationCode;
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private int _UserID;
		
		private string _Username;
		
		private string _Term;
		
		private string _ClassName;
		
		private System.Nullable<System.DateTime> _ClassCreated;
		
		private string _Course;
		
		private string _Section;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private int _StudentID;
		
		private string _StudentCode;
		
		private System.Nullable<System.DateTime> _StudentCreate;
		
		private System.Nullable<System.DateTime> _StudentModified;
		
		private string _Gender;
		
		private string _Race;
		
		private string _Grade;
		
		private string _ParentFirstName;
		
		private string _ParentLastName;
		
		private string _ParentEmail;
		
		private string _ParentPhone;
		
		private string _Program;
		
		public ExportRosterTemplateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(10)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClassCreated
		{
			get
			{
				return this._ClassCreated;
			}
			set
			{
				if ((this._ClassCreated != value))
				{
					this._ClassCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(200)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="VarChar(50)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this._Section = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StudentCreate
		{
			get
			{
				return this._StudentCreate;
			}
			set
			{
				if ((this._StudentCreate != value))
				{
					this._StudentCreate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> StudentModified
		{
			get
			{
				return this._StudentModified;
			}
			set
			{
				if ((this._StudentModified != value))
				{
					this._StudentModified = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="VarChar(50)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this._Race = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentFirstName", DbType="VarChar(50)")]
		public string ParentFirstName
		{
			get
			{
				return this._ParentFirstName;
			}
			set
			{
				if ((this._ParentFirstName != value))
				{
					this._ParentFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentLastName", DbType="VarChar(50)")]
		public string ParentLastName
		{
			get
			{
				return this._ParentLastName;
			}
			set
			{
				if ((this._ParentLastName != value))
				{
					this._ParentLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentEmail", DbType="VarChar(100)")]
		public string ParentEmail
		{
			get
			{
				return this._ParentEmail;
			}
			set
			{
				if ((this._ParentEmail != value))
				{
					this._ParentEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPhone", DbType="VarChar(50)")]
		public string ParentPhone
		{
			get
			{
				return this._ParentPhone;
			}
			set
			{
				if ((this._ParentPhone != value))
				{
					this._ParentPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program", DbType="NVarChar(MAX)")]
		public string Program
		{
			get
			{
				return this._Program;
			}
			set
			{
				if ((this._Program != value))
				{
					this._Program = value;
				}
			}
		}
	}
	
	public partial class Export_ASMNT_SUBTEST_ACADEMIC_STDS_NewResult
	{
		
		private string _Code;
		
		private string _TestName;
		
		private System.Nullable<int> _Year;
		
		public Export_ASMNT_SUBTEST_ACADEMIC_STDS_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class Export_ASSESSMENT_ACC_MOD_FACT_NewResult
	{
		
		private string _Code;
		
		private string _ResultDate;
		
		private string _TestName;
		
		private string _StudentCode;
		
		private System.Nullable<int> _Year;
		
		public Export_ASSESSMENT_ACC_MOD_FACT_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="VarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class Export_ASSESSMENT_FACT_NewResult
	{
		
		private string _Code;
		
		private string _ResultDate;
		
		private string _TestName;
		
		private string _StudentCode;
		
		private System.Nullable<int> _TotalPointsEarned;
		
		private System.Nullable<int> _TotalPointsPossible;
		
		private System.Nullable<int> _Year;
		
		public Export_ASSESSMENT_FACT_NewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="VarChar(10)")]
		public string ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this._TestName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPointsEarned", DbType="Int")]
		public System.Nullable<int> TotalPointsEarned
		{
			get
			{
				return this._TotalPointsEarned;
			}
			set
			{
				if ((this._TotalPointsEarned != value))
				{
					this._TotalPointsEarned = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPointsPossible", DbType="Int")]
		public System.Nullable<int> TotalPointsPossible
		{
			get
			{
				return this._TotalPointsPossible;
			}
			set
			{
				if ((this._TotalPointsPossible != value))
				{
					this._TotalPointsPossible = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class extrGetGradeHaveTestResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public extrGetGradeHaveTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class extrGetSubjectHaveTestResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public extrGetSubjectHaveTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class extrGetBankHaveTestResult
	{
		
		private int _BankID;
		
		private string _Name;
		
		public extrGetBankHaveTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetVirtualTestResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		public extrGetVirtualTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetSchoolsHaveTestResultResult
	{
		
		private int _SchoolID;
		
		private string _NAME;
		
		public extrGetSchoolsHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class extrGetSchoolsHaveUserResult
	{
		
		private int _SchoolID;
		
		private string _NAME;
		
		public extrGetSchoolsHaveUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class extrGetTeachersHaveTestResultResult
	{
		
		private int _UserID;
		
		private string _TeacherName;
		
		public extrGetTeachersHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(155)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
	}
	
	public partial class extrGetClassesHaveTestResultResult
	{
		
		private int _ClassID;
		
		private string _NAME;
		
		public extrGetClassesHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class extrGetStudentsHaveTestResultResult
	{
		
		private int _StudentID;
		
		private string _StudentName;
		
		private string _Code;
		
		public extrGetStudentsHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(202) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
	}
	
	public partial class extrGetAllTestResultIdByFilterResult
	{
		
		private int _TestResultID;
		
		public extrGetAllTestResultIdByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
	}
	
	public partial class extrGetVirtualTestByFilterResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		private string _BankName;
		
		private string _Subject;
		
		private string _Grade;
		
		public extrGetVirtualTestByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(500)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this._Grade = value;
				}
			}
		}
	}
	
	public partial class extrGetGradeHaveTestResultResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		public extrGetGradeHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetBankHaveTestAssignmentResult
	{
		
		private int _BankID;
		
		private string _Name;
		
		public extrGetBankHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetClassesHaveTestAssignmentResult
	{
		
		private int _ClassID;
		
		private string _NAME;
		
		public extrGetClassesHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class extrGetGradeHaveTestAssignmentResult
	{
		
		private int _GradeID;
		
		private string _Name;
		
		private int _Order;
		
		public extrGetGradeHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int NOT NULL")]
		public int Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	public partial class extrGetSchoolsHaveTestAssignmentResult
	{
		
		private int _SchoolID;
		
		private string _NAME;
		
		public extrGetSchoolsHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
	}
	
	public partial class extrGetSubjectHaveTestAssignmentResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		private int _GradeID;
		
		private int _StateID;
		
		private string _ShortName;
		
		public extrGetSubjectHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeID", DbType="Int NOT NULL")]
		public int GradeID
		{
			get
			{
				return this._GradeID;
			}
			set
			{
				if ((this._GradeID != value))
				{
					this._GradeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(10)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
	}
	
	public partial class extrGetTeachersHaveTestAssignmentResult
	{
		
		private int _UserID;
		
		private string _TeacherName;
		
		public extrGetTeachersHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(155)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
	}
	
	public partial class extrGetSubjectHaveTestResultResult
	{
		
		private int _SubjectID;
		
		private string _Name;
		
		public extrGetSubjectHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetBankHaveTestResultResult
	{
		
		private int _BankID;
		
		private string _Name;
		
		public extrGetBankHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this._BankID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetVirtualTestHaveTestAssignmentResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		public extrGetVirtualTestHaveTestAssignmentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetVirtualTestHaveTestResultResult
	{
		
		private int _VirtualTestID;
		
		private string _Name;
		
		public extrGetVirtualTestHaveTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetTestAssignmentByFilterResult
	{
		
		private int _QTITestClassAssignmentID;
		
		private System.DateTime _AssignmentDate;
		
		private string _ClassName;
		
		private string _TeacherCustom;
		
		private string _TestNameCustom;
		
		private string _Code;
		
		public extrGetTestAssignmentByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTITestClassAssignmentID", DbType="Int NOT NULL")]
		public int QTITestClassAssignmentID
		{
			get
			{
				return this._QTITestClassAssignmentID;
			}
			set
			{
				if ((this._QTITestClassAssignmentID != value))
				{
					this._QTITestClassAssignmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignmentDate", DbType="DateTime NOT NULL")]
		public System.DateTime AssignmentDate
		{
			get
			{
				return this._AssignmentDate;
			}
			set
			{
				if ((this._AssignmentDate != value))
				{
					this._AssignmentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(155)")]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(259)")]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
	}
	
	public partial class extrGetTermHaveStudentResult
	{
		
		private int _DistrictTermID;
		
		private string _Name;
		
		public extrGetTermHaveStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetUserByFilterResult
	{
		
		private int _UserID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _SchoolID;
		
		private string _Name;
		
		public extrGetUserByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetRosterByFilterResult
	{
		
		private int _ClassID;
		
		private string _ClassName;
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private int _UserID;
		
		private string _UserName;
		
		private string _StudentCode;
		
		private string _StudentCustom;
		
		private string _DistrictTerm;
		
		private int _ClassStudentID;
		
		public extrGetRosterByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(155)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTerm", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTerm
		{
			get
			{
				return this._DistrictTerm;
			}
			set
			{
				if ((this._DistrictTerm != value))
				{
					this._DistrictTerm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassStudentID", DbType="Int NOT NULL")]
		public int ClassStudentID
		{
			get
			{
				return this._ClassStudentID;
			}
			set
			{
				if ((this._ClassStudentID != value))
				{
					this._ClassStudentID = value;
				}
			}
		}
	}
	
	public partial class extrGetSchoolHaveStudentResult
	{
		
		private int _SchoolID;
		
		private string _Name;
		
		public extrGetSchoolHaveStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetClassHaveStudentResult
	{
		
		private int _ClassID;
		
		private string _Name;
		
		public extrGetClassHaveStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class extrGetTeacherHaveStudentResult
	{
		
		private int _UserID;
		
		private string _TeacherName;
		
		public extrGetTeacherHaveStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(155)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
	}
	
	public partial class extrGetClassIDsByFilterResult
	{
		
		private int _ClassID;
		
		public extrGetClassIDsByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
	}
	
	public partial class extrGetTestResultByFilterResult
	{
		
		private int _TestResultID;
		
		private System.DateTime _ResultDate;
		
		private int _StudentID;
		
		private string _StudentCode;
		
		private string _StudentCustom;
		
		private string _ClassNameCustom;
		
		private string _TeacherCustom;
		
		private string _SchoolName;
		
		private string _TestNameCustom;
		
		private int _TotalRows;
		
		public extrGetTestResultByFilterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int NOT NULL")]
		public int TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this._TestResultID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultDate", DbType="DateTime2 NOT NULL")]
		public System.DateTime ResultDate
		{
			get
			{
				return this._ResultDate;
			}
			set
			{
				if ((this._ResultDate != value))
				{
					this._ResultDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCode
		{
			get
			{
				return this._StudentCode;
			}
			set
			{
				if ((this._StudentCode != value))
				{
					this._StudentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StudentCustom
		{
			get
			{
				return this._StudentCustom;
			}
			set
			{
				if ((this._StudentCustom != value))
				{
					this._StudentCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TeacherCustom
		{
			get
			{
				return this._TeacherCustom;
			}
			set
			{
				if ((this._TeacherCustom != value))
				{
					this._TeacherCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameCustom", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string TestNameCustom
		{
			get
			{
				return this._TestNameCustom;
			}
			set
			{
				if ((this._TestNameCustom != value))
				{
					this._TestNameCustom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRows", DbType="Int NOT NULL")]
		public int TotalRows
		{
			get
			{
				return this._TotalRows;
			}
			set
			{
				if ((this._TotalRows != value))
				{
					this._TotalRows = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
