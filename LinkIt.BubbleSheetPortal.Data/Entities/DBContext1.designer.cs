#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkIt.BubbleSheetPortal.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdminReportingVNS")]
	internal partial class DbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRequestEntity(RequestEntity instance);
    partial void UpdateRequestEntity(RequestEntity instance);
    partial void DeleteRequestEntity(RequestEntity instance);
    partial void InsertRequestParameterEntity(RequestParameterEntity instance);
    partial void UpdateRequestParameterEntity(RequestParameterEntity instance);
    partial void DeleteRequestParameterEntity(RequestParameterEntity instance);
    partial void InsertColumnLookupDataEntity(ColumnLookupDataEntity instance);
    partial void UpdateColumnLookupDataEntity(ColumnLookupDataEntity instance);
    partial void DeleteColumnLookupDataEntity(ColumnLookupDataEntity instance);
    partial void InsertDelegateTeacherEntity(DelegateTeacherEntity instance);
    partial void UpdateDelegateTeacherEntity(DelegateTeacherEntity instance);
    partial void DeleteDelegateTeacherEntity(DelegateTeacherEntity instance);
    partial void InsertMappingInformationEntity(MappingInformationEntity instance);
    partial void UpdateMappingInformationEntity(MappingInformationEntity instance);
    partial void DeleteMappingInformationEntity(MappingInformationEntity instance);
    partial void InsertPrintingGroupEntity(PrintingGroupEntity instance);
    partial void UpdatePrintingGroupEntity(PrintingGroupEntity instance);
    partial void DeletePrintingGroupEntity(PrintingGroupEntity instance);
    partial void InsertPrintingGroupJobEntity(PrintingGroupJobEntity instance);
    partial void UpdatePrintingGroupJobEntity(PrintingGroupJobEntity instance);
    partial void DeletePrintingGroupJobEntity(PrintingGroupJobEntity instance);
    partial void InsertStandardColumnEntity(StandardColumnEntity instance);
    partial void UpdateStandardColumnEntity(StandardColumnEntity instance);
    partial void DeleteStandardColumnEntity(StandardColumnEntity instance);
    partial void InsertRequestEmailNotificationEntity(RequestEmailNotificationEntity instance);
    partial void UpdateRequestEmailNotificationEntity(RequestEmailNotificationEntity instance);
    partial void DeleteRequestEmailNotificationEntity(RequestEmailNotificationEntity instance);
    partial void InsertReportEntity(ReportEntity instance);
    partial void UpdateReportEntity(ReportEntity instance);
    partial void DeleteReportEntity(ReportEntity instance);
    partial void InsertClassPrintingGroupEntity(ClassPrintingGroupEntity instance);
    partial void UpdateClassPrintingGroupEntity(ClassPrintingGroupEntity instance);
    partial void DeleteClassPrintingGroupEntity(ClassPrintingGroupEntity instance);
    partial void InsertRequestStudentResponse(RequestStudentResponse instance);
    partial void UpdateRequestStudentResponse(RequestStudentResponse instance);
    partial void DeleteRequestStudentResponse(RequestStudentResponse instance);
    partial void InsertRequestQuestion(RequestQuestion instance);
    partial void UpdateRequestQuestion(RequestQuestion instance);
    partial void DeleteRequestQuestion(RequestQuestion instance);
    partial void InsertRoleEntity(RoleEntity instance);
    partial void UpdateRoleEntity(RoleEntity instance);
    partial void DeleteRoleEntity(RoleEntity instance);
    partial void InsertXLIModuleEntity(XLIModuleEntity instance);
    partial void UpdateXLIModuleEntity(XLIModuleEntity instance);
    partial void DeleteXLIModuleEntity(XLIModuleEntity instance);
    partial void InsertVirtualQuestionSubEntity(VirtualQuestionSubEntity instance);
    partial void UpdateVirtualQuestionSubEntity(VirtualQuestionSubEntity instance);
    partial void DeleteVirtualQuestionSubEntity(VirtualQuestionSubEntity instance);
    partial void InsertVirtualQuestionAnswerScoreEntity(VirtualQuestionAnswerScoreEntity instance);
    partial void UpdateVirtualQuestionAnswerScoreEntity(VirtualQuestionAnswerScoreEntity instance);
    partial void DeleteVirtualQuestionAnswerScoreEntity(VirtualQuestionAnswerScoreEntity instance);
    partial void InsertTestAssignmentEntity(TestAssignmentEntity instance);
    partial void UpdateTestAssignmentEntity(TestAssignmentEntity instance);
    partial void DeleteTestAssignmentEntity(TestAssignmentEntity instance);
    partial void InsertLoggedOffUserEntity(LoggedOffUserEntity instance);
    partial void UpdateLoggedOffUserEntity(LoggedOffUserEntity instance);
    partial void DeleteLoggedOffUserEntity(LoggedOffUserEntity instance);
    partial void InsertUserLogonEntity(UserLogonEntity instance);
    partial void UpdateUserLogonEntity(UserLogonEntity instance);
    partial void DeleteUserLogonEntity(UserLogonEntity instance);
    partial void InsertRosterTypeEntity(RosterTypeEntity instance);
    partial void UpdateRosterTypeEntity(RosterTypeEntity instance);
    partial void DeleteRosterTypeEntity(RosterTypeEntity instance);
    partial void InsertDistrictRosterOptionEntity(DistrictRosterOptionEntity instance);
    partial void UpdateDistrictRosterOptionEntity(DistrictRosterOptionEntity instance);
    partial void DeleteDistrictRosterOptionEntity(DistrictRosterOptionEntity instance);
    partial void InsertTTLConfigEntity(TTLConfigEntity instance);
    partial void UpdateTTLConfigEntity(TTLConfigEntity instance);
    partial void DeleteTTLConfigEntity(TTLConfigEntity instance);
    partial void InsertAchievementLevelSettingEntity(AchievementLevelSettingEntity instance);
    partial void UpdateAchievementLevelSettingEntity(AchievementLevelSettingEntity instance);
    partial void DeleteAchievementLevelSettingEntity(AchievementLevelSettingEntity instance);
    partial void InsertVirtualTestDBEntity(VirtualTestDBEntity instance);
    partial void UpdateVirtualTestDBEntity(VirtualTestDBEntity instance);
    partial void DeleteVirtualTestDBEntity(VirtualTestDBEntity instance);
    partial void InsertLTIRequestHistoryEntity(LTIRequestHistoryEntity instance);
    partial void UpdateLTIRequestHistoryEntity(LTIRequestHistoryEntity instance);
    partial void DeleteLTIRequestHistoryEntity(LTIRequestHistoryEntity instance);
    partial void InsertLTIInformationEntity(LTIInformationEntity instance);
    partial void UpdateLTIInformationEntity(LTIInformationEntity instance);
    partial void DeleteLTIInformationEntity(LTIInformationEntity instance);
    partial void InsertDistrictDataParmEntity(DistrictDataParmEntity instance);
    partial void UpdateDistrictDataParmEntity(DistrictDataParmEntity instance);
    partial void DeleteDistrictDataParmEntity(DistrictDataParmEntity instance);
    partial void InsertInteroperability(Interoperability instance);
    partial void UpdateInteroperability(Interoperability instance);
    partial void DeleteInteroperability(Interoperability instance);
    partial void InsertLinkitObjectType(LinkitObjectType instance);
    partial void UpdateLinkitObjectType(LinkitObjectType instance);
    partial void DeleteLinkitObjectType(LinkitObjectType instance);
    partial void InsertSSORedirectUrlEntity(SSORedirectUrlEntity instance);
    partial void UpdateSSORedirectUrlEntity(SSORedirectUrlEntity instance);
    partial void DeleteSSORedirectUrlEntity(SSORedirectUrlEntity instance);
    partial void InsertDataSetCategoryDistrictDisplayName(DataSetCategoryDistrictDisplayName instance);
    partial void UpdateDataSetCategoryDistrictDisplayName(DataSetCategoryDistrictDisplayName instance);
    partial void DeleteDataSetCategoryDistrictDisplayName(DataSetCategoryDistrictDisplayName instance);
    partial void InsertDataSetCategoryEntity(DataSetCategoryEntity instance);
    partial void UpdateDataSetCategoryEntity(DataSetCategoryEntity instance);
    partial void DeleteDataSetCategoryEntity(DataSetCategoryEntity instance);
    partial void InsertClassMetaEntity(ClassMetaEntity instance);
    partial void UpdateClassMetaEntity(ClassMetaEntity instance);
    partial void DeleteClassMetaEntity(ClassMetaEntity instance);
    partial void InsertXLIAreaEntity(XLIAreaEntity instance);
    partial void UpdateXLIAreaEntity(XLIAreaEntity instance);
    partial void DeleteXLIAreaEntity(XLIAreaEntity instance);
    partial void InsertAggregateSubjectMappingEntity(AggregateSubjectMappingEntity instance);
    partial void UpdateAggregateSubjectMappingEntity(AggregateSubjectMappingEntity instance);
    partial void DeleteAggregateSubjectMappingEntity(AggregateSubjectMappingEntity instance);
    partial void InsertxpsDistrictUploadEntity(xpsDistrictUploadEntity instance);
    partial void UpdatexpsDistrictUploadEntity(xpsDistrictUploadEntity instance);
    partial void DeletexpsDistrictUploadEntity(xpsDistrictUploadEntity instance);
    partial void InsertxpsQueueEntity(xpsQueueEntity instance);
    partial void UpdatexpsQueueEntity(xpsQueueEntity instance);
    partial void DeletexpsQueueEntity(xpsQueueEntity instance);
    #endregion
		
		public DbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<RequestEntity> RequestEntities
		{
			get
			{
				return this.GetTable<RequestEntity>();
			}
		}
		
		internal System.Data.Linq.Table<SchoolManagementView> SchoolManagementViews
		{
			get
			{
				return this.GetTable<SchoolManagementView>();
			}
		}
		
		internal System.Data.Linq.Table<RequestParameterEntity> RequestParameterEntities
		{
			get
			{
				return this.GetTable<RequestParameterEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ClusterDistrictEntity> ClusterDistrictEntities
		{
			get
			{
				return this.GetTable<ClusterDistrictEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ColumnLookupDataEntity> ColumnLookupDataEntities
		{
			get
			{
				return this.GetTable<ColumnLookupDataEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DelegateTeacherEntity> DelegateTeacherEntities
		{
			get
			{
				return this.GetTable<DelegateTeacherEntity>();
			}
		}
		
		internal System.Data.Linq.Table<MappingInformationEntity> MappingInformationEntities
		{
			get
			{
				return this.GetTable<MappingInformationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<PrintingGroupEntity> PrintingGroupEntities
		{
			get
			{
				return this.GetTable<PrintingGroupEntity>();
			}
		}
		
		internal System.Data.Linq.Table<PrintingGroupJobEntity> PrintingGroupJobEntities
		{
			get
			{
				return this.GetTable<PrintingGroupJobEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RequestParameterDistrictView> RequestParameterDistrictViews
		{
			get
			{
				return this.GetTable<RequestParameterDistrictView>();
			}
		}
		
		internal System.Data.Linq.Table<StandardColumnEntity> StandardColumnEntities
		{
			get
			{
				return this.GetTable<StandardColumnEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RequestEmailNotificationEntity> RequestEmailNotificationEntities
		{
			get
			{
				return this.GetTable<RequestEmailNotificationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<TestStudentsWithRosterView> TestStudentsWithRosterViews
		{
			get
			{
				return this.GetTable<TestStudentsWithRosterView>();
			}
		}
		
		internal System.Data.Linq.Table<StudentGroupView> StudentGroupViews
		{
			get
			{
				return this.GetTable<StudentGroupView>();
			}
		}
		
		internal System.Data.Linq.Table<RequestNotificationEmailView> RequestNotificationEmailViews
		{
			get
			{
				return this.GetTable<RequestNotificationEmailView>();
			}
		}
		
		internal System.Data.Linq.Table<ReportEntity> ReportEntities
		{
			get
			{
				return this.GetTable<ReportEntity>();
			}
		}
		
		internal System.Data.Linq.Table<PrintingGroupDataView> PrintingGroupDataViews
		{
			get
			{
				return this.GetTable<PrintingGroupDataView>();
			}
		}
		
		internal System.Data.Linq.Table<ClassPrintingGroupEntity> ClassPrintingGroupEntities
		{
			get
			{
				return this.GetTable<ClassPrintingGroupEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DistrictRosterUploadView> DistrictRosterUploadViews
		{
			get
			{
				return this.GetTable<DistrictRosterUploadView>();
			}
		}
		
		internal System.Data.Linq.Table<RequestStudentResponse> RequestStudentResponses
		{
			get
			{
				return this.GetTable<RequestStudentResponse>();
			}
		}
		
		internal System.Data.Linq.Table<RequestQuestion> RequestQuestions
		{
			get
			{
				return this.GetTable<RequestQuestion>();
			}
		}
		
		public System.Data.Linq.Table<ClassSchoolTeacherStudentView> ClassSchoolTeacherStudentViews
		{
			get
			{
				return this.GetTable<ClassSchoolTeacherStudentView>();
			}
		}
		
		internal System.Data.Linq.Table<RoleEntity> RoleEntities
		{
			get
			{
				return this.GetTable<RoleEntity>();
			}
		}
		
		internal System.Data.Linq.Table<XLIIconAccessView> XLIIconAccessViews
		{
			get
			{
				return this.GetTable<XLIIconAccessView>();
			}
		}
		
		public System.Data.Linq.Table<XLIModuleAccessView> XLIModuleAccessViews
		{
			get
			{
				return this.GetTable<XLIModuleAccessView>();
			}
		}
		
		internal System.Data.Linq.Table<XLIModuleEntity> XLIModuleEntities
		{
			get
			{
				return this.GetTable<XLIModuleEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionSubEntity> VirtualQuestionSubEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionSubEntity>();
			}
		}
		
		public System.Data.Linq.Table<VirtualQuestionAnswerScoreEntity> VirtualQuestionAnswerScoreEntities
		{
			get
			{
				return this.GetTable<VirtualQuestionAnswerScoreEntity>();
			}
		}
		
		public System.Data.Linq.Table<TestAssignmentEntity> TestAssignmentEntities
		{
			get
			{
				return this.GetTable<TestAssignmentEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ClassUserView> ClassUserViews
		{
			get
			{
				return this.GetTable<ClassUserView>();
			}
		}
		
		internal System.Data.Linq.Table<LoggedOffUserEntity> LoggedOffUserEntities
		{
			get
			{
				return this.GetTable<LoggedOffUserEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserLogonEntity> UserLogonEntities
		{
			get
			{
				return this.GetTable<UserLogonEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RosterTypeEntity> RosterTypeEntities
		{
			get
			{
				return this.GetTable<RosterTypeEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DistrictRosterOptionEntity> DistrictRosterOptionEntities
		{
			get
			{
				return this.GetTable<DistrictRosterOptionEntity>();
			}
		}
		
		public System.Data.Linq.Table<UserDistrictSectorView> UserDistrictSectorViews
		{
			get
			{
				return this.GetTable<UserDistrictSectorView>();
			}
		}
		
		internal System.Data.Linq.Table<TTLConfigEntity> TTLConfigEntities
		{
			get
			{
				return this.GetTable<TTLConfigEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AchievementLevelSettingEntity> AchievementLevelSettingEntities
		{
			get
			{
				return this.GetTable<AchievementLevelSettingEntity>();
			}
		}
		
		internal System.Data.Linq.Table<VirtualTestDBEntity> VirtualTestDBEntities
		{
			get
			{
				return this.GetTable<VirtualTestDBEntity>();
			}
		}
		
		public System.Data.Linq.Table<LTIRequestHistoryEntity> LTIRequestHistoryEntities
		{
			get
			{
				return this.GetTable<LTIRequestHistoryEntity>();
			}
		}
		
		public System.Data.Linq.Table<LTIInformationEntity> LTIInformationEntities
		{
			get
			{
				return this.GetTable<LTIInformationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DistrictDataParmEntity> DistrictDataParmEntities
		{
			get
			{
				return this.GetTable<DistrictDataParmEntity>();
			}
		}
		
		public System.Data.Linq.Table<Interoperability> Interoperabilities
		{
			get
			{
				return this.GetTable<Interoperability>();
			}
		}
		
		public System.Data.Linq.Table<LinkitObjectType> LinkitObjectTypes
		{
			get
			{
				return this.GetTable<LinkitObjectType>();
			}
		}
		
		public System.Data.Linq.Table<SSORedirectUrlEntity> SSORedirectUrlEntities
		{
			get
			{
				return this.GetTable<SSORedirectUrlEntity>();
			}
		}
		
		internal System.Data.Linq.Table<DataSetCategoryDistrictDisplayName> DataSetCategoryDistrictDisplayNames
		{
			get
			{
				return this.GetTable<DataSetCategoryDistrictDisplayName>();
			}
		}
		
		internal System.Data.Linq.Table<DataSetCategoryEntity> DataSetCategoryEntities
		{
			get
			{
				return this.GetTable<DataSetCategoryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ClassMetaEntity> ClassMetaEntities
		{
			get
			{
				return this.GetTable<ClassMetaEntity>();
			}
		}
		
		internal System.Data.Linq.Table<XLIAreaEntity> XLIAreaEntities
		{
			get
			{
				return this.GetTable<XLIAreaEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AggregateSubjectMappingEntity> AggregateSubjectMappingEntities
		{
			get
			{
				return this.GetTable<AggregateSubjectMappingEntity>();
			}
		}
		
		public System.Data.Linq.Table<xpsDistrictUploadEntity> xpsDistrictUploadEntities
		{
			get
			{
				return this.GetTable<xpsDistrictUploadEntity>();
			}
		}
		
		public System.Data.Linq.Table<xpsQueueEntity> xpsQueueEntities
		{
			get
			{
				return this.GetTable<xpsQueueEntity>();
			}
		}

        public System.Data.Linq.Table<SchoolEntity> SchoolEntities
        {
            get
            {
                return this.GetTable<SchoolEntity>();
            }
        }

        public System.Data.Linq.Table<SchoolMetaEntity> SchoolMetaEntities
        {
            get
            {
                return this.GetTable<SchoolMetaEntity>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteClass")]
		internal int DeleteClass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RITCreateVirtualTestQuestion")]
		public ISingleResult<RITCreateVirtualTestQuestionResult> RITCreateVirtualTestQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="Int")] System.Nullable<int> requestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApproveStudentResponse", DbType="VarChar(MAX)")] string approveStudentResponse)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID, approveStudentResponse);
			return ((ISingleResult<RITCreateVirtualTestQuestionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RITCreateRequest")]
		public ISingleResult<RITCreateRequestResult> RITCreateRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImportedFileName", DbType="NVarChar(255)")] string importedFileName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestParameter", DbType="VarChar(MAX)")] string requestParameter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID, importedFileName, requestParameter);
			return ((ISingleResult<RITCreateRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RITCreateRequestTestResponse")]
		public ISingleResult<RITCreateRequestTestResponseResult> RITCreateRequestTestResponse([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> requestID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string testData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID, testData);
			return ((ISingleResult<RITCreateRequestTestResponseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RITGradeTestResponse")]
		public ISingleResult<RITGradeTestResponseResult> RITGradeTestResponse([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestID", DbType="Int")] System.Nullable<int> requestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApproveStudentResponse", DbType="VarChar(MAX)")] string approveStudentResponse)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), requestID, virtualTestID, approveStudentResponse);
			return ((ISingleResult<RITGradeTestResponseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetListGroupIDsByUserId")]
		public ISingleResult<GetListGroupIDsByUserIdResult> GetListGroupIDsByUserId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, userID);
			return ((ISingleResult<GetListGroupIDsByUserIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.XLIModuleAccessProc")]
		public ISingleResult<XLIModuleAccessProcResult> XLIModuleAccessProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListXliAreaID", DbType="NVarChar(1000)")] string listXliAreaID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID, userRoleID, listXliAreaID);
			return ((ISingleResult<XLIModuleAccessProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.XLIIconAccessProc")]
		public ISingleResult<XLIIconAccessProcResult> XLIIconAccessProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID, userRoleID);
			return ((ISingleResult<XLIIconAccessProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserCanAccessClassOrSchool")]
		public ISingleResult<CheckUserCanAccessClassOrSchoolResult> CheckUserCanAccessClassOrSchool([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string itemType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID, itemID, itemType);
			return ((ISingleResult<CheckUserCanAccessClassOrSchoolResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserCanAccessStudent")]
		public ISingleResult<CheckUserCanAccessStudentResult> CheckUserCanAccessStudent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentIDList", DbType="VarChar(MAX)")] string studentIDList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID, studentIDList);
			return ((ISingleResult<CheckUserCanAccessStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserCanAccessTeacher")]
		public ISingleResult<CheckUserCanAccessTeacherResult> CheckUserCanAccessTeacher([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleId", DbType="Int")] System.Nullable<int> roleId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeacherId", DbType="Int")] System.Nullable<int> teacherId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, roleId, teacherId);
			return ((ISingleResult<CheckUserCanAccessTeacherResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserCanAccessTestResult")]
		public ISingleResult<CheckUserCanAccessTestResultResult> CheckUserCanAccessTestResult([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string testResultIdList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID, testResultIdList);
			return ((ISingleResult<CheckUserCanAccessTestResultResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserCanPurgeTest")]
		public ISingleResult<CheckUserCanPurgeTestResult> CheckUserCanPurgeTest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VirtualTestID", DbType="Int")] System.Nullable<int> virtualTestID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, roleID, virtualTestID);
			return ((ISingleResult<CheckUserCanPurgeTestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.XLICheckDistrictRoleAccessModule")]
		public int XLICheckDistrictRoleAccessModule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Moduleid", DbType="Int")] System.Nullable<int> moduleid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleid, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRequestsByUserID")]
		public ISingleResult<GetRequestsByUserIDResult> GetRequestsByUserID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DistrictID", DbType = "Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, districtID);
			return ((ISingleResult<GetRequestsByUserIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassBySchoolAndDistrictTerm")]
		public ISingleResult<GetClassBySchoolAndDistrictTermResult> GetClassBySchoolAndDistrictTerm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermID", DbType="Int")] System.Nullable<int> districtTermID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, schoolID, districtTermID, userID, roleID);
			return ((ISingleResult<GetClassBySchoolAndDistrictTermResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTimeZoneByStateWithSchoolID")]
		public ISingleResult<GetTimeZoneByStateWithSchoolIDResult> GetTimeZoneByStateWithSchoolID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolID);
			return ((ISingleResult<GetTimeZoneByStateWithSchoolIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CountActiveStudentInGroup")]
		public ISingleResult<CountActiveStudentInGroupResult> CountActiveStudentInGroup([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GroupId", DbType="Int")] System.Nullable<int> groupId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), groupId);
			return ((ISingleResult<CountActiveStudentInGroupResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCategoryByUser")]
		public ISingleResult<GetCategoryByUserResult> GetCategoryByUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StateID", DbType="Int")] System.Nullable<int> stateID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, stateID, districtID, categoryID);
			return ((ISingleResult<GetCategoryByUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNotificationByDistrictId")]
		public ISingleResult<GetNotificationByDistrictIdResult> GetNotificationByDistrictId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, userId);
			return ((ISingleResult<GetNotificationByDistrictIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateSurveySchoolClass")]
		public ISingleResult<CreateSurveySchoolClassResult> CreateSurveySchoolClass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictId", DbType="Int")] System.Nullable<int> districtId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermId", DbType="Int")] System.Nullable<int> districtTermId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SurveyName", DbType="VarChar(500)")] string surveyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtId, districtTermId, surveyName, userId);
			return ((ISingleResult<CreateSurveySchoolClassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassBySchool")]
		public ISingleResult<GetClassBySchoolResult> GetClassBySchool([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> schoolId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> roleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolId, userId, roleId);
			return ((ISingleResult<GetClassBySchoolResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSchoolAccessByModuleID")]
		public ISingleResult<GetSchoolAccessByModuleIDResult> GetSchoolAccessByModuleID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIModuleID", DbType="Int")] System.Nullable<int> xLIModuleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xLIModuleID, districtID);
			return ((ISingleResult<GetSchoolAccessByModuleIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetModuleAccessByGroupID")]
		public ISingleResult<GetModuleAccessByGroupIDResult> GetModuleAccessByGroupID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIGroupID", DbType="Int")] System.Nullable<int> xLIGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIModuleIDs", DbType="VarChar(2000)")] string xLIModuleIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xLIGroupID, xLIModuleIDs);
			return ((ISingleResult<GetModuleAccessByGroupIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetModuleAccessSumary")]
		public ISingleResult<GetModuleAccessSumaryResult> GetModuleAccessSumary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="XLIModuleIDs", DbType="VarChar(2000)")] string xLIModuleIDs)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, xLIModuleIDs);
			return ((ISingleResult<GetModuleAccessSumaryResult>)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.fn_GetUserGroupReportingModules", IsComposable = true)]
        public IQueryable<fnGetUserGroupReportingModules> fnGetUserGroupReportingModules([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Env", DbType = "VarChar(10)")] string env)
        {
            return this.CreateMethodCallQuery<fnGetUserGroupReportingModules>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), env);
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClassBySchoolAndDistrictTermV2")]
		public ISingleResult<GetClassBySchoolAndDistrictTermV2Result> GetClassBySchoolAndDistrictTermV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolIDList", DbType="NVarChar(MAX)")] string schoolIDList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictTermID", DbType="Int")] System.Nullable<int> districtTermID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, schoolIDList, districtTermID, userID, roleID);
			return ((ISingleResult<GetClassBySchoolAndDistrictTermV2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSchoolsByDistrictV2")]
		public ISingleResult<GetSchoolsByDistrictV2Result> GetSchoolsByDistrictV2([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DistrictID", DbType="Int")] System.Nullable<int> districtID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="Int")] System.Nullable<int> schoolID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageIndex", DbType="Int")] System.Nullable<int> pageIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortColumns", DbType="NVarChar(1000)")] string sortColumns, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GeneralSearch", DbType="VarChar(255)")] string generalSearch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalRecords", DbType="Int")] ref System.Nullable<int> totalRecords)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), districtID, schoolID, pageIndex, pageSize, sortColumns, generalSearch, totalRecords);
			totalRecords = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((ISingleResult<GetSchoolsByDistrictV2Result>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request")]
	internal partial class RequestEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestID;
		
		private int _UserID;
		
		private int _DataRequestTypeID;
		
		private System.DateTime _RequestTime;
		
		private string _Email;
		
		private System.Nullable<int> _DistrictID;
		
		private string _ImportedFileName;
		
		private System.Nullable<System.DateTime> _ImportedStartDate;
		
		private System.Nullable<System.DateTime> _ImportedEndDate;
		
		private System.Nullable<int> _ImportDuration;
		
		private System.Nullable<int> _TemplateID;
		
		private System.Nullable<int> _Mode;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _RequestType;
		
		private string _UserIDs;
		
		private string _DistrictIDs;
		
		private bool _IsDeleted;
		
		private bool _HasBeenMoved;
		
		private EntitySet<RequestEmailNotificationEntity> _RequestEmailNotificationEntities;
		
		private EntitySet<RequestStudentResponse> _RequestStudentResponses;
		
		private EntitySet<RequestQuestion> _RequestQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDataRequestTypeIDChanging(int value);
    partial void OnDataRequestTypeIDChanged();
    partial void OnRequestTimeChanging(System.DateTime value);
    partial void OnRequestTimeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnImportedFileNameChanging(string value);
    partial void OnImportedFileNameChanged();
    partial void OnImportedStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportedStartDateChanged();
    partial void OnImportedEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportedEndDateChanged();
    partial void OnImportDurationChanging(System.Nullable<int> value);
    partial void OnImportDurationChanged();
    partial void OnTemplateIDChanging(System.Nullable<int> value);
    partial void OnTemplateIDChanged();
    partial void OnModeChanging(System.Nullable<int> value);
    partial void OnModeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnRequestTypeChanging(System.Nullable<int> value);
    partial void OnRequestTypeChanged();
    partial void OnUserIDsChanging(string value);
    partial void OnUserIDsChanged();
    partial void OnDistrictIDsChanging(string value);
    partial void OnDistrictIDsChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnHasBeenMovedChanging(bool value);
    partial void OnHasBeenMovedChanged();
    #endregion
		
		public RequestEntity()
		{
			this._RequestEmailNotificationEntities = new EntitySet<RequestEmailNotificationEntity>(new Action<RequestEmailNotificationEntity>(this.attach_RequestEmailNotificationEntities), new Action<RequestEmailNotificationEntity>(this.detach_RequestEmailNotificationEntities));
			this._RequestStudentResponses = new EntitySet<RequestStudentResponse>(new Action<RequestStudentResponse>(this.attach_RequestStudentResponses), new Action<RequestStudentResponse>(this.detach_RequestStudentResponses));
			this._RequestQuestions = new EntitySet<RequestQuestion>(new Action<RequestQuestion>(this.attach_RequestQuestions), new Action<RequestQuestion>(this.detach_RequestQuestions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRequestTypeID", DbType="Int NOT NULL")]
		public int DataRequestTypeID
		{
			get
			{
				return this._DataRequestTypeID;
			}
			set
			{
				if ((this._DataRequestTypeID != value))
				{
					this.OnDataRequestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DataRequestTypeID = value;
					this.SendPropertyChanged("DataRequestTypeID");
					this.OnDataRequestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="DateTime NOT NULL")]
		public System.DateTime RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedFileName", DbType="NVarChar(255)")]
		public string ImportedFileName
		{
			get
			{
				return this._ImportedFileName;
			}
			set
			{
				if ((this._ImportedFileName != value))
				{
					this.OnImportedFileNameChanging(value);
					this.SendPropertyChanging();
					this._ImportedFileName = value;
					this.SendPropertyChanged("ImportedFileName");
					this.OnImportedFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportedStartDate
		{
			get
			{
				return this._ImportedStartDate;
			}
			set
			{
				if ((this._ImportedStartDate != value))
				{
					this.OnImportedStartDateChanging(value);
					this.SendPropertyChanging();
					this._ImportedStartDate = value;
					this.SendPropertyChanged("ImportedStartDate");
					this.OnImportedStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportedEndDate
		{
			get
			{
				return this._ImportedEndDate;
			}
			set
			{
				if ((this._ImportedEndDate != value))
				{
					this.OnImportedEndDateChanging(value);
					this.SendPropertyChanging();
					this._ImportedEndDate = value;
					this.SendPropertyChanged("ImportedEndDate");
					this.OnImportedEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDuration", DbType="Int")]
		public System.Nullable<int> ImportDuration
		{
			get
			{
				return this._ImportDuration;
			}
			set
			{
				if ((this._ImportDuration != value))
				{
					this.OnImportDurationChanging(value);
					this.SendPropertyChanging();
					this._ImportDuration = value;
					this.SendPropertyChanged("ImportDuration");
					this.OnImportDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateID", DbType="Int")]
		public System.Nullable<int> TemplateID
		{
			get
			{
				return this._TemplateID;
			}
			set
			{
				if ((this._TemplateID != value))
				{
					this.OnTemplateIDChanging(value);
					this.SendPropertyChanging();
					this._TemplateID = value;
					this.SendPropertyChanged("TemplateID");
					this.OnTemplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int")]
		public System.Nullable<int> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this.OnModeChanging(value);
					this.SendPropertyChanging();
					this._Mode = value;
					this.SendPropertyChanged("Mode");
					this.OnModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestType", DbType="Int")]
		public System.Nullable<int> RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDs", DbType="VarChar(MAX)")]
		public string UserIDs
		{
			get
			{
				return this._UserIDs;
			}
			set
			{
				if ((this._UserIDs != value))
				{
					this.OnUserIDsChanging(value);
					this.SendPropertyChanging();
					this._UserIDs = value;
					this.SendPropertyChanged("UserIDs");
					this.OnUserIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictIDs", DbType="VarChar(MAX)")]
		public string DistrictIDs
		{
			get
			{
				return this._DistrictIDs;
			}
			set
			{
				if ((this._DistrictIDs != value))
				{
					this.OnDistrictIDsChanging(value);
					this.SendPropertyChanging();
					this._DistrictIDs = value;
					this.SendPropertyChanged("DistrictIDs");
					this.OnDistrictIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenMoved", DbType="Bit NOT NULL")]
		public bool HasBeenMoved
		{
			get
			{
				return this._HasBeenMoved;
			}
			set
			{
				if ((this._HasBeenMoved != value))
				{
					this.OnHasBeenMovedChanging(value);
					this.SendPropertyChanging();
					this._HasBeenMoved = value;
					this.SendPropertyChanged("HasBeenMoved");
					this.OnHasBeenMovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestEntity_RequestEmailNotificationEntity", Storage="_RequestEmailNotificationEntities", ThisKey="RequestID", OtherKey="RequestID")]
		public EntitySet<RequestEmailNotificationEntity> RequestEmailNotificationEntities
		{
			get
			{
				return this._RequestEmailNotificationEntities;
			}
			set
			{
				this._RequestEmailNotificationEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestEntity_RequestStudentResponse", Storage="_RequestStudentResponses", ThisKey="RequestID", OtherKey="RequestID")]
		public EntitySet<RequestStudentResponse> RequestStudentResponses
		{
			get
			{
				return this._RequestStudentResponses;
			}
			set
			{
				this._RequestStudentResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestEntity_RequestQuestion", Storage="_RequestQuestions", ThisKey="RequestID", OtherKey="RequestID")]
		public EntitySet<RequestQuestion> RequestQuestions
		{
			get
			{
				return this._RequestQuestions;
			}
			set
			{
				this._RequestQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestEmailNotificationEntities(RequestEmailNotificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.RequestEntity = this;
		}
		
		private void detach_RequestEmailNotificationEntities(RequestEmailNotificationEntity entity)
		{
			this.SendPropertyChanging();
			entity.RequestEntity = null;
		}
		
		private void attach_RequestStudentResponses(RequestStudentResponse entity)
		{
			this.SendPropertyChanging();
			entity.RequestEntity = this;
		}
		
		private void detach_RequestStudentResponses(RequestStudentResponse entity)
		{
			this.SendPropertyChanging();
			entity.RequestEntity = null;
		}
		
		private void attach_RequestQuestions(RequestQuestion entity)
		{
			this.SendPropertyChanging();
			entity.RequestEntity = this;
		}
		
		private void detach_RequestQuestions(RequestQuestion entity)
		{
			this.SendPropertyChanging();
			entity.RequestEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolManagementView")]
	internal partial class SchoolManagementView
	{
		
		private System.Nullable<int> _UserSchoolID;
		
		private int _UserID;
		
		private System.Nullable<int> _DistrictID;
		
		private string _UserName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private int _RoleID;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<int> _UserStatusID;
		
		private string _SchoolName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _DistrictName;
		
		private string _StateName;
		
		public SchoolManagementView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSchoolID", DbType="Int")]
		public System.Nullable<int> UserSchoolID
		{
			get
			{
				return this._UserSchoolID;
			}
			set
			{
				if ((this._UserSchoolID != value))
				{
					this._UserSchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatusID", DbType="Int")]
		public System.Nullable<int> UserStatusID
		{
			get
			{
				return this._UserStatusID;
			}
			set
			{
				if ((this._UserStatusID != value))
				{
					this._UserStatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(20)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestParameter")]
	internal partial class RequestParameterEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestParameterID;
		
		private int _RequestID;
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestParameterIDChanging(int value);
    partial void OnRequestParameterIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public RequestParameterEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestParameterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestParameterID
		{
			get
			{
				return this._RequestParameterID;
			}
			set
			{
				if ((this._RequestParameterID != value))
				{
					this.OnRequestParameterIDChanging(value);
					this.SendPropertyChanging();
					this._RequestParameterID = value;
					this.SendPropertyChanged("RequestParameterID");
					this.OnRequestParameterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClusterDistrict")]
	internal partial class ClusterDistrictEntity
	{
		
		private string _ListClusterName;
		
		private string _SubjectName;
		
		private int _DistrictID;
		
		public ClusterDistrictEntity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListClusterName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ListClusterName
		{
			get
			{
				return this._ListClusterName;
			}
			set
			{
				if ((this._ListClusterName != value))
				{
					this._ListClusterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColumnLookupData")]
	internal partial class ColumnLookupDataEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LookupDataID;
		
		private int _ColumnID;
		
		private string _Data;
		
		private EntityRef<StandardColumnEntity> _StandardColumnEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLookupDataIDChanging(int value);
    partial void OnLookupDataIDChanged();
    partial void OnColumnIDChanging(int value);
    partial void OnColumnIDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public ColumnLookupDataEntity()
		{
			this._StandardColumnEntity = default(EntityRef<StandardColumnEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupDataID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LookupDataID
		{
			get
			{
				return this._LookupDataID;
			}
			set
			{
				if ((this._LookupDataID != value))
				{
					this.OnLookupDataIDChanging(value);
					this.SendPropertyChanging();
					this._LookupDataID = value;
					this.SendPropertyChanged("LookupDataID");
					this.OnLookupDataIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="Int NOT NULL")]
		public int ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					if (this._StandardColumnEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardColumnEntity_ColumnLookupDataEntity", Storage="_StandardColumnEntity", ThisKey="ColumnID", OtherKey="ColumnID", IsForeignKey=true)]
		public StandardColumnEntity StandardColumnEntity
		{
			get
			{
				return this._StandardColumnEntity.Entity;
			}
			set
			{
				StandardColumnEntity previousValue = this._StandardColumnEntity.Entity;
				if (((previousValue != value) 
							|| (this._StandardColumnEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StandardColumnEntity.Entity = null;
						previousValue.ColumnLookupDataEntities.Remove(this);
					}
					this._StandardColumnEntity.Entity = value;
					if ((value != null))
					{
						value.ColumnLookupDataEntities.Add(this);
						this._ColumnID = value.ColumnID;
					}
					else
					{
						this._ColumnID = default(int);
					}
					this.SendPropertyChanged("StandardColumnEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DelegateTeacher")]
	internal partial class DelegateTeacherEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DelegateTeacherID;
		
		private int _OriginalTeacherID;
		
		private int _NewTeacherID;
		
		private int _ClassID;
		
		private System.DateTime _TimeStart;
		
		private System.DateTime _TimeEnd;
		
		private int _UserID;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastUpdatedDate;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelegateTeacherIDChanging(int value);
    partial void OnDelegateTeacherIDChanged();
    partial void OnOriginalTeacherIDChanging(int value);
    partial void OnOriginalTeacherIDChanged();
    partial void OnNewTeacherIDChanging(int value);
    partial void OnNewTeacherIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnTimeStartChanging(System.DateTime value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.DateTime value);
    partial void OnTimeEndChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public DelegateTeacherEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateTeacherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DelegateTeacherID
		{
			get
			{
				return this._DelegateTeacherID;
			}
			set
			{
				if ((this._DelegateTeacherID != value))
				{
					this.OnDelegateTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._DelegateTeacherID = value;
					this.SendPropertyChanged("DelegateTeacherID");
					this.OnDelegateTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTeacherID", DbType="Int NOT NULL")]
		public int OriginalTeacherID
		{
			get
			{
				return this._OriginalTeacherID;
			}
			set
			{
				if ((this._OriginalTeacherID != value))
				{
					this.OnOriginalTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalTeacherID = value;
					this.SendPropertyChanged("OriginalTeacherID");
					this.OnOriginalTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTeacherID", DbType="Int NOT NULL")]
		public int NewTeacherID
		{
			get
			{
				return this._NewTeacherID;
			}
			set
			{
				if ((this._NewTeacherID != value))
				{
					this.OnNewTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._NewTeacherID = value;
					this.SendPropertyChanged("NewTeacherID");
					this.OnNewTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MappingInformation")]
	internal partial class MappingInformationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MapID;
		
		private string _Name;
		
		private int _LoaderType;
		
		private int _ProgressStatus;
		
		private string _SourceFileContent;
		
		private string _XMLTransform;
		
		private int _UserID;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastestModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMapIDChanging(int value);
    partial void OnMapIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLoaderTypeChanging(int value);
    partial void OnLoaderTypeChanged();
    partial void OnProgressStatusChanging(int value);
    partial void OnProgressStatusChanged();
    partial void OnSourceFileContentChanging(string value);
    partial void OnSourceFileContentChanged();
    partial void OnXMLTransformChanging(string value);
    partial void OnXMLTransformChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastestModifiedDateChanging(System.DateTime value);
    partial void OnLastestModifiedDateChanged();
    #endregion
		
		public MappingInformationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MapID
		{
			get
			{
				return this._MapID;
			}
			set
			{
				if ((this._MapID != value))
				{
					this.OnMapIDChanging(value);
					this.SendPropertyChanging();
					this._MapID = value;
					this.SendPropertyChanged("MapID");
					this.OnMapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaderType", DbType="Int NOT NULL")]
		public int LoaderType
		{
			get
			{
				return this._LoaderType;
			}
			set
			{
				if ((this._LoaderType != value))
				{
					this.OnLoaderTypeChanging(value);
					this.SendPropertyChanging();
					this._LoaderType = value;
					this.SendPropertyChanged("LoaderType");
					this.OnLoaderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressStatus", DbType="Int NOT NULL")]
		public int ProgressStatus
		{
			get
			{
				return this._ProgressStatus;
			}
			set
			{
				if ((this._ProgressStatus != value))
				{
					this.OnProgressStatusChanging(value);
					this.SendPropertyChanging();
					this._ProgressStatus = value;
					this.SendPropertyChanged("ProgressStatus");
					this.OnProgressStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceFileContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SourceFileContent
		{
			get
			{
				return this._SourceFileContent;
			}
			set
			{
				if ((this._SourceFileContent != value))
				{
					this.OnSourceFileContentChanging(value);
					this.SendPropertyChanging();
					this._SourceFileContent = value;
					this.SendPropertyChanged("SourceFileContent");
					this.OnSourceFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLTransform", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string XMLTransform
		{
			get
			{
				return this._XMLTransform;
			}
			set
			{
				if ((this._XMLTransform != value))
				{
					this.OnXMLTransformChanging(value);
					this.SendPropertyChanging();
					this._XMLTransform = value;
					this.SendPropertyChanged("XMLTransform");
					this.OnXMLTransformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastestModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastestModifiedDate
		{
			get
			{
				return this._LastestModifiedDate;
			}
			set
			{
				if ((this._LastestModifiedDate != value))
				{
					this.OnLastestModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastestModifiedDate = value;
					this.SendPropertyChanged("LastestModifiedDate");
					this.OnLastestModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintingGroup")]
	internal partial class PrintingGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _Name;
		
		private System.Nullable<int> _DistrictID;
		
		private System.Nullable<int> _CreatedUserID;
		
		private bool _IsActive;
		
		private EntitySet<PrintingGroupJobEntity> _PrintingGroupJobEntities;
		
		private EntitySet<ClassPrintingGroupEntity> _ClassPrintingGroupEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public PrintingGroupEntity()
		{
			this._PrintingGroupJobEntities = new EntitySet<PrintingGroupJobEntity>(new Action<PrintingGroupJobEntity>(this.attach_PrintingGroupJobEntities), new Action<PrintingGroupJobEntity>(this.detach_PrintingGroupJobEntities));
			this._ClassPrintingGroupEntities = new EntitySet<ClassPrintingGroupEntity>(new Action<ClassPrintingGroupEntity>(this.attach_ClassPrintingGroupEntities), new Action<ClassPrintingGroupEntity>(this.detach_ClassPrintingGroupEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintingGroupEntity_PrintingGroupJobEntity", Storage="_PrintingGroupJobEntities", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<PrintingGroupJobEntity> PrintingGroupJobEntities
		{
			get
			{
				return this._PrintingGroupJobEntities;
			}
			set
			{
				this._PrintingGroupJobEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintingGroupEntity_ClassPrintingGroupEntity", Storage="_ClassPrintingGroupEntities", ThisKey="GroupID", OtherKey="GroupID")]
		public EntitySet<ClassPrintingGroupEntity> ClassPrintingGroupEntities
		{
			get
			{
				return this._ClassPrintingGroupEntities;
			}
			set
			{
				this._ClassPrintingGroupEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PrintingGroupJobEntities(PrintingGroupJobEntity entity)
		{
			this.SendPropertyChanging();
			entity.PrintingGroupEntity = this;
		}
		
		private void detach_PrintingGroupJobEntities(PrintingGroupJobEntity entity)
		{
			this.SendPropertyChanging();
			entity.PrintingGroupEntity = null;
		}
		
		private void attach_ClassPrintingGroupEntities(ClassPrintingGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.PrintingGroupEntity = this;
		}
		
		private void detach_ClassPrintingGroupEntities(ClassPrintingGroupEntity entity)
		{
			this.SendPropertyChanging();
			entity.PrintingGroupEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintingGroupJob")]
	internal partial class PrintingGroupJobEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrintingGroupJobID;
		
		private int _GroupID;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _CreatedUserID;
		
		private EntityRef<PrintingGroupEntity> _PrintingGroupEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrintingGroupJobIDChanging(int value);
    partial void OnPrintingGroupJobIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    #endregion
		
		public PrintingGroupJobEntity()
		{
			this._PrintingGroupEntity = default(EntityRef<PrintingGroupEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintingGroupJobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PrintingGroupJobID
		{
			get
			{
				return this._PrintingGroupJobID;
			}
			set
			{
				if ((this._PrintingGroupJobID != value))
				{
					this.OnPrintingGroupJobIDChanging(value);
					this.SendPropertyChanging();
					this._PrintingGroupJobID = value;
					this.SendPropertyChanged("PrintingGroupJobID");
					this.OnPrintingGroupJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._PrintingGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintingGroupEntity_PrintingGroupJobEntity", Storage="_PrintingGroupEntity", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public PrintingGroupEntity PrintingGroupEntity
		{
			get
			{
				return this._PrintingGroupEntity.Entity;
			}
			set
			{
				PrintingGroupEntity previousValue = this._PrintingGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._PrintingGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintingGroupEntity.Entity = null;
						previousValue.PrintingGroupJobEntities.Remove(this);
					}
					this._PrintingGroupEntity.Entity = value;
					if ((value != null))
					{
						value.PrintingGroupJobEntities.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("PrintingGroupEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestParameterDistrict")]
	internal partial class RequestParameterDistrictView
	{
		
		private int _RequestParameterID;
		
		private int _RequestID;
		
		private string _Value;
		
		private string _Name;
		
		private System.Nullable<int> _DistrictID;
		
		public RequestParameterDistrictView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestParameterID", DbType="Int NOT NULL")]
		public int RequestParameterID
		{
			get
			{
				return this._RequestParameterID;
			}
			set
			{
				if ((this._RequestParameterID != value))
				{
					this._RequestParameterID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StandardColumn")]
	internal partial class StandardColumnEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ColumnID;
		
		private string _Name;
		
		private string _Description;
		
		private int _LoaderType;
		
		private int _ColumnType;
		
		private bool _IsDefaultForCommonPhase;
		
		private bool _IsDefaultForTestPhase;
		
		private bool _IsRequiredForCommonPhase;
		
		private bool _IsRequiredForTestPhase;
		
		private EntitySet<ColumnLookupDataEntity> _ColumnLookupDataEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColumnIDChanging(int value);
    partial void OnColumnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLoaderTypeChanging(int value);
    partial void OnLoaderTypeChanged();
    partial void OnColumnTypeChanging(int value);
    partial void OnColumnTypeChanged();
    partial void OnIsDefaultForCommonPhaseChanging(bool value);
    partial void OnIsDefaultForCommonPhaseChanged();
    partial void OnIsDefaultForTestPhaseChanging(bool value);
    partial void OnIsDefaultForTestPhaseChanged();
    partial void OnIsRequiredForCommonPhaseChanging(bool value);
    partial void OnIsRequiredForCommonPhaseChanged();
    partial void OnIsRequiredForTestPhaseChanging(bool value);
    partial void OnIsRequiredForTestPhaseChanged();
    #endregion
		
		public StandardColumnEntity()
		{
			this._ColumnLookupDataEntities = new EntitySet<ColumnLookupDataEntity>(new Action<ColumnLookupDataEntity>(this.attach_ColumnLookupDataEntities), new Action<ColumnLookupDataEntity>(this.detach_ColumnLookupDataEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaderType", DbType="Int NOT NULL")]
		public int LoaderType
		{
			get
			{
				return this._LoaderType;
			}
			set
			{
				if ((this._LoaderType != value))
				{
					this.OnLoaderTypeChanging(value);
					this.SendPropertyChanging();
					this._LoaderType = value;
					this.SendPropertyChanged("LoaderType");
					this.OnLoaderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnType", DbType="Int NOT NULL")]
		public int ColumnType
		{
			get
			{
				return this._ColumnType;
			}
			set
			{
				if ((this._ColumnType != value))
				{
					this.OnColumnTypeChanging(value);
					this.SendPropertyChanging();
					this._ColumnType = value;
					this.SendPropertyChanged("ColumnType");
					this.OnColumnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefaultForCommonPhase", DbType="Bit NOT NULL")]
		public bool IsDefaultForCommonPhase
		{
			get
			{
				return this._IsDefaultForCommonPhase;
			}
			set
			{
				if ((this._IsDefaultForCommonPhase != value))
				{
					this.OnIsDefaultForCommonPhaseChanging(value);
					this.SendPropertyChanging();
					this._IsDefaultForCommonPhase = value;
					this.SendPropertyChanged("IsDefaultForCommonPhase");
					this.OnIsDefaultForCommonPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefaultForTestPhase", DbType="Bit NOT NULL")]
		public bool IsDefaultForTestPhase
		{
			get
			{
				return this._IsDefaultForTestPhase;
			}
			set
			{
				if ((this._IsDefaultForTestPhase != value))
				{
					this.OnIsDefaultForTestPhaseChanging(value);
					this.SendPropertyChanging();
					this._IsDefaultForTestPhase = value;
					this.SendPropertyChanged("IsDefaultForTestPhase");
					this.OnIsDefaultForTestPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiredForCommonPhase", DbType="Bit NOT NULL")]
		public bool IsRequiredForCommonPhase
		{
			get
			{
				return this._IsRequiredForCommonPhase;
			}
			set
			{
				if ((this._IsRequiredForCommonPhase != value))
				{
					this.OnIsRequiredForCommonPhaseChanging(value);
					this.SendPropertyChanging();
					this._IsRequiredForCommonPhase = value;
					this.SendPropertyChanged("IsRequiredForCommonPhase");
					this.OnIsRequiredForCommonPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiredForTestPhase", DbType="Bit NOT NULL")]
		public bool IsRequiredForTestPhase
		{
			get
			{
				return this._IsRequiredForTestPhase;
			}
			set
			{
				if ((this._IsRequiredForTestPhase != value))
				{
					this.OnIsRequiredForTestPhaseChanging(value);
					this.SendPropertyChanging();
					this._IsRequiredForTestPhase = value;
					this.SendPropertyChanged("IsRequiredForTestPhase");
					this.OnIsRequiredForTestPhaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StandardColumnEntity_ColumnLookupDataEntity", Storage="_ColumnLookupDataEntities", ThisKey="ColumnID", OtherKey="ColumnID")]
		public EntitySet<ColumnLookupDataEntity> ColumnLookupDataEntities
		{
			get
			{
				return this._ColumnLookupDataEntities;
			}
			set
			{
				this._ColumnLookupDataEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ColumnLookupDataEntities(ColumnLookupDataEntity entity)
		{
			this.SendPropertyChanging();
			entity.StandardColumnEntity = this;
		}
		
		private void detach_ColumnLookupDataEntities(ColumnLookupDataEntity entity)
		{
			this.SendPropertyChanging();
			entity.StandardColumnEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestEmailNotification")]
	internal partial class RequestEmailNotificationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestID;
		
		private string _EmailContent;
		
		private string _FileAttachContent;
		
		private int _ID;
		
		private EntityRef<RequestEntity> _RequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnEmailContentChanging(string value);
    partial void OnEmailContentChanged();
    partial void OnFileAttachContentChanging(string value);
    partial void OnFileAttachContentChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public RequestEmailNotificationEntity()
		{
			this._RequestEntity = default(EntityRef<RequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._RequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EmailContent
		{
			get
			{
				return this._EmailContent;
			}
			set
			{
				if ((this._EmailContent != value))
				{
					this.OnEmailContentChanging(value);
					this.SendPropertyChanging();
					this._EmailContent = value;
					this.SendPropertyChanged("EmailContent");
					this.OnEmailContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAttachContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FileAttachContent
		{
			get
			{
				return this._FileAttachContent;
			}
			set
			{
				if ((this._FileAttachContent != value))
				{
					this.OnFileAttachContentChanging(value);
					this.SendPropertyChanging();
					this._FileAttachContent = value;
					this.SendPropertyChanged("FileAttachContent");
					this.OnFileAttachContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestEntity_RequestEmailNotificationEntity", Storage="_RequestEntity", ThisKey="RequestID", OtherKey="RequestID", IsForeignKey=true)]
		public RequestEntity RequestEntity
		{
			get
			{
				return this._RequestEntity.Entity;
			}
			set
			{
				RequestEntity previousValue = this._RequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._RequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestEntity.Entity = null;
						previousValue.RequestEmailNotificationEntities.Remove(this);
					}
					this._RequestEntity.Entity = value;
					if ((value != null))
					{
						value.RequestEmailNotificationEntities.Add(this);
						this._RequestID = value.RequestID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("RequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestStudentsWithRosterView")]
	internal partial class TestStudentsWithRosterView
	{
		
		private int _BubblesheetID;
		
		private string _Ticket;
		
		private short _RosterPosition;
		
		private System.Nullable<int> _StudentID;
		
		private int _ClassID;
		
		public TestStudentsWithRosterView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BubblesheetID", DbType="Int NOT NULL")]
		public int BubblesheetID
		{
			get
			{
				return this._BubblesheetID;
			}
			set
			{
				if ((this._BubblesheetID != value))
				{
					this._BubblesheetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="VarChar(100)")]
		public string Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this._Ticket = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RosterPosition", DbType="SmallInt NOT NULL")]
		public short RosterPosition
		{
			get
			{
				return this._RosterPosition;
			}
			set
			{
				if ((this._RosterPosition != value))
				{
					this._RosterPosition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentGroup")]
	internal partial class StudentGroupView
	{
		
		private int _GroupID;
		
		private int _StudentID;
		
		private string _Code;
		
		private int _ClassID;
		
		private int _UserID;
		
		private int _SchoolID;
		
		private System.Nullable<int> _DistrictTermID;
		
		private int _DistrictID;
		
		private string _StudentName;
		
		private string _TeacherName;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private string _DistrictName;
		
		private string _Name;
		
		public StudentGroupView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(202) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(50)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestNotificationEmailView")]
	internal partial class RequestNotificationEmailView
	{
		
		private int _RequestID;
		
		private int _UserID;
		
		private int _DataRequestTypeID;
		
		private System.DateTime _RequestTime;
		
		private string _Email;
		
		private System.Nullable<int> _DistrictID;
		
		private string _ImportedFileName;
		
		private System.Nullable<int> _Mode;
		
		private System.Nullable<int> _Status;
		
		private bool _IsDeleted;
		
		private bool _HasBeenMoved;
		
		private System.Nullable<bool> _HasEmailContent;
		
		private string _RosterType;
		
		public RequestNotificationEmailView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRequestTypeID", DbType="Int NOT NULL")]
		public int DataRequestTypeID
		{
			get
			{
				return this._DataRequestTypeID;
			}
			set
			{
				if ((this._DataRequestTypeID != value))
				{
					this._DataRequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="DateTime NOT NULL")]
		public System.DateTime RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this._RequestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedFileName", DbType="NVarChar(255)")]
		public string ImportedFileName
		{
			get
			{
				return this._ImportedFileName;
			}
			set
			{
				if ((this._ImportedFileName != value))
				{
					this._ImportedFileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int")]
		public System.Nullable<int> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenMoved", DbType="Bit NOT NULL")]
		public bool HasBeenMoved
		{
			get
			{
				return this._HasBeenMoved;
			}
			set
			{
				if ((this._HasBeenMoved != value))
				{
					this._HasBeenMoved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEmailContent", DbType="Bit")]
		public System.Nullable<bool> HasEmailContent
		{
			get
			{
				return this._HasEmailContent;
			}
			set
			{
				if ((this._HasEmailContent != value))
				{
					this._HasEmailContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RosterType", DbType="VarChar(20)")]
		public string RosterType
		{
			get
			{
				return this._RosterType;
			}
			set
			{
				if ((this._RosterType != value))
				{
					this._RosterType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	internal partial class ReportEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _URL;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ReportEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(MAX)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintingGroupData")]
	internal partial class PrintingGroupDataView
	{
		
		private System.Nullable<int> _CreatedUserID;
		
		private string _GroupName;
		
		private string _ClassName;
		
		private string _SchoolName;
		
		private string _DistrictTermName;
		
		private string _NameFirst;
		
		private string _NameLast;
		
		private System.Nullable<int> _UserID;
		
		private int _ClassID;
		
		private int _GroupID;
		
		public PrintingGroupDataView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this._CreatedUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DistrictTermName
		{
			get
			{
				return this._DistrictTermName;
			}
			set
			{
				if ((this._DistrictTermName != value))
				{
					this._DistrictTermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFirst", DbType="VarChar(50)")]
		public string NameFirst
		{
			get
			{
				return this._NameFirst;
			}
			set
			{
				if ((this._NameFirst != value))
				{
					this._NameFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameLast", DbType="VarChar(50)")]
		public string NameLast
		{
			get
			{
				return this._NameLast;
			}
			set
			{
				if ((this._NameLast != value))
				{
					this._NameLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassPrintingGroup")]
	internal partial class ClassPrintingGroupEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassGroupID;
		
		private int _ClassID;
		
		private int _GroupID;
		
		private int _UserID;
		
		private EntityRef<PrintingGroupEntity> _PrintingGroupEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassGroupIDChanging(int value);
    partial void OnClassGroupIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ClassPrintingGroupEntity()
		{
			this._PrintingGroupEntity = default(EntityRef<PrintingGroupEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassGroupID
		{
			get
			{
				return this._ClassGroupID;
			}
			set
			{
				if ((this._ClassGroupID != value))
				{
					this.OnClassGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ClassGroupID = value;
					this.SendPropertyChanged("ClassGroupID");
					this.OnClassGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._PrintingGroupEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrintingGroupEntity_ClassPrintingGroupEntity", Storage="_PrintingGroupEntity", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PrintingGroupEntity PrintingGroupEntity
		{
			get
			{
				return this._PrintingGroupEntity.Entity;
			}
			set
			{
				PrintingGroupEntity previousValue = this._PrintingGroupEntity.Entity;
				if (((previousValue != value) 
							|| (this._PrintingGroupEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrintingGroupEntity.Entity = null;
						previousValue.ClassPrintingGroupEntities.Remove(this);
					}
					this._PrintingGroupEntity.Entity = value;
					if ((value != null))
					{
						value.ClassPrintingGroupEntities.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("PrintingGroupEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictRosterUpload")]
	internal partial class DistrictRosterUploadView
	{
		
		private int _DistrictID;
		
		private System.DateTime _LastProcessed;
		
		private System.TimeSpan _ScheduledTime;
		
		private bool _Run;
		
		private System.Nullable<int> _UploadTypeID;
		
		public DistrictRosterUploadView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastProcessed", DbType="DateTime NOT NULL")]
		public System.DateTime LastProcessed
		{
			get
			{
				return this._LastProcessed;
			}
			set
			{
				if ((this._LastProcessed != value))
				{
					this._LastProcessed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledTime", DbType="Time NOT NULL")]
		public System.TimeSpan ScheduledTime
		{
			get
			{
				return this._ScheduledTime;
			}
			set
			{
				if ((this._ScheduledTime != value))
				{
					this._ScheduledTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Run", DbType="Bit NOT NULL")]
		public bool Run
		{
			get
			{
				return this._Run;
			}
			set
			{
				if ((this._Run != value))
				{
					this._Run = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadTypeID", DbType="Int")]
		public System.Nullable<int> UploadTypeID
		{
			get
			{
				return this._UploadTypeID;
			}
			set
			{
				if ((this._UploadTypeID != value))
				{
					this._UploadTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStudentResponse")]
	internal partial class RequestStudentResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestStudentResponseID;
		
		private int _RequestID;
		
		private string _StudentLocalCode;
		
		private string _SessionData;
		
		private string _StudentResponseSummary;
		
		private string _StudentResponses;
		
		private int _Status;
		
		private bool _StudentExist;
		
		private EntityRef<RequestEntity> _RequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestStudentResponseIDChanging(int value);
    partial void OnRequestStudentResponseIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnStudentLocalCodeChanging(string value);
    partial void OnStudentLocalCodeChanged();
    partial void OnSessionDataChanging(string value);
    partial void OnSessionDataChanged();
    partial void OnStudentResponseSummaryChanging(string value);
    partial void OnStudentResponseSummaryChanged();
    partial void OnStudentResponsesChanging(string value);
    partial void OnStudentResponsesChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnStudentExistChanging(bool value);
    partial void OnStudentExistChanged();
    #endregion
		
		public RequestStudentResponse()
		{
			this._RequestEntity = default(EntityRef<RequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStudentResponseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestStudentResponseID
		{
			get
			{
				return this._RequestStudentResponseID;
			}
			set
			{
				if ((this._RequestStudentResponseID != value))
				{
					this.OnRequestStudentResponseIDChanging(value);
					this.SendPropertyChanging();
					this._RequestStudentResponseID = value;
					this.SendPropertyChanged("RequestStudentResponseID");
					this.OnRequestStudentResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._RequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentLocalCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StudentLocalCode
		{
			get
			{
				return this._StudentLocalCode;
			}
			set
			{
				if ((this._StudentLocalCode != value))
				{
					this.OnStudentLocalCodeChanging(value);
					this.SendPropertyChanging();
					this._StudentLocalCode = value;
					this.SendPropertyChanged("StudentLocalCode");
					this.OnStudentLocalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionData", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SessionData
		{
			get
			{
				return this._SessionData;
			}
			set
			{
				if ((this._SessionData != value))
				{
					this.OnSessionDataChanging(value);
					this.SendPropertyChanging();
					this._SessionData = value;
					this.SendPropertyChanged("SessionData");
					this.OnSessionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResponseSummary", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string StudentResponseSummary
		{
			get
			{
				return this._StudentResponseSummary;
			}
			set
			{
				if ((this._StudentResponseSummary != value))
				{
					this.OnStudentResponseSummaryChanging(value);
					this.SendPropertyChanging();
					this._StudentResponseSummary = value;
					this.SendPropertyChanged("StudentResponseSummary");
					this.OnStudentResponseSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResponses", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string StudentResponses
		{
			get
			{
				return this._StudentResponses;
			}
			set
			{
				if ((this._StudentResponses != value))
				{
					this.OnStudentResponsesChanging(value);
					this.SendPropertyChanging();
					this._StudentResponses = value;
					this.SendPropertyChanged("StudentResponses");
					this.OnStudentResponsesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentExist", DbType="Bit NOT NULL")]
		public bool StudentExist
		{
			get
			{
				return this._StudentExist;
			}
			set
			{
				if ((this._StudentExist != value))
				{
					this.OnStudentExistChanging(value);
					this.SendPropertyChanging();
					this._StudentExist = value;
					this.SendPropertyChanged("StudentExist");
					this.OnStudentExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestEntity_RequestStudentResponse", Storage="_RequestEntity", ThisKey="RequestID", OtherKey="RequestID", IsForeignKey=true)]
		public RequestEntity RequestEntity
		{
			get
			{
				return this._RequestEntity.Entity;
			}
			set
			{
				RequestEntity previousValue = this._RequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._RequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestEntity.Entity = null;
						previousValue.RequestStudentResponses.Remove(this);
					}
					this._RequestEntity.Entity = value;
					if ((value != null))
					{
						value.RequestStudentResponses.Add(this);
						this._RequestID = value.RequestID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("RequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestQuestion")]
	internal partial class RequestQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestQuestionID;
		
		private int _RequestID;
		
		private int _ItemNumber;
		
		private int _ItemType;
		
		private string _AnswerOptions;
		
		private string _CorrectAnswer;
		
		private EntityRef<RequestEntity> _RequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestQuestionIDChanging(int value);
    partial void OnRequestQuestionIDChanged();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnItemNumberChanging(int value);
    partial void OnItemNumberChanged();
    partial void OnItemTypeChanging(int value);
    partial void OnItemTypeChanged();
    partial void OnAnswerOptionsChanging(string value);
    partial void OnAnswerOptionsChanged();
    partial void OnCorrectAnswerChanging(string value);
    partial void OnCorrectAnswerChanged();
    #endregion
		
		public RequestQuestion()
		{
			this._RequestEntity = default(EntityRef<RequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestQuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestQuestionID
		{
			get
			{
				return this._RequestQuestionID;
			}
			set
			{
				if ((this._RequestQuestionID != value))
				{
					this.OnRequestQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._RequestQuestionID = value;
					this.SendPropertyChanged("RequestQuestionID");
					this.OnRequestQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._RequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="Int NOT NULL")]
		public int ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="Int NOT NULL")]
		public int ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerOptions", DbType="VarChar(100)")]
		public string AnswerOptions
		{
			get
			{
				return this._AnswerOptions;
			}
			set
			{
				if ((this._AnswerOptions != value))
				{
					this.OnAnswerOptionsChanging(value);
					this.SendPropertyChanging();
					this._AnswerOptions = value;
					this.SendPropertyChanged("AnswerOptions");
					this.OnAnswerOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectAnswer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CorrectAnswer
		{
			get
			{
				return this._CorrectAnswer;
			}
			set
			{
				if ((this._CorrectAnswer != value))
				{
					this.OnCorrectAnswerChanging(value);
					this.SendPropertyChanging();
					this._CorrectAnswer = value;
					this.SendPropertyChanged("CorrectAnswer");
					this.OnCorrectAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestEntity_RequestQuestion", Storage="_RequestEntity", ThisKey="RequestID", OtherKey="RequestID", IsForeignKey=true)]
		public RequestEntity RequestEntity
		{
			get
			{
				return this._RequestEntity.Entity;
			}
			set
			{
				RequestEntity previousValue = this._RequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._RequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestEntity.Entity = null;
						previousValue.RequestQuestions.Remove(this);
					}
					this._RequestEntity.Entity = value;
					if ((value != null))
					{
						value.RequestQuestions.Add(this);
						this._RequestID = value.RequestID;
					}
					else
					{
						this._RequestID = default(int);
					}
					this.SendPropertyChanged("RequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassSchoolTeacherStudentView")]
	public partial class ClassSchoolTeacherStudentView
	{
		
		private int _StudentID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<int> _Status;
		
		private int _ClassID;
		
		private string _ClassName;
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private int _UserID;
		
		private string _TeacherName;
		
		private string _TeacherFirstName;
		
		private string _TeacherLastName;
		
		private int _DistrictTermID;
		
		private string _TermName;
		
		private int _RoleID;
		
		public ClassSchoolTeacherStudentView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this._TeacherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherFirstName", DbType="VarChar(50)")]
		public string TeacherFirstName
		{
			get
			{
				return this._TeacherFirstName;
			}
			set
			{
				if ((this._TeacherFirstName != value))
				{
					this._TeacherFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherLastName", DbType="VarChar(50)")]
		public string TeacherLastName
		{
			get
			{
				return this._TeacherLastName;
			}
			set
			{
				if ((this._TeacherLastName != value))
				{
					this._TeacherLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int NOT NULL")]
		public int DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TermName
		{
			get
			{
				return this._TermName;
			}
			set
			{
				if ((this._TermName != value))
				{
					this._TermName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	internal partial class RoleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Name;
		
		private string _Display;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayChanging(string value);
    partial void OnDisplayChanged();
    #endregion
		
		public RoleEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="VarChar(50)")]
		public string Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIIconAccessView")]
	internal partial class XLIIconAccessView
	{
		
		private string _Code;
		
		private bool _Restrict;
		
		private System.Nullable<bool> _AllModules;
		
		private System.Nullable<bool> _Expires;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _DistrictID;
		
		private int _XLIAreaID;
		
		private System.Nullable<int> _SchoolDistrictID;
		
		private System.Nullable<bool> _DistrictSchoolRestrict;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<System.DateTime> _AreaSchoolStartDate;
		
		private System.Nullable<System.DateTime> _AreaSchoolEndDate;
		
		private System.Nullable<bool> _AreaSchoolExpires;
		
		private System.Nullable<bool> _AllRoles;
		
		private System.Nullable<int> _RoleID;
		
		public XLIIconAccessView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Restrict]", Storage="_Restrict", DbType="Bit NOT NULL")]
		public bool Restrict
		{
			get
			{
				return this._Restrict;
			}
			set
			{
				if ((this._Restrict != value))
				{
					this._Restrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllModules", DbType="Bit")]
		public System.Nullable<bool> AllModules
		{
			get
			{
				return this._AllModules;
			}
			set
			{
				if ((this._AllModules != value))
				{
					this._AllModules = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="Bit")]
		public System.Nullable<bool> Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this._Expires = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaID", DbType="Int NOT NULL")]
		public int XLIAreaID
		{
			get
			{
				return this._XLIAreaID;
			}
			set
			{
				if ((this._XLIAreaID != value))
				{
					this._XLIAreaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolDistrictID", DbType="Int")]
		public System.Nullable<int> SchoolDistrictID
		{
			get
			{
				return this._SchoolDistrictID;
			}
			set
			{
				if ((this._SchoolDistrictID != value))
				{
					this._SchoolDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictSchoolRestrict", DbType="Bit")]
		public System.Nullable<bool> DistrictSchoolRestrict
		{
			get
			{
				return this._DistrictSchoolRestrict;
			}
			set
			{
				if ((this._DistrictSchoolRestrict != value))
				{
					this._DistrictSchoolRestrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaSchoolStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AreaSchoolStartDate
		{
			get
			{
				return this._AreaSchoolStartDate;
			}
			set
			{
				if ((this._AreaSchoolStartDate != value))
				{
					this._AreaSchoolStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaSchoolEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AreaSchoolEndDate
		{
			get
			{
				return this._AreaSchoolEndDate;
			}
			set
			{
				if ((this._AreaSchoolEndDate != value))
				{
					this._AreaSchoolEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaSchoolExpires", DbType="Bit")]
		public System.Nullable<bool> AreaSchoolExpires
		{
			get
			{
				return this._AreaSchoolExpires;
			}
			set
			{
				if ((this._AreaSchoolExpires != value))
				{
					this._AreaSchoolExpires = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllRoles", DbType="Bit")]
		public System.Nullable<bool> AllRoles
		{
			get
			{
				return this._AllRoles;
			}
			set
			{
				if ((this._AllRoles != value))
				{
					this._AllRoles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIModuleAccessView")]
	public partial class XLIModuleAccessView
	{
		
		private string _AreaCode;
		
		private string _ModuleCode;
		
		private bool _ModuleAllRoles;
		
		private bool _ModuleRestrict;
		
		private int _XLIModuleID;
		
		private System.Nullable<int> _DMRoleID;
		
		private System.Nullable<int> _SMRoleID;
		
		private System.Nullable<int> _DSMDistrictID;
		
		private System.Nullable<bool> _DSMRestrict;
		
		private System.Nullable<bool> _SMAllRoles;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<System.DateTime> _SMStartDate;
		
		private System.Nullable<System.DateTime> _SMEndDate;
		
		private System.Nullable<bool> _SMExpires;
		
		private System.Nullable<bool> _DMAllRole;
		
		private System.Nullable<System.DateTime> _DMStartDate;
		
		private System.Nullable<System.DateTime> _DMEndDate;
		
		private System.Nullable<bool> _DMExprires;
		
		private System.Nullable<int> _DMDistrictID;
		
		public XLIModuleAccessView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this._AreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ModuleCode
		{
			get
			{
				return this._ModuleCode;
			}
			set
			{
				if ((this._ModuleCode != value))
				{
					this._ModuleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleAllRoles", DbType="Bit NOT NULL")]
		public bool ModuleAllRoles
		{
			get
			{
				return this._ModuleAllRoles;
			}
			set
			{
				if ((this._ModuleAllRoles != value))
				{
					this._ModuleAllRoles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleRestrict", DbType="Bit NOT NULL")]
		public bool ModuleRestrict
		{
			get
			{
				return this._ModuleRestrict;
			}
			set
			{
				if ((this._ModuleRestrict != value))
				{
					this._ModuleRestrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIModuleID", DbType="Int NOT NULL")]
		public int XLIModuleID
		{
			get
			{
				return this._XLIModuleID;
			}
			set
			{
				if ((this._XLIModuleID != value))
				{
					this._XLIModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMRoleID", DbType="Int")]
		public System.Nullable<int> DMRoleID
		{
			get
			{
				return this._DMRoleID;
			}
			set
			{
				if ((this._DMRoleID != value))
				{
					this._DMRoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMRoleID", DbType="Int")]
		public System.Nullable<int> SMRoleID
		{
			get
			{
				return this._SMRoleID;
			}
			set
			{
				if ((this._SMRoleID != value))
				{
					this._SMRoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSMDistrictID", DbType="Int")]
		public System.Nullable<int> DSMDistrictID
		{
			get
			{
				return this._DSMDistrictID;
			}
			set
			{
				if ((this._DSMDistrictID != value))
				{
					this._DSMDistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSMRestrict", DbType="Bit")]
		public System.Nullable<bool> DSMRestrict
		{
			get
			{
				return this._DSMRestrict;
			}
			set
			{
				if ((this._DSMRestrict != value))
				{
					this._DSMRestrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMAllRoles", DbType="Bit")]
		public System.Nullable<bool> SMAllRoles
		{
			get
			{
				return this._SMAllRoles;
			}
			set
			{
				if ((this._SMAllRoles != value))
				{
					this._SMAllRoles = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SMStartDate
		{
			get
			{
				return this._SMStartDate;
			}
			set
			{
				if ((this._SMStartDate != value))
				{
					this._SMStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SMEndDate
		{
			get
			{
				return this._SMEndDate;
			}
			set
			{
				if ((this._SMEndDate != value))
				{
					this._SMEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMExpires", DbType="Bit")]
		public System.Nullable<bool> SMExpires
		{
			get
			{
				return this._SMExpires;
			}
			set
			{
				if ((this._SMExpires != value))
				{
					this._SMExpires = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMAllRole", DbType="Bit")]
		public System.Nullable<bool> DMAllRole
		{
			get
			{
				return this._DMAllRole;
			}
			set
			{
				if ((this._DMAllRole != value))
				{
					this._DMAllRole = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DMStartDate
		{
			get
			{
				return this._DMStartDate;
			}
			set
			{
				if ((this._DMStartDate != value))
				{
					this._DMStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DMEndDate
		{
			get
			{
				return this._DMEndDate;
			}
			set
			{
				if ((this._DMEndDate != value))
				{
					this._DMEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMExprires", DbType="Bit")]
		public System.Nullable<bool> DMExprires
		{
			get
			{
				return this._DMExprires;
			}
			set
			{
				if ((this._DMExprires != value))
				{
					this._DMExprires = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMDistrictID", DbType="Int")]
		public System.Nullable<int> DMDistrictID
		{
			get
			{
				return this._DMDistrictID;
			}
			set
			{
				if ((this._DMDistrictID != value))
				{
					this._DMDistrictID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIModule")]
	internal partial class XLIModuleEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIModuleID;
		
		private int _XLIAreaID;
		
		private string _Name;
		
		private string _Code;
		
		private int _ModuleOrder;
		
		private string _Path;
		
		private bool _AllRoles;
		
		private bool _Restrict;
		
		private string _DisplayName;
		
		private string _DisplayTooltip;
		
		private string _HelpText;
		
		private EntityRef<XLIAreaEntity> _XLIAreaEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIModuleIDChanging(int value);
    partial void OnXLIModuleIDChanged();
    partial void OnXLIAreaIDChanging(int value);
    partial void OnXLIAreaIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnModuleOrderChanging(int value);
    partial void OnModuleOrderChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnAllRolesChanging(bool value);
    partial void OnAllRolesChanged();
    partial void OnRestrictChanging(bool value);
    partial void OnRestrictChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDisplayTooltipChanging(string value);
    partial void OnDisplayTooltipChanged();
    partial void OnHelpTextChanging(string value);
    partial void OnHelpTextChanged();
    #endregion
		
		public XLIModuleEntity()
		{
			this._XLIAreaEntity = default(EntityRef<XLIAreaEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIModuleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIModuleID
		{
			get
			{
				return this._XLIModuleID;
			}
			set
			{
				if ((this._XLIModuleID != value))
				{
					this.OnXLIModuleIDChanging(value);
					this.SendPropertyChanging();
					this._XLIModuleID = value;
					this.SendPropertyChanged("XLIModuleID");
					this.OnXLIModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaID", DbType="Int NOT NULL")]
		public int XLIAreaID
		{
			get
			{
				return this._XLIAreaID;
			}
			set
			{
				if ((this._XLIAreaID != value))
				{
					if (this._XLIAreaEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXLIAreaIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaID = value;
					this.SendPropertyChanged("XLIAreaID");
					this.OnXLIAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleOrder", DbType="Int NOT NULL")]
		public int ModuleOrder
		{
			get
			{
				return this._ModuleOrder;
			}
			set
			{
				if ((this._ModuleOrder != value))
				{
					this.OnModuleOrderChanging(value);
					this.SendPropertyChanging();
					this._ModuleOrder = value;
					this.SendPropertyChanged("ModuleOrder");
					this.OnModuleOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(300)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllRoles", DbType="Bit NOT NULL")]
		public bool AllRoles
		{
			get
			{
				return this._AllRoles;
			}
			set
			{
				if ((this._AllRoles != value))
				{
					this.OnAllRolesChanging(value);
					this.SendPropertyChanging();
					this._AllRoles = value;
					this.SendPropertyChanged("AllRoles");
					this.OnAllRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Restrict]", Storage="_Restrict", DbType="Bit NOT NULL")]
		public bool Restrict
		{
			get
			{
				return this._Restrict;
			}
			set
			{
				if ((this._Restrict != value))
				{
					this.OnRestrictChanging(value);
					this.SendPropertyChanging();
					this._Restrict = value;
					this.SendPropertyChanged("Restrict");
					this.OnRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(256)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayTooltip", DbType="VarChar(256)")]
		public string DisplayTooltip
		{
			get
			{
				return this._DisplayTooltip;
			}
			set
			{
				if ((this._DisplayTooltip != value))
				{
					this.OnDisplayTooltipChanging(value);
					this.SendPropertyChanging();
					this._DisplayTooltip = value;
					this.SendPropertyChanged("DisplayTooltip");
					this.OnDisplayTooltipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpText", CanBeNull=false)]
		public string HelpText
		{
			get
			{
				return this._HelpText;
			}
			set
			{
				if ((this._HelpText != value))
				{
					this.OnHelpTextChanging(value);
					this.SendPropertyChanging();
					this._HelpText = value;
					this.SendPropertyChanged("HelpText");
					this.OnHelpTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIAreaEntity_XLIModuleEntity", Storage="_XLIAreaEntity", ThisKey="XLIAreaID", OtherKey="XLIAreaID", IsForeignKey=true)]
		public XLIAreaEntity XLIAreaEntity
		{
			get
			{
				return this._XLIAreaEntity.Entity;
			}
			set
			{
				XLIAreaEntity previousValue = this._XLIAreaEntity.Entity;
				if (((previousValue != value) 
							|| (this._XLIAreaEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XLIAreaEntity.Entity = null;
						previousValue.XLIModuleEntities.Remove(this);
					}
					this._XLIAreaEntity.Entity = value;
					if ((value != null))
					{
						value.XLIModuleEntities.Add(this);
						this._XLIAreaID = value.XLIAreaID;
					}
					else
					{
						this._XLIAreaID = default(int);
					}
					this.SendPropertyChanged("XLIAreaEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionSub")]
	public partial class VirtualQuestionSubEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionSubID;
		
		private int _VirtualQuestionID;
		
		private int _QTIItemSubID;
		
		private string _PointsPossible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionSubIDChanging(int value);
    partial void OnVirtualQuestionSubIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnQTIItemSubIDChanging(int value);
    partial void OnQTIItemSubIDChanged();
    partial void OnPointsPossibleChanging(string value);
    partial void OnPointsPossibleChanged();
    #endregion
		
		public VirtualQuestionSubEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionSubID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionSubID
		{
			get
			{
				return this._VirtualQuestionSubID;
			}
			set
			{
				if ((this._VirtualQuestionSubID != value))
				{
					this.OnVirtualQuestionSubIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionSubID = value;
					this.SendPropertyChanged("VirtualQuestionSubID");
					this.OnVirtualQuestionSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemSubID", DbType="Int NOT NULL")]
		public int QTIItemSubID
		{
			get
			{
				return this._QTIItemSubID;
			}
			set
			{
				if ((this._QTIItemSubID != value))
				{
					this.OnQTIItemSubIDChanging(value);
					this.SendPropertyChanging();
					this._QTIItemSubID = value;
					this.SendPropertyChanged("QTIItemSubID");
					this.OnQTIItemSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsPossible", DbType="NChar(10)")]
		public string PointsPossible
		{
			get
			{
				return this._PointsPossible;
			}
			set
			{
				if ((this._PointsPossible != value))
				{
					this.OnPointsPossibleChanging(value);
					this.SendPropertyChanging();
					this._PointsPossible = value;
					this.SendPropertyChanged("PointsPossible");
					this.OnPointsPossibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualQuestionAnswerScore")]
	public partial class VirtualQuestionAnswerScoreEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualQuestionAnswerScoreID;
		
		private int _VirtualQuestionID;
		
		private int _QTIItemAnswerScoreID;
		
		private int _Score;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualQuestionAnswerScoreIDChanging(int value);
    partial void OnVirtualQuestionAnswerScoreIDChanged();
    partial void OnVirtualQuestionIDChanging(int value);
    partial void OnVirtualQuestionIDChanged();
    partial void OnQTIItemAnswerScoreIDChanging(int value);
    partial void OnQTIItemAnswerScoreIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    #endregion
		
		public VirtualQuestionAnswerScoreEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionAnswerScoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualQuestionAnswerScoreID
		{
			get
			{
				return this._VirtualQuestionAnswerScoreID;
			}
			set
			{
				if ((this._VirtualQuestionAnswerScoreID != value))
				{
					this.OnVirtualQuestionAnswerScoreIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionAnswerScoreID = value;
					this.SendPropertyChanged("VirtualQuestionAnswerScoreID");
					this.OnVirtualQuestionAnswerScoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualQuestionID", DbType="Int NOT NULL")]
		public int VirtualQuestionID
		{
			get
			{
				return this._VirtualQuestionID;
			}
			set
			{
				if ((this._VirtualQuestionID != value))
				{
					this.OnVirtualQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualQuestionID = value;
					this.SendPropertyChanged("VirtualQuestionID");
					this.OnVirtualQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTIItemAnswerScoreID", DbType="Int NOT NULL")]
		public int QTIItemAnswerScoreID
		{
			get
			{
				return this._QTIItemAnswerScoreID;
			}
			set
			{
				if ((this._QTIItemAnswerScoreID != value))
				{
					this.OnQTIItemAnswerScoreIDChanging(value);
					this.SendPropertyChanging();
					this._QTIItemAnswerScoreID = value;
					this.SendPropertyChanged("QTIItemAnswerScoreID");
					this.OnQTIItemAnswerScoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestAssignment")]
	public partial class TestAssignmentEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TestAssignmentID;
		
		private int _ClassID;
		
		private int _StudentID;
		
		private int _VirtualTestID;
		
		private System.DateTime _AvailableDateTime;
		
		private System.DateTime _ClosingDateTime;
		
		private bool _TestTaken;
		
		private System.Nullable<int> _AssignedByUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestAssignmentIDChanging(int value);
    partial void OnTestAssignmentIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnAvailableDateTimeChanging(System.DateTime value);
    partial void OnAvailableDateTimeChanged();
    partial void OnClosingDateTimeChanging(System.DateTime value);
    partial void OnClosingDateTimeChanged();
    partial void OnTestTakenChanging(bool value);
    partial void OnTestTakenChanged();
    partial void OnAssignedByUserIDChanging(System.Nullable<int> value);
    partial void OnAssignedByUserIDChanged();
    #endregion
		
		public TestAssignmentEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAssignmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TestAssignmentID
		{
			get
			{
				return this._TestAssignmentID;
			}
			set
			{
				if ((this._TestAssignmentID != value))
				{
					this.OnTestAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._TestAssignmentID = value;
					this.SendPropertyChanged("TestAssignmentID");
					this.OnTestAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime AvailableDateTime
		{
			get
			{
				return this._AvailableDateTime;
			}
			set
			{
				if ((this._AvailableDateTime != value))
				{
					this.OnAvailableDateTimeChanging(value);
					this.SendPropertyChanging();
					this._AvailableDateTime = value;
					this.SendPropertyChanged("AvailableDateTime");
					this.OnAvailableDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ClosingDateTime
		{
			get
			{
				return this._ClosingDateTime;
			}
			set
			{
				if ((this._ClosingDateTime != value))
				{
					this.OnClosingDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ClosingDateTime = value;
					this.SendPropertyChanged("ClosingDateTime");
					this.OnClosingDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTaken", DbType="Bit NOT NULL")]
		public bool TestTaken
		{
			get
			{
				return this._TestTaken;
			}
			set
			{
				if ((this._TestTaken != value))
				{
					this.OnTestTakenChanging(value);
					this.SendPropertyChanging();
					this._TestTaken = value;
					this.SendPropertyChanged("TestTaken");
					this.OnTestTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedByUserID", DbType="Int")]
		public System.Nullable<int> AssignedByUserID
		{
			get
			{
				return this._AssignedByUserID;
			}
			set
			{
				if ((this._AssignedByUserID != value))
				{
					this.OnAssignedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedByUserID = value;
					this.SendPropertyChanged("AssignedByUserID");
					this.OnAssignedByUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassUserView")]
	internal partial class ClassUserView
	{
		
		private System.Nullable<int> _ClassUserLOEID;
		
		private int _ClassID;
		
		private string _Name;
		
		private System.Nullable<int> _DistrictTermID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _SchoolID;
		
		private int _UserIDClassUser;
		
		public ClassUserView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassUserLOEID", DbType="Int")]
		public System.Nullable<int> ClassUserLOEID
		{
			get
			{
				return this._ClassUserLOEID;
			}
			set
			{
				if ((this._ClassUserLOEID != value))
				{
					this._ClassUserLOEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictTermID", DbType="Int")]
		public System.Nullable<int> DistrictTermID
		{
			get
			{
				return this._DistrictTermID;
			}
			set
			{
				if ((this._DistrictTermID != value))
				{
					this._DistrictTermID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDClassUser", DbType="Int NOT NULL")]
		public int UserIDClassUser
		{
			get
			{
				return this._UserIDClassUser;
			}
			set
			{
				if ((this._UserIDClassUser != value))
				{
					this._UserIDClassUser = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoggedOffUser")]
	internal partial class LoggedOffUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoggedOffUserID;
		
		private int _UserID;
		
		private string _RedirectURL;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoggedOffUserIDChanging(int value);
    partial void OnLoggedOffUserIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRedirectURLChanging(string value);
    partial void OnRedirectURLChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public LoggedOffUserEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggedOffUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoggedOffUserID
		{
			get
			{
				return this._LoggedOffUserID;
			}
			set
			{
				if ((this._LoggedOffUserID != value))
				{
					this.OnLoggedOffUserIDChanging(value);
					this.SendPropertyChanging();
					this._LoggedOffUserID = value;
					this.SendPropertyChanged("LoggedOffUserID");
					this.OnLoggedOffUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedirectURL", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string RedirectURL
		{
			get
			{
				return this._RedirectURL;
			}
			set
			{
				if ((this._RedirectURL != value))
				{
					this.OnRedirectURLChanging(value);
					this.SendPropertyChanging();
					this._RedirectURL = value;
					this.SendPropertyChanged("RedirectURL");
					this.OnRedirectURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogon")]
	internal partial class UserLogonEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _GUIDSession;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnGUIDSessionChanging(string value);
    partial void OnGUIDSessionChanged();
    #endregion
		
		public UserLogonEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUIDSession", DbType="VarChar(100)")]
		public string GUIDSession
		{
			get
			{
				return this._GUIDSession;
			}
			set
			{
				if ((this._GUIDSession != value))
				{
					this.OnGUIDSessionChanging(value);
					this.SendPropertyChanging();
					this._GUIDSession = value;
					this.SendPropertyChanged("GUIDSession");
					this.OnGUIDSessionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RosterType")]
	internal partial class RosterTypeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RosterTypeID;
		
		private string _RosterTypeName;
		
		private EntitySet<DistrictRosterOptionEntity> _DistrictRosterOptionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRosterTypeIDChanging(int value);
    partial void OnRosterTypeIDChanged();
    partial void OnRosterTypeNameChanging(string value);
    partial void OnRosterTypeNameChanged();
    #endregion
		
		public RosterTypeEntity()
		{
			this._DistrictRosterOptionEntities = new EntitySet<DistrictRosterOptionEntity>(new Action<DistrictRosterOptionEntity>(this.attach_DistrictRosterOptionEntities), new Action<DistrictRosterOptionEntity>(this.detach_DistrictRosterOptionEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RosterTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RosterTypeID
		{
			get
			{
				return this._RosterTypeID;
			}
			set
			{
				if ((this._RosterTypeID != value))
				{
					this.OnRosterTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RosterTypeID = value;
					this.SendPropertyChanged("RosterTypeID");
					this.OnRosterTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RosterTypeName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string RosterTypeName
		{
			get
			{
				return this._RosterTypeName;
			}
			set
			{
				if ((this._RosterTypeName != value))
				{
					this.OnRosterTypeNameChanging(value);
					this.SendPropertyChanging();
					this._RosterTypeName = value;
					this.SendPropertyChanged("RosterTypeName");
					this.OnRosterTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RosterTypeEntity_DistrictRosterOptionEntity", Storage="_DistrictRosterOptionEntities", ThisKey="RosterTypeID", OtherKey="RosterTypeID")]
		public EntitySet<DistrictRosterOptionEntity> DistrictRosterOptionEntities
		{
			get
			{
				return this._DistrictRosterOptionEntities;
			}
			set
			{
				this._DistrictRosterOptionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistrictRosterOptionEntities(DistrictRosterOptionEntity entity)
		{
			this.SendPropertyChanging();
			entity.RosterTypeEntity = this;
		}
		
		private void detach_DistrictRosterOptionEntities(DistrictRosterOptionEntity entity)
		{
			this.SendPropertyChanging();
			entity.RosterTypeEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictRosterOption")]
	internal partial class DistrictRosterOptionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictRosterOptionID;
		
		private int _RosterTypeID;
		
		private System.Nullable<int> _DistrictID;
		
		private int _DisplayOrder;
		
		private int _IsEnabled;
		
		private string _DisplayName;
		
		private EntityRef<RosterTypeEntity> _RosterTypeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictRosterOptionIDChanging(int value);
    partial void OnDistrictRosterOptionIDChanged();
    partial void OnRosterTypeIDChanging(int value);
    partial void OnRosterTypeIDChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsEnabledChanging(int value);
    partial void OnIsEnabledChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public DistrictRosterOptionEntity()
		{
			this._RosterTypeEntity = default(EntityRef<RosterTypeEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictRosterOptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictRosterOptionID
		{
			get
			{
				return this._DistrictRosterOptionID;
			}
			set
			{
				if ((this._DistrictRosterOptionID != value))
				{
					this.OnDistrictRosterOptionIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictRosterOptionID = value;
					this.SendPropertyChanged("DistrictRosterOptionID");
					this.OnDistrictRosterOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RosterTypeID", DbType="Int NOT NULL")]
		public int RosterTypeID
		{
			get
			{
				return this._RosterTypeID;
			}
			set
			{
				if ((this._RosterTypeID != value))
				{
					if (this._RosterTypeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRosterTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RosterTypeID = value;
					this.SendPropertyChanged("RosterTypeID");
					this.OnRosterTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Int NOT NULL")]
		public int IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RosterTypeEntity_DistrictRosterOptionEntity", Storage="_RosterTypeEntity", ThisKey="RosterTypeID", OtherKey="RosterTypeID", IsForeignKey=true)]
		public RosterTypeEntity RosterTypeEntity
		{
			get
			{
				return this._RosterTypeEntity.Entity;
			}
			set
			{
				RosterTypeEntity previousValue = this._RosterTypeEntity.Entity;
				if (((previousValue != value) 
							|| (this._RosterTypeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RosterTypeEntity.Entity = null;
						previousValue.DistrictRosterOptionEntities.Remove(this);
					}
					this._RosterTypeEntity.Entity = value;
					if ((value != null))
					{
						value.DistrictRosterOptionEntities.Add(this);
						this._RosterTypeID = value.RosterTypeID;
					}
					else
					{
						this._RosterTypeID = default(int);
					}
					this.SendPropertyChanged("RosterTypeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDistrictSectorView")]
	public partial class UserDistrictSectorView
	{
		
		private int _UserID;
		
		private string _Code;
		
		private int _DistrictID;
		
		private string _LICode;
		
		private string _Sector;
		
		private string _Email;
		
		public UserDistrictSectorView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICode", DbType="VarChar(20)")]
		public string LICode
		{
			get
			{
				return this._LICode;
			}
			set
			{
				if ((this._LICode != value))
				{
					this._LICode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sector", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				if ((this._Sector != value))
				{
					this._Sector = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTLConfigs")]
	internal partial class TTLConfigEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DynamoTableName;
		
		private int _RetentionInDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDynamoTableNameChanging(string value);
    partial void OnDynamoTableNameChanged();
    partial void OnRetentionInDayChanging(int value);
    partial void OnRetentionInDayChanged();
    #endregion
		
		public TTLConfigEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DynamoTableName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DynamoTableName
		{
			get
			{
				return this._DynamoTableName;
			}
			set
			{
				if ((this._DynamoTableName != value))
				{
					this.OnDynamoTableNameChanging(value);
					this.SendPropertyChanging();
					this._DynamoTableName = value;
					this.SendPropertyChanged("DynamoTableName");
					this.OnDynamoTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetentionInDay", DbType="Int NOT NULL")]
		public int RetentionInDay
		{
			get
			{
				return this._RetentionInDay;
			}
			set
			{
				if ((this._RetentionInDay != value))
				{
					this.OnRetentionInDayChanging(value);
					this.SendPropertyChanging();
					this._RetentionInDay = value;
					this.SendPropertyChanged("RetentionInDay");
					this.OnRetentionInDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AchievementLevelSetting")]
	internal partial class AchievementLevelSettingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AchievementLevelSettingID;
		
		private string _ValueString;
		
		private string _LabelString;
		
		private string _Name;
		
		private string _GradedValueString;
		
		private string _SubValueString;
		
		private string _SubLabelString;
		
		private string _SubGradedValueString;
		
		private EntitySet<VirtualTestDBEntity> _VirtualTests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAchievementLevelSettingIDChanging(int value);
    partial void OnAchievementLevelSettingIDChanged();
    partial void OnValueStringChanging(string value);
    partial void OnValueStringChanged();
    partial void OnLabelStringChanging(string value);
    partial void OnLabelStringChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGradedValueStringChanging(string value);
    partial void OnGradedValueStringChanged();
    partial void OnSubValueStringChanging(string value);
    partial void OnSubValueStringChanged();
    partial void OnSubLabelStringChanging(string value);
    partial void OnSubLabelStringChanged();
    partial void OnSubGradedValueStringChanging(string value);
    partial void OnSubGradedValueStringChanged();
    #endregion
		
		public AchievementLevelSettingEntity()
		{
			this._VirtualTests = new EntitySet<VirtualTestDBEntity>(new Action<VirtualTestDBEntity>(this.attach_VirtualTests), new Action<VirtualTestDBEntity>(this.detach_VirtualTests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevelSettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AchievementLevelSettingID
		{
			get
			{
				return this._AchievementLevelSettingID;
			}
			set
			{
				if ((this._AchievementLevelSettingID != value))
				{
					this.OnAchievementLevelSettingIDChanging(value);
					this.SendPropertyChanging();
					this._AchievementLevelSettingID = value;
					this.SendPropertyChanged("AchievementLevelSettingID");
					this.OnAchievementLevelSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueString", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string ValueString
		{
			get
			{
				return this._ValueString;
			}
			set
			{
				if ((this._ValueString != value))
				{
					this.OnValueStringChanging(value);
					this.SendPropertyChanging();
					this._ValueString = value;
					this.SendPropertyChanged("ValueString");
					this.OnValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelString", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string LabelString
		{
			get
			{
				return this._LabelString;
			}
			set
			{
				if ((this._LabelString != value))
				{
					this.OnLabelStringChanging(value);
					this.SendPropertyChanging();
					this._LabelString = value;
					this.SendPropertyChanged("LabelString");
					this.OnLabelStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradedValueString", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string GradedValueString
		{
			get
			{
				return this._GradedValueString;
			}
			set
			{
				if ((this._GradedValueString != value))
				{
					this.OnGradedValueStringChanging(value);
					this.SendPropertyChanging();
					this._GradedValueString = value;
					this.SendPropertyChanged("GradedValueString");
					this.OnGradedValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubValueString", DbType="VarChar(500)")]
		public string SubValueString
		{
			get
			{
				return this._SubValueString;
			}
			set
			{
				if ((this._SubValueString != value))
				{
					this.OnSubValueStringChanging(value);
					this.SendPropertyChanging();
					this._SubValueString = value;
					this.SendPropertyChanged("SubValueString");
					this.OnSubValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubLabelString", DbType="VarChar(500)")]
		public string SubLabelString
		{
			get
			{
				return this._SubLabelString;
			}
			set
			{
				if ((this._SubLabelString != value))
				{
					this.OnSubLabelStringChanging(value);
					this.SendPropertyChanging();
					this._SubLabelString = value;
					this.SendPropertyChanged("SubLabelString");
					this.OnSubLabelStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGradedValueString", DbType="VarChar(500)")]
		public string SubGradedValueString
		{
			get
			{
				return this._SubGradedValueString;
			}
			set
			{
				if ((this._SubGradedValueString != value))
				{
					this.OnSubGradedValueStringChanging(value);
					this.SendPropertyChanging();
					this._SubGradedValueString = value;
					this.SendPropertyChanged("SubGradedValueString");
					this.OnSubGradedValueStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AchievementLevelSettingEntity_VirtualTestDBEntity", Storage="_VirtualTests", ThisKey="AchievementLevelSettingID", OtherKey="AchievementLevelSettingID")]
		public EntitySet<VirtualTestDBEntity> VirtualTestDBEntities
		{
			get
			{
				return this._VirtualTests;
			}
			set
			{
				this._VirtualTests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VirtualTests(VirtualTestDBEntity entity)
		{
			this.SendPropertyChanging();
			entity.AchievementLevelSettingEntity = this;
		}
		
		private void detach_VirtualTests(VirtualTestDBEntity entity)
		{
			this.SendPropertyChanging();
			entity.AchievementLevelSettingEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VirtualTest")]
	internal partial class VirtualTestDBEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VirtualTestID;
		
		private string _Name;
		
		private int _StateID;
		
		private int _BankID;
		
		private int _VirtualTestSourceID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _AuthorUserID;
		
		private System.Nullable<bool> _Archived;
		
		private System.Nullable<int> _EditedByUserID;
		
		private System.Nullable<int> _AchievementLevelSettingID;
		
		private System.Nullable<int> _VirtualTestType;
		
		private string _Instruction;
		
		private System.Nullable<int> _PreQTIVirtualTestID;
		
		private System.Nullable<int> _PreProdVTID;
		
		private System.Nullable<int> _TestScoreMethodID;
		
		private System.Nullable<int> _VirtualTestSubTypeID;
		
		private System.Nullable<bool> _IsTeacherLed;
		
		private System.Nullable<bool> _UsePointsEarnedConversion;
		
		private System.Nullable<bool> _HasUseRationale;
		
		private System.Nullable<bool> _IsNumberQuestions;
		
		private System.Nullable<bool> _IsMultipleTestResult;
		
		private System.Nullable<int> _NavigationMethodID;
		
		private System.Nullable<int> _DataSetOriginID;
		
		private System.Nullable<int> _DataSetCategoryID;
		
		private System.Nullable<int> _ParentTestID;
		
		private System.Nullable<int> _OriginalTestID;
		
		private EntityRef<AchievementLevelSettingEntity> _AchievementLevelSettingEntity;
		
		private EntityRef<DataSetCategoryEntity> _DataSetCategoryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVirtualTestIDChanging(int value);
    partial void OnVirtualTestIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnBankIDChanging(int value);
    partial void OnBankIDChanged();
    partial void OnVirtualTestSourceIDChanging(int value);
    partial void OnVirtualTestSourceIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnAuthorUserIDChanging(System.Nullable<int> value);
    partial void OnAuthorUserIDChanged();
    partial void OnArchivedChanging(System.Nullable<bool> value);
    partial void OnArchivedChanged();
    partial void OnEditedByUserIDChanging(System.Nullable<int> value);
    partial void OnEditedByUserIDChanged();
    partial void OnAchievementLevelSettingIDChanging(System.Nullable<int> value);
    partial void OnAchievementLevelSettingIDChanged();
    partial void OnVirtualTestTypeChanging(System.Nullable<int> value);
    partial void OnVirtualTestTypeChanged();
    partial void OnInstructionChanging(string value);
    partial void OnInstructionChanged();
    partial void OnPreQTIVirtualTestIDChanging(System.Nullable<int> value);
    partial void OnPreQTIVirtualTestIDChanged();
    partial void OnPreProdVTIDChanging(System.Nullable<int> value);
    partial void OnPreProdVTIDChanged();
    partial void OnTestScoreMethodIDChanging(System.Nullable<int> value);
    partial void OnTestScoreMethodIDChanged();
    partial void OnVirtualTestSubTypeIDChanging(System.Nullable<int> value);
    partial void OnVirtualTestSubTypeIDChanged();
    partial void OnIsTeacherLedChanging(System.Nullable<bool> value);
    partial void OnIsTeacherLedChanged();
    partial void OnUsePointsEarnedConversionChanging(System.Nullable<bool> value);
    partial void OnUsePointsEarnedConversionChanged();
    partial void OnHasUseRationaleChanging(System.Nullable<bool> value);
    partial void OnHasUseRationaleChanged();
    partial void OnIsNumberQuestionsChanging(System.Nullable<bool> value);
    partial void OnIsNumberQuestionsChanged();
    partial void OnIsMultipleTestResultChanging(System.Nullable<bool> value);
    partial void OnIsMultipleTestResultChanged();
    partial void OnNavigationMethodIDChanging(System.Nullable<int> value);
    partial void OnNavigationMethodIDChanged();
    partial void OnDataSetOriginIDChanging(System.Nullable<int> value);
    partial void OnDataSetOriginIDChanged();
    partial void OnDataSetCategoryIDChanging(System.Nullable<int> value);
    partial void OnDataSetCategoryIDChanged();
    partial void OnParentTestIDChanging(System.Nullable<int> value);
    partial void OnParentTestIDChanged();
    partial void OnOriginalTestIDChanging(System.Nullable<int> value);
    partial void OnOriginalTestIDChanged();
    #endregion
		
		public VirtualTestDBEntity()
		{
			this._AchievementLevelSettingEntity = default(EntityRef<AchievementLevelSettingEntity>);
			this._DataSetCategoryEntity = default(EntityRef<DataSetCategoryEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this.OnVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestID = value;
					this.SendPropertyChanged("VirtualTestID");
					this.OnVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="Int NOT NULL")]
		public int BankID
		{
			get
			{
				return this._BankID;
			}
			set
			{
				if ((this._BankID != value))
				{
					this.OnBankIDChanging(value);
					this.SendPropertyChanging();
					this._BankID = value;
					this.SendPropertyChanged("BankID");
					this.OnBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSourceID", DbType="Int NOT NULL")]
		public int VirtualTestSourceID
		{
			get
			{
				return this._VirtualTestSourceID;
			}
			set
			{
				if ((this._VirtualTestSourceID != value))
				{
					this.OnVirtualTestSourceIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestSourceID = value;
					this.SendPropertyChanged("VirtualTestSourceID");
					this.OnVirtualTestSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorUserID", DbType="Int")]
		public System.Nullable<int> AuthorUserID
		{
			get
			{
				return this._AuthorUserID;
			}
			set
			{
				if ((this._AuthorUserID != value))
				{
					this.OnAuthorUserIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorUserID = value;
					this.SendPropertyChanged("AuthorUserID");
					this.OnAuthorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Archived", DbType="Bit")]
		public System.Nullable<bool> Archived
		{
			get
			{
				return this._Archived;
			}
			set
			{
				if ((this._Archived != value))
				{
					this.OnArchivedChanging(value);
					this.SendPropertyChanging();
					this._Archived = value;
					this.SendPropertyChanged("Archived");
					this.OnArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditedByUserID", DbType="Int")]
		public System.Nullable<int> EditedByUserID
		{
			get
			{
				return this._EditedByUserID;
			}
			set
			{
				if ((this._EditedByUserID != value))
				{
					this.OnEditedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._EditedByUserID = value;
					this.SendPropertyChanged("EditedByUserID");
					this.OnEditedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementLevelSettingID", DbType="Int")]
		public System.Nullable<int> AchievementLevelSettingID
		{
			get
			{
				return this._AchievementLevelSettingID;
			}
			set
			{
				if ((this._AchievementLevelSettingID != value))
				{
					if (this._AchievementLevelSettingEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAchievementLevelSettingIDChanging(value);
					this.SendPropertyChanging();
					this._AchievementLevelSettingID = value;
					this.SendPropertyChanged("AchievementLevelSettingID");
					this.OnAchievementLevelSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestType", DbType="Int")]
		public System.Nullable<int> VirtualTestType
		{
			get
			{
				return this._VirtualTestType;
			}
			set
			{
				if ((this._VirtualTestType != value))
				{
					this.OnVirtualTestTypeChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestType = value;
					this.SendPropertyChanged("VirtualTestType");
					this.OnVirtualTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="VarChar(MAX)")]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreQTIVirtualTestID", DbType="Int")]
		public System.Nullable<int> PreQTIVirtualTestID
		{
			get
			{
				return this._PreQTIVirtualTestID;
			}
			set
			{
				if ((this._PreQTIVirtualTestID != value))
				{
					this.OnPreQTIVirtualTestIDChanging(value);
					this.SendPropertyChanging();
					this._PreQTIVirtualTestID = value;
					this.SendPropertyChanged("PreQTIVirtualTestID");
					this.OnPreQTIVirtualTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreProdVTID", DbType="Int")]
		public System.Nullable<int> PreProdVTID
		{
			get
			{
				return this._PreProdVTID;
			}
			set
			{
				if ((this._PreProdVTID != value))
				{
					this.OnPreProdVTIDChanging(value);
					this.SendPropertyChanging();
					this._PreProdVTID = value;
					this.SendPropertyChanged("PreProdVTID");
					this.OnPreProdVTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestScoreMethodID", DbType="Int")]
		public System.Nullable<int> TestScoreMethodID
		{
			get
			{
				return this._TestScoreMethodID;
			}
			set
			{
				if ((this._TestScoreMethodID != value))
				{
					this.OnTestScoreMethodIDChanging(value);
					this.SendPropertyChanging();
					this._TestScoreMethodID = value;
					this.SendPropertyChanged("TestScoreMethodID");
					this.OnTestScoreMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestSubTypeID", DbType="Int")]
		public System.Nullable<int> VirtualTestSubTypeID
		{
			get
			{
				return this._VirtualTestSubTypeID;
			}
			set
			{
				if ((this._VirtualTestSubTypeID != value))
				{
					this.OnVirtualTestSubTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VirtualTestSubTypeID = value;
					this.SendPropertyChanged("VirtualTestSubTypeID");
					this.OnVirtualTestSubTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacherLed", DbType="Bit")]
		public System.Nullable<bool> IsTeacherLed
		{
			get
			{
				return this._IsTeacherLed;
			}
			set
			{
				if ((this._IsTeacherLed != value))
				{
					this.OnIsTeacherLedChanging(value);
					this.SendPropertyChanging();
					this._IsTeacherLed = value;
					this.SendPropertyChanged("IsTeacherLed");
					this.OnIsTeacherLedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsePointsEarnedConversion", DbType="Bit")]
		public System.Nullable<bool> UsePointsEarnedConversion
		{
			get
			{
				return this._UsePointsEarnedConversion;
			}
			set
			{
				if ((this._UsePointsEarnedConversion != value))
				{
					this.OnUsePointsEarnedConversionChanging(value);
					this.SendPropertyChanging();
					this._UsePointsEarnedConversion = value;
					this.SendPropertyChanged("UsePointsEarnedConversion");
					this.OnUsePointsEarnedConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasUseRationale", DbType="Bit")]
		public System.Nullable<bool> HasUseRationale
		{
			get
			{
				return this._HasUseRationale;
			}
			set
			{
				if ((this._HasUseRationale != value))
				{
					this.OnHasUseRationaleChanging(value);
					this.SendPropertyChanging();
					this._HasUseRationale = value;
					this.SendPropertyChanged("HasUseRationale");
					this.OnHasUseRationaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNumberQuestions", DbType="Bit")]
		public System.Nullable<bool> IsNumberQuestions
		{
			get
			{
				return this._IsNumberQuestions;
			}
			set
			{
				if ((this._IsNumberQuestions != value))
				{
					this.OnIsNumberQuestionsChanging(value);
					this.SendPropertyChanging();
					this._IsNumberQuestions = value;
					this.SendPropertyChanged("IsNumberQuestions");
					this.OnIsNumberQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultipleTestResult", DbType="Bit")]
		public System.Nullable<bool> IsMultipleTestResult
		{
			get
			{
				return this._IsMultipleTestResult;
			}
			set
			{
				if ((this._IsMultipleTestResult != value))
				{
					this.OnIsMultipleTestResultChanging(value);
					this.SendPropertyChanging();
					this._IsMultipleTestResult = value;
					this.SendPropertyChanged("IsMultipleTestResult");
					this.OnIsMultipleTestResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigationMethodID", DbType="Int")]
		public System.Nullable<int> NavigationMethodID
		{
			get
			{
				return this._NavigationMethodID;
			}
			set
			{
				if ((this._NavigationMethodID != value))
				{
					this.OnNavigationMethodIDChanging(value);
					this.SendPropertyChanging();
					this._NavigationMethodID = value;
					this.SendPropertyChanged("NavigationMethodID");
					this.OnNavigationMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetOriginID", DbType="Int")]
		public System.Nullable<int> DataSetOriginID
		{
			get
			{
				return this._DataSetOriginID;
			}
			set
			{
				if ((this._DataSetOriginID != value))
				{
					this.OnDataSetOriginIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetOriginID = value;
					this.SendPropertyChanged("DataSetOriginID");
					this.OnDataSetOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					if (this._DataSetCategoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataSetCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryID = value;
					this.SendPropertyChanged("DataSetCategoryID");
					this.OnDataSetCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTestID", DbType="Int")]
		public System.Nullable<int> ParentTestID
		{
			get
			{
				return this._ParentTestID;
			}
			set
			{
				if ((this._ParentTestID != value))
				{
					this.OnParentTestIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTestID = value;
					this.SendPropertyChanged("ParentTestID");
					this.OnParentTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalTestID", DbType="Int")]
		public System.Nullable<int> OriginalTestID
		{
			get
			{
				return this._OriginalTestID;
			}
			set
			{
				if ((this._OriginalTestID != value))
				{
					this.OnOriginalTestIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalTestID = value;
					this.SendPropertyChanged("OriginalTestID");
					this.OnOriginalTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AchievementLevelSettingEntity_VirtualTestDBEntity", Storage="_AchievementLevelSettingEntity", ThisKey="AchievementLevelSettingID", OtherKey="AchievementLevelSettingID", IsForeignKey=true)]
		public AchievementLevelSettingEntity AchievementLevelSettingEntity
		{
			get
			{
				return this._AchievementLevelSettingEntity.Entity;
			}
			set
			{
				AchievementLevelSettingEntity previousValue = this._AchievementLevelSettingEntity.Entity;
				if (((previousValue != value) 
							|| (this._AchievementLevelSettingEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AchievementLevelSettingEntity.Entity = null;
						previousValue.VirtualTestDBEntities.Remove(this);
					}
					this._AchievementLevelSettingEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualTestDBEntities.Add(this);
						this._AchievementLevelSettingID = value.AchievementLevelSettingID;
					}
					else
					{
						this._AchievementLevelSettingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AchievementLevelSettingEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSetCategoryEntity_VirtualTestDBEntity", Storage="_DataSetCategoryEntity", ThisKey="DataSetCategoryID", OtherKey="DataSetCategoryID", IsForeignKey=true)]
		public DataSetCategoryEntity DataSetCategoryEntity
		{
			get
			{
				return this._DataSetCategoryEntity.Entity;
			}
			set
			{
				DataSetCategoryEntity previousValue = this._DataSetCategoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._DataSetCategoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataSetCategoryEntity.Entity = null;
						previousValue.VirtualTestDBEntities.Remove(this);
					}
					this._DataSetCategoryEntity.Entity = value;
					if ((value != null))
					{
						value.VirtualTestDBEntities.Add(this);
						this._DataSetCategoryID = value.DataSetCategoryID;
					}
					else
					{
						this._DataSetCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DataSetCategoryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTIRequestHistory")]
	public partial class LTIRequestHistoryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LTIRequestHistoryID;
		
		private string _PlatformID;
		
		private string _ClientID;
		
		private string _DeploymentID;
		
		private string _State;
		
		private string _Nonce;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<bool> _IsCompleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLTIRequestHistoryIDChanging(int value);
    partial void OnLTIRequestHistoryIDChanged();
    partial void OnPlatformIDChanging(string value);
    partial void OnPlatformIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnDeploymentIDChanging(string value);
    partial void OnDeploymentIDChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnNonceChanging(string value);
    partial void OnNonceChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    #endregion
		
		public LTIRequestHistoryEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LTIRequestHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LTIRequestHistoryID
		{
			get
			{
				return this._LTIRequestHistoryID;
			}
			set
			{
				if ((this._LTIRequestHistoryID != value))
				{
					this.OnLTIRequestHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._LTIRequestHistoryID = value;
					this.SendPropertyChanged("LTIRequestHistoryID");
					this.OnLTIRequestHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PlatformID
		{
			get
			{
				return this._PlatformID;
			}
			set
			{
				if ((this._PlatformID != value))
				{
					this.OnPlatformIDChanging(value);
					this.SendPropertyChanging();
					this._PlatformID = value;
					this.SendPropertyChanged("PlatformID");
					this.OnPlatformIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DeploymentID
		{
			get
			{
				return this._DeploymentID;
			}
			set
			{
				if ((this._DeploymentID != value))
				{
					this.OnDeploymentIDChanging(value);
					this.SendPropertyChanging();
					this._DeploymentID = value;
					this.SendPropertyChanged("DeploymentID");
					this.OnDeploymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nonce", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nonce
		{
			get
			{
				return this._Nonce;
			}
			set
			{
				if ((this._Nonce != value))
				{
					this.OnNonceChanging(value);
					this.SendPropertyChanging();
					this._Nonce = value;
					this.SendPropertyChanged("Nonce");
					this.OnNonceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LTIInformation")]
	public partial class LTIInformationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LTIInformationID;
		
		private string _PlatformID;
		
		private string _ClientID;
		
		private string _DeploymentID;
		
		private string _AuthorizationServerID;
		
		private string _AuthenticationRequestURL;
		
		private string _AccessTokenURL;
		
		private string _PublicKey;
		
		private int _DistrictID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLTIInformationIDChanging(int value);
    partial void OnLTIInformationIDChanged();
    partial void OnPlatformIDChanging(string value);
    partial void OnPlatformIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    partial void OnDeploymentIDChanging(string value);
    partial void OnDeploymentIDChanged();
    partial void OnAuthorizationServerIDChanging(string value);
    partial void OnAuthorizationServerIDChanged();
    partial void OnAuthenticationRequestURLChanging(string value);
    partial void OnAuthenticationRequestURLChanged();
    partial void OnAccessTokenURLChanging(string value);
    partial void OnAccessTokenURLChanged();
    partial void OnPublicKeyChanging(string value);
    partial void OnPublicKeyChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    #endregion
		
		public LTIInformationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LTIInformationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LTIInformationID
		{
			get
			{
				return this._LTIInformationID;
			}
			set
			{
				if ((this._LTIInformationID != value))
				{
					this.OnLTIInformationIDChanging(value);
					this.SendPropertyChanging();
					this._LTIInformationID = value;
					this.SendPropertyChanged("LTIInformationID");
					this.OnLTIInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PlatformID
		{
			get
			{
				return this._PlatformID;
			}
			set
			{
				if ((this._PlatformID != value))
				{
					this.OnPlatformIDChanging(value);
					this.SendPropertyChanging();
					this._PlatformID = value;
					this.SendPropertyChanged("PlatformID");
					this.OnPlatformIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentID", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DeploymentID
		{
			get
			{
				return this._DeploymentID;
			}
			set
			{
				if ((this._DeploymentID != value))
				{
					this.OnDeploymentIDChanging(value);
					this.SendPropertyChanging();
					this._DeploymentID = value;
					this.SendPropertyChanged("DeploymentID");
					this.OnDeploymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationServerID", DbType="VarChar(100)")]
		public string AuthorizationServerID
		{
			get
			{
				return this._AuthorizationServerID;
			}
			set
			{
				if ((this._AuthorizationServerID != value))
				{
					this.OnAuthorizationServerIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationServerID = value;
					this.SendPropertyChanged("AuthorizationServerID");
					this.OnAuthorizationServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationRequestURL", DbType="VarChar(100)")]
		public string AuthenticationRequestURL
		{
			get
			{
				return this._AuthenticationRequestURL;
			}
			set
			{
				if ((this._AuthenticationRequestURL != value))
				{
					this.OnAuthenticationRequestURLChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationRequestURL = value;
					this.SendPropertyChanged("AuthenticationRequestURL");
					this.OnAuthenticationRequestURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTokenURL", DbType="VarChar(100)")]
		public string AccessTokenURL
		{
			get
			{
				return this._AccessTokenURL;
			}
			set
			{
				if ((this._AccessTokenURL != value))
				{
					this.OnAccessTokenURLChanging(value);
					this.SendPropertyChanging();
					this._AccessTokenURL = value;
					this.SendPropertyChanged("AccessTokenURL");
					this.OnAccessTokenURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicKey", DbType="VarChar(MAX)")]
		public string PublicKey
		{
			get
			{
				return this._PublicKey;
			}
			set
			{
				if ((this._PublicKey != value))
				{
					this.OnPublicKeyChanging(value);
					this.SendPropertyChanging();
					this._PublicKey = value;
					this.SendPropertyChanged("PublicKey");
					this.OnPublicKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistrictDataParm")]
	internal partial class DistrictDataParmEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictDataParmID;
		
		private System.Nullable<int> _DistrictID;
		
		private int _DataSetOriginID;
		
		private int _DataSetCategoryID;
		
		private string _JSONDataConfig;
		
		private string _ImportType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictDataParmIDChanging(int value);
    partial void OnDistrictDataParmIDChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    partial void OnDataSetOriginIDChanging(int value);
    partial void OnDataSetOriginIDChanged();
    partial void OnDataSetCategoryIDChanging(int value);
    partial void OnDataSetCategoryIDChanged();
    partial void OnJSONDataConfigChanging(string value);
    partial void OnJSONDataConfigChanged();
    partial void OnImportTypeChanging(string value);
    partial void OnImportTypeChanged();
    #endregion
		
		public DistrictDataParmEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictDataParmID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictDataParmID
		{
			get
			{
				return this._DistrictDataParmID;
			}
			set
			{
				if ((this._DistrictDataParmID != value))
				{
					this.OnDistrictDataParmIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictDataParmID = value;
					this.SendPropertyChanged("DistrictDataParmID");
					this.OnDistrictDataParmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetOriginID", DbType="Int NOT NULL")]
		public int DataSetOriginID
		{
			get
			{
				return this._DataSetOriginID;
			}
			set
			{
				if ((this._DataSetOriginID != value))
				{
					this.OnDataSetOriginIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetOriginID = value;
					this.SendPropertyChanged("DataSetOriginID");
					this.OnDataSetOriginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int NOT NULL")]
		public int DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this.OnDataSetCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryID = value;
					this.SendPropertyChanged("DataSetCategoryID");
					this.OnDataSetCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSONDataConfig", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSONDataConfig
		{
			get
			{
				return this._JSONDataConfig;
			}
			set
			{
				if ((this._JSONDataConfig != value))
				{
					this.OnJSONDataConfigChanging(value);
					this.SendPropertyChanging();
					this._JSONDataConfig = value;
					this.SendPropertyChanged("JSONDataConfig");
					this.OnJSONDataConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportType", DbType="VarChar(20)")]
		public string ImportType
		{
			get
			{
				return this._ImportType;
			}
			set
			{
				if ((this._ImportType != value))
				{
					this.OnImportTypeChanging(value);
					this.SendPropertyChanging();
					this._ImportType = value;
					this.SendPropertyChanged("ImportType");
					this.OnImportTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Interoperability")]
	public partial class Interoperability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _InteroperabilityId;
		
		private int _LinkitObjectTypeId;
		
		private int _ObjectId;
		
		private int _DistrictID;
		
		private int _ThirdPartySourceTypeID;
		
		private string _SourceId;
		
		private EntityRef<LinkitObjectType> _LinkitObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInteroperabilityIdChanging(long value);
    partial void OnInteroperabilityIdChanged();
    partial void OnLinkitObjectTypeIdChanging(int value);
    partial void OnLinkitObjectTypeIdChanged();
    partial void OnObjectIdChanging(int value);
    partial void OnObjectIdChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnThirdPartySourceTypeIDChanging(int value);
    partial void OnThirdPartySourceTypeIDChanged();
    partial void OnSourceIdChanging(string value);
    partial void OnSourceIdChanged();
    #endregion
		
		public Interoperability()
		{
			this._LinkitObjectType = default(EntityRef<LinkitObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteroperabilityId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long InteroperabilityId
		{
			get
			{
				return this._InteroperabilityId;
			}
			set
			{
				if ((this._InteroperabilityId != value))
				{
					this.OnInteroperabilityIdChanging(value);
					this.SendPropertyChanging();
					this._InteroperabilityId = value;
					this.SendPropertyChanged("InteroperabilityId");
					this.OnInteroperabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkitObjectTypeId", DbType="Int NOT NULL")]
		public int LinkitObjectTypeId
		{
			get
			{
				return this._LinkitObjectTypeId;
			}
			set
			{
				if ((this._LinkitObjectTypeId != value))
				{
					if (this._LinkitObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkitObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LinkitObjectTypeId = value;
					this.SendPropertyChanged("LinkitObjectTypeId");
					this.OnLinkitObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int NOT NULL")]
		public int ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartySourceTypeID", DbType="Int NOT NULL")]
		public int ThirdPartySourceTypeID
		{
			get
			{
				return this._ThirdPartySourceTypeID;
			}
			set
			{
				if ((this._ThirdPartySourceTypeID != value))
				{
					this.OnThirdPartySourceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartySourceTypeID = value;
					this.SendPropertyChanged("ThirdPartySourceTypeID");
					this.OnThirdPartySourceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinkitObjectType_Interoperability", Storage="_LinkitObjectType", ThisKey="LinkitObjectTypeId", OtherKey="LinkitObjectTypeId", IsForeignKey=true)]
		public LinkitObjectType LinkitObjectType
		{
			get
			{
				return this._LinkitObjectType.Entity;
			}
			set
			{
				LinkitObjectType previousValue = this._LinkitObjectType.Entity;
				if (((previousValue != value) 
							|| (this._LinkitObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LinkitObjectType.Entity = null;
						previousValue.Interoperabilities.Remove(this);
					}
					this._LinkitObjectType.Entity = value;
					if ((value != null))
					{
						value.Interoperabilities.Add(this);
						this._LinkitObjectTypeId = value.LinkitObjectTypeId;
					}
					else
					{
						this._LinkitObjectTypeId = default(int);
					}
					this.SendPropertyChanged("LinkitObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkitObjectType")]
	public partial class LinkitObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkitObjectTypeId;
		
		private string _ObjectName;
		
		private EntitySet<Interoperability> _Interoperabilities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkitObjectTypeIdChanging(int value);
    partial void OnLinkitObjectTypeIdChanged();
    partial void OnObjectNameChanging(string value);
    partial void OnObjectNameChanged();
    #endregion
		
		public LinkitObjectType()
		{
			this._Interoperabilities = new EntitySet<Interoperability>(new Action<Interoperability>(this.attach_Interoperabilities), new Action<Interoperability>(this.detach_Interoperabilities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkitObjectTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LinkitObjectTypeId
		{
			get
			{
				return this._LinkitObjectTypeId;
			}
			set
			{
				if ((this._LinkitObjectTypeId != value))
				{
					this.OnLinkitObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LinkitObjectTypeId = value;
					this.SendPropertyChanged("LinkitObjectTypeId");
					this.OnLinkitObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ObjectName
		{
			get
			{
				return this._ObjectName;
			}
			set
			{
				if ((this._ObjectName != value))
				{
					this.OnObjectNameChanging(value);
					this.SendPropertyChanging();
					this._ObjectName = value;
					this.SendPropertyChanged("ObjectName");
					this.OnObjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinkitObjectType_Interoperability", Storage="_Interoperabilities", ThisKey="LinkitObjectTypeId", OtherKey="LinkitObjectTypeId")]
		public EntitySet<Interoperability> Interoperabilities
		{
			get
			{
				return this._Interoperabilities;
			}
			set
			{
				this._Interoperabilities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interoperabilities(Interoperability entity)
		{
			this.SendPropertyChanging();
			entity.LinkitObjectType = this;
		}
		
		private void detach_Interoperabilities(Interoperability entity)
		{
			this.SendPropertyChanging();
			entity.LinkitObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSORedirectUrl")]
	public partial class SSORedirectUrlEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SSORedirectUrlId;
		
		private int _SSOInformationId;
		
		private string _RedirectUrl;
		
		private System.Nullable<int> _RoleId;
		
		private string _Type;
		
		private string _XLIModuleCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSORedirectUrlIdChanging(int value);
    partial void OnSSORedirectUrlIdChanged();
    partial void OnSSOInformationIdChanging(int value);
    partial void OnSSOInformationIdChanged();
    partial void OnRedirectUrlChanging(string value);
    partial void OnRedirectUrlChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnXLIModuleCodeChanging(string value);
    partial void OnXLIModuleCodeChanged();
    #endregion
		
		public SSORedirectUrlEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSORedirectUrlId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SSORedirectUrlId
		{
			get
			{
				return this._SSORedirectUrlId;
			}
			set
			{
				if ((this._SSORedirectUrlId != value))
				{
					this.OnSSORedirectUrlIdChanging(value);
					this.SendPropertyChanging();
					this._SSORedirectUrlId = value;
					this.SendPropertyChanged("SSORedirectUrlId");
					this.OnSSORedirectUrlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSOInformationId", DbType="Int NOT NULL")]
		public int SSOInformationId
		{
			get
			{
				return this._SSOInformationId;
			}
			set
			{
				if ((this._SSOInformationId != value))
				{
					this.OnSSOInformationIdChanging(value);
					this.SendPropertyChanging();
					this._SSOInformationId = value;
					this.SendPropertyChanged("SSOInformationId");
					this.OnSSOInformationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedirectUrl", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string RedirectUrl
		{
			get
			{
				return this._RedirectUrl;
			}
			set
			{
				if ((this._RedirectUrl != value))
				{
					this.OnRedirectUrlChanging(value);
					this.SendPropertyChanging();
					this._RedirectUrl = value;
					this.SendPropertyChanged("RedirectUrl");
					this.OnRedirectUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIModuleCode", DbType="VarChar(20)")]
		public string XLIModuleCode
		{
			get
			{
				return this._XLIModuleCode;
			}
			set
			{
				if ((this._XLIModuleCode != value))
				{
					this.OnXLIModuleCodeChanging(value);
					this.SendPropertyChanging();
					this._XLIModuleCode = value;
					this.SendPropertyChanged("XLIModuleCode");
					this.OnXLIModuleCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSetCategoryDistrictDisplayName")]
	internal partial class DataSetCategoryDistrictDisplayName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataSetCategoryId;
		
		private int _DistrictId;
		
		private string _CategoryDisplayName;
		
		private EntityRef<DataSetCategoryEntity> _DataSetCategoryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataSetCategoryIdChanging(int value);
    partial void OnDataSetCategoryIdChanged();
    partial void OnDistrictIdChanging(int value);
    partial void OnDistrictIdChanged();
    partial void OnCategoryDisplayNameChanging(string value);
    partial void OnCategoryDisplayNameChanged();
    #endregion
		
		public DataSetCategoryDistrictDisplayName()
		{
			this._DataSetCategoryEntity = default(EntityRef<DataSetCategoryEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DataSetCategoryId
		{
			get
			{
				return this._DataSetCategoryId;
			}
			set
			{
				if ((this._DataSetCategoryId != value))
				{
					if (this._DataSetCategoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataSetCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryId = value;
					this.SendPropertyChanged("DataSetCategoryId");
					this.OnDataSetCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDisplayName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CategoryDisplayName
		{
			get
			{
				return this._CategoryDisplayName;
			}
			set
			{
				if ((this._CategoryDisplayName != value))
				{
					this.OnCategoryDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryDisplayName = value;
					this.SendPropertyChanged("CategoryDisplayName");
					this.OnCategoryDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSetCategoryEntity_DataSetCategoryDistrictDisplayName", Storage="_DataSetCategoryEntity", ThisKey="DataSetCategoryId", OtherKey="DataSetCategoryID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DataSetCategoryEntity DataSetCategoryEntity
		{
			get
			{
				return this._DataSetCategoryEntity.Entity;
			}
			set
			{
				DataSetCategoryEntity previousValue = this._DataSetCategoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._DataSetCategoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataSetCategoryEntity.Entity = null;
						previousValue.DataSetCategoryDistrictDisplayNames.Remove(this);
					}
					this._DataSetCategoryEntity.Entity = value;
					if ((value != null))
					{
						value.DataSetCategoryDistrictDisplayNames.Add(this);
						this._DataSetCategoryId = value.DataSetCategoryID;
					}
					else
					{
						this._DataSetCategoryId = default(int);
					}
					this.SendPropertyChanged("DataSetCategoryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSetCategory")]
	internal partial class DataSetCategoryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataSetCategoryID;
		
		private string _DataSetCategoryName;
		
		private System.Nullable<int> _DistrictID;
		
		private EntitySet<VirtualTestDBEntity> _VirtualTestDBEntities;
		
		private EntitySet<DataSetCategoryDistrictDisplayName> _DataSetCategoryDistrictDisplayNames;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataSetCategoryIDChanging(int value);
    partial void OnDataSetCategoryIDChanged();
    partial void OnDataSetCategoryNameChanging(string value);
    partial void OnDataSetCategoryNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    #endregion
		
		public DataSetCategoryEntity()
		{
			this._VirtualTestDBEntities = new EntitySet<VirtualTestDBEntity>(new Action<VirtualTestDBEntity>(this.attach_VirtualTestDBEntities), new Action<VirtualTestDBEntity>(this.detach_VirtualTestDBEntities));
			this._DataSetCategoryDistrictDisplayNames = new EntitySet<DataSetCategoryDistrictDisplayName>(new Action<DataSetCategoryDistrictDisplayName>(this.attach_DataSetCategoryDistrictDisplayNames), new Action<DataSetCategoryDistrictDisplayName>(this.detach_DataSetCategoryDistrictDisplayNames));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this.OnDataSetCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryID = value;
					this.SendPropertyChanged("DataSetCategoryID");
					this.OnDataSetCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DataSetCategoryName
		{
			get
			{
				return this._DataSetCategoryName;
			}
			set
			{
				if ((this._DataSetCategoryName != value))
				{
					this.OnDataSetCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._DataSetCategoryName = value;
					this.SendPropertyChanged("DataSetCategoryName");
					this.OnDataSetCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSetCategoryEntity_VirtualTestDBEntity", Storage="_VirtualTestDBEntities", ThisKey="DataSetCategoryID", OtherKey="DataSetCategoryID")]
		public EntitySet<VirtualTestDBEntity> VirtualTestDBEntities
		{
			get
			{
				return this._VirtualTestDBEntities;
			}
			set
			{
				this._VirtualTestDBEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSetCategoryEntity_DataSetCategoryDistrictDisplayName", Storage="_DataSetCategoryDistrictDisplayNames", ThisKey="DataSetCategoryID", OtherKey="DataSetCategoryId")]
		public EntitySet<DataSetCategoryDistrictDisplayName> DataSetCategoryDistrictDisplayNames
		{
			get
			{
				return this._DataSetCategoryDistrictDisplayNames;
			}
			set
			{
				this._DataSetCategoryDistrictDisplayNames.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VirtualTestDBEntities(VirtualTestDBEntity entity)
		{
			this.SendPropertyChanging();
			entity.DataSetCategoryEntity = this;
		}
		
		private void detach_VirtualTestDBEntities(VirtualTestDBEntity entity)
		{
			this.SendPropertyChanging();
			entity.DataSetCategoryEntity = null;
		}
		
		private void attach_DataSetCategoryDistrictDisplayNames(DataSetCategoryDistrictDisplayName entity)
		{
			this.SendPropertyChanging();
			entity.DataSetCategoryEntity = this;
		}
		
		private void detach_DataSetCategoryDistrictDisplayNames(DataSetCategoryDistrictDisplayName entity)
		{
			this.SendPropertyChanging();
			entity.DataSetCategoryEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassMeta")]
	internal partial class ClassMetaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClassMetaID;
		
		private int _ClassID;
		
		private string _Name;
		
		private string _Data;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassMetaIDChanging(int value);
    partial void OnClassMetaIDChanged();
    partial void OnClassIDChanging(int value);
    partial void OnClassIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ClassMetaEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassMetaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClassMetaID
		{
			get
			{
				return this._ClassMetaID;
			}
			set
			{
				if ((this._ClassMetaID != value))
				{
					this.OnClassMetaIDChanging(value);
					this.SendPropertyChanging();
					this._ClassMetaID = value;
					this.SendPropertyChanged("ClassMetaID");
					this.OnClassMetaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(12)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XLIArea")]
	internal partial class XLIAreaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _XLIAreaID;
		
		private string _Name;
		
		private string _Code;
		
		private bool _Restrict;
		
		private string _DisplayTooltip;
		
		private int _AreaOrder;
		
		private string _DisplayName;
		
		private EntitySet<XLIModuleEntity> _XLIModuleEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnXLIAreaIDChanging(int value);
    partial void OnXLIAreaIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRestrictChanging(bool value);
    partial void OnRestrictChanged();
    partial void OnDisplayTooltipChanging(string value);
    partial void OnDisplayTooltipChanged();
    partial void OnAreaOrderChanging(int value);
    partial void OnAreaOrderChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public XLIAreaEntity()
		{
			this._XLIModuleEntities = new EntitySet<XLIModuleEntity>(new Action<XLIModuleEntity>(this.attach_XLIModuleEntities), new Action<XLIModuleEntity>(this.detach_XLIModuleEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int XLIAreaID
		{
			get
			{
				return this._XLIAreaID;
			}
			set
			{
				if ((this._XLIAreaID != value))
				{
					this.OnXLIAreaIDChanging(value);
					this.SendPropertyChanging();
					this._XLIAreaID = value;
					this.SendPropertyChanged("XLIAreaID");
					this.OnXLIAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Restrict]", Storage="_Restrict", DbType="Bit NOT NULL")]
		public bool Restrict
		{
			get
			{
				return this._Restrict;
			}
			set
			{
				if ((this._Restrict != value))
				{
					this.OnRestrictChanging(value);
					this.SendPropertyChanging();
					this._Restrict = value;
					this.SendPropertyChanged("Restrict");
					this.OnRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayTooltip", DbType="NVarChar(256)")]
		public string DisplayTooltip
		{
			get
			{
				return this._DisplayTooltip;
			}
			set
			{
				if ((this._DisplayTooltip != value))
				{
					this.OnDisplayTooltipChanging(value);
					this.SendPropertyChanging();
					this._DisplayTooltip = value;
					this.SendPropertyChanged("DisplayTooltip");
					this.OnDisplayTooltipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaOrder", DbType="Int NOT NULL")]
		public int AreaOrder
		{
			get
			{
				return this._AreaOrder;
			}
			set
			{
				if ((this._AreaOrder != value))
				{
					this.OnAreaOrderChanging(value);
					this.SendPropertyChanging();
					this._AreaOrder = value;
					this.SendPropertyChanged("AreaOrder");
					this.OnAreaOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XLIAreaEntity_XLIModuleEntity", Storage="_XLIModuleEntities", ThisKey="XLIAreaID", OtherKey="XLIAreaID")]
		public EntitySet<XLIModuleEntity> XLIModuleEntities
		{
			get
			{
				return this._XLIModuleEntities;
			}
			set
			{
				this._XLIModuleEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XLIModuleEntities(XLIModuleEntity entity)
		{
			this.SendPropertyChanging();
			entity.XLIAreaEntity = this;
		}
		
		private void detach_XLIModuleEntities(XLIModuleEntity entity)
		{
			this.SendPropertyChanging();
			entity.XLIAreaEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AggregateSubjectMapping")]
	internal partial class AggregateSubjectMappingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AggregateSubjectMappingID;
		
		private string _AggregateSubjectName;
		
		private string _Keywords;
		
		private System.Nullable<int> _DistrictID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAggregateSubjectMappingIDChanging(int value);
    partial void OnAggregateSubjectMappingIDChanged();
    partial void OnAggregateSubjectNameChanging(string value);
    partial void OnAggregateSubjectNameChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDistrictIDChanging(System.Nullable<int> value);
    partial void OnDistrictIDChanged();
    #endregion
		
		public AggregateSubjectMappingEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregateSubjectMappingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AggregateSubjectMappingID
		{
			get
			{
				return this._AggregateSubjectMappingID;
			}
			set
			{
				if ((this._AggregateSubjectMappingID != value))
				{
					this.OnAggregateSubjectMappingIDChanging(value);
					this.SendPropertyChanging();
					this._AggregateSubjectMappingID = value;
					this.SendPropertyChanged("AggregateSubjectMappingID");
					this.OnAggregateSubjectMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggregateSubjectName", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string AggregateSubjectName
		{
			get
			{
				return this._AggregateSubjectName;
			}
			set
			{
				if ((this._AggregateSubjectName != value))
				{
					this.OnAggregateSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._AggregateSubjectName = value;
					this.SendPropertyChanged("AggregateSubjectName");
					this.OnAggregateSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xpsDistrictUpload")]
	public partial class xpsDistrictUploadEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xpsDistrictUploadID;
		
		private int _DistrictID;
		
		private System.DateTime _LastProcessed;
		
		private string _DirectoryPath;
		
		private System.TimeSpan _ScheduledTime;
		
		private bool _Run;
		
		private System.Nullable<int> _UploadTypeID;
		
		private System.Nullable<int> _ClassNameType;
		
		private System.Nullable<int> _SchoolID;
		
		private System.Nullable<bool> _GetExternalFiles;
		
		private string _ExternalSourceInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxpsDistrictUploadIDChanging(int value);
    partial void OnxpsDistrictUploadIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnLastProcessedChanging(System.DateTime value);
    partial void OnLastProcessedChanged();
    partial void OnDirectoryPathChanging(string value);
    partial void OnDirectoryPathChanged();
    partial void OnScheduledTimeChanging(System.TimeSpan value);
    partial void OnScheduledTimeChanged();
    partial void OnRunChanging(bool value);
    partial void OnRunChanged();
    partial void OnUploadTypeIDChanging(System.Nullable<int> value);
    partial void OnUploadTypeIDChanged();
    partial void OnClassNameTypeChanging(System.Nullable<int> value);
    partial void OnClassNameTypeChanged();
    partial void OnSchoolIDChanging(System.Nullable<int> value);
    partial void OnSchoolIDChanged();
    partial void OnGetExternalFilesChanging(System.Nullable<bool> value);
    partial void OnGetExternalFilesChanged();
    partial void OnExternalSourceInfoChanging(string value);
    partial void OnExternalSourceInfoChanged();
    #endregion
		
		public xpsDistrictUploadEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpsDistrictUploadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xpsDistrictUploadID
		{
			get
			{
				return this._xpsDistrictUploadID;
			}
			set
			{
				if ((this._xpsDistrictUploadID != value))
				{
					this.OnxpsDistrictUploadIDChanging(value);
					this.SendPropertyChanging();
					this._xpsDistrictUploadID = value;
					this.SendPropertyChanged("xpsDistrictUploadID");
					this.OnxpsDistrictUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastProcessed", DbType="DateTime NOT NULL")]
		public System.DateTime LastProcessed
		{
			get
			{
				return this._LastProcessed;
			}
			set
			{
				if ((this._LastProcessed != value))
				{
					this.OnLastProcessedChanging(value);
					this.SendPropertyChanging();
					this._LastProcessed = value;
					this.SendPropertyChanged("LastProcessed");
					this.OnLastProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectoryPath", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DirectoryPath
		{
			get
			{
				return this._DirectoryPath;
			}
			set
			{
				if ((this._DirectoryPath != value))
				{
					this.OnDirectoryPathChanging(value);
					this.SendPropertyChanging();
					this._DirectoryPath = value;
					this.SendPropertyChanged("DirectoryPath");
					this.OnDirectoryPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledTime", DbType="Time NOT NULL")]
		public System.TimeSpan ScheduledTime
		{
			get
			{
				return this._ScheduledTime;
			}
			set
			{
				if ((this._ScheduledTime != value))
				{
					this.OnScheduledTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledTime = value;
					this.SendPropertyChanged("ScheduledTime");
					this.OnScheduledTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Run", DbType="Bit NOT NULL")]
		public bool Run
		{
			get
			{
				return this._Run;
			}
			set
			{
				if ((this._Run != value))
				{
					this.OnRunChanging(value);
					this.SendPropertyChanging();
					this._Run = value;
					this.SendPropertyChanged("Run");
					this.OnRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadTypeID", DbType="Int")]
		public System.Nullable<int> UploadTypeID
		{
			get
			{
				return this._UploadTypeID;
			}
			set
			{
				if ((this._UploadTypeID != value))
				{
					this.OnUploadTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UploadTypeID = value;
					this.SendPropertyChanged("UploadTypeID");
					this.OnUploadTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameType", DbType="Int")]
		public System.Nullable<int> ClassNameType
		{
			get
			{
				return this._ClassNameType;
			}
			set
			{
				if ((this._ClassNameType != value))
				{
					this.OnClassNameTypeChanging(value);
					this.SendPropertyChanging();
					this._ClassNameType = value;
					this.SendPropertyChanged("ClassNameType");
					this.OnClassNameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int")]
		public System.Nullable<int> SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this.OnSchoolIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolID = value;
					this.SendPropertyChanged("SchoolID");
					this.OnSchoolIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GetExternalFiles", DbType="Bit")]
		public System.Nullable<bool> GetExternalFiles
		{
			get
			{
				return this._GetExternalFiles;
			}
			set
			{
				if ((this._GetExternalFiles != value))
				{
					this.OnGetExternalFilesChanging(value);
					this.SendPropertyChanging();
					this._GetExternalFiles = value;
					this.SendPropertyChanged("GetExternalFiles");
					this.OnGetExternalFilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalSourceInfo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ExternalSourceInfo
		{
			get
			{
				return this._ExternalSourceInfo;
			}
			set
			{
				if ((this._ExternalSourceInfo != value))
				{
					this.OnExternalSourceInfoChanging(value);
					this.SendPropertyChanging();
					this._ExternalSourceInfo = value;
					this.SendPropertyChanged("ExternalSourceInfo");
					this.OnExternalSourceInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xpsQueue")]
	public partial class xpsQueueEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _xpsQueueID;
		
		private int _xpsDistrictUploadID;
		
		private System.Nullable<System.DateTime> _TimeStart;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private System.Nullable<int> _xpsUpLoadTypeID;
		
		private System.Nullable<int> _xpsQueueStatusID;
		
		private System.Nullable<int> _xpsQueueResultID;
		
		private System.Nullable<System.DateTime> _SchedStart;
		
		private System.Nullable<int> _ProcessId;
		
		private bool _IsValidation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnxpsQueueIDChanging(int value);
    partial void OnxpsQueueIDChanged();
    partial void OnxpsDistrictUploadIDChanging(int value);
    partial void OnxpsDistrictUploadIDChanged();
    partial void OnTimeStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnxpsUpLoadTypeIDChanging(System.Nullable<int> value);
    partial void OnxpsUpLoadTypeIDChanged();
    partial void OnxpsQueueStatusIDChanging(System.Nullable<int> value);
    partial void OnxpsQueueStatusIDChanged();
    partial void OnxpsQueueResultIDChanging(System.Nullable<int> value);
    partial void OnxpsQueueResultIDChanged();
    partial void OnSchedStartChanging(System.Nullable<System.DateTime> value);
    partial void OnSchedStartChanged();
    partial void OnProcessIdChanging(System.Nullable<int> value);
    partial void OnProcessIdChanged();
    partial void OnIsValidationChanging(bool value);
    partial void OnIsValidationChanged();
    #endregion
		
		public xpsQueueEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpsQueueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int xpsQueueID
		{
			get
			{
				return this._xpsQueueID;
			}
			set
			{
				if ((this._xpsQueueID != value))
				{
					this.OnxpsQueueIDChanging(value);
					this.SendPropertyChanging();
					this._xpsQueueID = value;
					this.SendPropertyChanged("xpsQueueID");
					this.OnxpsQueueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpsDistrictUploadID", DbType="Int NOT NULL")]
		public int xpsDistrictUploadID
		{
			get
			{
				return this._xpsDistrictUploadID;
			}
			set
			{
				if ((this._xpsDistrictUploadID != value))
				{
					this.OnxpsDistrictUploadIDChanging(value);
					this.SendPropertyChanging();
					this._xpsDistrictUploadID = value;
					this.SendPropertyChanged("xpsDistrictUploadID");
					this.OnxpsDistrictUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpsUpLoadTypeID", DbType="Int")]
		public System.Nullable<int> xpsUpLoadTypeID
		{
			get
			{
				return this._xpsUpLoadTypeID;
			}
			set
			{
				if ((this._xpsUpLoadTypeID != value))
				{
					this.OnxpsUpLoadTypeIDChanging(value);
					this.SendPropertyChanging();
					this._xpsUpLoadTypeID = value;
					this.SendPropertyChanged("xpsUpLoadTypeID");
					this.OnxpsUpLoadTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpsQueueStatusID", DbType="Int")]
		public System.Nullable<int> xpsQueueStatusID
		{
			get
			{
				return this._xpsQueueStatusID;
			}
			set
			{
				if ((this._xpsQueueStatusID != value))
				{
					this.OnxpsQueueStatusIDChanging(value);
					this.SendPropertyChanging();
					this._xpsQueueStatusID = value;
					this.SendPropertyChanged("xpsQueueStatusID");
					this.OnxpsQueueStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xpsQueueResultID", DbType="Int")]
		public System.Nullable<int> xpsQueueResultID
		{
			get
			{
				return this._xpsQueueResultID;
			}
			set
			{
				if ((this._xpsQueueResultID != value))
				{
					this.OnxpsQueueResultIDChanging(value);
					this.SendPropertyChanging();
					this._xpsQueueResultID = value;
					this.SendPropertyChanged("xpsQueueResultID");
					this.OnxpsQueueResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchedStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> SchedStart
		{
			get
			{
				return this._SchedStart;
			}
			set
			{
				if ((this._SchedStart != value))
				{
					this.OnSchedStartChanging(value);
					this.SendPropertyChanging();
					this._SchedStart = value;
					this.SendPropertyChanged("SchedStart");
					this.OnSchedStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessId", DbType="Int")]
		public System.Nullable<int> ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidation", DbType="Bit NOT NULL")]
		public bool IsValidation
		{
			get
			{
				return this._IsValidation;
			}
			set
			{
				if ((this._IsValidation != value))
				{
					this.OnIsValidationChanging(value);
					this.SendPropertyChanging();
					this._IsValidation = value;
					this.SendPropertyChanged("IsValidation");
					this.OnIsValidationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class RITCreateVirtualTestQuestionResult
	{
		
		private int _VirtualTestID;
		
		public RITCreateVirtualTestQuestionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualTestID", DbType="Int NOT NULL")]
		public int VirtualTestID
		{
			get
			{
				return this._VirtualTestID;
			}
			set
			{
				if ((this._VirtualTestID != value))
				{
					this._VirtualTestID = value;
				}
			}
		}
	}
	
	public partial class RITCreateRequestResult
	{
		
		private int _Column1;
		
		public RITCreateRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class RITCreateRequestTestResponseResult
	{
		
		private int _RequestStudentResponseID;
		
		private string _StudentLocalCode;
		
		private bool _StudentExist;
		
		private string _StudentResponses;
		
		private string _SessionData;
		
		private string _StudentResponseSummary;
		
		public RITCreateRequestTestResponseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStudentResponseID", DbType="Int NOT NULL")]
		public int RequestStudentResponseID
		{
			get
			{
				return this._RequestStudentResponseID;
			}
			set
			{
				if ((this._RequestStudentResponseID != value))
				{
					this._RequestStudentResponseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentLocalCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string StudentLocalCode
		{
			get
			{
				return this._StudentLocalCode;
			}
			set
			{
				if ((this._StudentLocalCode != value))
				{
					this._StudentLocalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentExist", DbType="Bit NOT NULL")]
		public bool StudentExist
		{
			get
			{
				return this._StudentExist;
			}
			set
			{
				if ((this._StudentExist != value))
				{
					this._StudentExist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResponses", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string StudentResponses
		{
			get
			{
				return this._StudentResponses;
			}
			set
			{
				if ((this._StudentResponses != value))
				{
					this._StudentResponses = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionData", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string SessionData
		{
			get
			{
				return this._SessionData;
			}
			set
			{
				if ((this._SessionData != value))
				{
					this._SessionData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResponseSummary", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string StudentResponseSummary
		{
			get
			{
				return this._StudentResponseSummary;
			}
			set
			{
				if ((this._StudentResponseSummary != value))
				{
					this._StudentResponseSummary = value;
				}
			}
		}
	}
	
	public partial class RITGradeTestResponseResult
	{
		
		private int _StatisticID;
		
		private int _RequestID;
		
		private int _DomainID;
		
		private string _LogData;
		
		private System.Nullable<int> _ParentStatisticID;
		
		private string _DomainValue;
		
		public RITGradeTestResponseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatisticID", DbType="Int NOT NULL")]
		public int StatisticID
		{
			get
			{
				return this._StatisticID;
			}
			set
			{
				if ((this._StatisticID != value))
				{
					this._StatisticID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogData", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string LogData
		{
			get
			{
				return this._LogData;
			}
			set
			{
				if ((this._LogData != value))
				{
					this._LogData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentStatisticID", DbType="Int")]
		public System.Nullable<int> ParentStatisticID
		{
			get
			{
				return this._ParentStatisticID;
			}
			set
			{
				if ((this._ParentStatisticID != value))
				{
					this._ParentStatisticID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DomainValue
		{
			get
			{
				return this._DomainValue;
			}
			set
			{
				if ((this._DomainValue != value))
				{
					this._DomainValue = value;
				}
			}
		}
	}
	
	public partial class GetListGroupIDsByUserIdResult
	{
		
		private int _GroupID;
		
		public GetListGroupIDsByUserIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this._GroupID = value;
				}
			}
		}
	}
	
	public partial class XLIModuleAccessProcResult
	{
		
		private int _XLIModuleID;
		
		private string _XLIModuleName;
		
		private string _Code;
		
		private int _XLIAreaID;
		
		private string _XLIAreaName;
		
		public XLIModuleAccessProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIModuleID", DbType="Int NOT NULL")]
		public int XLIModuleID
		{
			get
			{
				return this._XLIModuleID;
			}
			set
			{
				if ((this._XLIModuleID != value))
				{
					this._XLIModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIModuleName", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string XLIModuleName
		{
			get
			{
				return this._XLIModuleName;
			}
			set
			{
				if ((this._XLIModuleName != value))
				{
					this._XLIModuleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaID", DbType="Int NOT NULL")]
		public int XLIAreaID
		{
			get
			{
				return this._XLIAreaID;
			}
			set
			{
				if ((this._XLIAreaID != value))
				{
					this._XLIAreaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string XLIAreaName
		{
			get
			{
				return this._XLIAreaName;
			}
			set
			{
				if ((this._XLIAreaName != value))
				{
					this._XLIAreaName = value;
				}
			}
		}
	}
	
	public partial class XLIIconAccessProcResult
	{
		
		private int _XLIAreaID;
		
		private string _Code;
		
		public XLIIconAccessProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XLIAreaID", DbType="Int NOT NULL")]
		public int XLIAreaID
		{
			get
			{
				return this._XLIAreaID;
			}
			set
			{
				if ((this._XLIAreaID != value))
				{
					this._XLIAreaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
	}
	
	public partial class CheckUserCanAccessClassOrSchoolResult
	{
		
		private int _CanAccess;
		
		public CheckUserCanAccessClassOrSchoolResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAccess", DbType="Int NOT NULL")]
		public int CanAccess
		{
			get
			{
				return this._CanAccess;
			}
			set
			{
				if ((this._CanAccess != value))
				{
					this._CanAccess = value;
				}
			}
		}
	}
	
	public partial class CheckUserCanAccessStudentResult
	{
		
		private System.Nullable<bool> _CanAccess;
		
		public CheckUserCanAccessStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAccess", DbType="Bit")]
		public System.Nullable<bool> CanAccess
		{
			get
			{
				return this._CanAccess;
			}
			set
			{
				if ((this._CanAccess != value))
				{
					this._CanAccess = value;
				}
			}
		}
	}
	
	public partial class CheckUserCanAccessTeacherResult
	{
		
		private int _CanAccess;
		
		public CheckUserCanAccessTeacherResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAccess", DbType="Int NOT NULL")]
		public int CanAccess
		{
			get
			{
				return this._CanAccess;
			}
			set
			{
				if ((this._CanAccess != value))
				{
					this._CanAccess = value;
				}
			}
		}
	}
	
	public partial class CheckUserCanAccessTestResultResult
	{
		
		private System.Nullable<bool> _CanAccess;
		
		public CheckUserCanAccessTestResultResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAccess", DbType="Bit")]
		public System.Nullable<bool> CanAccess
		{
			get
			{
				return this._CanAccess;
			}
			set
			{
				if ((this._CanAccess != value))
				{
					this._CanAccess = value;
				}
			}
		}
	}
	
	public partial class CheckUserCanPurgeTestResult
	{
		
		private int _CanPurge;
		
		public CheckUserCanPurgeTestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPurge", DbType="Int NOT NULL")]
		public int CanPurge
		{
			get
			{
				return this._CanPurge;
			}
			set
			{
				if ((this._CanPurge != value))
				{
					this._CanPurge = value;
				}
			}
		}
	}
	
	public partial class GetRequestsByUserIDResult
	{
		
		private int _RequestID;
		
		private int _UserID;
		
		private int _DataRequestTypeID;
		
		private System.DateTime _RequestTime;
		
		private string _Email;
		
		private System.Nullable<int> _DistrictID;
		
		private string _ImportedFileName;
		
		private System.Nullable<int> _Mode;
		
		private System.Nullable<int> _Status;
		
		private bool _IsDeleted;
		
		private bool _HasBeenMoved;
		
		private System.Nullable<bool> _HasEmailContent;
		
		private string _RosterType;
        private string _DistrictName;
		
		public GetRequestsByUserIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int NOT NULL")]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this._RequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRequestTypeID", DbType="Int NOT NULL")]
		public int DataRequestTypeID
		{
			get
			{
				return this._DataRequestTypeID;
			}
			set
			{
				if ((this._DataRequestTypeID != value))
				{
					this._DataRequestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="DateTime NOT NULL")]
		public System.DateTime RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this._RequestTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DistrictName", DbType = "VARCHAR(100)")]
        public System.String DistrictName
        {
            get
            {
                return this._DistrictName;
            }
            set
            {
                if ((this._DistrictName != value))
                {
                    this._DistrictName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedFileName", DbType="NVarChar(255)")]
		public string ImportedFileName
		{
			get
			{
				return this._ImportedFileName;
			}
			set
			{
				if ((this._ImportedFileName != value))
				{
					this._ImportedFileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="Int")]
		public System.Nullable<int> Mode
		{
			get
			{
				return this._Mode;
			}
			set
			{
				if ((this._Mode != value))
				{
					this._Mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBeenMoved", DbType="Bit NOT NULL")]
		public bool HasBeenMoved
		{
			get
			{
				return this._HasBeenMoved;
			}
			set
			{
				if ((this._HasBeenMoved != value))
				{
					this._HasBeenMoved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEmailContent", DbType="Bit")]
		public System.Nullable<bool> HasEmailContent
		{
			get
			{
				return this._HasEmailContent;
			}
			set
			{
				if ((this._HasEmailContent != value))
				{
					this._HasEmailContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RosterType", DbType="VarChar(20)")]
		public string RosterType
		{
			get
			{
				return this._RosterType;
			}
			set
			{
				if ((this._RosterType != value))
				{
					this._RosterType = value;
				}
			}
		}
	}
	
	public partial class GetClassBySchoolAndDistrictTermResult
	{
		
		private int _ClassID;
		
		private string _ClassNameCustom;
		
		public GetClassBySchoolAndDistrictTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
	}
	
	public partial class GetTimeZoneByStateWithSchoolIDResult
	{
		
		private int _SchoolID;
		
		private System.Nullable<int> _StateID;
		
		private string _TimeZoneID;
		
		public GetTimeZoneByStateWithSchoolIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneID", DbType="NVarChar(200)")]
		public string TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					this._TimeZoneID = value;
				}
			}
		}
	}
	
	public partial class CountActiveStudentInGroupResult
	{
		
		private System.Nullable<int> _Count;
		
		public CountActiveStudentInGroupResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	public partial class GetCategoryByUserResult
	{
		
		private System.Nullable<int> _DataSetCategoryID;
		
		private string _DataSetCategoryName;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _DistrictID;
		
		private string _DistrictName;
		
		private string _DisplayName;
		
		public GetCategoryByUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryID", DbType="Int")]
		public System.Nullable<int> DataSetCategoryID
		{
			get
			{
				return this._DataSetCategoryID;
			}
			set
			{
				if ((this._DataSetCategoryID != value))
				{
					this._DataSetCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSetCategoryName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DataSetCategoryName
		{
			get
			{
				return this._DataSetCategoryName;
			}
			set
			{
				if ((this._DataSetCategoryName != value))
				{
					this._DataSetCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int")]
		public System.Nullable<int> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
	}
	
	public partial class GetNotificationByDistrictIdResult
	{
		
		private int _NotificationMessageID;
		
		private string _Status;
		
		private System.DateTime _PublishedTime;
		
		private string _HtmlContent;
		
		private string _AccessedDistrict;
		
		private System.Nullable<int> _ReceivingUserID;
		
		private string _NotificationType;
		
		public GetNotificationByDistrictIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationMessageID", DbType="Int NOT NULL")]
		public int NotificationMessageID
		{
			get
			{
				return this._NotificationMessageID;
			}
			set
			{
				if ((this._NotificationMessageID != value))
				{
					this._NotificationMessageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedTime", DbType="DateTime NOT NULL")]
		public System.DateTime PublishedTime
		{
			get
			{
				return this._PublishedTime;
			}
			set
			{
				if ((this._PublishedTime != value))
				{
					this._PublishedTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlContent", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HtmlContent
		{
			get
			{
				return this._HtmlContent;
			}
			set
			{
				if ((this._HtmlContent != value))
				{
					this._HtmlContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessedDistrict", DbType="NVarChar(2000)")]
		public string AccessedDistrict
		{
			get
			{
				return this._AccessedDistrict;
			}
			set
			{
				if ((this._AccessedDistrict != value))
				{
					this._AccessedDistrict = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingUserID", DbType="Int")]
		public System.Nullable<int> ReceivingUserID
		{
			get
			{
				return this._ReceivingUserID;
			}
			set
			{
				if ((this._ReceivingUserID != value))
				{
					this._ReceivingUserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationType", DbType="VarChar(50)")]
		public string NotificationType
		{
			get
			{
				return this._NotificationType;
			}
			set
			{
				if ((this._NotificationType != value))
				{
					this._NotificationType = value;
				}
			}
		}
	}
	
	public partial class CreateSurveySchoolClassResult
	{
		
		private System.Nullable<int> _SchoolId;
		
		private System.Nullable<int> _ClassID;
		
		public CreateSurveySchoolClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="Int")]
		public System.Nullable<int> SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this._SchoolId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
	}
	
	public partial class GetClassBySchoolResult
	{
		
		private System.Nullable<int> _ClassID;
		
		private string _ClassName;
		
		public GetClassBySchoolResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int")]
		public System.Nullable<int> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(1000)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
	}
	
	public partial class GetSchoolAccessByModuleIDResult
	{
		
		private int _SchoolID;
		
		private string _SchoolName;
		
		private string _RoleAccess;
		
		public GetSchoolAccessByModuleIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this._SchoolName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleAccess", DbType="VarChar(8000)")]
		public string RoleAccess
		{
			get
			{
				return this._RoleAccess;
			}
			set
			{
				if ((this._RoleAccess != value))
				{
					this._RoleAccess = value;
				}
			}
		}
	}
	
	public partial class GetModuleAccessByGroupIDResult
	{
		
		private System.Nullable<int> _RowNo;
		
		private System.Nullable<int> _ModuleID;

        private string _ModuleCode;

        private string _ModuleName;
		
		private System.Nullable<int> _AreaID;
		
		private string _AreaName;
		
		private string _DistrictAccess;
		
		private string _SchoolAccess;
		
		private string _UserGroupAccess;
		
		private string _CurrentAccess;
		
		public GetModuleAccessByGroupIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int")]
		public System.Nullable<int> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this._RowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this._ModuleID = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModuleCode", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string ModuleCode
        {
            get
            {
                return this._ModuleCode;
            }
            set
            {
                if ((this._ModuleCode != value))
                {
                    this._ModuleCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this._ModuleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int")]
		public System.Nullable<int> AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this._AreaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this._AreaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictAccess
		{
			get
			{
				return this._DistrictAccess;
			}
			set
			{
				if ((this._DistrictAccess != value))
				{
					this._DistrictAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolAccess
		{
			get
			{
				return this._SchoolAccess;
			}
			set
			{
				if ((this._SchoolAccess != value))
				{
					this._SchoolAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserGroupAccess
		{
			get
			{
				return this._UserGroupAccess;
			}
			set
			{
				if ((this._UserGroupAccess != value))
				{
					this._UserGroupAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string CurrentAccess
		{
			get
			{
				return this._CurrentAccess;
			}
			set
			{
				if ((this._CurrentAccess != value))
				{
					this._CurrentAccess = value;
				}
			}
		}
	}
	
	public partial class GetModuleAccessSumaryResult
	{
		
		private System.Nullable<int> _RowNo;
		
		private System.Nullable<int> _ModuleID;

        private string _ModuleCode;

        private string _ModuleName;
		
		private System.Nullable<int> _AreaID;
		
		private string _AreaCode;

        private string _AreaName;

        private string _DistrictAccess;
		
		private string _SchoolAccess;
		
		private string _UserGroupWithAccess;
		
		private string _UserGroupWithoutAccess;
		
		public GetModuleAccessSumaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowNo", DbType="Int")]
		public System.Nullable<int> RowNo
		{
			get
			{
				return this._RowNo;
			}
			set
			{
				if ((this._RowNo != value))
				{
					this._RowNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this._ModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string ModuleCode
		{
			get
			{
				return this._ModuleCode;
			}
			set
			{
				if ((this._ModuleCode != value))
				{
					this._ModuleCode = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModuleName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string ModuleName
        {
            get
            {
                return this._ModuleName;
            }
            set
            {
                if ((this._ModuleName != value))
                {
                    this._ModuleName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaID", DbType="Int")]
		public System.Nullable<int> AreaID
		{
			get
			{
				return this._AreaID;
			}
			set
			{
				if ((this._AreaID != value))
				{
					this._AreaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this._AreaCode = value;
				}
			}
		}

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AreaName", DbType = "VarChar(1) NOT NULL", CanBeNull = false)]
        public string AreaName
        {
            get
            {
                return this._AreaName;
            }
            set
            {
                if ((this._AreaName != value))
                {
                    this._AreaName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string DistrictAccess
		{
			get
			{
				return this._DistrictAccess;
			}
			set
			{
				if ((this._DistrictAccess != value))
				{
					this._DistrictAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string SchoolAccess
		{
			get
			{
				return this._SchoolAccess;
			}
			set
			{
				if ((this._SchoolAccess != value))
				{
					this._SchoolAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupWithAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserGroupWithAccess
		{
			get
			{
				return this._UserGroupWithAccess;
			}
			set
			{
				if ((this._UserGroupWithAccess != value))
				{
					this._UserGroupWithAccess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupWithoutAccess", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserGroupWithoutAccess
		{
			get
			{
				return this._UserGroupWithoutAccess;
			}
			set
			{
				if ((this._UserGroupWithoutAccess != value))
				{
					this._UserGroupWithoutAccess = value;
				}
			}
		}
	}
	
	public partial class GetClassBySchoolAndDistrictTermV2Result
	{
		
		private int _ClassID;
		
		private string _ClassNameCustom;
		
		public GetClassBySchoolAndDistrictTermV2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="Int NOT NULL")]
		public int ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNameCustom", DbType="VarChar(303) NOT NULL", CanBeNull=false)]
		public string ClassNameCustom
		{
			get
			{
				return this._ClassNameCustom;
			}
			set
			{
				if ((this._ClassNameCustom != value))
				{
					this._ClassNameCustom = value;
				}
			}
		}
	}
	
	public partial class GetSchoolsByDistrictV2Result
	{
		
		private int _SchoolID;
		
		private string _Name;
		
		private string _Code;
		
		private string _StateCode;
		
		public GetSchoolsByDistrictV2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="Int NOT NULL")]
		public int SchoolID
		{
			get
			{
				return this._SchoolID;
			}
			set
			{
				if ((this._SchoolID != value))
				{
					this._SchoolID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
