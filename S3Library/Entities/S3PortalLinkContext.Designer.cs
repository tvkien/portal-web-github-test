//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace S3Library.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class S3PortalLinkContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new S3PortalLinkContext object using the connection string found in the 'S3PortalLinkContext' section of the application configuration file.
        /// </summary>
        //public S3PortalLinkContext() : base("name=S3PortalLinkContext", "S3PortalLinkContext")
        //{
        //    this.ContextOptions.LazyLoadingEnabled = true;
        //    OnContextCreated();
        //}
    
        /// <summary>
        /// Initialize a new S3PortalLinkContext object.
        /// </summary>
        public S3PortalLinkContext(string connectionString) : base(connectionString, "S3PortalLinkContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new S3PortalLinkContext object.
        /// </summary>
        public S3PortalLinkContext(EntityConnection connection) : base(connection, "S3PortalLinkContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<S3PortalLink> S3PortalLink
        {
            get
            {
                if ((_S3PortalLink == null))
                {
                    _S3PortalLink = base.CreateObjectSet<S3PortalLink>("S3PortalLink");
                }
                return _S3PortalLink;
            }
        }
        private ObjectSet<S3PortalLink> _S3PortalLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration> Configurations
        {
            get
            {
                if ((_Configurations == null))
                {
                    _Configurations = base.CreateObjectSet<Configuration>("Configurations");
                }
                return _Configurations;
            }
        }
        private ObjectSet<Configuration> _Configurations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the S3PortalLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToS3PortalLink(S3PortalLink s3PortalLink)
        {
            base.AddObject("S3PortalLink", s3PortalLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurations(Configuration configuration)
        {
            base.AddObject("Configurations", configuration);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="S3PortalLink", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Configuration CreateConfiguration(global::System.String name, global::System.String value)
        {
            Configuration configuration = new Configuration();
            configuration.Name = name;
            configuration.Value = value;
            return configuration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                if (_Value != value)
                {
                    OnValueChanging(value);
                    ReportPropertyChanging("Value");
                    _Value = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Value");
                    OnValueChanged();
                }
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _Type;
        partial void OnTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTypeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="S3PortalLink", Name="S3PortalLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class S3PortalLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new S3PortalLink object.
        /// </summary>
        /// <param name="s3PortalLinkID">Initial value of the S3PortalLinkID property.</param>
        public static S3PortalLink CreateS3PortalLink(global::System.Int32 s3PortalLinkID)
        {
            S3PortalLink s3PortalLink = new S3PortalLink();
            s3PortalLink.S3PortalLinkID = s3PortalLinkID;
            return s3PortalLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 S3PortalLinkID
        {
            get
            {
                return _S3PortalLinkID;
            }
            set
            {
                if (_S3PortalLinkID != value)
                {
                    OnS3PortalLinkIDChanging(value);
                    ReportPropertyChanging("S3PortalLinkID");
                    _S3PortalLinkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("S3PortalLinkID");
                    OnS3PortalLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _S3PortalLinkID;
        partial void OnS3PortalLinkIDChanging(global::System.Int32 value);
        partial void OnS3PortalLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceType
        {
            get
            {
                return _ServiceType;
            }
            set
            {
                OnServiceTypeChanging(value);
                ReportPropertyChanging("ServiceType");
                _ServiceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceType");
                OnServiceTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceType;
        partial void OnServiceTypeChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictID;
        partial void OnDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BucketName
        {
            get
            {
                return _BucketName;
            }
            set
            {
                OnBucketNameChanging(value);
                ReportPropertyChanging("BucketName");
                _BucketName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BucketName");
                OnBucketNameChanged();
            }
        }
        private global::System.String _BucketName;
        partial void OnBucketNameChanging(global::System.String value);
        partial void OnBucketNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortalKey
        {
            get
            {
                return _PortalKey;
            }
            set
            {
                OnPortalKeyChanging(value);
                ReportPropertyChanging("PortalKey");
                _PortalKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortalKey");
                OnPortalKeyChanged();
            }
        }
        private global::System.String _PortalKey;
        partial void OnPortalKeyChanging(global::System.String value);
        partial void OnPortalKeyChanged();

        #endregion
    
    }

    #endregion
    
}
