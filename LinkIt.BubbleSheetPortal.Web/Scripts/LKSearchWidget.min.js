lkWidget = function (faDomain, faPartnerId) {
    this.xmlhttprequest;
    this.pageNumber = 0;
    this.maxSchoolsCnt = 100;
    this.maxOnPageCnt = 10;
    this.realOnPageCnt = 10;
    this.searchResultCnt = 97;
    this.maxPagesNumber = 10;
    this.maxPagesNumberWithout3Dots = 3;
    this.isTimerOn = 0;
    this.storeType = 2;
    this.newWindow = true;
    this.noRedirector = false;
    this.partnerFilter = 0;
    this.cookieDomain = faDomain;
    this.partnerId = faPartnerId;
    this.ddlStateId = "";
    this.stateId = 0;
    this.SGErrorCodes = { Ok: 0, TooLongPrefix: 1, EmtpyPrefix: 2, OneSymbolPrefix: 3, NoSchoolsForPrefix: 4, IncorrectInputPrefix: 5, PrefixIsNull: 6, ShortQueryInterval: 7 };
    this.FirstInit = function () {
        this.pageNumber = 0;
        this.maxSchoolsCnt = 100;
        this.maxOnPageCnt = 10;
        this.searchResultCnt = this.maxSchoolsCnt;
        this.maxPagesNumber = Math.floor((this.searchResultCnt - 1) / this.maxOnPageCnt) + 1;
        this.isTimerOn = 0;
        this.ind3Dots = this.maxPagesNumber;
        this.storeType = 2;
        this.newWindow = true;
        this.noRedirector = false;
        this.partnerFilter = 0;
    };
    this.CheckTimer = function () {
        if (!this.isTimerOn) {
            this.isTimerOn = 1;
            if (this.getElementById("txtSearch").value.length <= 2) {
                setTimeout(this.instanceName + ".prefixChanged()", 200);
            }
            else { setTimeout(this.instanceName + ".prefixChanged()", 50); }
        }
    };
    this.DropTimer = function () {
        this.isTimerOn = 0;
    };
    this.setParams = function (faResponseSearchResultCnt, faResponsePageNumber) {
        this.searchResultCnt = faResponseSearchResultCnt;
        this.pageNumber = faResponsePageNumber;
        this.maxPagesNumber = Math.floor((this.searchResultCnt - 1) / this.maxOnPageCnt) + 1;
    };
    this.prefixChanged = function () {
        var districtNamePrefix = this.getElementById("txtSearch").value;
        this.initiate(districtNamePrefix, 0);
    };
    this.initiate = function (districtNamePrefix, faPageNumber) {
        var el = this.getElementById("imgLoading");
        var table1 = this.getElementById("table1Div");
        if (table1 != null) {
            table1.setAttribute("class", "div_dataWithPages");
            table1.setAttribute("className", "div_dataWithPages");
        }
        el.setAttribute("class", "searchWidget_img_Loading_visible");
        el.setAttribute("className", "searchWidget_img_Loading_visible");

        var d = new Date;
        var unixtime_ms = d.getTime();
        var unixtime = parseInt(unixtime_ms / 1000);
        var url = faDomain + "Admin/GetDistrictsByKeyWord?keywords=" + encodeURIComponent(districtNamePrefix) + "&pageIndex=" + encodeURIComponent(faPageNumber) + "&pageSize=" + encodeURIComponent(this.maxOnPageCnt);

        xmlhttprequest = this.createRequestObject();
        xmlhttprequest.open("GET", url, true);
        var me = this;
        xmlhttprequest.onreadystatechange = function () {
            if (xmlhttprequest.readyState == 4) {
                if (xmlhttprequest.status == 200) {
                    var doc = eval("(" + this.responseText + ")")
                    me.getData(doc);
                }
            }
        };
        this.xmlhttprequest.send(null);
    };

    this.isOperaOrIE = function () {
        var useragent = navigator.userAgent;
        var navigatorname;
        if ((useragent.indexOf("MSIE") != -1) || (useragent.indexOf("Opera") != -1)) {
            return true;
        } else { return false; }
    };

    this.createRequestObject = function () {
        if (window.XMLHttpRequest) {
            return this.xmlhttprequest = new XMLHttpRequest();
        } else {
            if (window.ActiveXObject) {
                try { return this.xmlhttprequest = new ActiveXObject("Msxml2.XMLHTTP"); }
                catch (e) {
                    try { return this.xmlhttprequest = new ActiveXObject("Microsoft.XMLHTTP"); }
                    catch (e) {
                        try { return this.xmlhttprequest = new ActiveXObject("MSXML2.XMLHTTP.6.0"); }
                        catch (e) {
                            try { return this.xmlhttprequest = new ActiveXObject("MSXML2.XMLHTTP.3.0"); }
                            catch (e) {
                            }
                        }
                    }
                }
            }
        }
    };

    this.ClearData = function (id) {
        var i = 0;
        var obj = this.getElementById(id);
        while (obj.firstChild) {
            obj.removeChild(obj.firstChild);
        }
    };

    this.getData = function (obj) {
        var self = this;
        this.HideAll(false);
        this.DropTimer();
        if (((this.xmlhttprequest != null) && (this.xmlhttprequest.readyState == 4) && (this.xmlhttprequest.status == 200))) {
            var searchCntResponse;
            var pageNumResponse;
            var errorCode;
            var responseJSON;
            var dataDiv = this.getElementById("dataDiv");
            responseJSON = obj.data;
            searchCntResponse = parseInt(obj.resultCnt);
            pageNumResponse = parseInt(obj.pageNum);
            errorCode = parseInt(obj.errorCode);
            this.setParams(searchCntResponse, pageNumResponse);
            if (searchCntResponse < 1) {
                this.HideAll(true);
                var el = this.getElementById("imgLoading");
                if (el) {
                    el.setAttribute("class", "searchWidget_img_Loading_hidden");
                    el.setAttribute("className", "searchWidget_img_Loading_hidden");
                } return;
            }
            var myObject = new Array();
            myObject = responseJSON
            dataDiv.setAttribute("class", "searchWidget_dataDiv");
            dataDiv.setAttribute("className", "searchWidget_dataDiv");
            this.getElementById("table1Div").setAttribute("class", "div_dataWithPages");
            this.getElementById("table1Div").setAttribute("className", "div_dataWithPages");
            this.ClearData("pagesLinksDiv");
            this.getElementById("dataDiv").setAttribute("class", "searchWidget_dataDiv");
            this.getElementById("dataDiv").setAttribute("className", "searchWidget_dataDiv");
            if (errorCode != this.SGErrorCodes.Ok) {
                var tablecell1 = document.createElement("li");
                tablecell1.setAttribute("class", "searchWidget_li_error");
                tablecell1.setAttribute("className", "searchWidget_li_error");
                tablecell1.appendChild(document.createTextNode(myObject[0]["name"]));
                var el = this.getElementById("imgLoading");
                if (el) {
                    el.setAttribute("class", "searchWidget_img_Loading_hidden");
                    el.setAttribute("className", "searchWidget_img_Loading_hidden");
                }
                dataDiv.appendChild(tablecell1);
                return;
            }
            this.realOnPageCnt = myObject.length;
            for (var i = 0; i < myObject.length; i++) {
                var tablecell = document.createElement("li");
                tablecell.setAttribute("id", "sg_li_" + i.toString());
                var id = myObject[i]["Id"];
                var districtName = myObject[i]["Name"];
                if (self.noRedirector == false) {
                    var me = this;
                    if (this.isOperaOrIE()) {
                        tablecell.attachEvent("onclick", function (event) {
                            me.HideAll(true);
                        });
                    }
                    else {
                        tablecell.addEventListener("click", function (event) {
                            me.HideAll(true);
                        }, false);
                    }
                }
                var txtSearch = this.getElementById("txtSearch");
                tablecell.onclick = (function (myObject, id, districtName, txtSearch) {
                    return function () {

                        if (!self.noRedirector == true) {
                            document.getElementById("hdDistrictID").value = id;
                            document.getElementById("hdName").value = districtName;
                            txtSearch.value = districtName;
                        }
                        else {
                        }
                    };

                })(myObject, id, districtName, txtSearch);

                if (i < myObject.length - 1) {
                    tablecell.setAttribute("class", "searchWidget_li_store");
                    tablecell.setAttribute("className", "searchWidget_li_store");
                }
                else {
                    tablecell.setAttribute("class", "searchWidget_li_store_Last");
                    tablecell.setAttribute("className", "searchWidget_li_store_Last");
                }
                for (var key in myObject[i]) {
                    var span = document.createElement("span");
                    if (key == "Name") {
                        span.setAttribute("class", "searchWidget_span_store_Name");
                        span.setAttribute("className", "searchWidget_span_store_Name");
                        span.appendChild(document.createTextNode(myObject[i][key]));
                    }
                    tablecell.appendChild(span);
                }
                dataDiv.appendChild(tablecell);
            }

            if (this.maxPagesNumber > 10) {
                //alert("A");
                this.getElementById("tableBtnsAndPages").setAttribute("style", "display:block");
                this.getElementById("tableBtnsAndPages").setAttribute("class", "searchWidget_table_buttons_And_PagesLinks");
                this.getElementById("tableBtnsAndPages").setAttribute("className", "searchWidget_table_buttons_And_PagesLinks");
                var pagesLinksDiv = this.getElementById("pagesLinksDiv");
                var is3DotsAdded = false;
                pagesLinksDiv.setAttribute("class", "searchWidget_div_pagesLinks");
                pagesLinksDiv.setAttribute("className", "searchWidget_div_pagesLinks");
                this.getElementById("prevPageBtn").setAttribute("class", "searchWidget_input_buttonPrev_visible");
                this.getElementById("prevPageBtn").setAttribute("className", "searchWidget_input_buttonPrev_visible");
                this.getElementById("nextPageBtn").setAttribute("class", "searchWidget_input_buttonNext_visible");
                this.getElementById("nextPageBtn").setAttribute("className", "searchWidget_input_buttonNext_visible");
                if (this.maxPagesNumber < this.maxPagesNumberWithout3Dots) {
                    for (var i = 0; i < this.maxPagesNumber; i++) {
                        this.PutPageLink(pagesLinksDiv, i);
                    }
                }
                else {

                    if (this.pageNumber - Math.floor(this.maxPagesNumberWithout3Dots / 2) > 0) {
                        this.Add3Dots(pagesLinksDiv, "_before");
                    }
                    for (var i = this.pageNumber - Math.floor(this.maxPagesNumberWithout3Dots / 2); (i < this.pageNumber + Math.floor(this.maxPagesNumberWithout3Dots / 2) + 1) && (i < this.maxPagesNumber); i++) {
                        this.PutPageLink(pagesLinksDiv, i);
                    }
                    if (this.pageNumber + Math.floor(this.maxPagesNumberWithout3Dots / 2) < this.maxPagesNumber) {
                        this.Add3Dots(pagesLinksDiv, "_after");
                    }
                }
            } else {
                this.getElementById("tableBtnsAndPages").setAttribute("style", "display:none");
                //alert("B");
            }

            //this.getElementById("tableBtnsAndPages").setAttribute("style", "display:none");
        }
        var el = this.getElementById("imgLoading");
        if (el) {
            el.setAttribute("class", "searchWidget_img_Loading_hidden");
            el.setAttribute("className", "searchWidget_img_Loading_hidden");
        }
    };

    this.Add3Dots = function (pagesLinksDiv, strName) {
        var link = document.createElement("label");
        link.setAttribute("id", "pageNumLink_3dots" + strName);
        link.setAttribute("name", "pageNumLink_3dots" + strName);
        link.setAttribute("value", "...");
        link.setAttribute("class", "searchWidget_label_pageLinkItem_3dots");
        link.setAttribute("className", "searchWidget_label_pageLinkItem_3dots");
        link.setAttribute("style", "display:inline;");
        link.appendChild(document.createTextNode("..."));
        pagesLinksDiv.appendChild(link);
    };

    this.PutPageLink = function (pagesLinksDiv, i) {
        if ((i >= 0) && (i < this.maxPagesNumber)) {
            var link = document.createElement("label");
            link.setAttribute("id", "pageNumLink_" + i.toString());
            link.setAttribute("name", "pageNumLink_" + i.toString());
            link.setAttribute("value", i.toString());
            if (i == this.pageNumber) {
                link.setAttribute("class", "searchWidget_label_pageLinkItem_Current");
                link.setAttribute("className", "searchWidget_label_pageLinkItem_Current");
                link.setAttribute("style", "display:inline;");
            } else {
                link.setAttribute("class", "searchWidget_label_pageLinkItem");
                link.setAttribute("className", "searchWidget_label_pageLinkItem");
                link.setAttribute("style", "display:inline;");
            }
            var me = this;
            link.onclick = (function (i) {
                return function () {
                    me.selectedPageClick(i);
                };
            })(i);
            link.appendChild(document.createTextNode((i + 1).toString() + ""));
            pagesLinksDiv.appendChild(link);
        }
    };

    this.selectedPageClick = function (faPageNumber) {
        if ((faPageNumber >= 0) && (faPageNumber <= this.maxPagesNumber - 1)) {
            this.pageNumber = faPageNumber;
            this.initiate(this.getElementById("txtSearch").value, this.pageNumber);
        }
    };

    this.prevPageClick = function () {
        if (this.pageNumber > 0) {
            this.pageNumber--;
            this.initiate(this.getElementById("txtSearch").value, this.pageNumber);
        }
    };
    this.nextPageClick = function () {
        if (this.pageNumber < this.maxPagesNumber - 1) {
            this.pageNumber++;
            this.initiate(this.getElementById("txtSearch").value, this.pageNumber);
        }
    };

    this.HideAllOnIsOutside = function (event) {
        var ev;
        if (event) { ev = event; }
        else { ev = window.event; }
        if (!this.isOperaOrIE()) {
            if (ev.target.id == 'btnSearchAll' || ev.target.id == 'txtSearch' || ev.target.id == 'ctl00_ctl00_ctrlFooter_btnGo' || ev.target.id == 'ctl00_ctl00_ctrlHeader_ctrlHeaderMenu_ctrlSearchBox_btntmp')
                return;
        } else {

            //             if ((ev.target || ev.srcElement).id == 'btnSearchAll' || (ev.target || ev.srcElement).id == 'txtSearch' || (ev.target || ev.srcElement).id == 'ctl00_ctl00_ctrlFooter_btnGo' || (ev.target || ev.srcElement).id == 'ctl00_ctl00_ctrlHeader_ctrlHeaderMenu_ctrlSearchBox_btntmp')
            //             { return; }
        }
        var el = document.getElementById(this.GetId2("searchWidget_div_allWidget"));
        var el1 = this.getElementById("table1Div");
        var mouseXpos = this.mouseX(ev);
        var mouseYpos = this.mouseY(ev);
        var elX = this.getX(el);
        var elY = this.getY(el);
        var el1X = this.getX(el1);
        var el1Y = this.getY(el1);
        var exp1 = ((mouseXpos <= elX) || (mouseXpos >= elX + el.offsetWidth) || (mouseYpos <= elY) || (mouseYpos >= elY + el.offsetHeight));
        var exp2 = ((mouseXpos <= el1X) || (mouseXpos >= el1X + el1.offsetWidth) || (mouseYpos <= el1Y) || (mouseYpos >= el1Y + el1.offsetHeight));
        if (exp1 && exp2) {
            this.HideAll(true);
        }

    };

    this.getElementById = function (idname) {
        var el = document.getElementById(this.GetId2(""));
        return this.recursiveGetElementById(el, idname);
    };

    this.recursiveGetElementById = function (el, idname) {
        var arrEls = el.getElementsByTagName("*");
        for (var i = 0; i < arrEls.length; i++) {
            var el2 = arrEls[i];
            if ((el2.name == idname) || (el2.id == idname)) {
                return el2;
            } else {
                this.recursiveGetElementById(el2, idname);
            }
        }
    };
    this.HideAll = function (flag) {
        if (flag) {
            this.selectedSchool = -1;
        }
        this.ClearData("dataDiv");
        this.ClearData("pagesLinksDiv");
        this.getElementById("tableBtnsAndPages").setAttribute("class", "searchWidget_table_buttons_And_PagesLinks_hidden");
        this.getElementById("tableBtnsAndPages").setAttribute("className", "searchWidget_table_buttons_And_PagesLinks_hidden");
        this.getElementById("prevPageBtn").setAttribute("class", "searchWidget_input_buttonPrev_invisible");
        this.getElementById("prevPageBtn").setAttribute("className", "searchWidget_input_buttonPrev_invisible");
        this.getElementById("nextPageBtn").setAttribute("class", "searchWidget_input_buttonNext_invisible");
        this.getElementById("nextPageBtn").setAttribute("className", "searchWidget_input_buttonNext_invisible");
        if (flag) {
            this.getElementById("table1Div").setAttribute("class", "div_dataWithPages_hidden");
            this.getElementById("table1Div").setAttribute("className", "div_dataWithPages_hidden");
        }
        this.getElementById("dataDiv").setAttribute("class", "searchWidget_dataDiv_hidden");
        this.getElementById("dataDiv").setAttribute("className", "searchWidget_dataDiv_hidden");
    };
    this.mouseX = function (evt) {
        if (evt.pageX) { return evt.pageX; }
        else {
            if (evt.clientX) {
                return evt.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);
            }
            else { return null; }
        }
    };
    this.mouseY = function (evt) {
        if (evt.pageY) {
            return evt.pageY;
        } else {
            if (evt.clientY) {
                return evt.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);
            }
            else { return null; }
        }
    };
    this.getX = function (oElement) {
        var iReturnValue = 0; while (oElement != null) {
            iReturnValue += oElement.offsetLeft; oElement = oElement.offsetParent;
        }
        return iReturnValue;
    };
    this.getY = function (oElement) {
        var iReturnValue = 0; while (oElement != null) {
            iReturnValue += oElement.offsetTop;
            oElement = oElement.offsetParent;
        }
        return iReturnValue;
    };

    this.selectedSchool = -1;
    this.prevClass = "";
    this.ketPressed = function (f, flag) {
        if (flag) {
            if ((f.ctrlKey) && (f.keyCode == 37)) {
                this.prevPageClick(); return false;
            }
            else {
                if ((f.ctrlKey) && (f.keyCode == 39)) {
                    this.nextPageClick();
                    return false;
                }
                else {
                    if (f.keyCode == 40) {
                        this.NextLi(1); return false;
                    }
                    else {
                        if (f.keyCode == 38) {
                            this.NextLi(-1);
                            return false;
                        }
                    }
                }
            }
        }
        if (f.keyCode == 13) {
            var el = this.getElementById("sg_li_" + this.selectedSchool.toString());
            if (el != null) { this.ClickElement(el); return false; }
            this.CheckTimer(); return false;
        }
        if (flag) {
            if ((f.ctrlKey) || (f.keyCode == 39) || (f.keyCode == 37) || (f.keyCode == 17))
            { return false; }
            else { this.CheckTimer(); }
        }
    };
    this.ClickElement = function (el) {
        if (el != null) {
            if (document.createEventObject) {
                var evt = document.createEventObject();
                el.fireEvent("onclick", evt);
            }
            else {
                if (document.createEvent) {
                    var evt = document.createEvent("HTMLEvents");
                    evt.initEvent("click", false, false);
                    el.dispatchEvent(evt);
                }
            }
        }
    };
    this.NextLi = function (direction) {
        var el = this.getElementById("sg_li_" + this.selectedSchool.toString());
        if (this.prevClass == "") {
            if (el != null) {
                this.prevClass = el.getAttribute("class");
            }
        } if (el != null) {
            el.setAttribute("class", this.prevClass);
            el.setAttribute("className", this.prevClass);
            el.setAttribute("style", "background: inherit;");
        }
        this.selectedSchool += direction;
        if ((this.selectedSchool == -1) || (this.selectedSchool == this.realOnPageCnt)) {
            this.selectedSchool = -1;
            this.getElementById("txtSearch").focus();
            //this.getElementById("txtSearch").setAttribute("style", "background: lightgray;");
            return;
        } else {
            //this.getElementById("txtSearch").setAttribute("class", "searchWidget_input_Prefix");
            this.getElementById("txtSearch").setAttribute("className", "searchWidget_input_Prefix");
            //this.getElementById("txtSearch").setAttribute("style", "background: lightgray");
        }
        if (this.selectedSchool <= -2) {
            this.selectedSchool = this.realOnPageCnt - 1;
        }
        this.selectedSchool = this.selectedSchool % this.realOnPageCnt;
        var el1 = this.getElementById("sg_li_" + this.selectedSchool.toString());
        if (el1 != null) { el1.setAttribute("style", "background: lightgray;"); }
    };

    this.GetId2 = function (idname) { return this.instanceName + this.partnerId; };
    this.GetId = function (idname) { return '"' + this.instanceName + this.partnerId + '"'; };
    this.myName = function (sgInstance) { for (var i in window) { if (window[i] == sgInstance) { return i; } } };
    this.GetPageview = function (sgInstance) {
        var defaultText = "";
        var txt = document.getElementById("hdName").value;
        if (txt != "") 
            defaultText = txt;      
        this.instanceName = sgInstance;
        var strEvent = ' onkeyup="' + sgInstance + '.ketPressed(event, true); return false;"';
        var strEvent1 = 'onkeyup="' + sgInstance + '.ketPressed(event, true); return false;"';

        var html = '<div id=' + this.GetId("searchBox") + '> '
         + ' <input type="text" autocomplete="off" id="txtSearch" class="search-box"  name= "txtSearch"   value= "' + defaultText + '" '
         + strEvent + ' /> '
         + '<div class="clear"></div>'
         + ' <div id="table1Div" name="table1Div" class="div_dataWithPages_hidden"> '
         + ' <img id="imgLoading" src="' + this.cookieDomain + 'Content/images/loading_grey_circle.gif" class="searchWidget_img_Loading_hidden"/> '
         + ' <div id="dataDiv" name="dataDiv"></div> '
         + ' <table id="tableBtnsAndPages" class="searchWidget_table_buttons_And_PagesLinks" cellpadding="0" cellspacing="0" border="0"> '
         + ' <tr class="searchWidget_row_buttons_And_PagesLinks" align="center"> '
         + ' <td v-align="middle" class="searchWidget_td_buttonPrev" style="vertical-align:middle;"> <a class="searchWidget_input_buttonPrev_invisible" id="prevPageBtn" name="prevPageBtn" onclick="return  ' + sgInstance + '.prevPageClick();"><img alt="" src="' + this.cookieDomain + 'Content/images/l_arrow.png"/></a> </td> '
         + ' <td v-align="middle" class="searchWidget_td_pagesLinks" align="center" style="vertical-align:middle;"><center><span id="pagesLinksDiv" class="searchWidget_div_pagesLinks"> </span></center></td> '
         + ' <td v-align="middle" class="searchWidget_div_allWidget" style="vertical-align:middle;"> <a  class="searchWidget_input_buttonNext_invisible" id="nextPageBtn" name="nextPageBtn" onclick="return ' + sgInstance + '.nextPageClick();"><img alt="" src="' + this.cookieDomain + 'Content/images/r_arrow.png"/></a></td> '
         + ' </tr> </table> </div></div>';

        document.write(html);
        var me = this;
        if (this.isOperaOrIE()) {
            document.documentElement.attachEvent("onclick", function (event) {
                me.HideAllOnIsOutside(event);
            });
        }
        else {
            document.documentElement.addEventListener("click", function (event) {
                me.HideAllOnIsOutside(event);
            }, false);
        }
        this.HideAll(true);
    };
};

function Blank(e) {    
    if (e == null) return;
    else e.value = '';
}

