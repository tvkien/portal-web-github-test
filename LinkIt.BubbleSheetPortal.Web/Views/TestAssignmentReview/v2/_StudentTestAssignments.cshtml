<div class="block-border block-section" id="divStudentTestAssignments" style="display: none;">
    <div class="block-content form">
        <h1>
            Review Student Assignments
        </h1>
        <div class="toggle">
            <button id="btnStudentView" type="button" style="margin-left: -11px;">Go to Class View</button>
            <a href="javascript:void(0)" id="btnStudentPendingReview" style="margin-top: 1px;" class="on">
                Pending Review:
                <span id="spanStudentPendingReview">On</span>
            </a>
            <a href="javascript:void(0)" id="btnActiveTestStudentAssignment" style="margin-left: 7px; margin-top: 1px;" class="off">
                Show Inactive:
                <span id="spanStudentActive">Off</span>
            </a>
        </div>
        <p style="height: 11px"></p>
        <div id="divTestStudentAssignments" class="no-margin last-child">
            <table id="studentDataTable" class="datatable table no-margin" width="100%">
                <thead>
                    <tr>
                        <th scope="col" class="black-cell"><span class="loading"></span></th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Test
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Teacher
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Class
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Students
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Test Code
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Pass Code
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Status
                        </th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                        <th scope="col" style="display: none"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="height: 60px;"></td>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="dialogManualGrading"></div>
<script type="text/javascript">
    function LoadTesStudentAssignmentToTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            bProcessing: false,
            sAjaxSource: '@Url.Action("GetTestStudentAssignments", "TestAssignmentReview")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "DateTime", value: $('#dateTime option:selected').val() },
                    { name: "OnlyShowPendingReview", value: showPendingReviewStudentTestAssignment },
                    { name: "ShowActiveClassTestAssignment", value: showActiveStudentTestAssignment },
                    { name: "QTITestClassAssignmentID", value: selectedClassAssignmentID },
                    { name: "ProgramID", value: $('#selectProgram option:selected').val() },
                    { name: "DistrictID", value: $('#selectDistrict').val() }
                );
            },
            iDisplayLength: 10,
            aoColumns: [
                { sType: 'string', sName: 'QTITestClassAssignmentID', bSearchable: true, bSortable: false, bVisible: true, sWidth: '65px' },
                { sType: 'string', sName: 'TestName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'TeacherName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'ClassName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'StudentName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'Code', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'PassCode', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'AssignmentState', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'SubjectName', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'GradeName', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'BankName', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'DistrictID', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'Status', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'AssignmentDate', bSearchable: true, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'QTITestStudentAssignmentID', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'VirtualTestID', bSearchable: true, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).parent().addClass('tableRow');
                $('td:eq(0)', nRow).html(SetIconVisibilityStudent(aData[0], aData[14], aData[12], aData[15], aData[7]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                $('#filterSheets').attr("disabled", "disabled");

                return true;
            },
            fnDrawCallback: function () {
                $('#divStudentTestAssignments').unblock();
                $('#filterSheets').removeAttr("disabled");
                return true;
            },
            fnInitComplete: function () {
            }
        };
        $("#studentDataTable").data("options", options);
    }

    function SetIconVisibilityStudent(qtiTestClassAssignmentID, qtiTestStudentAssignmentID, status, virtualTestID, AssignmentState) {
        var iconString = "";

        var detailsIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/review-icon.png")';
        var detailsString = '<a href="javascript:void(0);" title="Review Test" class="with-tip jsStudentViewDetail" qtiTestClassAssignmentID="' + qtiTestClassAssignmentID + '" qtiTestStudentAssignmentID="' + qtiTestStudentAssignmentID + '" virtualTestID="' + virtualTestID + '"><img src ="' + detailsIcon + '" width="14" height="14" style="margin-right: 4px"></a>';

        var deactivateIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
        var deactivateString = '<a href="javascript:void(0)" title="Deassign" operation="1" qtiTestClassAssignmentID="' + qtiTestClassAssignmentID + '" qtiTestStudentAssignmentID="' + qtiTestStudentAssignmentID + '" class="with-tip jsDeassignStudent actionIcon"><img src="' + deactivateIcon + '" width="16" height="16"></a>';

        iconString += detailsString;

        if (AssignmentState === 'Not Started') iconString += deactivateString;

        var href = 'javascript:RegisterOpenDialog(' + virtualTestID + ');';
        var printIcon = '<img src="' + '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/print1.png")' + '" width="16" height="16">';
        var vPrintTestContent = ' <a  class="actionIcon"' +
            'title="Print Test" href="' + href + '">' + printIcon + '</a> ';

        //iconString += vPrintTestContent;

        return iconString;
    }

</script>

<script type="text/javascript">

    function SetupFiltersStudent() {

        var dataTable = $('#studentDataTable').dataTable();
        var settings = dataTable.fnSettings();
        fnResetAllFilters(settings);

        if ($("#selectGrade").val()) {
            FilterColumn($('#selectGrade').val(), 9, settings);
        }

        if ($("#selectBank").val()) {
            FilterColumn($('#selectBank').val(), 10, settings);
        }

        if ($("#selectClass").val()) {
            FilterColumn($('#selectClass').val(), 3, settings);
        }

        if ($("#selectSubject").val()) {
            FilterColumn($('#selectSubject').val(), 8, settings);
        }

        if ($("#selectTeacher").val()) {
            FilterColumn($('#selectTeacher').val(), 2, settings);
        }

        if ($("#selectTest").val()) {
            FilterColumn($('#selectTest').val(), 1, settings);
        }

        ShowBlock($('#divStudentTestAssignments'), 'Loading');
        dataTable.fnDraw();
    }

    $('#studentDataTable').on('click', '.jsDeassignStudent', function (event) {
        event.preventDefault();
        var qtiTestClassAssignmentID = $(this).attr('qtiTestClassAssignmentID');
        var qtiTestStudentAssignmentID = $(this).attr('qtiTestStudentAssignmentID');
        ConfirmMessage("Are you sure you want to remove the student assignment?", qtiTestClassAssignmentID, qtiTestStudentAssignmentID);
    });

    $('#studentDataTable').on('click', '.jsStudentViewDetail', function (event) {
        event.preventDefault();
        var qtiTestClassAssignmentID = $(this).attr('qtiTestClassAssignmentID');
        var qtiTestStudentAssignmentID = $(this).attr('qtiTestStudentAssignmentID');
        var virtualTestID = $(this).attr('virtualTestID');
        PopupTestAssignmentRegrader(qtiTestClassAssignmentID, qtiTestStudentAssignmentID, virtualTestID, 0);
    });

    function ConfirmMessage(message, qtiTestClassAssignmentID, qtiTestStudentAssignmentID) {
        var hbody = $("body").height() - 109;
        var configData = {
            message,
            cbYesBtnFuncName: 'HandleOKClick(' + qtiTestClassAssignmentID + ', ' + qtiTestStudentAssignmentID + ')',
            cbCancelBtnFuncName: 'HandleCancelClick()',
            cbCloseBtnFuncName: 'HandleCancelClick();'
        }
        var strHtml = makeYesNoDialog(configData)
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog dialog-custom-new-skin")
            .attr("id", "messageDialog")
            .appendTo("body")
            .dialog({
                open: function () {
                    $(this).parents('.ui-dialog').find('.ui-dialog-titlebar-close').remove()
                },
                close: function () { $(this).remove(); },
                modal: true,
                width: 500,
                maxheight: 400,
                resizable: false
            });

        $(".ui-dialog").css("height", hbody);
    }

    function HandleOKClick(qtiTestClassAssignmentID, qtiTestStudentAssignmentID) {
        $("#messageDialog").dialog("close");
        $.post('@Url.Action("DeassignStudent")', { districtID: $('#selectDistrict').val(), qtiTestClassAssignmentID: qtiTestClassAssignmentID, qtiTestStudentAssignmentID: qtiTestStudentAssignmentID }, function (response) {
            SetupFilters();
        });
    }

    function HandleCancelClick() {
        $("#messageDialog").dialog("close");
        SetupFiltersStudent();
    }

</script>

<script>

    function PopupTestAssignmentRegrader(qtiTestClassAssignmentID, qtiTestStudentAssignmentID, virtualTestID, selectFirstStudentForReview) {
        ShowBlock($('#classDataTable'), 'Loading');

        var url = '@Url.Action("Index", "TestAssignmentRegrader")';
        url += '?qtiTestClassAssignmentID=' + qtiTestClassAssignmentID;
        url += '&qtiTestStudentAssignmentID=' + qtiTestStudentAssignmentID;
        url += '&virtualTestID=' + virtualTestID;
        url += '&selectFirstStudentForReview=' + selectFirstStudentForReview;


        $.ajax({
            url: url,
            cache: false
        }).done(function (html) {
            $("#dialogManualGrading").append('<div id="PopupTestAssignmentRegrader" class="dialog block-content"></div>');
            $("#PopupTestAssignmentRegrader").append(html);
            $('#classDataTable').unblock();
            $('#PopupTestAssignmentRegrader').dialog({
                title: "",
                open: function () {

                    //If width of popup gt window width popup auto show on the left
                    var currentPopup = $(this);
                    if (currentPopup.width() > $(window).width()) {
                        currentPopup.parent().css({ "left": "0" });
                    }
                    currentPopup.parents('.ui-resizable').addClass('block-border')
                        .prepend('<h1 class="titleTestAssignmentRegrader">Assignment Reviewer - <span id="titleHeader"></span></h1>');

                    //Create overlay for popup
                    $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                },
                beforeclose: function () {
                    if (viewModel.RequireApplyGrade()) {
                        AlertMessage('The points has been changed. You must apply grade.');
                        return false;
                    }

                    var options = { Message: '' };
                    if (viewModel.QTIOnlineTestSessionIDBulks().length > 0) {
                        options.Message = 'You have graded tests that have not been submitted. Would you like to submit these tests now?';
                        ConfirmSubmitTest(options, function () {
                            viewModel.IsBulkGrading(true);
                            viewModel.PostSubmitTestData();
                            RemoveGraderPopup();
                        }, function () {
                            RemoveGraderPopup();
                        });
                        return false;
                    } else if (viewModel.IsGraded()) {
                        options.Message = 'You have not graded all questions for this student. Are you sure you want to proceed?';
                        ConfirmSubmitTest(options, function() {
                            RemoveGraderPopup();
                        }, function() {
                        });
                        return false;
                    }

                    return true;
                },
                close: function () {
                    RemoveGraderPopup();
                },
                resizeStop: function (event, ui) {
                    var  widthFieldset = parseInt($("#answersBox fieldset").css("padding-right").replace("px", "")) + parseInt($("#answersBox fieldset").css("padding-left").replace("px", "")) + parseInt($("#answersBox fieldset").css("border-left-width").replace("px", "")) + parseInt($("#answersBox fieldset").css("border-right-width").replace("px", ""));
                    $(".wrapper-response").width($("#answersBox").width() - widthFieldset);

                    var tagsHolder = $('#divQuestionDetails .mainBody:visible').find('.sbHolder');
                    $.each(tagsHolder, function (indx, itemHolder) {
                        var idresp = $(itemHolder).find('.sbSelector').attr('responseidentifier');
                        var itemUl = $('#divQuestionDetails .mainBody:visible').find('ul.inlineChoiceFormat[responseidentifier=' + idresp + ']');
                        var maxWItem = itemUl.width() + 52;
                        $(itemHolder).css({
                            'max-width': maxWItem
                        });
                    });
                },
                modal: false,
                width: 1080,
                minWidth: 791,
                resizable: true

            });

        });

        $(".close").unbind("click");
        $(".close").live("click", function (e) {
            e.preventDefault();
        });
    }

    function RemoveGraderPopup() {
        SetupFiltersClass();
        $('#PopupTestAssignmentRegrader').remove();
        $('#divPrintTestOfStudentPanel').remove();
        $("body .my-overlay").remove();
    }

    function CloseGraderPopup() {
        $("#PopupTestAssignmentRegrader").dialog("close");
    }

</script>
<style type="text/css">
    .positionAdd {
        position: relative;
        right: -6px;
        top: 26px;
    }

    button {
        margin-left: 30px;
    }

    .ui-widget-header {
        border: 0px solid var(--grey0) !important;
        background: transparent !important;
        position: relative;
        top: 34px;
        z-index: 99999;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
        /*top: 100px !important;*/
        height: auto !important;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 40px;
        height: 42px;
    }

        .ui-dialog .ui-dialog-titlebar-close:hover {
            padding: 1px;
        }

    .ui-widget-overlay {
        background: var(--dark) !important;
    }

    #studentContent {
        position: relative;
    }

    #PopupTestAssignmentRegrader {
        background: #FFFFFF;
        border-radius: 0;
        padding-bottom: 21px;
        padding-top: 24px;
        position: relative;
        top: -26px;
        border-radius: 4px;
        margin-bottom: -26px;
        overflow: hidden;
    }

        #PopupTestAssignmentRegrader div.block-border {
            background: none repeat scroll 0 0 rgba(0, 0, 0, 0);
            border: 0 none;
            border-radius: 0;
            box-shadow: 0 0 0;
            padding: 0;
        }

    .ui-dialog.block-border .ui-widget-header {
        top: -12px;
    }

    .ui-dialog.block-border .ui-dialog-titlebar-close {
        position: absolute;
        right: -18px;
        top: -6px;
    }

    .ui-dialog.block-border {
        background: none repeat scroll 0 0 rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.75);
        border-radius: 0.8em;
        box-shadow: 0 0 4px rgba(50, 50, 50, 0.5);
        padding: 0.833em;
        overflow: visible;
    }

        .ui-dialog.block-border .block-content h1 {
            left: 10px;
            top: 1px;
        }

    #popup_content {
        padding-top: 14px;
    }

    .ie .grading {
        margin-bottom: 19px;
    }

    .ie .bgtable_grading {
        padding-top: 16px;
    }
</style>
