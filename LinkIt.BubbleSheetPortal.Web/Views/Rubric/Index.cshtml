@model LinkIt.BubbleSheetPortal.Web.ViewModels.RubricViewModel
@{
    ViewBag.Title = "Rubrics";
}
<article class="container_12">
    <section class="grid_12">
        <div id="divListRubricContent" class="block-border">
            <div id="divListRubricfilter" class="block-content form bubbleSheetSelector">
                <h1>Rubrics</h1>
                @if (Model.IsPublisher||Model.IsNetworkAdmin)
                {
                    <fieldset id="publisherContent" class="grey-bg">
                        <legend>Select State/@LabelHelper.DistrictLabel</legend>
                        <div class="columns">
                            <div class="colx2-left">
                                <div>
                                    <label>State</label>
                                    <select id="selectState"></select>
                                </div>
                            </div>
                            <div class="colx2-right">
                                <div>
                                    <label>@LabelHelper.DistrictLabel</label>
                                    <div class="block-text-name">
                                        <select id="selectDistrict"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                }
                else
                {
                    <input id="hdfDistrictId" value="@Model.CurrentDistrictId" type="hidden"/>
                }
                <fieldset class="grey-bg" style="z-index: 1002">
                    <legend>Select Test Bank</legend>
                    <div style="z-index: 1002">
                        <div class="colx2-left">
                            <div class="block-content-dropdown-marquee  mb-3">
                                <label>@LabelHelper.GradeLabel</label>
                                <div class="block-text-name">
                                    <select id="selectGrade"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label>Test Bank</label>
                                <input id="txtInputTestBank" type="text" class="w235" />
                            </div>
                            <div>
                                <label>Test</label>
                                <input id="txtInputTest" type="text" class="w235" />
                            </div>
                        </div>
                        <div class="colx2-right">
                            <div class="block-content-dropdown-marquee  mb-3">
                                <label>@LabelHelper.Subject</label>
                                <div class="block-text-name">
                                   <select id="selectSubject"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label>Author</label>
                                <input id="txtInputAuthor" type="text" class="w235" />
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="clearfix"></div>
                <div class="float-right apply_filler">
                    <button id="filterSheets" type="button">Apply Filters</button>
                </div>
                <div class="clearfix"></div>

                <div class="block-border" id="divListLockbankdl1">
                    <div id="divListLockbankdl2" class="block-content form bubbleSheetSelector">
                        <div class="last-child testPreference">
                            <table id="datatable" class="datatable table" width="100%">
                                <thead>
                                    <tr>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            @LabelHelper.Subject
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            @LabelHelper.GradeLabel
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Test Bank
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Author
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Test
                                        </th>
                                        <th scope="col">Rubrics
                                        </th>
                                        <th scope="col" style="display: none">DistrictId</th>
                                        <th scope="col" style="display: none">GradeId</th>
                                        <th scope="col" style="display: none">SubjectId</th>
                                        <th scope="col" style="display: none">RubricId</th>
                                        <th scope="col" style="display: none">TestId</th>
                                        <th scope="col" style="display: none">RubricKey</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="height: 60px;"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>

<script>

    $(function () {
        $('#selectDistrict').marquee();
        $('#selectGrade').marquee();
        $('#selectSubject').marquee();

        @if (Model.IsPublisher)
        {
            <text>
        $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
            populateStates(states);
        });
        </text>
        }
        else
        {
            if (Model.IsNetworkAdmin)
            {
                  <text>
                 $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
                     populateStates(states);
                });
                </text>
            }
            else
            {
                  <text>
        $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: '-1' }, function (grades) {
            populateGrades(grades);
        });
        </text>
            }

        }

        @*$.get('@Url.Action("GetGrades", "PopulateTest")', function (grades) {
            populateGrades(grades);
        });*@
    });

    function populateDistricts() {
        $('#selectDistrict').empty();
        var stateValue = $('#selectState').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
        }
    }

    function populateStates(states) {
        addDefaultOption($('#selectState'), "State");
        addSelectListItems($('#selectState'), states);
    }

    $('#selectState').change(function () {
        $('#selectDistrict').empty();
        $('#selectGrade').empty();
        if ($('#selectState').val() != 'select') {
            populateDistricts();
        }
    });

    $('#selectDistrict').change(function () {
        populateGradesByDistrict();
        if ($('#selectDistrict').val() != 'select') {
            $('#btnLockedbank').show();
        } else {
            $('#btnLockedbank').hide();
        }
    });

    $('#selectGrade').change(function () {
        populateSubjects();
    });

    $('#selectSubject').change(function () {
        //TODO: Subject Change
    });

    function populateGradesByDistrict() {
        $('#selectGrade').empty();
        $('#selectSubject').empty();
        var districtValue = $('#selectDistrict').val();
        if (districtValue != 'select') {
            $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: districtValue }, function (grades) {
                //populateSchools(schools);
                populateGrades(grades);
            });
        }
    }

    function populateGrades(grades) {
        $('#selectGrade').empty();
        defaultSelectValue($('#selectGrade'), "0", "All @LabelHelper.TestGrade");
        addSelectListItems($('#selectGrade'), grades);
        defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subjects");
    }

    function populateSubjects() {
        var gradeValue = $('#selectGrade').val();
        var districtValue = 0;
        if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() != 'select') {
            districtValue = $('#selectDistrict').val();
        }
        if (gradeValue > 0) {
        $.get('@Url.Action("GetSubjectsByGradeIdAndAuthor", "SearchBank")', { gradeId: gradeValue, districtId: districtValue }, function (subjects) {
                defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subject");
                addSelectListItems($('#selectSubject'), subjects);
            });
        } else {
            defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subject");
        }
    }

    function defaultSelectValue(selectList, objctValue, objectText) {
        selectList.empty();
        selectList
            .append($("<option></option>")
                .attr("value", objctValue)
                .text("Select " + objectText));
    }
</script>

<script type="text/javascript">
    $(function () {
        LoadListRubricToTable();
    });

    function LoadListRubricToTable() {
        var vAltert = 'subject: ' + $('#selectSubject').val() + ', @LabelHelper.GradeLabel: '
            + $('#selectGrade').val() + ', @LabelHelper.DistrictLabel: ' + $('#selectDistrict').val()
            + ', TestName: ' + $('#txtInputTestBank').val() + ', Test: ' + $('#txtInputTest').val()
            + ', Author: ' + $('#txtInputAuthor').val();
        //alert(vAltert);
        var options = {
            bServerSide: true,
            bDestroy: true,
            bProcessing: false,
            sAjaxSource: '@Url.Action("GetListRubricsNew")',
            fnServerParams: function (aoData) {
                aoData.push(
                    //{ name: "SubjectId", value: $('#selectSubject').val() },
                    { name: "SubjectName", value: $('#selectSubject').val() || '' },
                    { name: "GradeId", value: $('#selectGrade').val() },
                    { name: "DistrictId", value: $('#selectDistrict').val() },
                    { name: "TestBankName", value: $('#txtInputTestBank').val() },
                    { name: "TestName", value: $('#txtInputTest').val() },
                    { name: "Author", value: $('#txtInputAuthor').val() }
                );
            },
            iDisplayLength: 10,
            aoColumns: [
                { sType: 'string', sName: 'SubjectName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'GradeName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'TestBankName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'Author', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'TestName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'FileName', bSearchable: false, bSortable: false, bVisible: true },
                { sType: 'int', sName: 'DistrictId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'GradeId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'SubjectId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'RubricId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'TestId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'RubricKey', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(5)', nRow).html(SetIconRubric(aData[10], aData[9], aData[5], aData[11]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                $('#filterSheets').attr("disabled", "disabled");

                return true;
            },
            fnDrawCallback: function () {
                $('#divListRubricContent').unblock();
                $('#filterSheets').removeAttr("disabled");
                RegristerUploadflash();
                //alert("fnDrawCallback!");
                AddTooltip();
                return true;
            },
            fnInitComplete: function () {
                //alert("fnInitComplete!");
            }
        };
        $("#datatable").data("options", options);
    }

    function setupFilters() {
        ShowBlock($('#divListRubricContent'), 'Loading');

        var dataTable = $('#datatable').dataTable();
        var settings = dataTable.fnSettings();
        fnResetAllFilters(settings);
        dataTable.fnDraw();
    }

    function fnResetAllFilters(oSettings) {
        for (var iCol = 0; iCol < oSettings.aoPreSearchCols.length; iCol++) {
            oSettings.aoPreSearchCols[iCol].sSearch = '';
        }
    }

    function filterColumn(searchTerm, columnIndex, settings) {
        settings.aoPreSearchCols[columnIndex].sSearch = searchTerm;
        settings.aoPreSearchCols[columnIndex].bRegex = false;
        settings.aoPreSearchCols[columnIndex].bSmart = true;
    }

    $('#filterSheets').unbind('click');
    $('#filterSheets').click(function () {
        setupFilters();
    });

    function SetIconRubric(testId, rubricId, fileName, rubricKey) {

        var vIcon = '';
        var vImage = '';
        if (rubricId > 0) {
            var tmp = fileName;
            if (fileName == '') {
                tmp = 'default';
            }
            if (fileName.length > 25) {
                tmp = fileName.substring(0, 22) + '...';
            }
            var vFile = '<a style="float:left;margin-left: 5px;margin-top: 5px;" href="Notification/DownloadRubricFile/?key=' + rubricKey + '" target="_blank" title="' + fileName + '">' + tmp + '</a>';
            vIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/icon-red.png")';
            vImage = '<div style="width: 200px;margin-left: -3px;">' + vFile + ' <div style="float:left;cursor:pointer;" onclick="RemoveAssocialRubric(' + testId + ',' + rubricId + ')" class="with-tip"><img src ="' + vIcon + '"  title="Remove Rubric File"></div></div>';
        } else {
            vImage = '<input type="file" name="file_upload" id="file_upload-' + testId + '" title="Add rubric file" />';

        }
        return vImage;
    }

    function RemoveAssocialRubric(testId, rubricId) {
        $.get('@Url.Action("RemoveAssocialRubric", "Rubric")', { testId: testId, rubricId: rubricId }, function (response) {
            if (response.Success == 'Success') {
                //TODO: Change Status Success
                //alert("Change Status Success: " + bankDistrictId);
                setupFilters();
            } else {
                //TODO: Change Status Fail
                alert("Change Status Fail: " + bankDistrictId);
            }

        });
    }

</script>

<style type="text/css">
    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
        top: 100px;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay {
        background: #2b2b2d !important;
    }

    .block-content .no-margin {
        margin-left: -0.667em !important;
    }

    .table thead td {
        color: #000 !important;
        text-shadow: 0 0px;
    }

    .ui-widget-header {
        position: relative;
        z-index: 9999;
    }

    .ui-widget-content {
        z-index: 1002;
    }

    #divListLockbankdl2 .block-footer {
        margin-top: 0px !important;
    }

    .uploadify-button {
        background-image: url("/Content/themes/Constellation/images/icons/fugue/icon-plus.png");
        text-indent: -9999px;
    }

        .uploadify-button,
        .uploadify:hover,
        .uploadify-button:hover {
            background-color: transparent !important;
            border: 0px solid white !important;
        }
        .uploadify:hover .uploadify-button {
            background-image: url("/Content/themes/Constellation/images/icons/fugue/icon-plus.png");
	        background-color: white;
	        background-position: center bottom;
        }

       #divListLockbankdl1 .bubbleSheetSelector select {
           min-width: 50px !important;
           width: 70px;
       }

    .file_upload_rubric {
        background-image: url("/Content/themes/Constellation/images/icons/fugue/icon-plus.png");
        text-indent: -9999px;
        background-color: transparent;
        border: solid 0px white;
    }

    .file_upload_rubric:hover {
        background-image: url("/Content/themes/Constellation/images/icons/fugue/icon-plus.png");
	    background-color: transparent;
	    background-position: center bottom;
        border: solid 0px white;
    }
    .file_upload_rubric input {
        cursor: pointer;
    }
</style>

<script type="text/javascript">
    var auth = '@(Request.Cookies[FormsAuthentication.FormsCookieName] == null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value)';
    function loadFlashModule(id) {

        if (window.FormData !== undefined) {
            $('#' + id).uploadifive({
                'uploadScript': '@Url.Action("UploadRubric")',
                'overrideEvents': ['onDialogClose'],
                'fileObjName': 'postedFile',
                'multi': false,
                'removeCompleted': true,
                'width': 20,
                'auto': true,
                'fileType': ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/pdf'],
                'buttonClass': 'file_upload_rubric',
                'onUpload': function (file) {
                    $('#' + id).data('uploadifive').settings.formData = getFormData(auth, id);
                },
                'onUploadComplete': function (file, response) {
                    var tmp = $.parseJSON(response);
                    if (tmp.success == true) {
                        setupFilters();
                    } else {
                        alertMessage(tmp.errorMessage);
                    }
                    $('#divListRubricContent').unblock();
                },
                'onError': function (errorType, file) {
                    $(this).parents(".file_upload_rubric").next().hide();
                    if (errorType == "FORBIDDEN_FILE_TYPE") {
                        alertMessage('File type not supported. Please import a PDF or Word file.');
                    }
                    else {
                        alertMessage('The error was: ' + errorType);
                    }
                    $('#divListRubricContent').unblock();
                }
            });
        }
    }
    function getFormData(auth, id) {
        var testid = id.split('-')[1];
        return { 'AUTHID': auth, 'testId': testid };
    }

    function RegristerUploadflash() {
        $("#datatable input[id^=file_upload-]").each(function () {
            loadFlashModule(this.id);
        });
    }

    function AddTooltip() {
        $('.uploadify').attr("title", "Add rubric file");
    }

	//Build custom alert window message
    function alertMessage(message) {
        var okButton = '<button style="width:63px;" onclick="closeAlert();">OK</button>';

        var strHtml = '<section class="grid_5">' +
            '<div class="block-border" style="width: ' + 400 + 'px;">' +
            '<div class="block-content form" style="padding-bottom: 1em;"><div>' + message +
            '</div><div style="text-align:center;padding-top:20px;padding-bottom:10px;">' + okButton + '</div></div></div></section>';
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "alertDialog")
            .appendTo("body")
            .dialog({
                close: function () { $('.ui-widget-overlay').remove(); $(this).remove(); },
                modal: false,
                width: 460,
                maxheight: 500,
                resizable: false,
            });

        showModalDialogBG();
    }

	function closeAlert() {
        $('#alertDialog').dialog('close');
    }

    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }

</script>
