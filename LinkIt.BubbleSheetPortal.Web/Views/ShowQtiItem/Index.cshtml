@using LinkIt.BubbleSheetPortal.Common.DataFileUpload
@using LinkIt.BubbleSheetPortal.Web.ViewModels
@{
    Layout = null;
}
<script src="@Url.Content("~/Content/themes/Constellation/js/html5.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.js")" type="text/javascript"></script>
<script type="text/javascript" src='@Url.Content("~/Scripts/jquery.dataTables.rowReordering.js")'></script>
<script type="text/javascript" src="https://s3-us-west-2.amazonaws.com/linkit-utility/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>


@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleShowQTIItemBundle()
<div class="VirtualQuestion">
    @if (ViewBag.MessageInvaldVirualQuestion == null)
    {
        <div class="VirtualQuestion-header">
            <div class="VirtualQuestion-nav">
                <div class="VirtualQuestion-navbar">
                    @if (ViewBag.IsStudent != null)
                    {
                        <div class="VirtualQuestion-menu VirtualQuestion-menu-guidance">
                            <span class="VirtualQuestion-item">Guidance</span>
                            <ul class="VirtualQuestion-dropdown">
                                @if (!ViewBag.IsStudent)
                                {
                                    <li>
                                        <div class="VirtualQuestion-dropdown-item">
                                            <input type="checkbox" id="ShowTeacherRationale" />
                                            <label for="ShowTeacherRationale">Show Teacher Rationale</label>
                                        </div>
                                    </li>
                                }
                                <li>
                                    <div class="VirtualQuestion-dropdown-item">
                                        <input type="checkbox" id="ShowStudentGuidance" />
                                        <label for="ShowStudentGuidance">Show Student Guidance</label>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    }

                    @if (ViewBag.PassageList.Count > 0)
                    {
                        <div class="VirtualQuestion-menu">
                            <span class="VirtualQuestion-item">Reference</span>
                            <ul class="VirtualQuestion-dropdown">
                                @for (int i = 0; i < ViewBag.PassageList.Count; i++)
                                {
                                    var passage = (PassageViewModel)ViewBag.PassageList[i];
                                    var passageIndex = i + 1;
                                    if (passage.QtiRefObjectID > 0)
                                    {
                                        if (passage.RefNumber > 0)
                                        {
                                            <li>
                                                <a href="#" class="VirtualQuestion-dropdown-item js-get-passage"
                                                    data-index="@passageIndex"
                                                    data-refobjectid="@passage.QtiRefObjectID"
                                                    data-passage=""
                                                    data-passageid="@passage.Qti3pPassageID"
                                                    data-sourceid="@passage.Qti3pSourceID"
                                                    data-fileuploadpassageid="@passage.DataFileUploadPassageID"
                                                    data-fileuploadtypeid="@passage.DataFileUploadTypeID"
                                                    data-refnumber="@passage.RefNumber">
                                                    Reference: @passage.RefNumber
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(passage.Data))
                                            {
                                                var displayedLength = 10; // default length
                                                if (passage.Data.Length < displayedLength)
                                                {
                                                    displayedLength = passage.Data.Length;
                                                }

                                                <li>
                                                    <a href="#" class="VirtualQuestion-dropdown-item js-get-passage"
                                                        data-index="@passageIndex"
                                                        data-refobjectid="0"
                                                        data-passage="@passage.Data"
                                                        data-passageid="@passage.Qti3pPassageID"
                                                        data-sourceid="@passage.Qti3pSourceID"
                                                        data-fileuploadpassageid="@passage.DataFileUploadPassageID"
                                                        data-fileuploadtypeid="@passage.DataFileUploadTypeID"
                                                        data-refnumber="@passage.RefNumber">
                                                        Reference: @passage.Data.Substring(0, displayedLength) ...
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li>
                                                    <a href="#" class="VirtualQuestion-dropdown-item js-get-passage"
                                                        data-index="@passageIndex"
                                                        data-refobjectid="@passage.QtiRefObjectID"
                                                        data-passage=""
                                                        data-passageid="@passage.Qti3pPassageID"
                                                        data-sourceid="@passage.Qti3pSourceID"
                                                        data-fileuploadpassageid="@passage.DataFileUploadPassageID"
                                                        data-fileuploadtypeid="@passage.DataFileUploadTypeID"
                                                        data-refnumber="@passage.RefNumber">
                                                        Reference: @passage.QtiRefObjectID
                                                    </a>
                                                </li>
                                            }
                                        }

                                    }
                                    else
                                    {
                                        @*Qti3p passage -> only use data of the passage, because data is a link on S3*@
                                        if (passage.DataFileUploadPassageID > 0)
                                        {
                                            var uploadType = string.Empty;
                                            if (passage.DataFileUploadTypeID == (int)DataFileUploadTypeEnum.DataFileUpload)
                                            {
                                                uploadType = "Data File";
                                            }
                                            if (passage.DataFileUploadTypeID == (int)DataFileUploadTypeEnum.DataFileUploadProgressive)
                                            {
                                                uploadType = "Progress";
                                            }
                                            if (passage.DataFileUploadTypeID == (int)DataFileUploadTypeEnum.DataFileUploadCertica)
                                            {
                                                uploadType = "Mastery";
                                            }
                                            <li>
                                                <a href="#" class="VirtualQuestion-dropdown-item js-get-passage"
                                                    data-index="@passageIndex"
                                                    data-refobjectid="0"
                                                    data-passage="@passage.Data"
                                                    data-passageid="@passage.Qti3pPassageID"
                                                    data-sourceid="@passage.Qti3pSourceID"
                                                    data-fileuploadpassageid="@passage.DataFileUploadPassageID"
                                                    data-fileuploadtypeid="@passage.DataFileUploadTypeID"
                                                    data-refnumber="@passage.RefNumber">
                                                    @uploadType Reference Number: @passage.RefNumber
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            var uploadType = string.Empty;
                                            if (passage.Qti3pSourceID == (int)QTI3pSourceEnum.Mastery)
                                            {
                                                uploadType = "Mastery";
                                            }
                                            if (passage.Qti3pSourceID == (int)QTI3pSourceEnum.Progress)
                                            {
                                                uploadType = "Progress";
                                            }
                                            <li>
                                                <a href="#" class="VirtualQuestion-dropdown-item js-get-passage"
                                                    data-index="@passageIndex"
                                                    data-refobjectid="0"
                                                    data-passage="@passage.Data"
                                                    data-passageid="@passage.Qti3pPassageID"
                                                    data-sourceid="@passage.Qti3pSourceID"
                                                    data-fileuploadpassageid="@passage.DataFileUploadPassageID"
                                                    data-fileuploadtypeid="@passage.DataFileUploadTypeID"
                                                    data-refnumber="@passage.RefNumber">
                                                    @uploadType Reference : @passage.RefNumber
                                                </a>
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                        </div>
                    }
                    @if(ViewBag.QuestionGroupCommon != null) {
                        <div class="VirtualQuestion-menu">
                            <a href="#" class="VirtualQuestion-dropdown-item js-get-question-group"
                            >
                                Question Group
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    <div class="VirtualQuestion-content">
        <div class="VirtualQuestion-question-group hide">
            <div class="VirtualQuestion-passage-header">
                <h4>Question Group</h4>
                <span class="VirtualQuestion-passage-close js-close-question-group"> x</span>
            </div>
            <div class="VirtualQuestion-question-group-content">
                @Html.Raw(@ViewBag.QuestionGroupCommon)
            </div>
        </div>
        <div class="VirtualQuestion-passages hide"></div>

        <div class="VirtualQuestion-passage-loading hide"><p>Loading Question Group</p></div>
        <div class="VirtualQuestion-xml">
            <div id="divQtiItemDetail" class="u-clearfix">
                @if (ViewBag.MessageInvaldVirualQuestion != null)
                {
                    @Html.Raw(ViewBag.MessageInvaldVirualQuestion)
                }
                else
                {
                    @Html.Raw(ViewBag.HtmlContent)
                }
            </div>
        </div>
    </div>

</div>
<div id="hdDivCorrectanswer" style="display: none">@Html.Raw(ViewBag.CorrectAnswer)</div>
<div id="glossaryMessage" class="GlossaryMessage" style="display: none;">
    <div class="block-border">
        <div class="block-content">
            <h3 class="GlossaryMessage__title"></h3>
            <div class="GlossaryMessage__content"></div>
        </div>
    </div>
</div>
<div id="guidanceRationale" style="display: none;"></div>
<div id="hdDivXmlContnet" style="display: none">
    @Html.Raw(ViewBag.XmlContent)
</div>
<script type="text/javascript">

    var adjustAnswerText = true;
    var numberAnswer = false;
    var correctAnswer = '';
    $(function () {
        loadContent();
        LoadImages_QtiItemDetail('#divQtiItemDetail');
        $("#hdDivXmlContnet").find('.mainbody').each(function () {
            adjustUIforMainBody();
        });
        $("#hdDivXmlContnet").find('.mainBody').each(function () {//sometime it's mainBody
            adjustUIforMainBody();
        });
        $("#hdDivXmlContnet").find('div[stylename="answer"] p').each(function () {

            adjustAnswerText = false;
        });
        if (adjustAnswerText == true) {
            //adjust UI for div answer without p wrap it

            $("#divQtiItemDetail").find('.simpleChoiceMainBody').each(function () {
                if (numberAnswer) {
                    $(this).attr("class", "answerText2");
                    $(this).find('div[stylename="answer"]').first().attr("class", "answerTextIndent");
                } else {
                    $(this).attr("class", "answerText");
                    $(this).find('div[stylename="answer"]').first().attr("class", "answerTextIndent");
                }
            });
        }
        $("#divQtiItemDetail").find('span[class="math-tex"]').each(function (index, value) {
            var span = $(value);
            span.css('display', 'inline-block');
        });

        AdjustQtiItemDetail();

        var html = $('#divQtiItemDetail').html();
        $('#divQtiItemDetail').html(html);
        if ($('.rationale').length < 0 && $('.guidance_rationale').length < 0) {
            $('#ShowTeacherRationale').hide();
        } else {
            $('#ShowTeacherRationale').show();
        }

        if ($('.guidance').length < 0 && $('.guidance_rationale').length < 0) {
            $('#ShowStudentGuidance').hide();
        } else {
            $('#ShowStudentGuidance').show();
        }
    });

    function adjustUIforMainBody() {
        $(".simpleChoice").each(function (index, value) {
            var divSimpleChoice = value;
            if (divSimpleChoice != null) {
                if (divSimpleChoice.attributes["identifier"] != null) {
                    var identifier = divSimpleChoice.attributes["identifier"];
                    if (isNumber(identifier.nodeValue))//a number
                    {
                        $(divSimpleChoice).addClass("simpleChoice2MainBody");
                        $(divSimpleChoice).removeClass("simpleChoice2");
                    } else {
                        $(divSimpleChoice).addClass("simpleChoiceMainBody");
                        $(divSimpleChoice).removeClass("simpleChoice");
                    }
                }
            }

        });
    }

    function loadContent() {
        $("#hdDivXmlContnet").find('responseDeclaration').each(function () {
            var identifier = $(this).attr('identifier');
            $(this).find('correctResponse value').each(function () {
                correctAnswer += '-' + identifier + ':' + $(this).text() + '-,';
            });

            if (correctAnswer == null || correctAnswer == '') {
                $(this).find('correctresponse value').each(function () {//sometime correctResponse is correctresponse
                    correctAnswer += '-' + identifier + ':' + $(this).text() + '-,';
                });
            }
        });


        $(".simpleChoice").each(function (index, value) {
            var responseidentifier = $(value.parentNode).attr('responseidentifier');
            if (responseidentifier == null) {
                responseidentifier = '';
            }
            var divSimpleChoice = value;
            if (divSimpleChoice != null) {
                if (divSimpleChoice.attributes["identifier"] != null) {
                    var identifier = divSimpleChoice.attributes["identifier"];
                    if (isNumber(identifier.nodeValue))//a number answer
                    {
                        $(divSimpleChoice).addClass("simpleChoice2");
                        numberAnswer = true;
                    } else {
                        $(divSimpleChoice).addClass("simpleChoice");
                    }
                }
            }
        });

         $('.js-get-question-group').on('click' ,function() {
             console.log('aaaa');
            $('.VirtualQuestion-question-group').removeClass('hide');
        });
        $('.js-close-question-group').on('click' ,function() {
            $('.VirtualQuestion-question-group').addClass('hide')
        });
    }


    function isNumber(n) {
        try {
            var x = parseInt(n);
            return !isNaN(x);
        }
        catch (e) {
            return false;
        }
    }

    function AdjustQtiItemDetail() {
        //sometime the answer has special xmlcontent structure //LNKT-6197
        $("#divQtiItemDetail .answerText").not('.choiceInteraction[variablepoints] .answerText').each(function (index, value) {
            AdjustQtiItemAnswers(value);
        });

        $(".itemBody li[identifier]").not('.choiceInteraction[variablepoints] li[identifier]').each(function (index, value) {
            AdjustQtiItemAnswers(value);
        });

        $(".itemBody li[identifier]").not('.choiceInteraction[variablepoints] li[identifier]').each(function (index, value) {
            AdjustQtiItemAnswers1(value);
        });
    }

    function AdjustQtiItemAnswers(item) {
        var divAnswerText = item;
        //add the image checkbox for each answer
        var identifier = divAnswerText.attributes["identifier"];
        var src = '';
        var responseidentifier = $(item.parentNode).attr('responseidentifier');
        if (responseidentifier == null) {
            responseidentifier = '';
        }
        if (identifier != null) {
            var iconCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-check-16.png")';
            var iconUnCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-uncheck-16.png")';
            var idx = correctAnswer.indexOf('-' + responseidentifier + ':' + identifier.nodeValue + '-,');
            var img = '';
            if (idx >= 0) {
                img = '<img src="' + iconCheck + '" width="14" height="14" style="margin-right: 6px;margin-right:15px">';
                src = iconCheck;
            } else {
                img = '<img src="' + iconUnCheck + '" width="14" height="14" style="margin-right: 6px;margin-right:15px">';
                src = iconUnCheck;
            }

            src = src.trim();
            if (src.length > 1) {
                src = src.substring(1, src.length); //remove the firt character '/'
            }
            var divAnswer = $(divAnswerText).children().first();
            if (divAnswer != null) {
                //check if the checkbox is existing or not
                var html = divAnswer.html();
                var $html = $('<div/>').html(html);

                var imgCheckbox = $html.filter('img[src="' + src + '"]').first();

                if (imgCheckbox.length == 0) {
                    //sometime src starts with '/', check again to make sure
                    imgCheckbox = $html.filter('img[src="/' + src + '"]').first();
                    if (imgCheckbox.length == 0) {
                        //sometime filter does not work when html is wrapped by tag p
                        if (!!html && html.indexOf(src) < 0) {
                            html = img + html;
                            divAnswer.html(html);
                        }
                    }
                }
            }
        }
    }

    function AdjustQtiItemAnswers1(item) {
        var divAnswerText = item;
        //add the image checkbox for each answer
        var identifier = divAnswerText.attributes["identifier"];
        var src = '';
        var responseidentifier = $(item.parentNode).attr('responseidentifier');
        if (responseidentifier == null) {
            responseidentifier = '';
        }

        if (identifier != null) {
            var iconCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-check-16.png")';
            var iconUnCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-uncheck-16.png")';
            var idx = correctAnswer.indexOf('-' + responseidentifier + ':' + identifier.nodeValue + '-,');
            var img = '';
            if (idx >= 0) {
                img = '<img src="' + iconCheck + '" width="14" height="14" style="margin-right: 6px;margin-right:15px">';
                src = iconCheck;
            } else {
                img = '<img src="' + iconUnCheck + '" width="14" height="14" style="margin-right: 6px;margin-right:15px">';
                src = iconUnCheck;
            }

            src = src.trim();
            if (src.length > 1) {
                src = src.substring(1, src.length); //remove the firt character '/'
            }

            var html = $(divAnswerText).html();
            var $html = $('<div/>').html(html);

            var imgCheckbox = $html.filter('img[src="' + src + '"]').first();

            if (imgCheckbox.length == 0) {
                //sometime src starts with '/', check again to make sure
                imgCheckbox = $html.filter('img[src="/' + src + '"]').first();
                if (imgCheckbox.length == 0) {
                    //sometime filter does not work when html is wrapped by tag p
                    if (!!html && html.indexOf(src) < 0) {
                        html = '<div style="float:left;margin-top:5px">' + img + '</div>' + html;
                        $(divAnswerText).html(html);
                    }
                }
            }
        }
    }
    function replaceListByOl() {
        $("#divQtiItemDetail list[liststyletype='decimal']").each(function (index, value) {
            var html = '<ol style="list-style-type:decimal;">';
            $(value).find('li').each(function (idx, li) {
                html += $(li).outerHTML();
            });
            html += '</ol>';
            $(value).html(html);
        });
    }

    function LoadImages_QtiItemDetail(containerSelector) {
        $(containerSelector).find("img").each(function () {
            var image = $(this);
            var imageUrl = image.attr("src");
            if (IsNullOrEmpty(imageUrl)) {
                imageUrl = image.attr("source");
            }
            if (IsNullOrEmpty(imageUrl)) imageUrl = '@Url.Content("Content/images/emptybg.png")';

            image.attr("source", '');
            if (imageUrl.toLowerCase().indexOf("http") == 0) {
                image.attr("src", imageUrl);
                return;
            }

            if (imageUrl == "Content/images/emptybg.png") {
                image.attr("src", imageUrl);
                return;
            }
        });
    }

    function IsNullOrEmpty(value) {
        return typeof (value) === "undefined" || value == null || $.trim(value) == '';
    }

</script>
<script type="text/javascript">
    jQuery.fn.outerHTML = function (s) {
        return (s)
        ? this.before(s).remove()
        : jQuery("<p>").append(this.eq(0).clone()).html();
    };
</script>
<script>
    var configUrl = {
        loadAudioUrl: window.location.protocol + "//" + window.location.hostname + '@Url.Action("GetAudio","PassageEditor")',
        showPassageDetail: '@Url.Action("ShowPassageDetail", "ShowQtiItem")'
    };
</script>

@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.ScriptShowQTIItemBundle()

<script>
    $(function () {
        MathJax.Hub.Queue(['Typeset', MathJax.Hub]);
        MathJax.Hub.Queue(function () {
            MathJax.Hub.Queue(['Typeset', MathJax.Hub]);
            MathJax.Hub.Rerender()
        });
    });

</script>
