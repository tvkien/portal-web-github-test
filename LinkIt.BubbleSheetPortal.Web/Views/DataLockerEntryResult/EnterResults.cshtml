@model  LinkIt.BubbleSheetPortal.Models.DataLocker.EnterResultModel
@{
    ViewBag.Title = "Enter Results";
}

<script src="@Url.Content("~/Scripts/jquery.listSplitter.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.ba-outside-events.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/moment.min.js")" type="text/javascript"></script>

<link rel="stylesheet" href="/Content/css/vue-components/vue-modal.css">
<style type="text/css">
    .positionAdd {
        position: relative;
        right: -6px;
        top: 26px;
    }

    button {
        margin-left: 30px;
    }

    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay {
        background: #2b2b2d !important;
    }

    #selectTest {
        border-color: transparent;
    }
</style>

<article class="container_12">
    <section class="grid_12">
        <div id="generateContent" class="block-border">
            <form id="enterResultForm" class="block-content form bubbleSheetSelector">
                <h1>ENTER RESULTS</h1>
                <ul style="display: none" id="error-messages" class="message error"></ul>
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    <fieldset id="publisherContent" class="grey-bg">
                        <legend>Select State/@LabelHelper.DistrictLabel</legend>
                        <div class="columns">
                            <div class="colx2-left">
                                <div class="mb-3">
                                    <label>State</label>
                                    <select id="selectState"></select>
                                </div>
                            </div>
                            <div class="colx2-right">
                                <div class="mb-3 block-content-dropdown-marquee">
                                    <label>@LabelHelper.DistrictLabel</label>
                                    <div class="block-text-name">
                                        <select id="selectDistrict"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                }
                <fieldset class="grey-bg">
                    <legend>@LocalizeHelper.Localized("EnterResult.Test")</legend>

                    <div class="columns">
                        <div class="colx2-left">
                            <div class="mb-3">
                                <!-- EnterResult.Grade -->
                                <label>@LocalizeHelper.Localized("EnterResult.Grade")</label>
                                <select id="selectGrade"></select>
                            </div>
                            <div class="mb-3">
                                <label>@LocalizeHelper.Localized("EnterResult.Subject")</label>
                                <select id="selectSubject"></select>
                            </div>
                        </div>
                        <div class="colx2-right">
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>@LocalizeHelper.Localized("EnterResult.Bank")</label>

                                <div class="block-text-name">
                                    <select id="selectBank"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>@LocalizeHelper.Localized("EnterResult.Test")</label>
                                <div class="block-text-name">
                                    <select id="selectTest"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                                <div style="position: relative; bottom: 30px;left:150px;"><button class="float-right" id="btnPreviewForm" type="button" disabled="disabled">Preview Form</button></div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="clear"></div>
                <fieldset class="grey-bg">
                    <legend>Select Students</legend>
                    <div id="divSingleClass" class="columns">
                        <div class="colx2-left">
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>@LocalizeHelper.Localized("EnterResult.School")</label>

                                <div class="block-text-name">
                                    <select id="selectSchool"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            @if (Model.CanSelectTeachers || Model.IsSchoolAdmin)
                            {
                                <div class="mb-3 block-content-dropdown-marquee">
                                    <label>@LocalizeHelper.Localized("EnterResult.Teacher")</label>

                                    <div class="block-text-name">
                                        <select id="selectTeacher"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                        <div class="colx2-right">
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>
                                    @LocalizeHelper.Localized("EnterResult.Term")
                                </label>

                                <div class="block-text-name">
                                    <select id="selectTerm"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>@LocalizeHelper.Localized("EnterResult.Class")</label>

                                <div class="block-text-name">
                                    <select id="selectClass"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="studentContent" style="display: none">
                        <div class="tabs-content u-m-b-15">
                            <div class="columns" id="studentsList">
                                <ul id="students" class="generate-student-list with-icon icon-user"></ul>
                            </div>
                            <div class="clear"></div>
                        </div>
                        <div>
                            <button type="button" name="select-all" onclick="selectAllStudents()" class="u-m-l-0">Select All</button>
                            <button type="button" name="select-none" onclick="selectNoStudents()">Select None</button>
                            <button type="button" name="invert-select" onclick="invertSelectedStudents()">Invert Selection</button>
                        </div>
                    </div>
                    <div id="divResultDdate" class="columns" style="display: none">
                        <div class="colx2-right">
                            <label>Result Date</label>
                            <div style="position: relative">
                                <select id="selectResultDate"></select>
                            </div>
                        </div>
                    </div>

                    <div id="divMultiClass" style="display: none;">
                    </div>
                </fieldset>
                <button class="float-right" id="btnEnterResult" type="button" disabled="disabled" style="margin-right:25px;">Enter Results</button>
                <div class="clear"></div>
                <br />

                <div id="divBubbleSheetPrint">
                </div>
                <input type="hidden" id="studentsIdSelectedString" name="studentsIdSelectedString" />
            </form>

            @Html.Partial("_EnterResultAutoSaveModal")
        </div>
    </section>
</article>

<input type="hidden" id="testType" value="" />
<div class="columns" id="studentsTemplate" style="display: none">
    <ul id="students" class="generate-student-list with-icon icon-user"></ul>
</div>

@section scripts {
    <script src="/Scripts/DataLockerEntryResult/DataLockerEnterResult.js"></script>
    <script type="text/javascript">
        var singleClassCheckbox = $('#radioSingleClass');
        var groupPrintingCheckbox = $('#radioMultiClass');
        var genericSheetCheckbox = $('#radioGenericSheet');
        $(function() {
            $('#selectDistrict').marquee();
            $('#selectBank').marquee();
            $('#selectTest').marquee();
            $('#selectSchool').marquee();
            $('#selectTeacher').marquee();
            $('#selectTerm').marquee();
            $('#selectClass').marquee();
            @if (!Model.IsPublisher && Model.IsUseTestExtract)
            {
                <text>
                    $('#hdTestExtractValue').val('1');
                    $('#idTestExtract').show();
                </text>
            }

            $('.datalocker').addClass('current');
            $('#datalockerEnterResult').addClass('current');
            disablebtnEnterResult();
            $(document).ready(function() {
                $(".openDialog").live("click", function(e) {
                    e.preventDefault();
                    $("<div></div>")
                        .addClass("dialog")
                        .attr("id", $(this)
                            .attr("data-dialog-id"))
                        .appendTo("body")
                        .dialog({
                            title: $(this).attr("data-dialog-title"),
                            close: function() { $(this).remove(); },
                            modal: true,
                            width: 1000,
                            resizable: false
                        })
                        .load(this.href, function() {});
                });

                $(".close").live("click", function(e) {
                    e.preventDefault();
                });

                $("#btnCancel").live("click", function(e) {
                    e.preventDefault();
                    $(".dialog").dialog("close");
                });

                $("#btnRemove").live("click", function(e) {
                    e.preventDefault();
                    RemoveClassInGroupSelected();
                });

                $("#btnAddClass").live("click", function(e) {
                    e.preventDefault();
                    AddClassToGroup();
                });

                $("#btnContinue").live("click", function(e) {
                    e.preventDefault();
                    ValidGroupName();
                });
            });

            @if (Model.IsPublisher || Model.IsNetworkAdmin)
            {
                <text>
        $('#selectState').change(function () {
            $('#idTestExtract').hide();
            $('#hdTestExtractValue').val('-1');

            $('#selectDistrict').empty();

            $('#selectGrade').empty();
            $('#selectSubject').empty();
            $('#selectBank').empty();
            $('#selectTest').empty();
            $('#selectSchool').empty();
            $('#selectTeacher').empty();
            $('#selectTerm').empty();
            $('#selectClass').empty();

            $('#divResultDdate').hide();
            $('#selectResultDate').empty();

            $('#studentContent').hide();
            $('#studentsList').html($('#studentsTemplate').html());
            if ($('#selectState').val() != 'select') {
                populateDistricts();
            }
            CheckValidToAssign();
        });

        function populateDistricts() {
            $('#selectDistrict').empty();
            var stateValue = $('#selectState').val();
            if (stateValue != 'select') {
                if ('@Model.IsPublisher' === 'True') {
                    $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItems($('#selectDistrict'), districts);
                        checkEntryResultFilterDistrict();
                    });
                }
                if ('@Model.IsNetworkAdmin' === 'True') {
                    $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItems($('#selectDistrict'), districts);
                        checkEntryResultFilterDistrict();
                       });
                    }
            }
        }

        function checkEntryResultFilterDistrict() {
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null && JSON.parse(filter).districtID != null) {
                $('#selectDistrict').val(JSON.parse(filter).districtID).trigger('change');
             }
        }
        </text>
            }
            @if (Model.IsAdmin || Model.CanSelectTeachers || Model.IsSchoolAdmin)
            {
                <text>
        $('#selectSchool').change(function () {
            $('#selectTeacher').empty();
            $('#selectTerm').empty();
            $('#selectClass').empty();
            $('#selectResultDate').empty();
            $('#studentContent').hide();
            if ($('#selectSchool').val() != 'select') {
                populateTeachers();
            }
            CheckValidToAssign();
        });

        $('#selectTeacher').change(function () {
            $('#selectClass').empty();
            $('#selectTerm').empty();
            $('#selectResultDate').empty();
            $('#studentContent').hide();
            $('#studentsList').html($('#studentsTemplate').html());
            populateTermsByTeacherAndSchool();
            CheckValidToAssign();
        });

        function populateTermsByTeacherAndSchool() {
            $('#selectTerm').empty();
            var teacherValue = $('#selectTeacher').val();
            var schoolValue = $('#selectSchool').val();
            if (teacherValue != 'select') {
                $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: teacherValue, schoolId: schoolValue }, function (terms) {
                    addDefaultOption($('#selectTerm'), "@LocalizeHelper.Localized("EnterResult.Term")");
                    addSelectListItems($('#selectTerm'), terms);
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null && JSON.parse(filter).termID != null) {
                        $('#selectTerm').val(JSON.parse(filter).termID).trigger('change');
                    }
                });
            }
        }
        </text>
            }
            else
            {
                <text>
        $('#selectSchool').change(function () {
            $('#studentContent').hide();
            $('#studentsList').html($('#studentsTemplate').html());
            $('#selectClass').empty();
            $('#selectTerm').empty();
            $('#selectResultDate').empty();
            var schoolValue = $('#selectSchool').val();
            if (schoolValue != 'select') {
                $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: null, schoolId: schoolValue }, function (terms) {
                    populateTerms(terms);
                });
            }
            CheckValidToAssign();
        });

        </text>
            }

            @if (Model.IsPublisher)
            {
                <text>
        $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
            populateStates(states);
        });
        </text>
            }
            else
            {
                if (Model.IsNetworkAdmin)
                {
                    <text>
        $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
            populateStates(states);
        });

        </text>
                }
                else
                {
                    <text>
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', function (schools) {
            populateSchools(schools);
            var schoolValue = $('#selectSchool').val();
            if (schoolValue != 'select') {
                $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: null, schoolId: schoolValue }, function (terms) {
                    $('#selectTerm').empty();
                    populateTerms(terms);
                });
            }
        });
        $.get('@Url.Action("GetGradesFormBankByDistrictId", "PopulateTest")', { districtId: '-1' }, function (grades) {
            populateGrades(grades);
        });


        </text>
                }
            }

            function populateGradesByDistrict() {
                $('#selectGrade').empty();
                $('#selectSubject').empty();
                var districtValue = $('#selectDistrict').val();
                if (districtValue != 'select') {
                    $.get('@Url.Action("GetGradesFormBankByDistrictId", "PopulateTest")', { districtId: districtValue }, function(grades) {
                        populateGrades(grades);
                    });
                }
            }

            $('#selectDistrict').change(function () {

                $('#selectGrade').empty();
                $('#selectSubject').empty();
                $('#selectBank').empty();
                $('#selectTest').empty();

                $('#selectSchool').empty();
                $('#selectTeacher').empty();
                $('#selectTerm').empty();
                $('#selectClass').empty();

                $('#divResultDdate').hide();
                $('#selectResultDate').empty();

                $('#studentContent').hide();
                $('#studentsList').html($('#studentsTemplate').html());
                populateSchoolsByDistrict();
                populateGradesByDistrict();
                CheckValidToAssign();

                if (checklLoadDirtyData) {
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null) {
                        localStorage.removeItem("EntryResultFilter");
                    }
                }
            });

            $('#selectGrade').change(function () {
                $('#selectResultDate').empty();
                $('#divResultDdate').hide();
                populateSubjects();
                CheckValidToAssign();
            });

            $('#selectSubject').change(function () {
                $('#selectResultDate').empty();
                $('#divResultDdate').hide();
                populateBanks();
                CheckValidToAssign();
            });

            $('#selectBank').change(function () {
                $('#selectResultDate').empty();
                $('#divResultDdate').hide();
                populateTests();
                CheckValidToAssign();
            });

            $('#selectTerm').change(function() {
                populateClasses();
                CheckValidToAssign();
            });

            $('#selectClass').change(function () {
                var isMultiDate = $('#selectTest option:selected').attr('ismultidate');
                if (isMultiDate === 'true') {
                    $('#studentContent').hide();
                    $('#divResultDdate').show();
                    populateResultDate();
                } else {
                    $('#divResultDdate').hide();
                    if ($(this).val() != '' && $(this).val() != 'select') {
                        populateStudents();
                    } else {
                        $('#studentContent').hide();
                    }
                }
                CheckValidToAssign();
            });

            $('#selectResultDate').change(function () {
                CheckValidToAssign();
            });

            $('#btnEnterResult').click(function(e) {
                $("#error-messages").html('');
                $("#error-messages").hide();
                if ($('#selectTest').val() == 'select') {
                    CustomAlert('Please select test.');
                    return;
                }
                if ($('#selectClass').val() == 'select') {
                    CustomAlert('Please select class.');
                    return;
                }
                var isMultiDate = $('#selectTest option:selected').attr('ismultidate');
                saveFilterInLocalStorage(isMultiDate);
                if (isMultiDate === 'true') {
                    if ($('#selectResultDate').val() == 'select') {
                        CustomAlert('Please select result date.');
                        return;
                    }
                    redirectToEntryMultiDateResult();
                } else {
                    setStudentsIdSelectedString();

                    if ($('#studentsIdSelectedString').val() == '') {
                        CustomAlert('Please select student.');
                        return;
                    }
                    $('#btnEnterResult').disableBt();
                    redirectToEntryResult("EntryResults");
                }
            });

            $('#btnPreviewForm').click(function (e) {
                var isMultiDate = $('#selectTest option:selected').attr('ismultidate');
                saveFilterInLocalStorage(isMultiDate);
                redirectToPreviewForm();
            });
        });

        function saveFilterInLocalStorage(isMultiDate) {
            var stateId = $('#selectState').val();
            var districtId = $('#selectDistrict').val();
            var gradeId = $('#selectGrade').val();
            var subjectId = $('#selectSubject').val();
            var bankId = $('#selectBank').val();
            var testId = $('#selectTest').val();
            var schoolId = $('#selectSchool').val();
            var teacherId = $('#selectTeacher').val();
            var termId = $('#selectTerm').val();
            var classId = $('#selectClass').val();
            var resultDateId = $('#selectResultDate').val();

            var filter = {
                stateID: stateId,
                districtID: districtId,
                gradeID: gradeId,
                subjectID: subjectId,
                bankID: bankId,
                testID: testId,
                schoolID: schoolId,
                teacherID: teacherId,
                termID: termId,
                classID: classId,
                resultDateID: resultDateId,
                isMultiDate: isMultiDate
            };

            localStorage.setItem("EntryResultFilter", JSON.stringify(filter));
        }

        function redirectToEntryResult() {
            var districtValue = $('#selectDistrict').val();
            if (districtValue == undefined)
                districtValue = 0;
            var schoolValue = $('#selectSchool').val();
            var schoolId = 0;
            if (schoolValue != 'select' && schoolValue != undefined) {
                schoolId = schoolValue;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("EntryResultTempDatas")',
                data: {
                    virtualTestId: $('#selectTest').val(),
                    classId: $('#selectClass').val(),
                    schoolId: $('#selectSchool').val(),
                    teacherId: $('#selectTeacher').val(),
                    studentsIdSelectedString: $('#studentsIdSelectedString').val(),
                    districtId: districtValue,
                    isOldUI: true
                },
                success: function () {
                    var url = '@Url.Action("EntryResults")';
                    window.location.href = url;
                }
            });
        }
        function redirectToPreviewForm() {
            var districtValue = $('#selectDistrict').val();
            if (districtValue == undefined)
                districtValue = 0;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EntryResultTempDatas")',
                data: {
                    virtualTestId: $('#selectTest').val(),
                    classId: $('#selectClass').val(),
                    studentsIdSelectedString: $('#studentsIdSelectedString').val(),
                    districtId: districtValue,
                    isOldUI: true
                },
                success: function () {
                    var url = '@Url.Action("PreviewForm", "DataLockerEntryResult")';
                    window.location.href = url;
                }
            });
        }

        function redirectToEntryMultiDateResult() {
            var districtValue = $('#selectDistrict').val();
            if (districtValue == undefined)
                districtValue = 0;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("EntryResultTempDatas")',
                data: {
                    districtId: districtValue,
                    gradeId: $('#selectGrade').val(),
                    bankId: $('#selectBank').val(),
                    virtualTestId: $('#selectTest').val(),
                    classId: $('#selectClass').val(),
                    schoolId: $('#selectSchool').val(),
                    teacherId: $('#selectTeacher').val(),
                    resultDate: $('#selectResultDate').val()
                },
                success: function () {
                    var url = '@Url.Action("EntryResults", "DataLockerEntryMultiDateResult")';
                    window.location.href = url;
                }
            });
        }

        function setStudentsIdSelectedString() {
            var studentsIdSelected = [];
            var studentsIdSelectedString = '';
            $(".student-item[isSelected=yes]").each(function() {
                studentsIdSelected.push($(this).attr('studentId'));
                studentsIdSelectedString += $(this).attr('studentId') + ',';
            });

            $('#studentsIdSelectedString').val(studentsIdSelectedString);
        }

        function GetFormData() {
            var studentsIdSelected = [];
            var studentsIdSelectedString = '';
            $(".student-item[isSelected=yes]").each(function() {
                studentsIdSelected.push($(this).attr('studentId'));
                studentsIdSelectedString += $(this).attr('studentId') + ',';
            });
            $('#studentsIdSelectedString').val(studentsIdSelectedString);

            var data = {
                TestId: $('#selectTest').val(),
                ClassId: $('#selectClass').val(),
                studentsIdSelectedString: studentsIdSelectedString,
            };

            return data;
        }

        function disablebtnEnterResult() {
            $('#selectTest').change(function () {
                var isMultiDate = $('#selectTest option:selected').attr('ismultidate');
                if (isMultiDate === 'true') {
                    $('#divResultDdate').show();
                    $('#studentContent').hide();
                    populateResultDate();
                } else {
                    $('#divResultDdate').hide();
                    $('#selectResultDate').empty();

                    var classId = $('#selectTest').val();
                    if (classId != 'select' && classId != '' && classId > 0) {
                        if ($('#studentContent').css('display') === 'none') {
                            $('#studentContent').show();
                            populateStudents();
                        }
                    }
                }
                CheckValidToAssign();
            });
        }

        function CheckValidToAssign() {
            // Check Selected Test
            var testId = $('#selectTest').val();
            if (testId == 'select' || testId == '' || testId == null) {
                $('#btnEnterResult').attr("disabled", "disabled");
                $('#btnPreviewForm').attr("disabled", "disabled");
                return;
            }
            $('#btnPreviewForm').removeAttr("disabled");
            var classId = $('#selectClass').val();
            if (classId == 'select' || classId == '' || classId == null) {
                $('#btnEnterResult').attr("disabled", "disabled");
                return;
            }

            var isMultiDate = $('#selectTest option:selected').attr('ismultidate');
            if (isMultiDate === 'true') {
                var resultDate = $('#selectResultDate').val();
                if (resultDate == 'select' || resultDate == '' || resultDate == null) {
                    $('#btnEnterResult').attr("disabled", "disabled");
                    return;
                }
            } else {
                var studentsIdSelected = [];
                $(".student-item[isSelected=yes]").each(function () {
                    studentsIdSelected.push($(this).attr('studentId'));
                });

                if (studentsIdSelected.length === 0) {
                    $('#btnEnterResult').attr("disabled", "disabled");
                    return;
                }
            }

            $('#btnEnterResult').removeAttr("disabled");
        }

        function populateSchoolsByDistrict() {
            $('#selectSchool').empty();
            var districtValue = null;
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
                var districtID = JSON.parse(filter).districtID;
                districtValue = districtID;
            } else {
                 districtValue = $('#selectDistrict').val();
            }

            if (districtValue != 'select') {
                $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function(schools) {
                    populateSchools(schools);
                });
            }
        }

        function populateTeachers() {
            $('#selectTeacher').empty();
            var schoolValue = $('#selectSchool').val();
            if (schoolValue != 'select') {
                $.get('@Url.Action("GetTeachers", "PopulateSchoolTeacher")', { schoolId: schoolValue, hasTermOnly: 'True', isIncludeDistrictAdmin: true }, function(teachers) {
                    addDefaultOption($('#selectTeacher'), "@LocalizeHelper.Localized("EnterResult.Teacher")");
                    addSelectListWithDefaultValue($('#selectTeacher'), teachers, 'select', function(item) {
                        return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
                    });
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null) {
                        var teacherID = JSON.parse(filter).teacherID;
                        $('#selectTeacher').val(teacherID).trigger('change');
                    }
                });
            }
        }

        function populateStates(states) {
            addDefaultOption($('#selectState'), "State");
            addSelectListItems($('#selectState'), states);
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
               var stateID = JSON.parse(filter).stateID;
               $('#selectState').val(stateID).trigger('change');
            }
        }

        function populateDistricts(districts) {
            addDefaultOption($('#selectDstrict'), "@LabelHelper.DistrictLabel");
            addSelectListItems($('#selectDistrict'), districts);
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
                var districtID = JSON.parse(filter).districtID;
                $('#selectDistrict').val(districtID).trigger('change');
            }
        }

        function populateSchools(schools) {
            addDefaultOption($('#selectSchool'), "@LocalizeHelper.Localized("EnterResult.School")");
            addSelectListItems($('#selectSchool'), schools);
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
                 var schoolID = JSON.parse(filter).schoolID;
                 $('#selectSchool').val(schoolID).trigger('change');
            }
        }

        function populateTerms(terms) {
            addDefaultOption($('#selectTerm'), "@LocalizeHelper.Localized("EnterResult.Term")");
            addSelectListItems($('#selectTerm'), terms);
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
                var termID = JSON.parse(filter).termID;
                $('#selectTerm').val(termID).trigger('change');
            }
        }

        function populateGrades(grades) {
            $('#selectGrade').empty();
            //addDefaultOption($('#selectGrade'), "@LabelHelper.GradeLabel");
            addDefaultOption($('#selectGrade'), "@LocalizeHelper.Localized("EnterResult.Grade")");
            addSelectListItems($('#selectGrade'), grades);
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
                var gradeID = JSON.parse(filter).gradeID;
                $('#selectGrade').val(gradeID).trigger('change');
            }
        }

        function populateSubjects() {
            resetSubjects();
            var gradeValue = $('#selectGrade').val();
            var districtValue = 0;
            if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() != 'select') {
                districtValue = $('#selectDistrict').val();
            }
            if (gradeValue !== 'select') {
                $.get('@Url.Action("GetSubjectsGroupedByNameFormBank", "PopulateTest")', { gradeId: gradeValue, districtId: districtValue }, function(subjects) {
                    addDefaultOption($('#selectSubject'), "@LocalizeHelper.Localized("EnterResult.Subject")");
                    addSelectListItems($('#selectSubject'), subjects);
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null) {
                        var subjectID = JSON.parse(filter).subjectID;
                        $('#selectSubject').val(subjectID).trigger('change');
                    }
                });
            }
        }

        function populateBanks() {
            resetBanks();
            var subjectId = $('#selectSubject').val();
            //var subjectValue = $("#selectSubject option:selected").text();
            var districtValue = 0;
            if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() !== 'select') {
                districtValue = $('#selectDistrict').val();
            }
            var gradeValue = $('#selectGrade').val();
            if (subjectId !== 'select') {
                $.get('@Url.Action("LoadBankByMultipleSubjectIds", "DataLockerEntryResult")', { SubjectIds: subjectId, districtId: districtValue, gradeId: gradeValue }, function(banks) {
                    addDefaultOption($('#selectBank'), "@LocalizeHelper.Localized("EnterResult.Bank")");
                    addSelectListItems($('#selectBank'), banks);
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null) {
                        var bankID = JSON.parse(filter).bankID;
                        $('#selectBank').val(bankID).trigger('change');
                    }
                });
            }
        }



    function removeEntryResultFilter() {
        var classID = $('#selectClass').val();
        var testID = $('#selectTest').val();
        if (classID != 'select' && classID && classID != null && classID != '-1' && testID != 'select' && testID && testID != null && testID != '-1') {
            var filter = localStorage.getItem("EntryResultFilter");
            if (filter != null) {
                localStorage.removeItem("EntryResultFilter");
            }
        }
    }

        function removeEntryResultFilterForm() {
            var testID = $('#selectTest').val();

            if (testID != 'select' && testID && testID != null && testID != '-1') {
                var filter = localStorage.getItem("EntryResultFilter");
                if (filter != null) {
                    localStorage.removeItem("EntryResultFilter");
                }
            }
        }

         function populateTests() {
            var bankValue = $('#selectBank').val();
            var filter = localStorage.getItem("EntryResultFilter");
            if (bankValue != null && bankValue !== 'select') {
                $.get('@Url.Action("GetTests", "DataLockerEntryForm")', { bankId: bankValue }, function(tests) {
                    addDefaultOption($('#selectTest'), "@LocalizeHelper.Localized("EnterResult.Test")");
                    addSelectListItemTests($('#selectTest'), tests);
                    if (filter != null) {
                        var testID = JSON.parse(filter).testID;
                        $('#selectTest').val(testID).trigger('change');
                        $('#btnPreviewForm').removeAttr("disabled");
                        checklLoadDirtyData = true;
                        setTimeout(function () {
                            removeEntryResultFilterForm();
                        }, 3000)
                    }
                });
            }
        }

        function populateClasses() {
            $('#studentsList').html($('#studentsTemplate').html());
            var schoolValue = $('#selectSchool').val();
            var termValue = $('#selectTerm').val();
            var teacherValue = $('#selectTeacher').val();
            if (termValue && termValue != 'select' && teacherValue != 'select') {
                $.get('@Url.Action("GetClassesBySchoolTermUser", "PopulateStudent")', { termId: termValue, userId: teacherValue, schoolId: schoolValue }, function(classes) {
                    addDefaultOption($('#selectClass'), "@LocalizeHelper.Localized("EnterResult.Class")");
                    addSelectListItems($('#selectClass'), classes);
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null) {
                        var classID = JSON.parse(filter).classID;
                        $('#selectClass').val(classID).trigger('change');
                        checklLoadDirtyData = true;
                        setTimeout(function () {
                            removeEntryResultFilter();
                        }, 3000)
                    }
                });
            }
        }

        function populateStudents() {
            $('#divResultDdate').hide();
            var classValue = $('#selectClass').val();
            if (classValue != null && classValue != 'select') {
                $('#studentContent').show();
                $.get('@Url.Action("GetStudents", "PopulateStudent")', { classId: classValue }, function (students) {
                $('#studentsList').html($('#studentsTemplate').html());
                addStudentsToList($('#students'), students);
                populateStudentList();
                selectAllStudents();
            });
            if ($('#radioMultiClass:checked').val() == 'on') {
                $('#studentContent').hide();
            }
            } else {
                $('#studentContent').hide();
            }
        }

        function populateResultDate() {
            var today = new Date();
            var todayShortDate = (today.getMonth() + 1) + '/' + today.getDate() + '/' + today.getFullYear();
            $('#selectResultDate').empty();
            var classValue = $('#selectClass').val();
            var testValue = $('#selectTest').val();
            var districtId = $('#selectDistrict').val();
            if (districtId == 'select' || districtId == undefined)
                districtId = -1;
            if (!!classValue && classValue != 'select' && !!testValue && testValue != 'select') {
                $.get('@Url.Action("GetResultDates", "DataLockerEntryMultiDateResult")', { virtualTestId: testValue, classId: classValue, districtId: districtId }, function (date) {
                    if (date && date.length > 0 && todayShortDate == date[0].Id) {
                        date.shift();
                    }
                    addDefaultOption($('#selectResultDate'), "Result Date");
                    date.unshift({ Id: todayShortDate, Name: "Today" })
                    addSelectListItems($('#selectResultDate'), date);
                    var filter = localStorage.getItem("EntryResultFilter");
                    if (filter != null) {
                        var resultDateID = JSON.parse(filter).resultDateID;
                        $('#selectResultDate').val(resultDateID).trigger('change');
                        removeEntryResultFilter();
                    }
                });
            }
        }

        function addStudentsToList(el, students) {
            var $el = $(el);
            var studentHtml = [];

            for (var i = 0, len = students.length; i < len; i++) {
                var student = students[i];
                studentHtml.push('<li studentId="' + student.StudentId + '" class="student-item"><a href="javascript:void(0)">' + student.FullName + '</a></li>');
            }

            $el.html(studentHtml.join(''));
        }

    function resetSubjects() {
        $('#selectSubject').empty();
        resetBanks();
    }

    function resetBanks() {
        $('#selectBank').empty();
        $('#selectTest').empty();
        $('#selectResultDate').empty();
    }

    function populateStudentList() {
        $('#students').easyListSplitter({ colNumber: 3 });
        $('.listCol1').addClass('colx3-left');
        $('.listCol2').addClass('colx3-center');
        $('.listCol3').addClass('colx3-right');
        $('.listCol1').addClass('student-col');
        $('.listCol2').addClass('student-col');
        $('.listCol3').addClass('student-col');
    }

    function selectAllStudents() {
        $('.student-col').children().attr('isselected', "yes");
        $('.student-col').children().css('background-color', "#82CAFA");
        CheckValidToAssign();
    }

    function selectNoStudents() {
        $('.student-col').children().attr('isselected', "no");
        $('.student-col').children().css('background-color', "#f2f2f2");
        CheckValidToAssign();
    }

    function invertSelectedStudents() {
        $('.generate-student-list li').each(function () {
            if ($(this).attr('isselected') === "yes") {
                $(this).attr('isselected', "no");
                $(this).css('background-color', "#f2f2f2");
            } else {
                $(this).attr('isselected', "yes");
                $(this).css('background-color', "#82CAFA");
            }
        });
        CheckValidToAssign();
    }

    $('.generate-student-list li').live({
        mouseenter: function () {
            if ($(this).attr('isselected') === "yes") {
                $(this).css('background-color', "#75B6E1");
            } else {
                $(this).css('background-color', "#e0e0e0");
            }
        },
        mouseleave: function () {
            if ($(this).attr('isselected') === "yes") {
                $(this).css('background-color', "#82CAFA");
            } else {
                $(this).css('background-color', "#f2f2f2");
            }
        },
        click: function () {
            if ($(this).attr('isselected') === "yes") {
                $(this).attr('isSelected', "no");
                $(this).css('background-color', "#e0e0e0");
            } else {
                $(this).attr('isSelected', "yes");
                $(this).css('background-color', "#75B6E1");
            }
            CheckValidToAssign();
        }
    });

    function SelectTestExtract(vValue) {
        $('#hdTestExtractValue').val(vValue);
    }

    function CheckPaginationOption() {
        if ($('#selectPaginationOption').val() == 2 || $('#selectPaginationOption').val() == 3) {
            if ($('#selectPaginationOption').val() == 2) {
                if ($('#selectQuestionPage > option').length == 0) {
                    $('#btnSubmit').disableBt();
                } else {
                    $('#btnSubmit').enableBt();
                }
            }
            if ($('#selectPaginationOption').val() == 3) {
                if ($('#selectSectionPage > option').length == 0) {
                    $('#btnSubmit').disableBt();
                } else {
                    $('#btnSubmit').enableBt();
                }
            }
        } else {
            $('#btnSubmit').enableBt();
        }
        }

        function addSelectListItemTests(selectList, results) {
            if (results.length == 0) {
                selectList.html('<option value="-1">No Results Found</option>');
                return;
            }
            if (results.length == 1) {
                selectList
                    .append($("<option></option>")
                        .attr("value", results[0].Id)
                        .attr("selected", true)
                        .attr("isMultiDate", results[0].IsMultiDate)
                        .text(results[0].Name));
                selectList.change();
                return;
            }
            $.each(results, function (i, value) {
                selectList
                    .append($("<option></option>")
                        .attr("value", value.Id)
                        .attr("isMultiDate", results[i].IsMultiDate)
                        .text(value.Name));
            });
        }
    </script>
}
