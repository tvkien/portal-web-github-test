@model LinkIt.BubbleSheetPortal.Web.Models.UserGroup.ModuleAccessViewModel
@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Common
@{
    ViewBag.Title = "Module Access";
    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }
    }
}

@section jQuery {
    @BundleHelper.jQueryUpgrade()
}

<style>
    .ui-widget-content {
        background: transparent;
        border: none;
    }

        .ui-widget-content .ui-dialog-titlebar-close {
            right: 5px;
            top: 5px;
            z-index: 10;
        }

    #manageUserAccess .no-margin.last-child {
        margin: 0;
        padding: 0;
    }

    #manageUserAccess table {
        min-height: 75px;
    }

    #manageUserAccess .icon-success {
        color: var(--blue2)
    }

    #portal-v2-containter .last-child .block-pagination {
        margin-left: 0;
        margin-right: 0;
    }

    #manageUserAccess .fa-circle-xmark {
        color: var(--red);
    }
    #tblModuleAccess .moduleExpand {
        background-color: var(--orange2);
        cursor: pointer;
    }

    #tblModuleAccess .moduleGroupChild td:first-child {
        border-left-color: #a604044d !important;
    }

    #tblModuleAccess .moduleGroupChild td:last-child {
        border-right-color: #a604044d !important;
    }

    #tblModuleAccess .moduleGroupChildLast td {
        border-bottom-color: #a604044d !important;
    }
    
    #tblModuleAccess .moduleExpand td.group-panel {
        border-color: var(--orange2) !important;
    }
</style>
<link href="/Content/css/dialog.css" rel="stylesheet" type="text/css">
<article class="container_12">
    <section class="grid_12">
        <div id="selectFilters">
            <div class="block-border" id="selectFilters">
                <div class="block-content form">
                    <div class="d-flex flex-row align-items-center">
                        <h1 class="">Module Access</h1>
                        <h2 class="header ms-4 mt-1">Group: @Model.GroupName</h2>
                        <button id="btnBack" class="btn-text btn-back pe-0" style="margin-left: auto; margin-bottom: 1rem"><i class="fa-solid fa-arrow-left"></i>Back</button>
                    </div>
                    <div class="d-flex flex-row g-4 align-items-center">
                        <div class="col-4">
                            <div>
                                <label>Navigation Area</label>
                                <select id="ddlNavigationArea" class="full-width"></select>
                            </div>
                        </div>
                        <div class="col-4 ms-3">
                            <div>
                                <label>Module</label>
                                <select id="ddlModule" class="full-width"></select>
                            </div>
                        </div>
                        <div class="col-4 d-flex justify-content-end align-self-end px-3">
                            <button id="btnFilter" class="btn-red" type="button">Apply Filters</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>

<article class="container_12 pt-0" style="margin-top: 0">
    <section class="grid_12">
        <div class="block-border" id="manageUserAccess">
            <div class="block-content form">
                <h1 class="ps-0 pb-0">Keep Default Access: @Model.InheritRoleFunctionality</h1>
                <div class="clearfix">
                    <div class="">
                        <table id="tblModuleAccess" class="datatable table no-margin datatable-module-access" width="100%">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 3%; text-align:center">

                                    </th>

                                    <th scope="col" style="width: 15%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Module
                                    </th>

                                    <th scope="col" style="width: 15%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Area
                                    </th>

                                    <th scope="col" style="width: 16%">
                                        District Access
                                    </th>

                                    <th scope="col" style="width: 15%">
                                        School Access
                                    </th>

                                    <th scope="col" style="width: 17%">
                                        User Group Access
                                    </th>
                                    <th scope="col">
                                        Current Access for User in Groups
                                    </th>
                                </tr>
                            </thead>

                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>

<script type="text/javascript">
    var areaID = -1;
    var moduleID = -1;
    var firstLoad = true;

    function closeModulePermissionDialog() {
        $("#modulePermissionDialog").dialog("close");
    }
    function showConfirmMessage(message, xliModuleId) {
        confirmMessageV2(
            {
                message,
                cbYesBtnFuncName: 'acceptSetPermissonModule(' + xliModuleId +')',
                cbCancelBtnFuncName: 'closeModulePermissionDialog()'
            },
            {
                dialogAttr: {
                    attr: {
                        id: 'modulePermissionDialog'
                    }
                },
                modal: {
                    dialog: {
                        open: function () {
                            $(this).parents('.ui-dialog').find('.ui-dialog-titlebar-close').remove()
                        },
                        close: function () { $(this).remove(); },
                        modal: true,
                        width: 550,
                        maxheight: 500,
                        resizable: false
                    }
                }
            }
        )
    }
    function acceptSetPermissonModule(xliModuleId) {
        ShowBlock($('#manageUserAccess'), "Waiting");
        $.post('@Url.Action("RemoveModulePermission", "UserGroupManagement")', { XLIGroupId: @Model.XLIGroupID, XLIModuleId: xliModuleId }, function (response) {
            if (response && response.success == true) {
                $('#tblModuleAccess').dataTable().fnDraw();
                $('#manageUserAccess').unblock();
            }
            else if (response && response.success == false) {
                addErrorMessages(response.message);
                $('#manageUserAccess').unblock();
            }
            closeModulePermissionDialog();
        });
    }
    $(document).ready(function () {
        setFilterDefault();
        populateNavigateAreas();
        bindDataToModudelAccessTable();

        $('#btnBack').click(function () {
            window.location.href = '@ViewBag.PreviousUrl';
        });

        $('#ddlNavigationArea').change(function () {
            areaID = $(this).val();

            if (!firstLoad) {
                moduleID = -1;
                firstLoad = false;
            }

            if (areaID > 0) {
                populateModule(areaID);
            }
            else {
                areaID = -1;
                $('#ddlModule').empty();
            }
        });

        $('#btnFilter').click(function () {
            areaID = $('#ddlNavigationArea').val();
            moduleID = $('#ddlModule').val();
            $('#tblModuleAccess').dataTable().fnDraw();
        });

        $('.addModulePermissionIcon').live('click', function () {
            var xliAreaId = $(this).attr('XLIAreaId');
            var xliModuleId = $(this).attr('XLIModuleId');

            var worker = $('<div"></div>');
            var url = '@Url.Action("GetAddModulePermissionView", "UserGroupManagement")?xliGroupId=' + @Model.XLIGroupID + "&xliAreaId=" + xliAreaId + "&xliModuleId=" + xliModuleId;
            worker
                .addClass("dialog custom-dialog")
                .attr("id", "addModulePermission")
                .appendTo("body")
                .load(url, function () {
                    worker.dialog({
                        title: $(this).attr("Add Module Permission"),
                        close: function () {
                            $('.ui-widget-overlay').remove();
                            $(this).remove();
                            $('#tblModuleAccess').dataTable().fnDraw();
                        },
                        modal: false,
                        width: 720,
                        resizable: false
                    });
                });
            var win = $('body');
            $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
        });

        $('.removeModulePermissionIcon').live('click', function () {
            var xliModuleId = $(this).attr('XLIModuleId');
            showConfirmMessage('Are you sure you want to delete this module permission?', xliModuleId);
        });

        $('.viewSchoolAccess').live('click', function () {
            var xliModuleId = $(this).attr('XLIModuleId');

            var worker = $('<div"></div>');
            var url = '@Url.Action("ViewSchoolAccess", "UserGroupManagement")?xliModuleId=' + xliModuleId + "&districtId=" + @Model.DistrictID ;
            worker
                .addClass("dialog custom-dialog")
                .attr("id", "viewSchoolAccessID")
                .appendTo("body")
                .load(url, function () {
                    worker.dialog({
                        title: $(this).attr("School Access"),
                        close: function () {
                            $('.ui-widget-overlay').remove();
                            $(this).remove();
                        },
                        modal: false,
                        width: 720,
                        resizable: false
                    });
                });
            var win = $('body');
            $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
        });
    })

    function collectGroupId(aoData) {
        return aoData.reduce(function (arr, item, index) {
            if (!item._aData.GroupId) return arr;
            const hasGroupId = arr.find(function (el) { return el.GroupId == item._aData.GroupId });
            if (!hasGroupId) {
                item._aData.sortIndex = index;
                arr.push({ sortIndex: index, GroupId: item._aData.GroupId, GroupName: item._aData.GroupName })
            }
            return arr
        }, [])
    }


    var expandStatus = {};
    function bindDataToModudelAccessTable() {
        var options = {
            bServerSide: true,
            sServerMethod: "GET",
            bDestroy: true,
            sAjaxSource: '@Url.Action("GetModuleAccessData", "UserGroupManagement")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "DistrictID", value: @Model.DistrictID },
                    { name: "XLIGroupID", value: @Model.XLIGroupID },
                    { name: "XLIAreaID", value: areaID },
                    { name: "XLIModuleID", value: moduleID },
                );
            },
            iDisplayLength: 10,
            aoColumns: [
                { mData: 'ModuleID', sName: 'ModuleID', bSearchable: false, bSortable: false },
                { mData: 'ModuleName', sName: 'Module', bSearchable: true, bSortable: true },
                { mData: 'AreaName', sName: 'Area', bSearchable: true, bSortable: true },
                { mData: 'DistrictAccess', sName: 'District Access', bSearchable: true, bSortable: false },
                { mData: 'SchoolAccess', sName: 'School Access', bSearchable: true, bSortable: false },
                { mData: 'UserGroupAccess', sName: 'User Group Access', bSearchable: true, bSortable: false },
                { mData: 'CurrentAccess', sName: 'Current Access for User in Groups', bSearchable: true, bSortable: false },
            ],
            aaSorting: [[2, "asc"]],
            fnPreDrawCallback: function (drawData) {
                var groupIds = collectGroupId(drawData.aoData);

                drawData.aoData.forEach(function (item, index) {
                    if (item._aData.GroupId) {
                        const collectGroup = groupIds.find(el => el.GroupId === item._aData.GroupId);
                        item.sortIndex = collectGroup.sortIndex;
                    } else {
                        item.sortIndex = index
                    }

                });
                drawData.aoData.sort(function (a, b) {
                    return a._aData.sortIndex - b._aData.sortIndex;
                });
                ShowBlock($('#tblModuleAccess'), "Loading");
                return drawData;
            },
            fnDrawCallback: function (drawData) {
                var groupIds = collectGroupId(drawData.aoData);
                groupIds.forEach(function (item) {
                    var el = $(`#tblModuleAccess tbody tr[group-id=${item.GroupId}]`);
                    if (el.length) {
                        $(el[0]).before(getExpandRow(item));
                        $(el[el.length -1]).addClass('moduleGroupChildLast')
                    }
                })
                $('#tblModuleAccess').unblock();
            },
            fnRowCallback: function (nRow, aData) {
                if (aData.GroupId) {
                    $(nRow).attr('group-id', aData.GroupId);
                    $(nRow).addClass('moduleGroupChild')
                };
                if (expandStatus[aData.GroupId] == false && aData.GroupId) {
                    $(nRow).hide();
                }
                $('td:eq(0)', nRow).html(setButtonIcon(aData));
                $('td:eq(4)', nRow).html(setSchoolAccessLink(aData));
            },
            fnInitComplete: function () {
                tranformSearchInputDataTable('tblModuleAccess_filter')
            }
        };

        $('#tblModuleAccess').data('options', options);
    }
    function onExpandRow(GroupId) {
        var moduleStr = `#tblModuleAccess tbody tr[group-id=${GroupId}]`;
        $(moduleStr).toggle();

        expandStatus[GroupId] = $(moduleStr).is(':visible');

        var moduleGroup = '#tblModuleAccess .moduleGroup' + GroupId;
        $(moduleGroup + ' .fa-chevron-up').toggle();
        $(moduleGroup + ' .fa-chevron-down').toggle();
    }
    function getExpandRow(row) {
        var divName = '<div class="d-flex justify-content-between align-items-center">' + row.GroupName
            + '<i class="fa-solid fa-chevron-down "></i>' + '<i style="display: none" class="fa-solid fa-chevron-up"></i>' + '</div>';
        var moduleClass = 'moduleExpand moduleGroup' + row.GroupId;
        return '<tr onClick="onExpandRow(' + row.GroupId + ')" class="' + moduleClass +'">' + '<td colspan="7" class="group-panel">' + divName + '</td>' + '</tr>';
    }

    function populateNavigateAreas() {
        $('#ddlNavigationArea').empty();
        $.get('@Url.Action("GetAreasByUser", "UserGroupManagement")?districtId=' + @Model.DistrictID, {}, function (areas) {
            addListItemsWithDefaultValue('Area', '#ddlNavigationArea', areas, areaID);
        });
    }

    function populateModule(areaId) {
        $('#ddlModule').empty();
        $.get('@Url.Action("GetModulesByArea", "UserGroupManagement")', { areaId: areaId }, function (modules) {
            addListItemsWithDefaultValue('Module', '#ddlModule', modules, moduleID);
        });
    }

    function setButtonIcon(aData) {
        if (aData["UserGroupAccess"] === 'None') {
            var detailsIcon = '<i class="fa-solid fa-circle-plus icon-success"></i>';
            return '<a href="javascript:void(0)" class="addModulePermissionIcon" XLIAreaId="' + aData["AreaID"] + '" XLIModuleId="' + aData["ModuleID"] + '">' + detailsIcon + '</a>';
        }
        else {
            var detailsIcon = '<i class="fa-solid fa-circle-xmark"></i>';
            return '<a href="javascript:void(0)" class="removeModulePermissionIcon" XLIModuleId="' + aData["ModuleID"] + '">' + detailsIcon +'</a>';
        }
    }

    function setSchoolAccessLink(aData) {
        if (aData["SchoolAccess"] !== 'None') {
            return '<a href="javascript:void(0)" class="viewSchoolAccess" XLIModuleId="' + aData["ModuleID"] + '" DistrictID="' + @Model.DistrictID + '">View School Access</a>';
        }
    }

    function setFilterDefault() {
        var filter = JSON.parse(localStorage.getItem("AccessModuleFilter"));
        if (filter) {
            areaID = filter.areaID;
            moduleID = filter.moduleID;

            localStorage.removeItem("AccessModuleFilter");
        }
    }

    function addListItemsWithDefaultValue(type, selectListId, results, defValue) {
        addSelectListItemsWithDefaultValue($(selectListId), results, 'Select ' + type);

        if (defValue) {
            $(selectListId + ' option[value=' + defValue + ']').attr('selected', 'selected');
        }

        $(selectListId).trigger('change');
    }

</script>
<script>
    $(document).ready(function () {
        breadcrumbDetailPage('.dataadmin', '#manageUserGroupDad');
    });
</script>
