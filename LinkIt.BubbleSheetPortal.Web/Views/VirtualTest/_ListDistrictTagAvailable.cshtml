<!-- Style for scrollbar-->
<style>
    /*********** Default css ***********/
    /*No data*/
    .dataTableDistrictTagAvailableStyle .dataTables_empty div {
        width: 410px !important;
    }
    .dataTableDistrictTagAvailableStyle tr td {
        padding-left: 0px;
        padding-right: 0px;
    }
    .dataTableDistrictTagAvailableStyle{
        width: 415px !important;
        height: 226px !important;
    }
    .dataTableDistrictTagAvailableStyle tbody img {
        margin-left: 5px !important;
        margin-right: 5px !important;
    }
    .dataTableDistrictTagAvailableStyle thead,
    .dataTableDistrictTagAvailableStyle tbody{display: block;}
    .dataTableDistrictTagAvailableStyle tbody {
        height: 195px;
        overflow: auto;
        overflow-x: hidden;
    }
    .dataTableDistrictTagAvailableStyle tbody td {
        /*word-break: break-all;*/
        word-wrap: break-word;
    }
    /* Padding content inside div */
    .dataTableDistrictTagAvailableStyle tbody tr td div {
        padding-left: 3px !important;
        padding-right: 3px !important;
    }
    .dataTableDistrictTagAvailableStyle tbody td:nth-of-type(1) div {
        width: 30px;
    }
    .dataTableDistrictTagAvailableStyle tbody td:nth-of-type(2) div {
        width: 372px;
    }
    .dataTableDistrictTagAvailableStyle thead th:nth-of-type(1) {
        width: 15px !important;
    }
    .dataTableDistrictTagAvailableStyle thead th:nth-of-type(2) {
        width: 358px !important;
    }
    
    /*********** Has scroll bar ***********/
    .scrolldataTableDistrictTagAvailableStyle tbody td:nth-of-type(2) div {
        width: 372px;
    }
    /*********** No scroll bar ***********/
    .noscrolldataTableDistrictTagAvailableStyle tbody td:nth-of-type(2) div {
        width: 372px;
    }
   
</style>
<style>
    /*Fix IE9*/
    .dataTableDistrictTagAvailableStyleIE9 {
        height: auto !important;
    }
    .dataTableDistrictTagAvailableStyleIE9 tbody{
        height: auto !important;
    }
    #divdataTableDistrictTagAvailable {
        height: 195px !important;/* divdataTableDistrictTagAvailable was generated in IE9 by formatTableForAddingVertialScrollBar for scrollbar*/
    }


</style>
<div class="block-content form"  style="height:345px;">
    <div class="toggle" style="padding-top: 0px; height: 30px; margin-top: -30px">
        <h1 style="margin-top: -5px">Filtered Tag(s)</h1>
        <button id="btnAddTagsToQtiItem" type="button" style="margin-left: 170px;margin-right: 2px;height: 35px;margin-top: 5px" disabled="disabled">Add Tag(s)</button>
    </div>
    <div class="no-margin last-child" style="height:345px;overflow: hidden;padding-top: 37px">
        <table id="dataTableDistrictTagAvailable" class="datatable table no-margin dataTableDistrictTagAvailableStyle">
            <thead>
                <tr>
                    <th scope="col">
                        <input type="checkbox" id="chkAllItem" style="visibility: hidden" />
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        Tag
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<script type="text/javascript">
    var oTableDistrictTagAvailable;
    $(function () {
        LoadDistrictTagAvailableToTable();
        $('#btnAddTagsToQtiItem').hide();//not multiple select now
        //$('#txtTextToSearch').val('');
    });

    function LoadDistrictTagAvailableToTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: getAjaxSourceForDistrictTagAvailable(),
            fnServerParams: function (aoData) {
                //TuanVo:encode text in filter searchbox 
                var item = null;
                
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                    
                }

            },
            bFilter: false,
            bStateSave: false,
            bAutoWidth: false,
            iDisplayLength: 100,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'ItemTagID', bSearchable: false, bSortable: false, sWidth: '20px' },
                { sType: 'string', sName: 'Name', bSearchable: false, bSortable: true, sWidth: '380px'  }
            ],
            fnRowCallback: function (nRow, aData) {
                //$('td:eq(0)', nRow).html(setCheckBoxLinkitDefaultTagAvailable(aData[0]));//not multiple select now
                $('td:eq(0)', nRow).html(setIconVisibilityDistrictTagAvailable(aData[0]));
                
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableDistrictTagAvailable'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableDistrictTagAvailable').unblock();
                $('.with-tip').tip();
                
                formatTableForAddingVertialScrollBar('dataTableDistrictTagAvailable', 'scrolldataTableDistrictTagAvailableStyle', 'noscrolldataTableDistrictTagAvailableStyle', 'scrolldataTableDistrictTagAvailableStyleIE9', 'noscrolldataTableDistrictTagAvailableStyleIE9');
                if (jQuery.browser.msie && jQuery.browser.version == '9.0') {
                    $('#dataTableDistrictTagAvailable').addClass('dataTableDistrictTagAvailableStyleIE9');
                }

                updateAssignDistrictButtonStatus();
            }
        };

        $("#dataTableDistrictTagAvailable").data("options", options);
        initializeDataTable($("#dataTableDistrictTagAvailable"));
        oTableDistrictTagAvailable = $('#dataTableDistrictTagAvailable').dataTable();
    }

    function getAjaxSourceForDistrictTagAvailable() {
        var itemTagCategoryId = $("#selectCategory").val();//selectCategory is defined in _Tag
        if (itemTagCategoryId == null) {
            itemTagCategoryId = 0;
        }
        if (itemTagCategoryId == 'select') {
            itemTagCategoryId = 0;
        }

        vm.selectedTagCategoryId(+itemTagCategoryId);

        var tag = $('#txtTextToSearch').val();
        tag = tag.trim();
        tag = encodeURIComponent(htmlEncode(tag));
        return '@Url.Action("SearchItemTag","ItemTag")?itemTagCategoryId=' + itemTagCategoryId + '&textToSearch=' + tag;
        
    }

    function ReloadDistrictTagAvailable() {
        $("#dataTableDistrictTagAvailable").dataTable().fnReloadAjax(getAjaxSourceForDistrictTagAvailable());
    }
    function setIconVisibilityDistrictTagAvailable(id) {
        var mutualItemTagIdString = $('#MutualItemTagIdString').val();

        var addDisplayed = 'none';
        var deleteDisplayed = 'none';
        if (mutualItemTagIdString.indexOf(',-' + id + '-') >= 0) {
            deleteDisplayed = 'inline';
        } else {
            addDisplayed = 'inline';
        }
        
        var addIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png")';
        var addString = '<a id="iconAdd_' +  id + '" href="javascript:void(0)" onclick="AssignDistrictTag(this);" title="Assign Tag"  class="with-tip" style="display:' + addDisplayed + '"><img src="' + addIcon + '" width="16" height="16"></a>';

        var deleteIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/icon-red.png")';
        var deleteString = '<a id="iconDelete_' +  id + '" href="javascript:void(0)" onclick="RemoveDistrictTag(this);" title="Remove Tag" operation="1"  class="with-tip" style="display:' + deleteDisplayed + '"><img src="' + deleteIcon + '" width="18" height="18"></a>';
        //RemoveDistrictTag is defined in _ListDistrictTagAssigned

        var result = '';
        result = addString + deleteString;
        return result;

    }
    function AssignDistrictTag(control) {
        if (!vm.isReadyToAssign()) {
            vm.isInvalidCategory(true);
            return;
        } else {
            vm.isInvalidCategory(false);
        }

        var self = $(control);
        var id = self.attr('id');
        var tagId = id.split('_')[1];
        
        ShowBlock($("#dataTableDistrictTagAvailable"), "Adding");

        $.ajax({
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            url: '@Url.Action("AssignDistrictTagForVirtualQuestions")',
            data: JSON.stringify({
                virtualQuestionIdString: '@ViewBag.VirtualQuestionIdString', 
                tagIdString: tagId,
                questionCategoryTags: vm.questionCategoryTags(),
                itemTagCategoryId: vm.selectedTagCategoryId()
            }),
            traditional: true,
            success: function (response) {
                $("#dataTableDistrictTagAvailable").unblock();
                if (response.Success == 'Success') {
                    //clear all assigned tag
                    LinkIt.success('#divLinkitDefaultTagNotifications', 'Tag Assigned');
                    
                    var idString = '';
                    idString = $('#MutualItemTagIdString').val();
                    if (idString == null) {
                        idString = '';
                    }
                    idString = idString + ",-" + tagId + "-";
                    $('#MutualItemTagIdString').val(idString);
                    $("#iconAdd_" + tagId).hide();
                    $("#iconDelete_" + tagId).show();

                    ReloadDistrictTagAvailable();
                    //reload assigned list
                    ReloadDistrictTagAssigned();//defined in _ListDistrictTagAssigned.cshtml
                 
                } else {
                    CustomAlert(response.errorMessage);
                }
            },
            error: function (xhr, status, error) {
                CustomAlert(error);
            }
        });
    }
    
   
    
    function setCheckBoxLinkitDefaultTagAvailable(itemTagCategoryId) {
        var checkboxString = '<input type="checkbox" name="chkLinkitDefaultTagItem" value="' + itemTagCategoryId + '"  />';

        return checkboxString;
    }
    
    @*//Multiple select
    $('#btnAddTagsToQtiItem').die('click');
    $('#btnAddTagsToQtiItem').live("click", function (e) {
        var selectedItemId = getSelectedLinkitDefaultTagId();
        var category = $("#linkitDefaultCategorySelect option:selected").text();

        ShowBlock($("#dataTableDistrictTagAvailable"), "Adding");

        $.post('@Url.Action("AssignDistrictTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.VirtualQuestionIdString',linkitDefaultCagegory:category,tagIdString:selectedItemId }, function (response) {
            $("#dataTableDistrictTagAvailable").unblock();
            if (response.Success == 'Success') {
                //clear all assigned tag
                
            } else {
                alert(response.errorMessage);
            }
        });

    });
    
    
    $('#chkAllItem').die('click');
    $('#chkAllItem').live("click", function (e) {
        if (this.checked) {
            $('INPUT[name="chkLinkitDefaultTagItem"][type=checkbox]').attr('checked', 'checked');
            $('#btnAddTagsToQtiItem').removeAttr('disabled');
        }
        else {
            $('INPUT[name="chkLinkitDefaultTagItem"][type=checkbox]').removeAttr('checked');
            $('#btnAddTagsToQtiItem').attr('disabled', 'disabled');
        }
    });

    $('INPUT[name="chkLinkitDefaultTagItem"][type=checkbox]').live("click", function (e) {
        if (this.checked) {
            $('#btnAddTagsToQtiItem').removeAttr('disabled');
            var checkboxes = $('INPUT[name="chkLinkitDefaultTagItem"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $('#chkAllItem').removeAttr('checked');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $('#chkAllItem').attr('checked', 'checked');
            }
        }
        else {
            $('#chkAllItem').removeAttr('checked');
            var checkedboxes = $('INPUT[name="chkLinkitDefaultTagItem"][type=checkbox]:checked');
            if (checkedboxes.length > 0) {
            }
            else {
                $('#btnAddTagsToQtiItem').attr('disabled', 'disabled');
            }
        }
    });
    function getSelectedLinkitDefaultTagId() {
        var Ids = '';
        $('INPUT[name="chkLinkitDefaultTagItem"][type=checkbox]:checked').each(function (i, e) {
            Ids += $(e).val() + ',';
        });
        return Ids.substr(0, Ids.length - 1);
    }*@
    
</script>