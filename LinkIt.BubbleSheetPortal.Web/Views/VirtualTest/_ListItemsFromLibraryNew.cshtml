<style type="text/css">
    #dataTable2 td {
        font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook;
        font-size: 12px;
    }
</style>
<style>
    #dataTable2 tbody tr {
        height: 100% !important; /* Fix for IE9 */
    }
</style>
<style>
    #dataTable2 .dataTables_empty div {
        width: 455px !important;
    }

    .scrollItemDataTable2 thead,
    .scrollItemDataTable2 tbody {
        display: block;
    }

    .scrollItemDataTable2 tbody {
        height: 280px;
        overflow: auto;
        overflow-x: hidden;
    }

    .scrollItemDataTable2 {
        width: 416px !important;
    }

        .scrollItemDataTable2 tbody td {
            word-wrap: break-word;
        }

            .scrollItemDataTable2 tbody td:nth-of-type(1) .divContainerStyle {
                width: 40px;
            }

            .scrollItemDataTable2 tbody td:nth-of-type(2) .divContainerStyle {
                width: 347px;
            }

        .scrollItemDataTable2 td img {
            padding-left: 0px;
            padding-right: 0px;
        }

    .noscrollItemDataTable2 tbody td:nth-of-type(2) .divContainerStyle {
        width: 362px;
    }

    #divdataTable2 {
        margin-top: -22px !important;
        height: 282px !important;
    }
</style>
<div class="block-content form" id="divOnTop" style="height:425px; width: 370px; ">
    <div class="toggle" style="padding-top: 0px; margin-top: -55px">
        <h1 style="margin-top: -5px">Filtered Items</h1>
        <button id="btnAddItemsToTest" type="button" style="margin-left: 170px;margin-right: 2px;height: 35px;margin-top: 5px" disabled="disabled">Add Items to Test</button>
    </div>
    <div class="no-margin last-child" style="height:415px;overflow: hidden;padding-top: 46px;">
        <table id="dataTable2" class="datatable table no-margin scrollItemDataTable2">
            <thead>
                <tr>
                    <th scope="col" style="width: 20px">
                        <input type="checkbox" id="chkAllItemNew" />
                    </th>
                    <th scope="col">Content</th>
                    <th scope="col" style="display: none"></th>
                    <th scope="col" style="display: none"></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<script type="text/javascript">
    var firstLoadAjaxSource = true;
    $(function () {
        var ajaxSource = getAjaxSource2();
        var options2 = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: ajaxSource,
            fnServerParams: function (aoData) {
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''");
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }

            },
            bFilter:false,
            bStateSave: false,
            bAutoWidth: false,
            iDisplayLength: 100,
            aaSorting: [[0, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'QtiItemId', bSearchable: false, bSortable: false, sWidth: "10px" },
                { sType: 'string', sName: 'Name', bSearchable: false, bSortable: false, sWidth: "400px" },
                { sType: 'string', sName: 'ToolTip', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'integer', sName: 'MaxItemTooltipLength', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'integer', sName: 'VirtualQuestionCount', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'integer', sName: 'VirtualQuestionRubricCount', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setCheckBoxItemNew(aData[0], aData[5]));
                var title = '';
                aData[1] = correctInlineChoice(aData[1]);
                $(aData[1]).find('.itemBody, itemBody, itembody').each(function () {
                    var itemBody = $(this);
                    itemBody.find("videolinkit").replaceWith(function () {
                        return $('');
                    });
                    if ($(aData[1]).find("responsedeclaration").attr("partialgrading") == "1") {
                        itemBody.find("sourcetext").each(function () {
                            if ($(this).attr("pointvalue") > 0) {
                                $(this).addClass("marker-correct");
                            }
                        });
                    } else {
                        $(aData[1]).find("correctResponse").each(function () {
                            var id = $(this).attr("identifier");
                            itemBody.find("sourcetext[identifier=\"" + id + "\"]").addClass("marker-correct");
                        });
                    }

                    title = itemBody.html();
                });

                var divTitle = '<div style="max-height:62px; overflow:hidden;max-width:346px">' + title + '</div>';

                $('td:eq(1)', nRow).html(divTitle);
                $('td:eq(1)', nRow).addClass('with-tip');
                $('td:eq(1)', nRow).bind({
                    mouseenter: function () {
                        displaItemNewTooltip($(this), aData[2],aData[3]);
                        $('.with-tip').tip();
                    },
                    mouseleave: function () {
                        $(this).removeClass('with-tip');
                        $('#tips div:last-child').html('');
                    }
                });

                $('td:eq(1)', nRow).attr("onclick", 'handleSingleClick(this, ' + aData[0] + ', 1)');                
                $('td:eq(1)', nRow).addClass("cursor-pointer");
                addWordBreakToTableCellItem($('td:eq(1)', nRow), 35, aData[1]);
                $('#showPassagesForFoundItem').prop('disabled', false);
            },
            fnPreDrawCallback: function () {
                return true;
            },
            fnDrawCallback: function () {
                firstLoad = false;
                firstLoadListItemsFromLibraryNew = false;
                MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                LoadImages('#dataTable2');
                $('.with-tip').tip();
                $('#dataTable2').unblock();

                $("#dataTable2").find('span[class="math-tex"]').each(function (index, value) {
                    var span = $(value);
                    span.css('display', 'inline-block');
                });

                $("#dataTable2 list[liststyletype='decimal']").each(function (index, value) {
                    var html = '<ol style="list-style-type:decimal;list-style-position: inside">';
                    $(value).find('li').each(function (idx, li) {
                        html += $(li).outerHTML();
                    });
                    html += '</ol>';
                    $(value).html(html);
                });

                formatTableForAddingVertialScrollBar('dataTable2', 'scrollItemDataTable2', 'noscrollItemDataTable2', 'scrollItemDataTable2IE9', 'noscrollItemDataTable2IE9');
                loadContentNumberLineHotspot('#dataTable2');
                loadContentImageHotSpot('#dataTable2');
                loadContentDragAndDrop('#dataTable2');

                calculatorSequenceWidth("#dataTable2 partialsequence");                
            }
        };

        $("#dataTable2").data("options", options2);
        firstLoadAjaxSource = false;
        $('.with-tip').tip();
    });

    function initializeDataTable1(table) {
        var defaults = {
            sDom: '<"block-controls"l<\'float-left\'<"#showUser">><f>>rti<"block-footer clearfix"<"controls-buttons"p>>',
            fnDrawCallback: function () {
                this.parent().applyTemplateSetup();
            },
            fnInitComplete: function () {
                this.parent().applyTemplateSetup();
            }
        };

        var oTable = table.dataTable($.extend(defaults, []));

        table.find('thead .sort-up').click(function (event) {
            event.preventDefault();
            var column = $(this).closest('th'),
                columnIndex = $(column.get(0)).attr('aoData-index');
            oTable.fnSort([[columnIndex, 'asc']]);
            return false;
        });
        table.find('thead .sort-down').click(function (event) {
            event.preventDefault();
            var column = $(this).closest('th'),
                columnIndex = $(column.get(0)).attr('aoData-index');
            oTable.fnSort([[columnIndex, 'desc']]);
            return false;
        });

        ui[table.attr('id')] = oTable;
        return oTable;
    }

    function getAjaxSource2() {
        ShowBlock($('#dataTable2'), 'Loading');
        firstLoadAjaxSource = false;
        return getAjaxLoadItemFromLibraryByFilterNew();
    }

    function setIconVisibility2(qtiItemId) {
        var editIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editString = '<a href="javascript:void(0)" onclick="showEditQtiItemPopup('+ qtiItemId +',1)"  title="Edit Item" qtiItemId="' + qtiItemId + '" class="with-tip EditQtiItem"><img src="' + editIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        var addToItemSet = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle.png")';
        var addToItemSetString = '<a href="javascript:void(0)" title="Add To Item Set" qtiItemId="' + qtiItemId + '" class="with-tip addToItemSet2" onclick="AddToItemSet2(this);"><img src="' + addToItemSet + '" width="16" height="16"></a>';

        return editString + addToItemSetString;

    }
    function setCheckBoxItemNew(qtiItemId, rubricQuestionCount) {
        var checkboxString = '<input type="checkbox" name="chkItemNew" value="' + qtiItemId + '" style="float: left" />';
        var warningString = '';
        if (rubricQuestionCount > 0) {
            warningString += '<div class="warning-icon">';
            warningString += '<a href="javascript:void(0);" title="This item is using a rubric-based scoring method and cannot be imported directly into the test. </br>Please clone the item when importing in order to use it." class="with-tip"><img src="//Content/themes/Constellation/images/icons/fugue/exclamation-diamond.png" width="16" height="16" style="margin-right: 4px;margin-left:6px; margin-top:-3px"></a>';
            warningString += '</div>';
        }
        return checkboxString + warningString;
    }
    $('#btnAddItemsToTest').die('click');
    $('#btnAddItemsToTest').live("click", function (e) {
        var virtualTestId = $('#hiddenVirtualTestId').val();
        var worker = $('<div />');
        worker
            .addClass("dialog SelectSectionDialog")
            .attr("id", "SelectSectionDialog")
            .appendTo("body")
            .load('@Url.Action("ShowSelectSectionDialog")/?virtualTestId=' + virtualTestId+'&qtiItemIdString='+ getSelectedItemsNew(), function () {
                worker.dialog({
                    open: function () {
                        $('#tips').html('');
                        var zIndex = $('#SelectSectionDialog').parent('.ui-dialog').css('z-index');
                        zIndex = parseInt(zIndex) + 1;
                        $('.ui-widget-overlay').last().css('z-index', zIndex);
                        $('.ui-widget-overlay').last().css('height', '2000px');
                        $('#SelectSectionDialog').parent('.ui-dialog').css('z-index', zIndex+1);
                    },
                    title: $(this).attr("Select Section"),
                    close: function () {
                        $('#tips').html('');
                        $('.ui-widget-overlay').last().remove();
                        $('#SelectSectionDialog').parent('.ui-dialog').empty();
                        $('#SelectSectionDialog').remove();
                    },
                    modal: false,
                    width: 400,
                    resizable: false
                });
            });

        showModalDialogBG();
    });

    function AddToItemSet2(control) {
        ShowBlock($("#dataTable2"), "Adding");
        var id = $(control).attr("qtiItemId");
        var href = $(control);
        $.post('@Url.Action("AddQTIToItemSet", "ItemBank")', { qtiItemId: id, qtiGroupId: $("#hiddenQIItemGroupID").val() }, function (response) {
            $("#dataTable2").unblock();
            if (response.Success == 'Success') {
                if ($('#qtiItemDataTablePopup').length > 0) {
                    ui.qtiItemDataTablePopup.fnDraw();
                }
            } else {
                alert(response.errorMessage);
            }
        });
    }

    function ReloadItem2() {
        if (isSearchedItem()) {
            $("#dataTable2").dataTable().fnReloadAjax(getAjaxSource2());
        }
    }

    function showEditQtiItemPopup(qtiItemId, showPassage) {
        $.ajax({
            url: '@Url.Action("CheckQtiItemExists", "ItemBank")',
            data: { qtiItemId: qtiItemId },
            type: 'get',
            cache: false
        }).done(function (response) {
            if (response.Exists == 'False') {
                alert(response.errorMessage);
                return;
            } else {
                ShowBlock($('#dataTable2'), "Opening Item");
                var worker = $('<div />');
                worker
                    .addClass("dialog EditQtiItemPopUpDialogCSS")
                    .attr("id", "editQtiItemDialog")
                    .appendTo("body")
                    .load('@Url.Action("ShowEditQtiItemItem","ItemBank")\?qtiItemId=' + +qtiItemId + '&showPassage=' + showPassage, function () {
                worker.dialog({
                    title: $(this).attr("Standard"),
                    open: function () {
                        var z_index = $("#addNewItemFromLibraryPopup").parent().css('z-index');
                        $('.ui-widget-overlay:last').css('z-index', parseInt(z_index) + 1);
                        $("#editQtiItemDialog").parent().css('z-index', parseInt(z_index) + 2);
                        $("#editQtiItemDialog").prev().css('top', '30px');
                        $('.ui-widget-overlay:last').height(2000);
                        $('#dataTable2').unblock();
                        AdjustQtiItemDetail();

                        var qtiItemHTML = $('#divQtiItemDetail').html();
                        qtiItemHTML = qtiItemHTML.replace(/<videolinkit/g, "<video").replace(/<\/videolinkit>/g, "</video>").replace(/<sourcelinkit /g, "<source ").replace(/<\/sourcelinkit>/g, "</source>");
                        $('#divQtiItemDetail').html(qtiItemHTML);
                        $('#divQtiItemDetail').find('video').trigger('play');
                        loadContentDragAndDrop('#divQtiItemDetail');
                        loadContentNumberLineHotspot('#divQtiItemDetail');
                        loadContentImageHotSpot('#divQtiItemDetail');
                        loadContentGlossary('#divQtiItemDetail', '#glossaryMessage');
                    },
                    close: function () {
                        $('.ui-widget-overlay:last').remove();
                        $(this).remove();
                        $('#tips').html('');

                        if (!!responsiveVoice) {
                            responsiveVoice.cancel();
                        }
                    },
                    modal: false,
                    width: 480,
                    resizable: false
                });
            });
        showModalDialogBG();
            }
        }).error(function (request) {
        });

    }

    function handleSingleClick(element, qtiItemId, showPassage) {
        if ($(element).data("clicked")) return; // Prevent double-click
        $(element).data("clicked", true);
        showEditQtiItemPopup(qtiItemId, showPassage);
        setTimeout(function () {
            $(element).data("clicked", false);
        }, 1000);
    }

    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }

    jQuery.fn.outerHTML = function(s) {
        return (s)
            ? this.before(s).remove()
            : jQuery("<p>").append(this.eq(0).clone()).html();
    };
    function displaItemNewTooltip(e, data, maxItemTooltipLength) {
        if (data == null) {
            data = '';
        }
        var width = '100px';
        if (maxItemTooltipLength <= 300) {
            width = '300px';
        }
        else if (data.length <= 400) {
            width = '400px';
        }
        else {
            width = '500px';
        }

        $(e).attr('title', '<p style="text-align:left;width:' + width + ';white-space: normal;word-break: break-all">' + data.split('|').join('<br />') + '</p>');
    }
</script>
<!-- script for checkbox all-->
<script type="text/javascript">
    $('#chkAllItemNew').die('click');
    $('#chkAllItemNew').live("click", function (e) {
        if (this.checked) {
            $('INPUT[name="chkItemNew"][type=checkbox]').attr('checked', 'checked');
            $('#btnAddItemsToTest').removeAttr('disabled');
        }
        else {
            $('INPUT[name="chkItemNew"][type=checkbox]').removeAttr('checked');
            $('#btnAddItemsToTest').attr('disabled', 'disabled');
        }
    });

    $('INPUT[name="chkItemNew"][type=checkbox]').live("click", function (e) {
        if (this.checked) {
            $('#btnAddItemsToTest').removeAttr('disabled');
            var checkboxes = $('INPUT[name="chkItemNew"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $('#chkAllItemNew').removeAttr('checked');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $('#chkAllItemNew').attr('checked', 'checked');
            }
        }
        else {
            $('#chkAllItemNew').removeAttr('checked');
            var checkedboxes = $('INPUT[name="chkItemNew"][type=checkbox]:checked');
            if (checkedboxes.length > 0) {
            }
            else {
                $('#btnAddItemsToTest').attr('disabled', 'disabled');
            }
        }
    });

    function getSelectedItemsNew() {
        var Ids = '';
        $('INPUT[name="chkItemNew"][type=checkbox]:checked').each(function (i, e) {
            Ids += $(e).val() + ',';
        });
        return Ids.substr(0, Ids.length - 1);
    }
    function uncheckAllSelectedqQtiItemsNew() {
        $('INPUT[name="chkItemNew"][type=checkbox]').removeAttr('checked');
        $('#btnAddItemsToTest').attr('disabled', 'disabled');
    }
</script>
