@model LinkIt.BubbleSheetPortal.Models.Class

<style type="text/css">
    .not-active {
        pointer-events: none;
        cursor: default;
        text-decoration: none;
        color: black;
    }
</style>

<p style="height: 5px"></p>
<div class="no-margin last-child">
    <table id="dataTableClassTeacher" class="datatable table no-margin" width="100%">
        <thead>
            <tr>
                <th scope="col" style="width: 15px">
                </th>
                <th scope="col">
                    <span class="column-sort">
                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                    </span>
                    First Name
                </th>
                <th scope="col">
                    <span class="column-sort">
                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                    </span>
                    Last Name
                </th>
                <th scope="col">
                    <span class="column-sort">
                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                    </span>
                    Class Role
                </th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<script type="text/javascript">
    $(function () {
        $('.dataadmin').addClass('current');
        var optionClassStudent =
        {
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetTeachersForClass")?classId=@Model.Id',
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'ClassUserId', bSearchable: false, bSortable: false },
                { sType: 'string', sName: 'TeacherFirstName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'TeacherLastName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'LOEName', bSearchable: true, bSortable: true },
                { sType: 'integer', sName: 'ClassId', bVisible: false, bSearchable: false, bSortable: false },
                { sType: 'integer', sName: 'UserId', bVisible: false, bSearchable: false, bSortable: false }
            ],
            fnServerData: function (sSource, aoData, fnCallback, oSettings) {
                oSettings.jqXHR = $.ajax({
                    "url": sSource,
                    "data": aoData,
                    "success": function (result) {
                        if (result.success == false) {
                            $('#btnCancel').trigger('click');
                        } else {
                            fnCallback(result);
                        }
                    },
                    "failure": function (result) {
                    }
                });
            },
            fnRowCallback: function(nRow, aData) {
                $('td:eq(0)', nRow).html(setTeacherIconVisibility(aData[0], aData[4], aData[5], aData[3]));
                return nRow;
            },
            fnPreDrawCallback: function (oSettings) {
                ShowBlock($('#dataTableClassTeacher'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                if(@ViewBag.CurrentUserId == 'True')
                 checkIsEditableTeachers();
                $('#dataTableClassTeacher').unblock();
                $('.with-tip').tip();
            }
        };
        $("#dataTableClassTeacher").data("options", optionClassStudent);
        initializeDataTable($("#dataTableClassTeacher"));
    });
    function checkIsEditableTeachers() {
        const $primaryTeacher = $('[userid].replaceprimaryteacher');
        const isAllowEditTeachers = $primaryTeacher.attr('userid') == @ViewBag.CurrentUserId;

        if (!isAllowEditTeachers) {
          $('[userid]').each(function () {
            const $image = $(this).find('img');
              const isPrimaryTeacher = $primaryTeacher.attr('userid') === $(this).attr('userid');
            $image.attr('src', isPrimaryTeacher ? '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/move-icon-disable.png")' : '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle-disable.png")');
            $(this).addClass('not-active');
          });
        }
    }
    function setTeacherIconVisibility(classUserId, classId, userId, classRole) {
        var editClass = '';
        var addIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
        var replaceTeacherIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/move-icon.png")';

        if ('@ViewBag.IsAlowEditTeacher' !== 'True') {
            editClass = 'not-active';
            addIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle-disable.png")';
            replaceTeacherIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/move-icon-disable.png")';
        }

        if (classRole == 'Primary') {
            return '<a href="javascript:void(0)" title="Replace Primary Teacher" classUserId="' + classUserId + '" classId="' + classId + '" userId="' + userId + '" class="with-tip replaceprimaryteacher ' + editClass +'"><img src="' + replaceTeacherIcon + '" width="16" height="16"></a>';
        }
        return '<a href="javascript:void(0)" title="Remove from class" classUserId="' + classUserId + '" classId="' + classId + '" userId="' + userId + '" class="with-tip removeTeacher ' + editClass +'"><img src="' + addIcon + '" width="16" height="16"></a>';
    }

    $(".removeTeacher").die("click");
    $('.removeTeacher').live('click', function () {
        if (confirm("Are you sure you want to remove this teacher from this class?")) {
            var classUserId = $(this).attr('classUserId');
            var classId = $(this).attr('classId');
            var userId = $(this).attr('userId');
            $(this).hide();
            $.post('@Url.Action("RemoveTeacherFromClass")', { classUserId: classUserId, classId: classId, userId: userId}, function (response) {
                if (response == true) {
                    ui.dataTableClassTeacher.fnDraw();
                } else {
                    alert(response.message);
                }
            });
        }
    });

    $(".replaceprimaryteacher").die("click");
    $('.replaceprimaryteacher').live('click', function () {
        $('#divSideContent').html('');
        $('#divSideContent').load('@Url.Action("ReplacePrimaryTeacher", new { classId = Model.Id })');
        window.location.hash = '#divSideContent';
    });

    function LoadTeachersInClass() {
        ui.dataTableClassTeacher.fnDraw();
    }
</script>