@model LinkIt.BubbleSheetPortal.Models.School
@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Models
@{
    ViewBag.Title = HelperExtensions.FormatPageTitle(ContaintUtil.DadManageSchools, "Edit School",true);
    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }

    }
}
@section jQuery {
    @BundleHelper.jQueryUpgrade()
}
<script src="@Url.Content("~/FeLibs/jquery-validation/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/FeLibs/jquery-validation/additional-methods.min.js")" type="text/javascript"></script>
<link href="@BundleHelper.Version("~/Content/css/v2/edit-school-manage-school-page.css")" rel="stylesheet" type="text/css" />
<article class="container_12" id="edit-metadata-school">
    <section style="width:70%">
        <div class="form">
            <ul style="display: none" id="error-messages" class="message error"></ul>
            <ul style="display: none" id="success-message" class="message success">
                <li>School successfully updated.</li>
            </ul>
            @using (Html.BeginForm("SchoolDetail", "ManageClasses", FormMethod.Post, new { id = "editSchoolForm", @class = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="block-section-custom mb-4">
                <h1>
                    Edit School
                </h1>
                <fieldset>
                    <p class="title-large">School Detail</p>
                    <div class="row g-3">
                        <div class="col-6">
                            <label>
                                School Name
                            </label>
                            <span class="relative">
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.DistrictId)
                                @Html.HiddenFor(model => model.SchoolMetaDatas)
                                @Html.TextBoxFor(model => model.Name, new { @class = "full-width", tabindex = "1", maxlength = 99 })
                                @Html.ValidationMessageFor(model => model.Name)
                            </span>
                        </div>
                        <div class="col-6">
                            <label>
                                @LabelHelper.SchoolCode
                            </label>
                            <span class="relative">
                                @Html.TextBoxFor(model => model.Code, new { @class = "full-width", tabindex = "2", maxlength = 19 })
                                @Html.ValidationMessageFor(model => model.Code)
                            </span>
                        </div>
                        <div class="col-6">
                            <label>
                                @LabelHelper.SchoolStateCode
                            </label>
                            <span class="relative">
                                @Html.TextBoxFor(model => model.StateCode, new { @class = "full-width", tabindex = "3", maxlength = 19 })
                                @Html.ValidationMessageFor(model => model.StateCode)
                            </span>
                        </div>

                    </div>
                </fieldset>
            </div>
            <div class="block-section-custom mb-4">
                <p class="title-large">Other School Data</p>
                <div class="row g-3">
                    <div class="col-6" v-for="field in fields">
                        <label v-text="field.Label"></label>
                        <span class="relative">
                            <input v-if="(field.Type !== 'Boolean')" name="{{ field.Type }}" type="text" class="full-width" v-model="field.Value" />
                            <input v-else type="checkbox" v-model="field.Value" value="{{field.Value}}" name="{{ field.Type }}" />
                        </span>
                    </div>
                </div>
            </div>
            <div class="block-section-custom mb-4">
                <div id="tab-students">
                    <div class="header-wrapper">
                        <p class="title-large mb-0">Users</p>
                        <a id="btnAddMoreUserToSchool" href="javascript:void(0);" class="btn btn-link pe-0 btnAddNew">
                            Add user
                            <i class="fa-solid fa-plus ms-2"></i>
                        </a>
                    </div>
                    <div id="divTeacherSchool"></div>
                </div>
            </div>
            <div class="block-section-custom">
                <div class="btn-container">
                    <button id="btnCancel" type="button" class="grey btn-blue">Back</button>
                    <button id="btnSubmit" type="submit" name="Save" class="btn-red">Submit</button>
                </div>
            </div>
            }
        </div>
    </section>
    <div id="divListuserNotMatchSchoolContainer"></div>
</article>
<script type="text/javascript">
    sessionStorage.setItem('ManageSchoolAndClass', true);
    $(function () {
        loadTeacherSchool();
        loadSchoolMeta();
        $('.dataadmin').addClass('current');
        $('#dtaManageSchools').addClass('current');
        breadcrumbDetailPage('.dataadmin', '#dtaManageSchools');
    });

    $('#btnAddMoreUserToSchool').click(openAddProgramDialog);

    $('#editSchoolForm').submit(function (event) {
        event.preventDefault();
        $('#btnSubmit').disableBt();

        var schoolMetaDatas = JSON.stringify(metadataSchoolModel.fields);
        $('#SchoolMetaDatas').val(schoolMetaDatas);

        $.ajax({
            url: $(this).target,
            type: 'POST',
            data: $(this).serialize(),
            success: function (response) {
                if (response.Success != false) {
                    loadSchoolMeta();
                    $('#error-messages').hide();
                    $('#success-message').show();
                }
                else {
                    addErrorMessages(response);
                }
                $('#btnSubmit').enableBt();
                $("html, body").animate({ scrollTop: 0 }, 200);
            },
            failure: function (response) {
                alert(response);
            }
        });
    });

    $('#btnCancel').click(function () {
        sessionStorage.setItem('ManageSchoolAndClass', true);
        location.href = '@Url.Action("ManageSchoolAndClass")';
    });

    function loadTeacherSchool() {
        $('#divTeacherSchool').load('@Url.Action("GetTeachersForSchool", new { schoolId = Model.Id })', function (response) {
            if (response == false) {
                //alert('Invalid user, please try again.');
                $("#fsListUserBySchool").hide();
            }
            else {
                $("#fsListUserBySchool").show();
            }
        });
    }

    function CloseListUser() {
        $('#divListuserNotMatchSchoolContainer').html('');
    }

    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }

    function openAddProgramDialog(event) {
        var worker = $('<div></div>');
        var userAddUrl = '@Url.Action("UserNotMatchSchool", new { schoolId = Model.Id })';

        worker.addClass("dialog")
                .attr("id", "addUser")
                .appendTo("body")
                .load(userAddUrl, function() {
                    worker.dialog({
                        title: $(this).attr("Add user"),
                        modal: false,
                        width: 750,
                        resizable: false
                    });
                });

        showModalDialogBG();
    }

    $(document).on('click', '#btnCloseUserClick', function () {
        $('.ui-widget-overlay').remove();
        $('#addUser').remove();
        
    });

</script>

<script type="text/javascript">
    var metadataSchoolModel = new Vue({
        el: '#edit-metadata-school',
        data: {
            fields: []
        },
        watch: {
            fields: function (val) {
                var checkBoxes = $('input[name="Boolean"]');
                checkBoxes.each(function () {
                    var value = $(this).val();
                    $(this).prop('checked', (value != null && value.toLowerCase() === 'true'));
                });
            }
        },
    });

    function loadSchoolMeta() {
        $.get('@Url.Action("GetListSchoolMetaData", "ManageClasses")', { schoolId: '@Model.Id', districtId: '@Model.DistrictId' },
            function (response) {
            metadataSchoolModel.fields = htmlDecodeMeta(response.data);
        });
    }

    function htmlDecodeMeta(lists) {
        return lists.map(function (list) {
            var $div = $('<div/>');
            list.Value = $div.html(list.Value || '').text();
            return list;
        });
    }
</script>
