@model LinkIt.BubbleSheetPortal.Models.Class

@{
    ViewBag.Title = "Manage Students";
}

<link href="@Url.Content("~/Content/themes/base/jquery.ui.dialog.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/css/dialog.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/css/vue-components/vue-modal.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/css/vue-components/vue-component-manage-class.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.listSplitter.js")" type="text/javascript"></script>

<article class="container_12" style="margin-top:2em" id="classes-by-teacher-and-school">
    <section class="grid_12">
        <div class="class-title">@Model.Name</div>
        <div class="block-border">
            <div class="block-content form">
                <h1>
                    Students
                    <a id="addNewStudent" href="javascript:void(0)">
                        <img src="/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png">
                        Assign Student
                    </a>
                </h1>
                <div class="clear-10"></div>
                <div id="ManageStudentsNotificationContainer"></div>
                <div class="clear-10"></div>
                <div class="no-margin last-child">
                    <table id="dataTable" class="datatable table no-margin" width="100%">
                        <thead>
                            <tr>
                                <th scope="col" style="width: 13px"><input type="checkbox" id="chkAllStudent" /></th>
                                <th scope="col" style="width: 55px">Actions</th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Last Name
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    First Name
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Middle Name
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Local ID
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Gender
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    @LabelHelper.GradeLabel
                                </th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr><td style="height: 60px;"></td></tr>
                        </tbody>
                    </table>
                    <div class="clear-10"></div>
                    <div style="left: 9px; position: relative; top: 7px; width: 300px;" class="pButton">
                        <button id="btnRemoveSelected" disabled="disabled">Remove</button>
                        <button id="btnMoveSelected" disabled="disabled">Transfer</button>
                        <a class="big-button" href="@Url.Action("ManageClass", "ManageClasses")">Back</a>
                    </div>
                    <div class="clear-10" style="height: 7px !important;"></div>
                </div>
            </div>
        </div>
    </section>
    <modal-component v-bind:show.sync="isShowModalAssignStudent" v-bind:width="800" style="display: none;">
        <div slot="header">
            <a href="#" v-on:click="closeModalAddStudentClass" class="modal-component-close">Close</a>
        </div>
        <div slot="body">
            @Html.Partial("_AvailableStudentsEnhancements")
        </div>
        <div slot="footer">
            <div class="u-text-right">
                <button v-on:click="closeModalAddStudentClass">Close</button>
            </div>
        </div>
    </modal-component>
</article>
<style type="text/css">
    #dataTable_wrapper {
        margin-bottom: -52px !important;
    }
</style>
<!--[if IE]>
    <style type="text/css">
    #dataTable_wrapper {
        margin-bottom: -48px !important;
    }
    .pButton {
        position: relative;
        top: 5px !important;
    }
</style>
<![endif]-->
<link href="@Url.Content("~/Content/css/dialog.css")" rel="stylesheet" type="text/css" />
<script src="/Scripts/ManageClass/App.js"></script>
<script type="text/javascript">
    ManageClassModel.getStudentsUrl = '@Url.Action("GetStudentsInDistrictByFilter")/?classid=';
    ManageClassModel.addStudentsToClassUrl = '@Url.Action("AddManyStudentToClass")';
    ManageClassModel.getSelectedStudentURL = '@Url.Action("GetSelectedStudentIncaseSelectAll")';
    var manageStudentDt;

    $(function () {
        var classId = '@Model.Id';
        var options = {
            bDestroy: true,
            bServerSide: true,
            oLanguage: { "sZeroRecords": "Make a selection and click on 'Apply Filters'" },
            sAjaxSource: '@Url.Action("GetStudentsInClass")?classID=@Model.Id',
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[2, "asc"]],
            aoColumns: [
                { sType: 'int', sName: 'ID', bSearchable: false, bSortable: false },
                { sType: 'int', sName: 'StudentID', bSearchable: false, bSortable: false },
                { sType: 'string', sName: 'LastName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'FirstName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'MiddleName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Code', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Gender', bSearchable: true, bSortable: true, sWidth: '85px' },
                { sType: 'string', sName: 'Grade', bSearchable: true, bSortable: true, sWidth: '85px' },
                { sType: 'bool', sName: 'CanAccess', bSearchable: true, bSortable: true, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setCheckBox(aData[1]));
                $('td:eq(1)', nRow).html(setIconVisibility(aData[1], aData[8]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                $('#ManageStudentsNotificationContainer .error').hide();
                ShowBlock($('#dataTable'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTable').unblock();
                $('.with-tip').tip();
            }
        };

        function setCheckBox(studentId) {
            var checkboxString = '<input type="checkbox" name="chkStudent" value="' + studentId + '" />';
            return checkboxString;
        }

        function setIconVisibility(studentId, canAccess) {
            var editIcon;
            var editString;
            if (canAccess == 'True') {
                editIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
                editString = '<a href="/ManageClasses/EditStudent/' + studentId + '" title="Edit Student" class="with-tip"><img src="' + editIcon + '" width="16" height="16" style="margin-right: 4px"></a>';
            } else {
                editIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil-disable.png")';
                editString = '<img src="' + editIcon + '" title="Edit Student" class="with-tip" width="16" height="16" style="margin-right: 4px">';
            }

            var deleteIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
            var deleteString = '<a href="javascript:void(0)" title="Remove" studentId="' + studentId + '" class="with-tip deleteStudent"><img src="' + deleteIcon + '" width="16" height="16"></a>';

            var moveIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/move-icon.png")';
            var moveString = '<a class="with-tip transferStudent" title="Transfer" studentId="' + studentId + '" href="javascript:void(0)"><img src="' + moveIcon + '" width="16" height="16"style="margin-right: 4px"></a>';

            return editString + moveString + deleteString;
        }

        $("#dataTable").data("options", options);
        manageStudentDt = initializeDataTable($("#dataTable"));

        function bindEvents() {
            $('#addNewStudent').click(function (e) {
                e.preventDefault();

                // openAddStudentDialog();
                $.get('@Url.Action("GetAvailableStudentsEnhancement")', { classId: classId })
                    .done(function (response) {
                        ManageClassModel.classId = classId;
                        ManageClassModel.showInactive = false;
                        ManageClassModel.manageClass.programs = response.Programs;
                        ManageClassModel.manageClass.grades = response.Grades;
                        ManageClassModel.isShowModalAssignStudent = true;
                        ManageClassModel.manageClass.programSelected = [];
                        ManageClassModel.manageClass.gradesSelected = [];
                        ManageClassModel.isShowAddNewStudent = response.IsShowAddNewStudent;
                        displayFilterManageClass();
                        registerEvent();
                    });
            });

            $('.dataadmin').addClass('current');
            $('#dtaManageClasses').addClass('current');

            $.subscribe('manageClass/studentAssigned', function (event, sender) {
                ui.dataTable.fnDraw();
            });

            $.subscribe('manageClass/transferStudentSuccess', function (event, sender) {
                LinkIt.success('#ManageStudentsNotificationContainer', 'Students successfully transferred to other class.');
                ui.dataTable.fnDraw();
            });

            $.subscribe('manageClass/transferStudentError', function (event, errorList) {
                LinkIt.error('#ManageStudentsNotificationContainer', JSON.parse(errorList));
                ui.dataTable.fnDraw();
            });
        }

        function openAddStudentDialog() {
            var worker = $('<div />');

            worker
                .addClass("dialog")
                .attr("id", "assignStudentsDialog")
                .appendTo("body")
                .load('@Url.Action("GetAvailableStudents")/?classId=' + classId, function () {
                    worker.dialog({
                        title: $(this).attr("Assign Students"),
                        close: function () {
                            $('.ui-widget-overlay').remove();
                            $(this).remove();
                        },
                        modal: false,
                        width: 650,
                        resizable: false
                    });
                });
        }

        bindEvents();
    });

    function ClosePopup(refreshGrid) {
        $(".dialog").dialog("close");
        if (refreshGrid == true) {
            ui.dataTable.fnDraw();
            $('#chkAllStudent').removeAttr('checked');
            setDisabledButtons(true);
        }
    }

    $('#dataTable').on('click', '#chkAllStudent', function () {
        if (this.checked) {
            $('INPUT[name="chkStudent"][type=checkbox]').attr('checked', 'checked');
            setDisabledButtons(false);
        }
        else {
            $('INPUT[name="chkStudent"][type=checkbox]').removeAttr('checked');
            setDisabledButtons(true);
        }
    });

    function setDisabledButtons(isDisabled) {
        if (isDisabled) {
            $('#btnRemoveSelected').attr('disabled', 'disabled');
            $('#btnMoveSelected').attr('disabled', 'disabled');
        }
        else {
            $('#btnRemoveSelected').removeAttr('disabled');
            $('#btnMoveSelected').removeAttr('disabled');
        }
    }

    $('#dataTable').on('click', 'INPUT[name="chkStudent"][type=checkbox]', function () {
        if (this.checked) {
            var checkboxes = $('INPUT[name="chkStudent"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $('#chkAllStudent').removeAttr('checked');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $('#chkAllStudent').attr('checked', 'checked');
            }
            setDisabledButtons(false);
        }
        else {
            $('#chkAllStudent').removeAttr('checked');
            var checkedboxes = $('INPUT[name="chkStudent"][type=checkbox]:checked');
            if (checkedboxes.length > 0) {
                setDisabledButtons(false);
            }
            else {
                setDisabledButtons(true);
            }
        }
    });

    function getSelectedStudentIds() {
        var studentIds = '';
        $('INPUT[name="chkStudent"][type=checkbox]:checked').each(function (i, e) {
            studentIds += $(e).val() + ',';
        });
        return studentIds.substr(0, studentIds.length - 1);
    }

    $('#dataTable').on('click', '.deleteStudent', function () {
        deleteStudent($(this));
    });

    $('#btnRemoveSelected').click(function () {
        deleteStudent(null);
    });

    $('#dataTable').on('click', '.transferStudent', function () {
        LoadMoveStudentsForm($(this));
    });

    $('#btnMoveSelected').click(function () {
        LoadMoveStudentsForm(null);
    });

    function deleteStudent(e) {
        var removedStudentIds = '';
        var confirmAlert = '';
        if (e != null) {
            removedStudentIds = $(e).attr('studentId');
            confirmAlert = "Are you sure you want to remove this student?";
        }
        else {
            removedStudentIds = getSelectedStudentIds();

            if (removedStudentIds == '') {
                alert('Please select students to remove');
                return;
            }

            confirmAlert = "Are you sure you want to remove selected student(s)?";
        }
        if (confirm(confirmAlert)) {
            setDisabledButtons(true);
            var classId = '@Model.Id';
             $.post('@Url.Action("RemoveStudentFromClass")', { classId: classId, removedStudentIds: removedStudentIds }, function (response) {
                if (response.success == true) {
                    ui.dataTable.fnDraw();
                    $('#chkAllStudent').removeAttr('checked');
                    $('INPUT[name="chkStudent"][type=checkbox]').removeAttr('checked');
                } else {
                    alert('Student does not exist, please try again.');
                }
            });
        }
    }

    function LoadMoveStudentsForm(e) {
        var data = {};
        if (e == null) {

            if (getSelectedStudentIds() == '') {
                alert('Please select students to transfer');
                return;
            }

            data = { OldClassId: '@Model.Id', SchoolId: $('#selectSchool').val(), TeacherId: $('#selectTeacher').val(), MovedStudentIDs: getSelectedStudentIds() };
        }
        else {
            var studentId = $(e).attr('studentId');
            data = { OldClassId: '@Model.Id', SchoolId: $('#selectSchool').val(), TeacherId: $('#selectTeacher').val(), MovedStudentIDs: studentId };
        }

        $("<div></div>")
            .addClass("dialog")
            .attr("id", "moveStudentDialog")
            .appendTo("body")
            .dialog({
                title: $(this).attr("Move Student"),
                close: function () { $(this).remove(); },
                modal: true,
                width: 420,
                resizable: false
            })
            .load('@Url.Action("OpenMoveStudentsForm", "Admin")', data, function () { });
    }
</script>
