<div class="modal-component-manage-class">
    <div class="block-border block-no-border">
        <div class="block-content form">
            <fieldset class="grey-bg manage-class-toggle" v-bind:class="{ 'is-toggle': isShowFilter }">
                <legend v-on:click="toggleFilter" class="u-cursor-pointer manage-class-legend">Filter by Program, Or @LabelHelper.TestGrade</legend>
                <div id="filterContent" class="columns" v-if="isShowFilter">
                    <div class="fleft u-w-p-75">
                        <h4>Program</h4>
                        <div class="columns-filters">
                            <div v-for="program in manageClass.programs" class="columns-filter">
                                <label>
                                    <input type="checkbox" v-bind:value="program.Id" v-model="manageClass.programSelected">
                                    {{ program.Name }}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="fleft u-w-p-25">
                        <h4>@LabelHelper.TestGrade</h4>
                        <div class="columns-filters">
                            <div v-for="grade in manageClass.grades" class="columns-filter">
                                <label>
                                    <input type="checkbox" v-bind:value="grade.Id" v-model="manageClass.gradesSelected">
                                    {{ grade.Name }}
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="u-text-right u-m-t-15">
            <button v-on:click="clearAllCheckBox" class="grey">Clear Filter</button>
            <button v-on:click="applyFilter" class="u-m-l-10">Apply Filters</button>
        </div>
    </div>
    <div class="block-border block-no-border">
        <div class="block-content form">
            <div class="block-heading">
                <a href="javascript:void(0)" class="block-heading-item">
                    Students
                </a>
                <a class="block-heading-item" href="#" v-on:click="changeInactive">
                    Show Inactive: <span>{{ showInactiveText }}</span>
                </a>
            </div>
            <div class="u-clearfix u-m-t-15">
                <button id="btnAddNewUserToSchool" class="button button-student-action" v-if="isShowAddNewStudent">
                    <img alt="#" src="/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png">
                    Add New Student
                </button>
                <button class="button button-student-action u-m-l-10" v-on:click="prompAddStudentToClass" v-bind:disabled="isDisabledButton">
                    <img alt="#" src="/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png">
                    Add Student<b>(s)</b> to Class
                </button>
            </div>
            <div class="u-clearfix u-m-t-15">
                <input type="checkbox" id="cbShowSelectedStudent" v-model="isShowSelectedStudent" v-bind:disabled="isDisabledShowSelectedStudent" class="field-checkbox" />
                <label for="cbShowSelectedStudent"><b>Show selected students only</b></label>
            </div>
            <div class="u-clearfix u-m-t-10">
                <div v-show="!isShowViewSelectedStudent">
                    <div class="no-margin last-child">
                        <table id="datatablefiltermanageclass" class="datatable table no-margin datatable-filter-manage-class" width="100%">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 15px; text-align: center">
                                        <input type="checkbox" id="chkAllStudent" v-on:click="checkAllStudent" v-model="isCheckAllStudent" />
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        First Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Last Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Local ID
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Gender
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.StudentGrade
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
                <div v-show="isShowViewSelectedStudent">
                    <a href="#" v-bind:class="{ 'disabled': isDisabledButton }" v-on:click="removeAllSelectedStudent" class="button button-remove-all">
                        Remove All Selected Students
                    </a>
                    <div class="no-margin last-child">
                        <table id="datatableSelectedStudentOnly" class="datatable table no-margin" width="100%">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 15px">
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        First Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Last Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Local ID
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Gender
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.StudentGrade
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <modal-component v-bind:show.sync="isShowModalAddStudentClass" v-bind:width="420">
        <div name="close"></div>
        <div slot="header"></div>
        <div slot="body">
            <div class="modal-component-loading" v-if="isLoading">
                <div class="modal-component-loading-content">
                    <h2>Loading...</h2>
                </div>
            </div>
            <p v-html="promtMessage"></p>
            <div class="u-text-right">
                <button id="isShowButtonAddStudent" v-on:click="addStudentToClass">Add Students To Class</button>
                <button v-on:click="closeModalConfirmAddStudent">Cancel</button>
            </div>
        </div>
        <div slot="footer"></div>
    </modal-component>
</div>

<script type="text/javascript">
    var allStudentTable;
    var selectedStudentTable;
    function displayFilterManageClass() {
        var $datatableFilterManageClass = $('#datatablefiltermanageclass');
        var sAjaxSourceUrl = ManageClassModel.getAjaxSource();

        var datatableSettings = {
            bServerSide: true,
            sServerMethod: "GET",
            bDestroy: true,
            sAjaxSource: sAjaxSourceUrl,
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'StudentId', bSearchable: false, bSortable: false },
                { sType: 'string', sName: 'FirstName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'LastName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Code', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Gender', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Grade', bSearchable: true, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconCheckBox(aData[0]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                $datatableFilterManageClass.css('width', 'auto').css('width', '100%');
                ShowBlock($datatableFilterManageClass, 'Loading');
                return true;
            },
            fnDrawCallback: function () {
                $datatableFilterManageClass.unblock();
                $datatableFilterManageClass.css('width', 'auto').css('width', '100%');

                var checkboxes = $('INPUT[name="chkStudentId"][type=checkbox]');
                var found = false;
                for (var i = 0; i < checkboxes.length; i++) {
                    if (!(checkboxes[i]).checked) {
                        found = true;
                    } else {
                        checkboxes.eq(i).parents('tr').addClass('is-selected');
                    }
                }

                var isCheckAllStudent = !found && checkboxes.length;
                ManageClassModel.isCheckAllStudent = isCheckAllStudent;
                $('#chkAllStudent').prop('checked', isCheckAllStudent);
            }
        }

        $datatableFilterManageClass.dataTable().fnDestroy();
        $datatableFilterManageClass.data('options', datatableSettings);
        allStudentTable = initializeDataTable($datatableFilterManageClass);
        ManageClassModel.datatableSettingAssigns = datatableSettings;
    }

    function displaySelectedStudentOnly() {
        ManageClassModel.initialDatableSelectedOnly = true;
        var $datatableSelectedStudentOnly = $('#datatableSelectedStudentOnly');

        var datatableSettings = {
            aaData: ManageClassModel.selectedStudentsObject,
            bAutoWidth: false,
            iDisplayLength: 10,
            bFilter: false,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                 { sType: 'integer', sName: 'StudentId', bSearchable: false, bSortable: false },
                 { sType: 'string', sName: 'FirstName', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'LastName', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'Code', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'Gender', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'Grade', bSearchable: false, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconCheckBox(aData[0]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($datatableSelectedStudentOnly, 'Loading');
                return true;
            },
            fnDrawCallback: function () {
                this.parent().applyTemplateSetup();
                $datatableSelectedStudentOnly.unblock();
            },
            fnInitComplete: function () {
                this.parent().applyTemplateSetup();
            },
            sDom: '<"block-controls"l<\'float-left\'<"#showUser">><f>>rti<"block-footer clearfix"<"controls-buttons"p>>'
        };

        selectedStudentTable = $datatableSelectedStudentOnly.dataTable(datatableSettings);
    }
    function setIconCheckBox(studentid) {
        var checkboxString = '<div style="text-align: center;">' + '<input style="text-align: center;" type="checkbox" name="chkStudentId" value="' + studentid + '" /></div>';
        if (ManageClassModel.isCheckAllStudent) {
            checkboxString = '<div style="text-align: center;">' + '<input style="text-align: center;" type="checkbox" checked="checked" name="chkStudentId" value="' + studentid + '" /></div>';
        }
        if (ManageClassModel.isShowSelectedStudent) {
            var deassignIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/minus-red.png")';
            checkboxString = '<a href="#" title="Remove" class="with-tip" onclick="removeStudent(event,' + studentid + ')"><img src="' + deassignIcon + '" width="16" height="16" style="margin-right: 4px"></a>';
        } else if (CheckSelected(studentid)) {
            checkboxString = '<div style="text-align: center;">' + '<input style="text-align: center;" type="checkbox" checked="checked" name="chkStudentId" value="' + studentid + '" /></div>';
        }
        return checkboxString;
    }

    $('input[name="chkStudentId"][type=checkbox]').live("click", function (e) {
        //get object rows data
        var data = allStudentTable.fnGetData($(this).parents('tr').index());
        var $chkAllStudent = $('#chkAllStudent');
        var $trRow = $(this).parents('tr');

        if (this.checked) {
            $trRow.addClass('is-selected');

            if (ManageClassModel.selectedStudents.indexOf(this.value) < 0) {
                ManageClassModel.selectedStudents.push(this.value);
                ManageClassModel.selectedStudentsObject.push(data);
            }

            var checkboxes = $('INPUT[name="chkStudentId"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $chkAllStudent.prop('checked', false);
                    checkall = false;
                    //ManageClassModel.isCheckAllStudent = false;
                    break;
                }
            }

            if (checkall) {
                $chkAllStudent.prop('checked', true);
                //ManageClassModel.isCheckAllStudent = true;
            }
        } else {
            var index = ManageClassModel.selectedStudents.indexOf(this.value);
            ManageClassModel.selectedStudents.splice(index, 1);
            ManageClassModel.selectedStudentsObject.splice(index, 1);
            //ManageClassModel.isCheckAllStudent = false;
            $chkAllStudent.prop('checked', false);
            $trRow.removeClass('is-selected');

            if (ManageClassModel.isCheckAllStudent && ManageClassModel.removeStudentSelectAll.indexOf(this.value) < 0) {
                ManageClassModel.removeStudentSelectAll.push(this.value);
            }
        }
    });
    $('#example tbody').on('click', 'tr', function () {
        $(this).toggleClass('selected'); /// it work with selected
        var data = table.row($(this)).data();
        alert(data[1] + "  " + data[2]); ///not work , it error undefined and undefined
    });

    function getSelectedStudentIds() {
        var studentIds = '';
        $('INPUT[name="chkStudentId"][type=checkbox]:checked').each(function (i, e) {
            studentIds += $(e).val() + ',';
        });
        return studentIds.substr(0, studentIds.length - 1);
    }

    function CheckSelected(studentId) {
        if ((ManageClassModel.selectedStudents.indexOf(studentId.toString()) > -1)
            && (ManageClassModel.removeStudentSelectAll.indexOf(studentId.toString()) == -1)) {
            return true;
        }
        return false;
    }

    function removeStudent(event, studentid) {
        event.preventDefault();
        $('#tips > div').remove();
        var index = ManageClassModel.selectedStudents.indexOf(studentid.toString());
        ManageClassModel.selectedStudents.splice(index, 1);
        ManageClassModel.selectedStudentsObject.splice(index, 1);

        if (ManageClassModel.isCheckAllStudent) {
            ManageClassModel.removeStudentSelectAll.push(studentid.toString());
        }
        selectedStudentTable.fnClearTable();
        selectedStudentTable.fnAddData(ManageClassModel.selectedStudentsObject);
        selectedStudentTable.fnDraw();
    }

    function registerEvent() {
        $('#btnAddNewUserToSchool').click(function () {
            $.ajax({
                url: '@Url.Action("AddNewStudentToClass")',
                type: 'POST',
                data: { classId: ManageClassModel.classId },
                success: function (response) {
                    location.href = '@Url.Action("AddNewStudent")';
                }
            });
        });
    }
</script>
