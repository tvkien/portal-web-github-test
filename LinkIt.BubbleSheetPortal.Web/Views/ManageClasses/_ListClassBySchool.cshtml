@model int
<style type="text/css">
    
    #dataTable_wrapper
    {
        margin-bottom: -65px !important;
    }
</style>
<!--[if IE]>
	<style type="text/css">
	    #dataTable_wrapper {
	        margin-bottom: -61px !important; 
	    }
	    .pButton {
	        position: relative;
	        top: 17px !important;
	    }
	</style>
<![endif]-->
<article class="container_12" style="margin-top:0em">
    <section class="grid_7">
        <div class="block-border">
            <div class="block-content form">
                <ul style="display: none" id="error-messages-classList" class="message error"></ul>
                <h1>
                    Manage Class
                    <a id="addNewClass" href="javascript:void(0)">
                        <img src="@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png")" />
                        Add new class
                    </a>
                </h1>
                <p style="height: 5px"></p>
                <table id="dataTable" width="100%" cellspacing="0" class="datatable table no-margin">
                    <thead>
                        <tr>
                            <th class="sorting_disabled" scope="col">
                                <input type="checkbox" id="chkAllClass" />
                            </th>
                            <th class="table-actions sorting_disabled" scope="col">Actions</th>
                            <th scope="col">
                                <span class="column-sort">
                                    <a href="javascript:void(0)" title="Sort Up"class="sort-up"></a>
                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                </span>Name
                            </th>
                            <th scope="col">
                                <span class="column-sort">
                                    <a href="javascript:void(0)" title="Sort Up"class="sort-up"></a>
                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                </span>@LabelHelper.Term
                            </th>
                            <th scope="col">
                                <span class="column-sort">
                                    <a href="javascript:void(0)" title="Sort Up"class="sort-up"></a>
                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                </span>Primary Teacher
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                         <tr><td style="height: 60px;"></td></tr>
                    </tbody>
                </table>
                <div class="clear-10"></div>
                <div style="left: -11px;position: relative;top: 20px; width: 100px;" class="pButton">
                    <button id="btnBatchRemoveClass" type="submit" name="Remove" disabled="disabled" onclick="deleteBatchClass()">Remove</button>
                </div>
                
            </div>
        </div>
    </section>
</article>
<input type="hidden" id="hidClassId" value="" />
<input type="hidden" id="hidTeacherId" value="" />
<script type="text/javascript">
    function LoadClassToTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: '@Url.Action("GetClassesBySchoolId")?schoolId=@Model',
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[3, "asc"], [2, "asc"], [4, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'ID', bVisible: true, bSearchable: false, bSortable: false },
                { sType: 'integer', sName: 'UserID', bVisible: true, bSearchable: false, bSortable: false, sWidth: "50px" },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Term', bSearchable: true, bSortable: true },                
                { sType: 'string', sName: 'PrimaryTeacher', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Locked', bVisible: false, bSearchable: false, bSortable: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setCheckBox(aData[0]));
                $('td:eq(1)', nRow).html(setIconVisibility(aData[0]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTable'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTable').unblock();
                $('.with-tip').tip();
            }
        };
        $("#dataTable").data("options", options);
        initializeDataTable($("#dataTable"));
    }

    function setCheckBox(classID) {
        var checkboxString = '<input type="checkbox" name="chkClass" value="' + classID + '" />';
        return checkboxString;
    }

    function setIconVisibility(classID) {
        var editIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editString = '<a href="javascript:void(0)" title="Edit" classId="' + classID + '" class="with-tip editClass" ><img src="' + editIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        var deleteIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
        var deleteString = '<a href="javascript:void(0)" title="Delete" classId="' + classID + '" class="with-tip deleteClass" onclick="deleteClass(this)"><img src="' + deleteIcon + '" width="16" height="16"></a>';

        return editString + deleteString;
    }

    function deleteClass(e) {
        removeErrorMessages('error-messages-classList');
        if (confirm('Are you sure you want to delete this class?') == false) return;
        var classID = $(e).attr('classId');
        $.ajax({
            url: '@Url.Action("DeleteClass")',
            type: 'POST',
            data: {classId: classID},
            success: function (response) {
                if (response.Success != false) {
                    if (typeof refreshTable == 'function') {
                        refreshTable("#dataTable");
                    }
                }
                else {
                    addErrorMessagesToList(response, 'error-messages-classList');
                }
            },
            failure: function (response) {
                alert(response);
            }
        });
    }

    function deleteBatchClass() {
        if (confirm('Are you sure you want to delete these classes?') == false) return;
        var removeClassIds = getSelectedClassIds();
        $('#error-messages-classList').hide();
        setDisabledButtons(true);
        $.ajax({
            url: '@Url.Action("DeleteBatchClasses")',
            type: 'POST',
            data: { listIds: removeClassIds },
            success: function (response) {
                if (response.Success != false) {
                    if (typeof refreshTable == 'function') {
                        refreshTable("#dataTable");
                    }
                }
                else {
                    addErrorMessagesToList(response, 'error-messages-classList');
                }
            },
            failure: function (response) {
                alert(response);
            }
        });
    }

    $('#dataTable').on('click', '.editClass', function () {
        var classID = $(this).attr('classId');
        if (classID != undefined) {
            var url = '@Url.Action("EditClass")/' + classID;
            window.location.href = url;
        }
    });

    $('#addNewClass').click(function () {
        location.href = "/ManageClasses/AddClass";
    });

    $('INPUT[name="chkClass"][type=checkbox]').live("click", function (e) {
        if (this.checked) {
            var checkboxes = $('INPUT[name="chkClass"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $('#chkAllClass').removeAttr('checked');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $('#chkAllClass').attr('checked', 'checked');
            }
            setDisabledButtons(false);
        }
        else {
            $('#chkAllClass').removeAttr('checked');
            var checkedboxes = $('INPUT[name="chkClass"][type=checkbox]:checked');
            if (checkedboxes.length > 0) {
                setDisabledButtons(false);
            }
            else {
                setDisabledButtons(true);
            }
        }
    });

    $('#chkAllClass').live("click", function (e) {
        if (this.checked) {
            $('INPUT[name="chkClass"][type=checkbox]').attr('checked', 'checked');
            setDisabledButtons(false);
        }
        else {
            $('INPUT[name="chkClass"][type=checkbox]').removeAttr('checked');
            setDisabledButtons(true);
        }
    });

    function setDisabledButtons(isDisabled) {
        if (isDisabled) {
            $('#btnBatchRemoveClass').attr('disabled', 'disabled');
        }
        else {
            $('#btnBatchRemoveClass').removeAttr('disabled');
        }
    }

    function getSelectedClassIds() {
        var classIds = '';
        $('INPUT[name="chkClass"][type=checkbox]:checked').each(function (i, e) {
            classIds += $(e).val() + ',';
        });
        return classIds.substr(0, classIds.length - 1);
    }

    $(function () {
        LoadClassToTable();
    });
</script>
