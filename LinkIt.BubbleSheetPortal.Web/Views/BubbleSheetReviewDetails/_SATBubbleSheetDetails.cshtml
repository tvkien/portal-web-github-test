@using LinkIt.BubbleSheetPortal.Models
@using LinkIt.BubbleSheetPortal.Models.Extensions
@model LinkIt.BubbleSheetPortal.Web.ViewModels.SATBubbleSheetStudentDetailsViewModel

<style type="text/css">
    /* demo CSS (inline - bad form.) */

    body {
        font: normal 75% verdana,tahoma,arial;
    }

    h2 {
        padding: 0.5em;
        background: #eee;
        border: 1px solid #ccc;
    }

    h1 {
        font-size: 1.25em;
    }

    h2 {
        font-size: 1.1em;
    }

    pre {
        color: #000099;
        font-size: 1.2em;
        *font-size: 1em;
    }

    #soundmanager-debug {
        position: fixed;
        _position: absolute; /* IE <7 */
        bottom: 1em;
        right: 1em;
        width: 40em;
        height: 30em;
        overflow: auto;
        border: 1px solid #ccc;
        padding: 1em;
        margin: 1em;
        font-family: monaco,"VT-100",terminal,"lucida console",courier,system;
        font-size: x-small;
        background: #f6f6f6;
        opacity: 0.9;
    }

        #soundmanager-debug code {
            font-size: 1.1em;
            *font-size: 1em;
        }

        #soundmanager-debug div {
            margin-top: 0.5em;
        }

    .URLbutton {
        font: bold 11px Arial;
        color: White;
        text-decoration: none;
        background-color: Blue;
        padding: 2px 6px 2px 6px;
        border-top: 1px solid #CCCCCC;
        border-right: 1px solid #333333;
        border-bottom: 1px solid #333333;
        border-left: 1px solid #CCCCCC;
    }

    #manEntryGuide {
        line-height: 20px;
        border: solid 1px blue;
        background-color: white;
        padding: 5px 20px;
        margin: 10px 0px 0px 0px;
    }

    .clear {
        clear: both;
    }

    .egLeft {
        float: left;
        width: 70px;
        padding-left: 50px;
        color: blue;
    }

    .egRight {
        float: left;
        width: 200px;
        color: #880015;
    }
</style>

<section class="grid_7">
    <div id="reviewDetailsContent" class="block-border">
        <div class="block-content form">
            <h1>Bubble Sheet Details</h1>
            <fieldset class="grey-bg">
                <legend>Details</legend>
                <div class="columns">
                    <div class="colx3-left">
                        @if (string.IsNullOrEmpty(Model.ImageUrl) || Model.IsManualEntry)
                        {
                            <img src="@Url.Content("~/Content/images/noimage.png")" width="128px" height="170px" />
                        }
                        else if (Model.OnlyOnePage)
                        {
                            <a href="#" data-href="@Model.ImageUrl" onclick="DisplayBubbleSheetFileByBubbleSheetID(0, 0, 'single');">
                                <img src="@Model.ImageUrl" width="128px" height="170px" />
                            </a>
                        }
                        else
                        {
                            <div onclick="DisplayBubbleSheetFileByBubbleSheetID(@Model.BubbleSheetId, @Model.StudentId);">
                                <img src="@Model.ImageUrl" width="128px" height="170px" />
                            </div>
                        }
                         
                    </div>
                    <div class="colx3-right-double studentDetails">
                        <p><b>Student:</b> @Model.StudentName</p>
                        <p><b>Teacher:</b> @Model.TeacherName</p>
                        <p><b>Class:</b> @Model.ClassName</p>
                        <p><b>School:</b> @Model.SchoolName</p>
                        @if (Model.HasBubbleSheetFile)
                        {
                        if (Model.UploadedDate == null)
                        {
                            <p><b>Uploaded: </b><span>Not Available</span></p>
                        }
                        else
                        {
                            <p data-ticks="@Model.UploadedDate.GetValueOrDefault().ToUnixTime()"><b>Uploaded: </b><span class="localTime">@Model.UploadedDate</span></p>
                        }
                        <p><b>Uploaded By:</b> @Model.UploadedBy</p>
                        if (!string.IsNullOrEmpty(Model.FileName))
                        {
                            <p><b>File Name:</b> @Model.FileName</p>
                        }
                        }

                        @if (!string.IsNullOrEmpty(Model.VirtualTestFileKey))
                        {
                            <p>
                                <b>Rubric file:</b> <a href="/notification/downloadRubricFile?key=@Model.VirtualTestFileKey" target="_blank">@Model.VirtualTestFileName</a>
                            </p>
                        }

                        @if (!Model.HasBubbleSheetFile)
                        {
                            <button type="button" id="btnMarkAsAbsent">Mark as Absent</button>
                        }

                    </div>
                </div>
            </fieldset>

            @if (Model.UnansweredQuestions.Count > 0 && Model.AnsweredQuestions.Count == 0)
            {
                <fieldset class="grey-bg coolfieldset fieldset-collapse">
                    <legend id="advancedOptionTog" name="AdvancedOption" class="legend-collapse">Advanced Options</legend>
                    <div class="columns" id="advancedOptionDiv">
                        @if (!Model.IsMultipleChoice)
                        {
                            <button id="manualEntryButton" class="URLbutton">Keyboard Entry</button>
                        }
                        <button id="aSelection" class="URLbutton">Select All As</button>
                        <button id="btnDisplayInstructions" class="URLbutton">Show Instructions</button>
                        <div id="manEntryGuide" style="visibility: hidden">
                            <div><b>Please use the following keys for manual entry:</b></div>
                            <div>
                                <div class="egLeft">a or m</div>
                                <div class="egRight">to select choice A</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">b or ,</div>
                                <div class="egRight">to select choice B</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">c or .</div>
                                <div class="egRight">to select choice C</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">d or /</div>
                                <div class="egRight">to select choice D</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">e</div>
                                <div class="egRight">to select choice E</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">f</div>
                                <div class="egRight">to select choice F</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">g</div>
                                <div class="egRight">to select choice G</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">h</div>
                                <div class="egRight">to select choice H</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">i</div>
                                <div class="egRight">to select choice I</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">j</div>
                                <div class="egRight">to select choice J</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">k</div>
                                <div class="egRight">to select choice K</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">0</div>
                                <div class="egRight">to select choice 0</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">1</div>
                                <div class="egRight">to select choice 1</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">2</div>
                                <div class="egRight">to select choice 2</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">3</div>
                                <div class="egRight">to select choice 3</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">4</div>
                                <div class="egRight">to select choice 4</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">5</div>
                                <div class="egRight">to select choice 5</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">6</div>
                                <div class="egRight">to select choice 6</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">7</div>
                                <div class="egRight">to select choice 7</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">8</div>
                                <div class="egRight">to select choice 8</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">9</div>
                                <div class="egRight">to select choice 9</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">n</div>
                                <div class="egRight">to delete the previous entry</div>
                            </div>
                            <div class="clear"></div>
                            <div>
                                <div class="egLeft">s</div>
                                <div class="egRight">to skip a question</div>
                            </div>
                            <div class="clear"></div>
                        </div>
                    </div>
                </fieldset>
            }
            <fieldset>
                <legend>Test Date</legend>
                <table class="table" width="100%">
                    <thead>
                        <tr>
                            <th style="width: 75px"></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int index = 0; index < Model.ResultDateChoices.Count; index++)
                        {
                        var choice = Model.ResultDateChoices[index];
                            <tr class="testDate">
                                <td><p class="input-height">@choice.Label</p></td>
                                <td>
                                    <p class="input-height">
                                        @for (int i = 0; i < 10; i++)
                                    {
                                            <input type="radio"
                                                   @(choice.Choice == i.ToString() ? "checked=checked" : "")
                                                   name="@string.Format(" {0}", index)"
                                                   id='@string.Format("{0}-{1}", choice.Property, i)'
                                                   questionorder="@string.Format(" {0}", index + 1)"
                                                   sectionquestionindex="@string.Format(" {0}", index + 1)"
                                                   value="@i"
                                                   class="radioButtonAnswer" />
                                            <label class="letterLabel">@i</label>
                                        if (i == 4)
                                        {
                                            <br /><br />
                                        }
                                    }
                                    </p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </fieldset>

            @if (Model.UnansweredQuestions.Any())
            {
                <fieldset>
                    <legend>@Model.UnansweredQuestionLable</legend>
                @using (Html.BeginForm("SubmitACTTestQuestions", "BubbleSheetReviewDetails", FormMethod.Post))
                {
                    for (int iUnanswer = 1; iUnanswer <= Model.ListSection.Count; iUnanswer++)
                    {
                        var lstUnansweredQuestionSection = Model.UnansweredQuestions.Where(o => o.OrderSectionIndex == iUnanswer).OrderBy(o => o.OrderSectionQuestionIndex).ToList();
                        if (lstUnansweredQuestionSection.Count > 0)
                        {
                            if (string.IsNullOrEmpty(@lstUnansweredQuestionSection[0].SectionTitle))
                            {
                                <div>Section @iUnanswer </div>
                            }
                            else
                            {
                                <div>@lstUnansweredQuestionSection[0].SectionTitle</div>
                            }
                            <table class="table" width="100%">
                                <thead>
                                    <tr>
                                        <th style="width: 75px">@Model.QuestionLable</th>
                                        <th>@Model.AnswerChoicesLable</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var unansweredQuestion in lstUnansweredQuestionSection)
                                    {
                                        <tr class="unAnswerRow" questionid="@unansweredQuestion.QuestionId" sectionindex="@unansweredQuestion.OrderSectionIndex" sectionquestionindex="@unansweredQuestion.OrderSectionQuestionIndex">
                                            <td>
                                                <p class="input-height">
                                                    @if (string.IsNullOrEmpty(unansweredQuestion.DomainTag))
                                                    {
                                                        <text>@unansweredQuestion.OrderSectionQuestionIndex</text>
                                                    }
                                                    else
                                                    {
                                                        <text>@string.Format("{0}-{1}", unansweredQuestion.OrderSectionQuestionIndex, unansweredQuestion.DomainTag)</text>
                                                    }
                                                    @if (unansweredQuestion.IsMultiMarkQuestion)
                                                    {
                                                        <text>(M)</text>
                                                    }
                                                    else
                                                    {
                                                        <text>(I)</text>
                                                    }
                                                </p>
                                            </td>
                                            <td>
                                                <p class="input-height">
                                                    @if (unansweredQuestion.QTISchemaId == (int)QTISchemaType.TextEntry)
                                                    {
                                                        <input class="textboxAnswer"
                                                               questionorder="@unansweredQuestion.QuestionOrder"
                                                               type="text"
                                                               name="@unansweredQuestion.QuestionId"
                                                               id="txtUnAnswerQuestion-@unansweredQuestion.QuestionId"
                                                               value=""
                                                               sectionindex="@unansweredQuestion.OrderSectionIndex"
                                                               sectionquestionindex="@unansweredQuestion.OrderSectionQuestionIndex"
                                                               maxlength="4" />
                                                    }
                                                    else
                                                    {
                                                        for (int i = 0; i < unansweredQuestion.AnswerChoices.Count(); i++)
                                                        {
                                                            var answerChoice = unansweredQuestion.AnswerChoices.ToList()[i];

                                                            if (unansweredQuestion.QTISchemaId == (int)QTISchemaType.ChoiceMultiple)
                                                            {
                                                                <input class="checkboxAnswer"
                                                                       questionorder="@unansweredQuestion.QuestionOrder"
                                                                       type="checkbox"
                                                                       name="@unansweredQuestion.QuestionId"
                                                                       onclick="BubbleSheetViewCheckMaxchoice(@unansweredQuestion.MaxChoice,@unansweredQuestion.QuestionId)"
                                                                       id="@unansweredQuestion.QuestionId-M-@answerChoice"
                                                                       value="@answerChoice" />
                                                                    <label class="letterLabel" for="@unansweredQuestion.QuestionId-@answerChoice">@answerChoice</label>
                                                            }
                                                            else
                                                            {
                                                                <input class="radioButtonAnswer"
                                                                       questionorder="@unansweredQuestion.QuestionOrder"
                                                                       type="radio"
                                                                       name="@unansweredQuestion.QuestionId"
                                                                       id="@unansweredQuestion.QuestionId-@answerChoice"
                                                                       value="@answerChoice"
                                                                       sectionindex="@unansweredQuestion.OrderSectionIndex"
                                                                       sectionquestionindex="@unansweredQuestion.OrderSectionQuestionIndex" />
                                                                    <label class="letterLabel" for="@unansweredQuestion.QuestionId-@answerChoice">@answerChoice</label>
                                                            }
                                                        }
                                                    }

                                                </p>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    }
                <button id="submitUnansweredQuestions" class="float-right" type="submit">Submit</button>
                }
                </fieldset>
            }
            @if (Model.AnsweredQuestions.Any())
            {
                <fieldset>
                    <legend>@Model.AnsweredQuestionLable</legend>
                @using (Html.BeginForm("SubmitACTTestQuestions", "BubbleSheetReviewDetails", FormMethod.Post))
                {
                    for (int iAnswered = 1; iAnswered <= Model.ListSection.Count; iAnswered++)
                    {
                        var lstAnsweredQuestionsSection = Model.AnsweredQuestions.Where(o => o.OrderSectionIndex == iAnswered).OrderBy(o => o.OrderSectionQuestionIndex).ToList();
                        if (lstAnsweredQuestionsSection.Count > 0)
                        {
                            if (string.IsNullOrEmpty(@lstAnsweredQuestionsSection[0].SectionTitle))
                            {
                                <div>Section @iAnswered </div>
                            }
                            else
                            {
                                <div>@lstAnsweredQuestionsSection[0].SectionTitle</div>
                            }
                            <table class="table" width="100%">
                                <thead>
                                    <tr>
                                        <th style="width: 75px">@Model.QuestionLable</th>
                                        <th>@Model.AnswerChoicesLable</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var answeredQuestion in lstAnsweredQuestionsSection)
                                    {
                                        <tr class="answeredRow" questionid="@answeredQuestion.QuestionId"
                                            questionorder="@answeredQuestion.QuestionOrder"
                                            sectionindex="@answeredQuestion.OrderSectionIndex"
                                            sectionquestionindex="@answeredQuestion.OrderSectionQuestionIndex">
                                            <td>
                                                <p class="input-height">
                                                    @if (string.IsNullOrEmpty(answeredQuestion.DomainTag))
                                                    {
                                                        <text>@answeredQuestion.OrderSectionQuestionIndex</text>
                                                    }
                                                    else
                                                    {
                                                        <text>@string.Format("{0}-{1}", answeredQuestion.OrderSectionQuestionIndex, answeredQuestion.DomainTag)</text>
                                                    }
                                                    
                                                </p>
                                            </td>
                                            <td>
                                                <p class="input-height">
                                                @if (answeredQuestion.QTISchemaId == (int)QTISchemaType.TextEntry)
                                                {
                                                        <input class="textboxAnswer"
                                                               questionorder="@answeredQuestion.QuestionOrder"
                                                               type="text"
                                                               name="@answeredQuestion.QuestionId"
                                                               id="txtAnswerQuestion-@answeredQuestion.QuestionId"
                                                               value="@answeredQuestion.AnswerLetter"
                                                               sectionindex="@answeredQuestion.OrderSectionIndex"
                                                               sectionquestionindex="@answeredQuestion.OrderSectionQuestionIndex"
                                                               maxlength="4" />
                                                }
                                                else
                                                {
                                                    for (int j = 0; j < answeredQuestion.AnswerChoices.Count(); j++)
                                                    {
                                                        var answerChoice = answeredQuestion.AnswerChoices.ToList()[j];
                                                        if (answeredQuestion.QTISchemaId == (int)QTISchemaType.ChoiceMultiple)
                                                        {
                                                            <input class="checkboxAnswer" 
                                                                   @(answeredQuestion.ListAnswerLetter.Any(o => o == answerChoice) ? "checked=checked" : "")
                                                                   questionorder="@answeredQuestion.QuestionOrder"
                                                                   type="checkbox"
                                                                   name="@answeredQuestion.QuestionId" @(answeredQuestion.ListAnswerLetter.All(o => o != answerChoice) && answeredQuestion.ListAnswerLetter.Count == answeredQuestion.MaxChoice ? "disabled='disabled'" : "")
                                                                   onclick="BubbleSheetViewCheckMaxchoice(@answeredQuestion.MaxChoice,@answeredQuestion.QuestionId)"
                                                                   id="@answeredQuestion.QuestionId-M-@answerChoice"
                                                                   value="@answerChoice" />
                                                                <label class="letterLabel" for="@answeredQuestion.QuestionId-@answerChoice">@answerChoice</label>
                                                        }
                                                        else
                                                        {
                                                            <input class="radioButtonAnswer"
                                                                   @(answeredQuestion.ListAnswerLetter.Any(o => o == answerChoice) ? "checked=checked" : "")
                                                                   questionorder="@answeredQuestion.QuestionOrder"
                                                                   type="radio"
                                                                   name="@answeredQuestion.QuestionId"
                                                                   id="@answeredQuestion.QuestionId-@answerChoice"
                                                                   value="@answerChoice"
                                                                   sectionindex="@answeredQuestion.OrderSectionIndex"
                                                                   sectionquestionindex="@answeredQuestion.OrderSectionQuestionIndex" />
                                                                <label class="letterLabel" for="@answeredQuestion.QuestionId-@answerChoice">@answerChoice</label>
                                                        }
                                                    }
                                                }
                                                </p>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    }
                <button id="submitAnsweredQuestionChanges" class="float-right" type="submit">Submit</button>
                }
                </fieldset>
            }

            <fieldset>
                <legend>Submissions</legend>
                <table class="table" width="100%">
                    <thead>
                        <tr>
                            <th>Actions</th>
                            <th>File Name</th>
                            <th>Submitted By</th>
                            <th style="width: 90px">Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!Model.PreviousBubbleSheets.Any())
                        {
                            <tr>
                                <td colspan="4">No data available</td>
                            </tr>
                        }
                        else
                        {
                            foreach (var previousBubbleSheet in Model.PreviousBubbleSheets)
                            {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(previousBubbleSheet.ImageUrl) && !Model.IsManualEntry)
                                    {
                                        if (previousBubbleSheet.OnlyOnePage)
                                        {
                                            <a href="@previousBubbleSheet.ImageUrl" target="_new">
                                                <ul class="keywords">
                                                    <li class="blue">Open Image</li>
                                                </ul>
                                            </a>
                                        }
                                        else
                                        {
                                            <div onclick="DisplayBubbleSheetFileSubByID(@previousBubbleSheet.BubbleSheetFileId);">
                                                <ul class="keywords">
                                                    <li class="blue">Open Image</li>
                                                </ul>
                                            </div>
                                        }
                                    }
                                </td>
                                <td style="width: 100px;word-break: break-all;">
                                    @(string.IsNullOrEmpty(previousBubbleSheet.FileName) ? "Manual Submission" : @previousBubbleSheet.FileName)
                                </td>
                                <td style="width: 105px">@previousBubbleSheet.UploadedBy</td>
                                @if (previousBubbleSheet.UploadedDate == null)
                                {
                                    <td style="width: 95px"><span>Not Available</span></td>
                                }
                                else
                                {
                                    <td style="width:95px" data-ticks="@previousBubbleSheet.UploadedDate.GetValueOrDefault().ToUnixTime()"><span class="localTime">@previousBubbleSheet.UploadedDate</span></td>
                                }
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </fieldset>
        </div>
    </div>
</section>
<div id="divListBubbleSheetFileSub" style="display: none;"></div>

<script type="text/javascript">
    var bubbleSheetId = '@Model.BubbleSheetId';
    var studentId = '@Model.StudentId';
    var bubbleSheetFileId = '@Model.BubbleSheetFileId';
    var rosterPosition = '@Model.RosterPosition';
    var classId = '@Model.ClassId';

    function validInputTestResultDate() {
        
        var arrResultDate = new Array();
        var vResultDate = '';
        //TestDate
        $('.testDate .radioButtonAnswer:checked').each(function() {
            //arrResultDate.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': 0, 'SectionQuestionIndex': $(this).attr('SectionQuestionIndex') });
            vResultDate = vResultDate + $(this).val();
        });
        
        if (vResultDate.length == 8) {
            try {
                var dt = Date.parse(vResultDate);
                var dtold = new Date();
                var dtNew = new Date();
                
                dtold.setFullYear(dtold.getFullYear() - 1);
                dtNew.setFullYear(dtNew.getFullYear() + 1);
                if (dt >= dtold && dt <= dtNew) {
                    //Valid RangDate
                    SubmitAnswerCorrect();
                    //alert("Submit Answer");
                } else {
                    //TODO: Show popup alert
                    ShowWarmingMessage("Are you sure you want to use a test result date that is more than one year before/after the bubble sheet generation date?");
                }
            } catch (e) {
                //maybe show popup alert invalid date
                ShowWarmingMessage("Invalid test date, are you sure you want to continue?");
            } 
        } else {
            //not choice or choice invalid Result Date    
            ShowWarmingMessage("Invalid test date, are you sure you want to continue?");
        }
    }
    
    function ShowWarmingMessage(message)
    {
        var yesButton = '<button id="btnYes" style="width:63px;margin-left:0px;" onclick="SubmitAnswerCorrect();">Yes</button>';
        var noButton = '<button style="width:63px;margin-left: 10px;" onclick="CloseMessage();">No</button>';
        var messageTextAlign = 'center';
        var messageBoxWidth = 435;
        var strHtml = '<section class="grid_5">' +
            '<div class="block-border" style="width: ' + messageBoxWidth + 'px;">' +
            '<div class="block-content form" style="padding-bottom: 1em;text-align:center;"><div style="text-align:' + messageTextAlign + ';line-height: 18px;">' + message +
            '</div><div style="text-align: center;padding-top:20px;padding-bottom:10px;">' + yesButton + noButton + '</div></div></div></section>';
        
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "satShowWarningMessage")
            .appendTo("body")
            .dialog({
                close: function () { $(this).remove(); },
                modal: true,
                width: 500,
                maxheight: 400,
                resizable: false
            });

        $('#btnYes').unbind("keydown");
        $('#btnYes').keydown(function(event) {
            if (event.keyCode == 13) {
                SubmitAnswerCorrect();
            }
        });
    }
    
    function CloseMessage() {
        $(".dialog").dialog("close");
    }

    function SubmitAnswer() {
        validInputTestResultDate();
    }

    function SubmitAnswerCorrect() {
        $(".dialog").dialog("close");
        ShowBlock($('#reviewDetailsContent'), "Submitting Bubble Sheet");
        var answers = new Array();

        //\ Always Get All : Checked
        //UnAnswered
        $('.unAnswerRow').each(function() {
            var QuestionId = 0;
            var QuestionOrder = 0;
            var answerChoice = '';
            var vSectionIndex = $(this).attr('sectionindex');
            var vSectionQuestionIndex = $(this).attr('sectionquestionindex');
            if ($('input:checkbox[id^=' + $(this).attr('QuestionID') + '].checkboxAnswer:checked').length > 0) {
                $('input:checkbox[id^=' + $(this).attr('QuestionID') + '].checkboxAnswer:checked').each(function() {
                    QuestionId = $(this).attr('name');
                    QuestionOrder = $(this).attr('questionOrder');
                    if ($(this).is(':checked'))
                        answerChoice += ',' + $(this).val();
                });
                if (answerChoice.length > 0)
                    answerChoice = answerChoice.substr(1, answerChoice.length);
                answers.push({ 'QuestionId': QuestionId, 'SelectedAnswer': answerChoice, 'QuestionOrder': QuestionOrder, 'SectionIndex': vSectionIndex, 'SectionQuestionIndex': vSectionQuestionIndex });
            }
        });
        $('.unAnswerRow .radioButtonAnswer:checked').each(function() {
            answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': $(this).attr('sectionindex'), 'SectionQuestionIndex': $(this).attr('sectionquestionindex') });
        });

        //Answered
        $('.answeredRow').each(function() {
            var QuestionId = $(this).attr('QuestionID');
            var QuestionOrder = $(this).attr('QuestionOrder');
            var answerChoice = '';
            var vSectionIndex = $(this).attr('sectionindex');
            var vSectionQuestionIndex = $(this).attr('sectionquestionindex');
            if ($('input:checkbox[id^=' + $(this).attr('QuestionID') + '].checkboxAnswer:checked').length > 0) {
                $('input:checkbox[id^=' + $(this).attr('QuestionID') + '].checkboxAnswer:checked').each(function() {
                    QuestionId = $(this).attr('name');
                    QuestionOrder = $(this).attr('questionOrder');
                    if ($(this).is(':checked'))
                        answerChoice += ',' + $(this).val();
                });
                if (answerChoice.length > 0)
                    answerChoice = answerChoice.substr(1, answerChoice.length);
                answers.push({ 'QuestionId': QuestionId, 'SelectedAnswer': answerChoice, 'QuestionOrder': QuestionOrder, 'SectionIndex': vSectionIndex, 'SectionQuestionIndex': vSectionQuestionIndex });
            }
        });
        $('.answeredRow .radioButtonAnswer:checked').each(function() {
            //answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder') });
            answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': $(this).attr('sectionindex'), 'SectionQuestionIndex': $(this).attr('sectionquestionindex') });
        });
        //\End

        $('.textboxAnswer').each(function() {
            answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': $(this).attr('sectionindex'), 'SectionQuestionIndex': $(this).attr('sectionquestionindex'), 'IsTextEntryQuestion': true });
        });

        //TestDate
        $('.testDate .radioButtonAnswer:checked').each(function() {
            //answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder') });
            answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': 0, 'SectionQuestionIndex': $(this).attr('SectionQuestionIndex') });
        });

        $.ajax({
            url: '@Url.Action("SubmitSATTestQuestions")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ StudentId: studentId, BubbleSheetFileId: bubbleSheetFileId, BubbleSheetId: bubbleSheetId, RosterPosition: rosterPosition, Answers: answers, ClassId: classId }),
            success: function (response) {
                if (response == true) {
                    $("ul.keywords[studentId='" + studentId + "'] li").html('Pending').removeClass().addClass("blue-keyword");
                    $("#bubbleSheetDetails").hide();
                    
                    if ($('#submitUnansweredQuestions').text() == 'Press Enter to Submit and Go to Next Student') {
                        moveToNextStudent(); // in Index.cshtml    
                    }
                }
                else {
                    alert('Server error. Please try again.');
                    $('#reviewDetailsContent').unblock();
                }
            }
        });
    }
    $(function () {
        $('.localTime').each(function (i, e) {
            $(this).html(displayDateWithFormat($(this).parent().data('ticks'), true));
        });

        $('#submitUnansweredQuestions').click(function (event) {
            event.preventDefault();
            SubmitAnswer();
        });

        $('#submitAnsweredQuestionChanges').click(function (event) {
            event.preventDefault();
            SubmitAnswer();
        });

        $('#btnMarkAsAbsent').click(function () {
            ShowBlock($('#reviewDetailsContent'), "Submitting Absent Student");
            $.ajax({
                url: '@Url.Action("MarkStudentAsAbsent")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ StudentId: studentId, BubbleSheetFileId: bubbleSheetFileId, BubbleSheetId: bubbleSheetId, RosterPosition: rosterPosition, ClassId: classId }),
                success: function (response) {
                    if (response == true) {
                        $("ul.keywords[studentId='" + studentId + "'] li").html('Pending').removeClass().addClass("blue-keyword");
                        $("#bubbleSheetDetails").hide();
                        //restartTimer();
                    }
                }
            });
        });
    });

    function BubbleSheetViewCheckMaxchoice(maxChoice, Id) {
        //TODO: check maxchoice
        // if select > maxchoice -> show notification or no select more.
        var total = $("input[id^='" + Id + "-M-']:checked").length;
        if (total >= maxChoice && maxChoice != 0) {
            $("input[id^='" + Id + "-M-']:not(':checked')").attr("disabled", true);
        }
        if (total < maxChoice) {
            $("input[id^='" + Id + "-M-']:not(':checked')").removeAttr("disabled");
        }
    }

    //function bubblesheetviewchoicesingle(Id) {
    //    // in the handler, 'this' refers to the box clicked on
    //    var $box = $(Id);
    //    if ($box.is(":checked")) {
    //        // the name of the box is retrieved using the .attr() method
    //        // as it is assumed and expected to be immutable
    //        var group = "input:checkbox[name='" + $box.attr("name") + "']";
    //        // the checked state of the group/box on the other hand will change
    //        // and the current value is retrieved using .prop() method
    //        $(group).prop("checked", false);
    //        $box.prop("checked", true);
    //    } else {
    //        $box.prop("checked", false);
    //    }
    //}

    $(':radio').mousedown(function(e){
        var $self = $(this);
        if( $self.is(':checked') ){
            var uncheck = function(){
                setTimeout(function(){$self.removeAttr('checked');},0);
            };
            var unbind = function(){
                $self.unbind('mouseup',up);
            };
            var up = function(){
                uncheck();
                unbind();
            };
            $self.bind('mouseup',up);
            $self.one('mouseout', unbind);
        }
    });
</script>

<script type="text/javascript" src="../../Scripts/manualentry.js"></script>

<script>
    $(function() {
        $("#manualEntryButton").trigger("click");
    });

    function DisplayBubbleSheetFileByBubbleSheetID (id, studentId, type) {
        var $reviewDetailsContent = $('#reviewDetailsContent');
        var $divListBubbleSheetFileSub = $('#divListBubbleSheetFileSub');

        ShowBlock($reviewDetailsContent, 'SubFiles');
        $divListBubbleSheetFileSub.html('');

        if (type === 'single') {
            var imageContainer = BubbleSheetReviewDetails.getBubbleSheetReviewImage(this.event.target.src);

            $reviewDetailsContent.unblock();
            BubbleSheetReviewDetails.isShowBubbleSheetImage = true;
            BubbleSheetReviewDetails.bubbleSheetImageHtml = imageContainer.outerHTML;

            Vue.nextTick(function () {
                BubbleSheetReviewDetails.$els.bubbleSheetImage.setAttribute('style', '');
            });
        } else {
            var getBubbleSheetFileUrl = '/BubbleSheetReviewDetails/GetBubbleSheetFileSubByBubbleSheetID/' + id;
            $divListBubbleSheetFileSub.load(getBubbleSheetFileUrl, function () {
                $reviewDetailsContent.unblock();
                BubbleSheetReviewDetails.isShowBubbleSheetImage = true;
                BubbleSheetReviewDetails.bubbleSheetImageHtml = $divListBubbleSheetFileSub.html();

                Vue.nextTick(function () {
                    BubbleSheetReviewDetails.$els.bubbleSheetImage.setAttribute('style', '');
                });
            });
        }
    }

    function DisplayBubbleSheetFileSubByID(id) {
        ShowBlock($('#reviewDetailsContent'), "SubFiles");
        $("#divListBubbleSheetFileSub").html('');
        $("#divListBubbleSheetFileSub").load("/BubbleSheetReviewDetails/GetBubbleSheetFileSubById/" + id, function () {
            $('#reviewDetailsContent').unblock();
            $("<div></div>")
                .html($("#divListBubbleSheetFileSub").html())
                .addClass("dialog")
                .attr("id", "messageDialog")
                .appendTo("body")
                .dialog({
                    close: function () { $(this).remove(); },
                    modal: true,
                    width: 500,
                    maxheight: 400,
                    resizable: false
                });
        });
    }


    $(".textboxAnswer").keyup(function (event) {
        if (!event)
            event = window.event;
        var code = event.keyCode;
        if (event.charCode && code == 0)
            code = event.charCode;
        if (code != 37 && code != 38 && code != 39 && code != 40) {
            var input = $(this),
                text = input.val().replace(/[^0-9./ ]/g, "");
            input.val(text);
        }
        event.preventDefault();
    });
</script>

<style>
    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay {
        background: #2b2b2d !important;
    }
</style>
<script>
    (function ($) {
        $('.legend-collapse').on('click', function () {
            $('.fieldset-collapse').toggleClass('collapsed');
        });
    })(jQuery);
</script>