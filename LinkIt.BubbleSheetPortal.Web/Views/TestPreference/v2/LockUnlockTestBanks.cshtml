@using LinkIt.BubbleSheetPortal.Web.Helpers
@model LinkIt.BubbleSheetPortal.Web.ViewModels.TestPreferenceViewModel
@using LinkIt.BubbleSheetPortal.Models
@{
    ViewBag.Title = HelperExtensions.FormatPageTitle(ContaintUtil.Onlinetesting, "Lock/Unlock Test Banks");
    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }
    }
}
@section jQuery {
    @BundleHelper.jQueryUpgrade()
}
<link href="@BundleHelper.Version("~/Content/css/v2/lockUnlockTestBank.css")" rel="stylesheet" />
<article class="container_12">
    <section class="grid_12 lock-unlock-test-banks">
        <div id="TestPreferenceContent" class="block-border">
            <div id="divLockBankFilterl2" class="form bubbleSheetSelector">
                <div class="block-section">
                    <div class="selectStateDictrict">
                        <label class="page-label">Lock/Unlock Test Banks</label>
                        @if (Model.IsPublisher || Model.IsNetworkAdmin)
                        {
                            <div id="publisherContent" class="select-test-bank">
                                <div class="header">Select State/@LabelHelper.DistrictLabel</div>
                                <div class="row row-non-button g-3 mb-3">
                                    <div class="col-12 col-md-4 block-content-dropdown-marquee">
                                        <label>State</label>
                                        <div class="block-text-name">
                                            <select id="selectState"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-4 block-content-dropdown-marquee">
                                        <label>@LabelHelper.DistrictLabel</label>
                                        <div class="block-text-name">
                                            <select id="selectDistrict"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <input id="hdfDistrictId" value="@Model.CurrentDistrictId" type="hidden" />
                        }
                    </div>
                    <div class="select-bank select-test-bank" style="z-index: 1002">
                        <div class="header">Select Test Bank</div>
                        <div class="row g-3">
                            <div class="col">
                                <label>@LabelHelper.TestGrade</label>
                                <div class="block-text-name">
                                    <select id="selectGrade"></select>
                                </div>
                            </div>
                            <div class="col block-content-dropdown-marquee">
                                <label>@LabelHelper.Subject</label>
                                <div class="block-text-name">
                                    <select id="selectSubject"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>Lock Status</label>
                                <div class="block-text-name">
                                    <select id="selectFilterType">
                                        <option value="0">All</option>
                                        <option value="1">Not Locked</option>
                                        <option value="2">Locked</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-auto apply_filler align-self-end">
                                <button id="filterSheets" type="button" class="btn-accept">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="block-border block-section" id="divListLockbankdl1">
                    <div id="divListLockbankdl2" class="form bubbleSheetSelector">
                        <div class="last-child testPreference">
                            <table id="datatable" class="datatable table" width="100%">
                                <thead>
                                    <tr>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            @LabelHelper.Subject
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            @LabelHelper.TestGrade
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Bank
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Lock
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Hide
                                        </th>
                                        <th scope="col" style="display: none">SubjectId</th>
                                        <th scope="col" style="display: none">GradeId</th>
                                        <th scope="col" style="display: none">DistrictId</th>
                                        <th scope="col" style="display: none">BankAccessId</th>
                                        <th scope="col" style="display: none">BankDistrictId</th>
                                        @*   <th scope="col" style="display: none"></th>*@
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="height: 60px;"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>

<script>
    $(function () {

         @if (Model.IsPublisher)
         {
             <text>
                    $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                        populateStates(states);
                    });
            </text>
         }
         else
         {
             if(Model.IsNetworkAdmin)
             {
                 <text>
        $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
            populateStates(states);
        });
            </text>
             }
             else
             {

                 <text>
                    $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: '-1' }, function (grades) {
                        populateGrades(grades);
                    });
                   </text>
             }
         }

        @*$.get('@Url.Action("GetGrades", "PopulateTest")', function (grades) {
            populateGrades(grades);
        });*@
    });

    (function ($) {
        "use strict";
        $(document).ready(function () {
            var marqueeList = ['#selectDistrict', '#selectSubject', '#selectState'];

            marqueeSelect(marqueeList);
        });
        function marqueeSelect(listItem) {
            if (!$.isArray(listItem) || $(listItem).length === 0) return;
            listItem.forEach(function (item) {
                var widthSelected = $(item).outerWidth();
                return $(item).marquee({ widthSelected });
            })
        }
    })(jQuery);

    function populateGradesByDistrict() {
        $('#selectGrade').empty();
        $('#selectSubject').empty();
        var districtValue = $('#selectDistrict').val();
        if (districtValue != 'select') {
            $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: districtValue }, function (grades) {
                //populateSchools(schools);
                populateGrades(grades);
            });
        }
    }

    function populateDistricts() {
        $('#selectDistrict').empty();
        var stateValue = $('#selectState').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
        }
    }

    function populateStates(states) {
        addDefaultOption($('#selectState'), "State");
        addSelectListItems($('#selectState'), states);
    }

    $('#selectState').change(function () {
        $('#selectDistrict').empty();
        $('#selectGrade').empty();
        if ($('#selectState').val() != 'select') {
            populateDistricts();
        }
    });

    $('#selectDistrict').change(function () {
        populateGradesByDistrict();
        if ($('#selectDistrict').val() != 'select') {
            $('#btnLockedbank').show();
        } else {
            $('#btnLockedbank').hide();
        }
    });

    $('#selectGrade').change(function () {
        populateSubjects();
    });

    $('#selectSubject').change(function () {
        //TODO: Subject Change
    });

    function populateGrades(grades) {
        $('#selectGrade').empty();
        defaultSelectValue($('#selectGrade'), "0", "All @LabelHelper.TestGrades");
        addSelectListItems($('#selectGrade'), grades);
        defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subjects");
    }

    function populateSubjects() {
        var gradeValue = $('#selectGrade').val();
        var districtValue = 0;
        if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() != 'select') {
            districtValue = $('#selectDistrict').val();
        }
        if (gradeValue > 0) {
            $.get('@Url.Action("GetSubjectsByGradeId", "SearchBank")', { gradeId: gradeValue, districtId: districtValue }, function (subjects) {
                defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subjects");
                addSelectListItems($('#selectSubject'), subjects);
            });
        } else {
            defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subjects");
        }
    }

</script>

<script type="text/javascript">
    $(function () {
        LoadTesClassAssignmentToTable();
    });

    function LoadTesClassAssignmentToTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            bProcessing: false,
            sAjaxSource: '@Url.Action("GetBankByDistrict")',
            fnServerParams: function (aoData) {
                var subject = [];
                if ($('#selectSubject').val() != null) {
                    subject = $('#selectSubject').val().split(',');
                }
                for (var i = 0; i < subject.length; i++) {
                    aoData.push({ name: "SubjectIds", value: subject[i] });
                }
                aoData.push(
                    //{ name: "SubjectIds", value: $('#selectSubject').val() },
                    { name: "GradeId", value: $('#selectGrade').val() },
                    { name: "DistrictId", value: $('#selectDistrict').val() },
                    { name: "BankDistrictAccessId", value: $('#selectFilterType').val() }
                );
            },
            iDisplayLength: 25,
            aoColumns: [
                { sType: 'string', sName: 'SubjectName', bSearchable: true, bSortable: true, bVisible: true, sWidth: '200px' },
                { sType: 'string', sName: 'GradeName', bSearchable: true, bSortable: true, bVisible: true, sWidth: '150px' },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true, bVisible: true},
                { sType: 'int', sName: 'BankDistrictAccessId', bSearchable: true, bSortable: true, bVisible: true, sWidth: '150px', sClass: 'checkboxCenter'},
                { sType: 'bool', sName: 'Hide', bSearchable: false, bSortable: true, bVisible: true, sWidth: '120px', sClass: 'checkboxCenter'},
                { sType: 'int', sName: 'SubjectId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'GradeId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'DistrictId', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'BankAccessId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'BankDistrictId', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {

                $('td:eq(3)', nRow).html(SetIconVisibilityBank(aData[9], aData[3], aData[8]));
                $('td:eq(4)', nRow).html(SetIconHideBank(aData[9], aData[4], aData[3], aData[8]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                $('#filterSheets').attr("disabled", "disabled");

                return true;
            },
            fnDrawCallback: function () {
                $('#TestPreferenceContent').unblock();
                $('#filterSheets').removeAttr("disabled");
                portalV2SkinCheckBox();
                portalV2SkinRadio();
                return true;
            },
            fnInitComplete: function () {
                var elSearchLabel = $('#datatable_filter label');
                var elSearchInput = elSearchLabel.find('input');

                elSearchInput.css({ paddingLeft: '35px', position: 'relative' });
                elSearchInput.get(0).style.setProperty('padding-left', '32px', 'important');

                elSearchLabel.replaceWith(elSearchInput);
                $('#datatable_filter').addClass('data-search')
                portalV2SkinCheckBox();
                portalV2SkinRadio();
            }
        };
        $("#datatable").data("options", options);
    }

    function setupFilters() {
        ShowBlock($('#TestPreferenceContent'), 'Loading');

        var dataTable = $('#datatable').dataTable();
        var settings = dataTable.fnSettings();
        fnResetAllFilters(settings);

        dataTable.fnDraw();
    }

    function fnResetAllFilters(oSettings) {
        for (var iCol = 0; iCol < oSettings.aoPreSearchCols.length; iCol++) {
            oSettings.aoPreSearchCols[iCol].sSearch = '';
        }
    }

    function filterColumn(searchTerm, columnIndex, settings) {
        settings.aoPreSearchCols[columnIndex].sSearch = searchTerm;
        settings.aoPreSearchCols[columnIndex].bRegex = false;
        settings.aoPreSearchCols[columnIndex].bSmart = true;
    }

    $('#filterSheets').unbind('click');
    $('#filterSheets').click(function () {
        setupFilters();
    });

    function SetIconVisibilityBank(bankDistrictId, districtBankStatus, bankStatus) {
        var result = '';
        var unlockString = '';
        var lockString = '';
        if (bankDistrictId > 0) {
            if (districtBankStatus == 1) {
                if (bankStatus == 2) {
                    unlockString = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is locked by the author" checked>';
                    //unlockString = '<img class="Gray-Out" src ="' + unlockIcon + '" style="margin-right: 4px; margin-top: -5px; cursor: pointer;" title="The bank is locked by the author">';
                    result += unlockString;
                } else {
                    unlockString = '<input type="checkbox" value="' + bankDistrictId + '" onchange="LockAndUnLockBank(' + bankDistrictId + ')" title="Lock Bank">';
                    //unlockString = '<div onclick="LockAndUnLockBank(' + bankDistrictId + ')" class="with-tip actionIcon"><img src ="' + unlockIcon + '" style="margin-right: 4px; margin-top: -5px;cursor: pointer;" title="Lock Bank"></div>';
                    result += unlockString;
                }
            } else {

                if (bankStatus == 2) {
                    lockString = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is locked by the author" checked>';
                    //lockString = ' <img class="Gray-Out" src ="' + lockIcon + '" style="margin-right: 4px; margin-top: -5px;cursor: pointer;" title="The bank is locked by the author">';
                    result += lockString;

                } else {
                    lockString = '<input type="checkbox" value="' + bankDistrictId + '" onchange="LockAndUnLockBank(' + bankDistrictId + ')" title="Unlock Bank" checked>';
                    //lockString = '<div  onclick="LockAndUnLockBank(' + bankDistrictId + ')" class="with-tip actionIcon"><img src ="' + lockIcon + '" style="margin-right: 4px; margin-top: -5px;cursor: pointer;" title="Unlock Bank"></div>';
                    result += lockString;
                }
            }
        } else {
            if (bankStatus == 2) {
                lockString = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is not published by the author" checked>';
                //lockString = '<img class="Gray-Out" src ="' + lockIcon + '" style="margin-right: 4px; margin-top: -5px;cursor: pointer;" title="The bank is not published by the author">';
                result += lockString;
            } else {
                unlockString = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is not published by the author">';
                //unlockString = ' <img class="Gray-Out" src ="' + unlockIcon + '" style="margin-right: 4px; margin-top: -5px;cursor: pointer;" title="The bank is not published by the author">';
                result += unlockString;
            }
        }
        return result;
    }

    function LockAndUnLockBank(bankDistrictId) {
        @*$.post('@Url.Action("UpdateStatusBankDistrict", "TestPreference")', { bankDistrictId: bankDistrictId }, function (response) {
            if (response.Success == 'Success') {
                //TODO: Change Status Success
                //alert("Change Status Success: " + bankDistrictId);
                setupFilters();
            } else {
                //TODO: Change Status Fail
                //alert("Change Status Fail: " + bankDistrictId);
            }

        });*@
        ShowBlock($('#divListLockbankdl1'), 'Changing');
        $.ajax({
            type: "POST",
            url: '@Url.Action("UpdateStatusBankDistrict", "TestPreference")',
            data: { bankDistrictId: bankDistrictId },
            success: function (response) {
                $('#divListLockbankdl1').unblock();
            },
            dataType: 'json'
        });
    }

    function defaultSelectValue(selectList, objctValue, objectText) {
        selectList.empty();
        selectList
            .append($("<option></option>")
                    .attr("value", objctValue)
                    .text("Select " + objectText));
    }

    function SetIconHideBank(bankDistrictId, hide, districtBankStatus, bankStatus) {
        var result = '';
        if (bankDistrictId > 0) {
            if (districtBankStatus == 1) {
                if (bankStatus == 2) {
                    result = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is locked by the author">';
                } else {

                    if (hide=='True') {
                        result = '<input type="checkbox" value="' + bankDistrictId + '" onchange="hideBank(this)" class="HideBank" checked>';
                    } else {
                        result = '<input type="checkbox" value="' + bankDistrictId + '" onchange="hideBank(this)" class="HideBank">';
                    }

                }
            } else {

                if (bankStatus == 2) {
                    result = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is locked by the author">';

                } else {
                    if (hide == 'True') {
                        result = '<input type="checkbox" value="' + bankDistrictId + '" onchange="hideBank(this)" class="HideBank" checked>';
                    } else {
                        result = '<input type="checkbox" value="' + bankDistrictId + '" onchange="hideBank(this)" class="HideBank">';
                    }
                }
            }
        } else {
                result = '<input type="checkbox" value="' + bankDistrictId + '" class="HideBank" disabled = "disabled" title="The bank is not published by the author">';
        }

        return result;
    }
    function hideBank(checkbox) {
        var ctrl = $(checkbox);
        var bankDistrictId = ctrl.attr("value");
        var hide = ctrl.is(":checked");
        var selectDistrict = $('#selectDistrict').val();
        ShowBlock($('#divListLockbankdl1'), 'Changing');
        $.get('@Url.Action("HideBankDistrict", "TestPreference")', { bankDistrictId: bankDistrictId, hide: hide, selectDistrictId:selectDistrict }, function (response) {
            $('#divListLockbankdl1').unblock();
            if (response.Success == 'Success') {
                if (hide) {
                    //CustomAlert('Test is now hidden from teachers.');
                } else {
                    //CustomAlert('Test is now visible to teachers.');
                }

            } else {
                if (response.Data != 'undefined') {
                    CustomAlert(response.Data);
                } else {
                    CustomAlert('There was some error. Can not change value hide of Test.');
                }

            }

        });
    }

</script>
