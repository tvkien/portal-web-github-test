@model LinkIt.BubbleSheetPortal.Web.ViewModels.AddEditStudentGroupViewModel 

<article class="container_10">
    <section class="grid_20">
        <div id="divAddEditGroup" class="block-border" style="position: static">
            <div class="block-content form" style="position: static">
                @if (Model.GroupId > 0)
                {
                    <h1 class="title_edit_group" style="left: 2.5em; top: 2.0em">
                        Edit Group</h1>
                }
                else
                {
                    <h1 class="title_edit_group" style="left: 2.5em; top: 2.0em">
                        Add New Group</h1>
                }
              
                <ul style="display: none" id="error-messages-AddEdit" class="message error">
                    <li>Error message</li>
                </ul>
                <div class="clear-10"></div>
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    //Publisher can select district and school
                <fieldset class="grey-bg parentConnectSelector">
                    <legend>Select @LabelHelper.DistrictLabel/School</legend>
                    <div class="columns" style="position: static">
                        <div class="colx2-left">
                            <p>
                                @LabelHelper.DistrictLabel<br />
                            <select id="selectDistrictAddEdit"></select>
                        </p>
                        </div>
                        <div class="colx2-right">
                            <p>
                            School<br />
                            <select id="selectSchoolAddEdit"></select>                    
                        </p>
                        </div>
                    </div>
                </fieldset>
                }
                else
                {
                    //@LabelHelper.DistrictLabel admin,School admin and Teacher can not select district but they may have more than one school,so we have to display all school they have access to
                 <fieldset class="grey-bg parentConnectSelector">
                    <legend>Select School</legend>
                    <div class="columns" style="position: static">
                        <div class="colx2-left">
                            <p>
                            School<br />
                            <select id="selectSchoolAddEdit"></select>                    
                        </p>
                        </div>
                    </div>
                </fieldset>
                }
                <fieldset>
                    <legend>Group Info</legend>
                    <div class="columns" style="position: static">
                        <p>
                            <label>
                                Name</label>
                            <span class="relative" style="position: relative; z-index: 9999">
                                @Html.TextBoxFor(x => x.Name, new { @class = "full-width", tabindex = "1" })
                                @Html.ValidationMessageFor(x => x.Name, "Group name is require.")
                            </span>
                        </p>
                    </div>
                </fieldset>
                <fieldset id="fdMemberClasses">
                    <legend>Member Students</legend>
                    <div>
                        <table id="dataTableAddEditGroup" class="datatable table no-margin" width="875px">
                            <thead>
                                <tr>
                                    <th scope="col">
                                         Teachers
                                    </th>
                                    <th scope="col">
                                        Terms
                                    </th>
                                    <th scope="col">
                                        Classes
                                    </th>
                                    <th scope="col">
                                        Students
                                    </th>
                                    <th scope="col">
                                        Students in Group
                                    </th>
                                </tr>
                                <tr>
                                    <td scope="col" width="175px" style="padding: 0">
                                        <div style="overflow-y: auto; width: auto; height: 328px">
                                            <table id="tbTeachers" style="width: 100%; overflow-x: hidden;">
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                    <td scope="col" width="175px" style="padding: 0">
                                        <div style="overflow-y: auto; width: auto; height: 328px">
                                            <table id="tbTerms" style="width: 100%; overflow-x: hidden;">
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                    <td scope="col" width="175px" style="padding: 0">
                                        <div style="overflow-y: auto; width: auto; height: 328px">
                                            <table id="tbClasses" style="width: 100%; overflow-x: hidden;">
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                    <td scope="col" width="175px" style="padding: 0">
                                        <div style="overflow-y: auto; width: auto; height: 328px">
                                            <table id="tbStudents" style="width: 100%; overflow-x: hidden;">
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                    <td scope="col" width="175px" style="padding: 0">
                                        <div style="overflow-y: auto; width: auto; height: 328px">
                                            <table id="tbGroupStudent" style="width: 100%; overflow-x: hidden;">
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="5" style="background: #E4E4DC; border: 0; padding-bottom: 10px; padding-top: 10px;">
                                        <div id="divStudentInGroupDetail" style="float: right; font-size:16px;">
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="5" style="background: #E4E4DC; border: 0; padding-bottom: 10px; padding-top: 10px;">
                                        <div style="text-align: center;">
                                            <button id="btnCancelStudent" type="button" name="Cancel" class="grey" onclick="cancel(event)">
                                                Cancel</button>
                                            <button id="btnRemoveStudent" type="button" name="Remove" class="grey" onclick="RemoveStudentInGroupSelected(event)">
                                                Remove</button>
                                            <button id="btnAddStudent" type="button" name="AddStudent" onclick="AddStudentToGroup(event)">
                                                Add Student</button>
                                            <button id="btnSelectAllStudent" type="button" name="SelectAllStudent" onclick="SelectAllStudent(event)">
                                                Select All</button>
                                            <button id="btnContinueStudent" type="button" name="Continue" onclick="ValidGroupStudentName(event)">
                                                Save</button>
                                        </div>
                                    </td>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </fieldset>
            </div>
        </div>
    </section>
</article>
<style type="text/css">
    article
    {
        margin-top: 0 !important;
    }
    
    .block-content .no-margin
    {
        margin-left: -0.667em !important;
    }
   
    .table thead td
    {
        color: #000 !important;
        text-shadow: 0 0px;
    }
    .ui-widget-header{ position:relative; z-index:9999}
</style>
<script type="text/javascript">

  
    $(function () {
        @if(Model.IsPublisher||Model.IsNetworkAdmin)
        {
            <text>
             //show all district
        //eventhough when editing a existing group, just display default selected item 'Select District', because students from a group can come from more than one @LabelHelper.DistrictLabel
             innitDropdownListDistrictAddEdit(null);
          
            
             </text>
        }
        else
        {
            <text>
            //Display all school that user has right access to
            innitDropdownListSchoolForUser();
            
            </text>
        }
            
        //Load all student(s) in the group when editing 
        @if(Model.GroupId > 0)
        {
            <text>
            $.get('@Url.Action("GetStudentInGroupByGroupId")?studentGroupId=@Model.GroupId', function (studentInGroup) {
                FillDataToTable(studentInGroup, "tbGroupStudent", "groupstudent");
            });
            

            </text>
        }
        
    });

    function cancel(e) {
        e.preventDefault();
        $(".dialog").dialog("close");
    }
    
    function innitDropdownListDistrictAddEdit(selectedDistrictId) {
        var dropdownSelector = '#selectDistrictAddEdit';
        
        $.ajax({
            url: '@Url.Action("GetAllDistrict","Admin")',
            dataType: 'json',
            async: false,
            success: function (districts) {
                
                addDefaultOption($(dropdownSelector), "@LabelHelper.DistrictLabel");
                addSelectListWithDefaultValue($(dropdownSelector), districts, selectedDistrictId);//TuanVo
            },
            beforeSend: function () {
                //showAdminContentLoading();//TuanVo
            },
            complete: function () {
                //hideAdminContentLoading();//TuanVo
            }
        });
        
        //need to load school for a selected district
        //register event handler for changed event
        registerDdlDistrictAddEditChange();
    }
    
    function registerDdlDistrictAddEditChange() {
        var dropdownSelector = '#selectDistrictAddEdit';
        $(dropdownSelector).die("change");
        $(dropdownSelector).change(function () {
            $('#tbTeachers tbody').empty();
            vTeacherValue = 0;

            $('#tbTerms tbody').empty();
            vTermValue = 0;

            $('#tbClasses tbody').empty();
            vClassValue = 0;

            $('#tbStudents tbody').empty();
            vStudentValue = 0;
            
            var selectedValue = $(dropdownSelector).val();
            $('#selectSchoolAddEdit').empty();
            innitDropdownListSchoolAddEdit(selectedValue,null);
            
        });
    }
   function innitDropdownListSchoolForUser() {
       var dropdownSelector = '#selectSchoolAddEdit';
       
       var url = '@Url.Action("GetSchools","PopulateSchoolTeacher")';

        $.ajax({
            url: url,
            data: { districtId: null }, // district is null will cause PopulateSchoolTeacher->GetSchools get all school that user has right access to
            dataType: 'json',
            async: false,
            success: function (schools) {
                
                addDefaultOption($(dropdownSelector), "School");
                addSelectListWithDefaultValue($(dropdownSelector), schools, null);
                
            },
            beforeSend: function () {
                //showAdminContentLoading();
            },
            complete: function () {
                //hideAdminContentLoading();
            }
        });

        //need to load data when user select o school
        //register event handler for changed event
        registerDdlSchoolAddEditChange();
   }
   
    function innitDropdownListSchoolAddEdit(selectedDistrictID, selectedSchoolID) {
        var dropdownSelector = '#selectSchoolAddEdit';
        $(dropdownSelector).empty();
       // if (selectedDistrictID == null || selectedDistrictID == '' || selectedDistrictID == '0' || selectedDistrictID == 'select') {
      //      return;
      //  }
        if (selectedDistrictID == 'select') {
            return;
        }
        var url = '@Url.Action("GetSchools","PopulateSchoolTeacher")';
        
        $.ajax({
            url: url,
            data: { districtId: selectedDistrictID },
            dataType: 'json',
            async: false,
            success: function (schools) {
                addDefaultOption($(dropdownSelector), "School");
                addSelectListWithDefaultValue($(dropdownSelector), schools, selectedSchoolID);
                
                //TuanVo: if there's only one school -> display the school
                if ($('#selectSchoolAddEdit > option').length == 2) {
                    $('#selectSchoolAddEdit').get(0).selectedIndex = 1;
                    //Load student of this school
                    var selectedValue = $(dropdownSelector).val();
                    //display data
                    //Load teachers of selected school
                    SchoolsSelected(selectedValue);
                    
                }
            },
            beforeSend: function () {
                //showAdminContentLoading();
            },
            complete: function () {
                //hideAdminContentLoading();
            }
        });
       
         //need to load data when user select o school
         //register event handler for changed event
        registerDdlSchoolAddEditChange();
    }
    
    function registerDdlSchoolAddEditChange() {
        
        var dropdownSelector = '#selectSchoolAddEdit';
        $(dropdownSelector).die("change");
        $(dropdownSelector).change(function () {
            var selectedValue = $(dropdownSelector).val();
            //display data
            //Load teachers of selected school
            SchoolsSelected(selectedValue);
          
        });
    }

    //////
    var vSchoolValue = 0;
    var vTeacherValue = 0;
    var vTermValue = 0;
    var vClassValue = 0;
    var vStudentValue = 0;
    var vGroupClass = 0;
    var vGroupStudent = 0;
    var loadTermAndClass = false;
    var hasSelectAllStudent = false;
    
    function SchoolsSelected(itemselectedId) {
        
        $('#tbTeachers tbody').empty();
        vTeacherValue = 0;
        
        $('#tbTerms tbody').empty();
        vTermValue = 0;
        
        $('#tbClasses tbody').empty();
        vClassValue = 0;
        
        $('#tbStudents tbody').empty();
        vStudentValue = 0;
        if (itemselectedId == 'select') {
            return;
        }
        $("#error-messages-AddEdit").hide();
        ShowBlock($('#fdMemberClasses'), "Loading Teachers");
        //vSchoolValue = $('#' + itemselectedId).attr("keyvalue"); //TuanVo
        vSchoolValue = itemselectedId;
        $('#' + itemselectedId).attr("choose", "1");
        $('#' + itemselectedId + ' td').attr("style", "background-color:#5fb3d8; color:white !important;");
        //If current user is a teacher, just display only him/her
        @if(Model.IsTeacher)
        {
            <text>
            
            var vValue = '@Model.CurrentUserName';
            var teacherId = '@Model.CurrentUserId';

            var trId = "tbTeachers" + teacherId;

            var table = $('#tbTeachers tbody');
            table.empty();
            if ($('#tbTeachers tr[id=' + trId + ']').length == 0) {
                table.append('<tr id="' + trId + '" keyName=' + trId + ' keyvalue="' + teacherId + '" onclick="TeachersSelected (this.id)" ><td style="" >' + vValue + ' </td> </tr>');
            }
            else {
                alertMessage("Teacher " + $.trim(vValue) + " is already in this group.");
            }
            $('#fdMemberClasses').unblock();

            </text>
        }
        else
        {
            <text>
        $.get('@Url.Action("GetTeachers", "PopulateSchoolTeacher")?schoolId=' + vSchoolValue + '&hasTermOnly=True' +'&sortedByLastNameFirstName=True', function (teachers) {
                FillDataToTable(teachers, "tbTeachers", "teacher");
                $('#fdMemberClasses').unblock();
                 });
            </text>
        }
       
    }
    
    function TeachersSelected(itemselectedId) {
        $("#error-messages-AddEdit").hide();
        ShowBlock($('#fdMemberClasses'), "Loading Terms and Classes");
        $('#tbTeachers tr').removeAttr('choose');
        $('#tbTeachers td').attr("style", "background-color:; color:black;");
        $('#tbTerms tbody').empty();
        vTermValue = 0;
        $('#tbClasses tbody').empty();
        vClassValue = 0;

        $('#tbStudents tbody').empty();
        vStudentValue = 0;
        

        vTeacherValue = $('#' + itemselectedId).attr("keyvalue");
        $('#' + itemselectedId).attr("choose", "1");
        $('#' + itemselectedId + ' td').attr("style", "background-color:#5fb3d8; color:white !important;");

        $.get('@Url.Action("GetTerms", "PopulateStudent")?userId=' + vTeacherValue + '&schoolId=' + vSchoolValue, function (terms) {
            FillDataToTable(terms, "tbTerms", "term");
            if (terms.length > 0) {
                loadTermAndClass = true;
                SeletedDefaultTermItem();
            } else {
                $('#tbClasses tbody').empty();
                vTermValue = 0;
                $('#fdMemberClasses').unblock();
            }
        });
    }
    function SeletedDefaultTermItem() {
        $("#error-messages-AddEdit").hide();
        var vFirstItem = $('#tbTerms tr:first').attr("keyvalue");
        if (vFirstItem.length > 0) {
            TermsSelected($('#tbTerms tr:first').attr("id"));
        }
    }
    function TermsSelected(itemselectedId) {
        $("#error-messages-AddEdit").hide();
        if (!loadTermAndClass) {
            ShowBlock($('#fdMemberClasses'), "Loading Classes");
        }
        $('#tbStudents tbody').empty();
        vStudentValue = 0;
        

        $('#tbTerms tr').removeAttr('choose');
        $('#tbTerms td').attr("style", "background-color:; color:black;");
        $('#tbClasses tbody').empty();

        
        vTermValue = $('#' + itemselectedId).attr("keyvalue");
        $('#' + itemselectedId).attr("choose", "1");
        $('#' + itemselectedId + ' td').attr("style", "background-color:#5fb3d8; color:white !important;");

        $.get('@Url.Action("GetClasses", "PopulateStudent")?termId=' + vTermValue + '&userId=' + vTeacherValue, function (classes) {
            FillDataToTable(classes, "tbClasses", "class");
            $('#fdMemberClasses').unblock();
        });
        loadTermAndClass = false;
    }
    //Display a list of student of class after user click on a class
    function ClassesSelected(itemselectedId) {
        $("#error-messages-AddEdit").hide();
        ShowBlock($('#fdMemberClasses'), "Loading Students");
        
        $('#tbStudents tbody').empty();
        vStudentValue = 0;
        
        $('#tbClasses tr').removeAttr('choose');
        $('#tbClasses td').attr("style", "background-color:; color:black;");
        
        vClassValue = $('#' + itemselectedId).attr("keyvalue");
        $('#' + itemselectedId).attr("choose", "1");
        $('#' + itemselectedId + ' td').attr("style", "background-color:#5fb3d8; color:white !important;");

        //No use GetStudents of PopulateStudent any more, because it select deactive students, Parent connect requires inactive students only
       @* $.get('@Url.Action("GetStudents", "PopulateStudent")?classId=' + vClassValue, function (students) {
            FillDataToTable(students, "tbStudents", "student");
            $('#fdMemberClasses').unblock();
        });*@
        //select active students
        $.get('@Url.Action("GetStudents", "Compose")?classId=' + vClassValue, function (students) {
            FillDataToTable(students, "tbStudents", "student");
            $('#fdMemberClasses').unblock();
        });
        
        loadTermAndClass = false;
    }
    
   

    function FillDataToTable(items, tableId, type) {
        var table = $('#' + tableId + ' tbody');
        table.empty();
        if (items.length > 0) {
            $.each(items, function (i, item) {
                var vValue = item.Name;
                var trId = tableId + item.Id;
                switch (type) {
                    case "teacher":
                        {
                            table.append('<tr id="' + trId + '" keyName=' + trId + ' keyvalue="' + item.Id + '" onclick="TeachersSelected (this.id)" ><td style="" >' + vValue + ' </td> </tr>');
                        } break;
                    case "term":
                        {
                            table.append('<tr id="' + trId + '" keyName=' + trId + ' keyvalue="' + item.Id + '" onclick="TermsSelected (this.id)" ><td style="" >' + vValue + ' </td> </tr>');
                        } break;
                    case "class":
                        {
                            table.append('<tr id="' + trId + '" keyName=' + trId + ' keyvalue="' + item.Id + '" onclick="ClassesSelected (this.id)" ><td style="" >' + vValue + ' </td> </tr>');
                        } break;
                    case "student":
                        {
                            table.append('<tr id="' + tableId + item.StudentId + '" keyName=' + tableId + item.StudentId + ' keyvalue="' + item.StudentId + '" onclick="StudentSelected (this.id)" ondblclick="DoubleClickOnStudent(this.id)" ><td style="" >' + item.FullName + ' </td> </tr>');
                        } break;
                    case "groupstudent":
                        {
                            table.append('<tr detail="' + item.Detail + '" id="' + trId + '" keyName=' + trId + ' keyvalue="' + item.Id + '" onclick="GroupStudentsSelected (this.id)" ><td style="" >' + vValue + ' </td></tr>');
                        } break;
                }
            });
        }
        else {
            if (type != 'groupstudent') {
                DefaultData(table);
            }
        }
    }

    function DefaultData(table) {
        table.append('<tr> <td >No Results Found</td> </tr>');
    }
    
    function StudentSelected(itemselectedId) {
        hasSelectAllStudent = false;
        $("#error-messages-AddEdit").hide();
        vStudentValue = $('#' + itemselectedId).attr("keyvalue");
        var choose = $('#' + itemselectedId).attr("choose");
        if (choose == null) {
            //set this tr as selected
            $('#' + itemselectedId).attr("choose", "1");
            $('#' + itemselectedId + ' td').attr("style", "background-color:#5fb3d8; color:white !important;");
            
        } else {

            //set this tr as deselected
            $('#' + itemselectedId).removeAttr('choose');
            $('#' + itemselectedId + ' td').attr("style", "background-color:; color:black;");
        }
       
    }

    function DoubleClickOnStudent(itemId) {
        $("#error-messages-AddEdit").hide();
        
        var school = $('#selectSchoolAddEdit option:selected').text();
        
        var detail = $.trim(school) + ', ' + $.trim($('#tbTeachers tr[choose=1] td').text()) + ', ' + $.trim($('#tbTerms tr[choose=1] td').text()) + ', ' + $.trim($('#tbClasses tr[choose=1] td').text()) + ', ' + $.trim($('#tbStudents tr[choose=1] td').text().replace(',',''));
        var vId = $('#' + itemId).attr("keyvalue");
        var vValue = $('#' + itemId + ' td').text();
        var teacherId = $('#tbTeachers tr[choose=1]').attr("keyvalue");
        var trId = "tbGroupStudent" + vId;
        var table = $('#tbGroupStudent tbody');
        if ($('#tbGroupStudent tr[id=' + trId + ']').length == 0) {
            table.append('<tr detail="' + detail + '" id="' + trId + '" keyName=' + trId + ' keyvalue="' + vId + '" teacherId="' + teacherId + '" onclick="GroupStudentsSelected (this.id)" ><td style="" >' + vValue + ' </td> </tr>');
        }
        else {
            //alert("Student " + $.trim(vValue) + " is already in this group.");
            alertMessage("Student " + $.trim(vValue) + " is already in this group.");//alertMessage in Compose.cshtml
        }
    }

    function SelectAllStudent(e) {
        hasSelectAllStudent = true;
        e.preventDefault();
        $("#error-messages-AddEdit").hide();
        $('#tbStudents tr').removeAttr('choose');
        $("#tbStudents td").attr("style", "background-color:#5fb3d8; color:white !important;");
        $('#tbStudents tr').attr("choose", "1");//choose all tr
        

    }
    function GroupStudentsSelected(itemselectedId) {
        $("#error-messages-AddEdit").hide();
        $('#tbGroupStudent tr').removeAttr('choose');
        $('#tbGroupStudent td').attr("style", "background-color:; color:black;");
        vGroupStudent = $('#' + itemselectedId).attr("keyvalue");
        $('#' + itemselectedId).attr("choose", "1");
        $('#' + itemselectedId + ' td').attr("style", "background-color:#5fb3d8; color:white !important;");
        $("#divStudentInGroupDetail").html($('#' + itemselectedId).attr("detail"));
    }

    function RemoveStudentInGroupSelected(e) {
        e.preventDefault();
        $("#error-messages-AddEdit").hide();
        if ($('#tbGroupStudent tr[choose=1]').length > 0) {
            $('#tbGroupStudent tr[choose=1]').remove();
            $("#divStudentInGroupDetail").html('');
        }
        else {
            //alert("Please select a student to remove.");
            alertMessage("Please select a student to remove.");
        }
    }
    
    function AddStudentToGroup(e) {
        e.preventDefault();
        //user already selected all student
        //no alert when user wants to add a new student who already in the group
        var studentId = 0;
        var checkExist = true;
        if ($('#tbStudents tr[choose=1]').length == 0) {
            alertMessage("Please select a student to add.");
            return;
        }
        
        if ($('#tbStudents tr[choose=1]').length > 1) {
            checkExist = false;//no check exist for multi choice,just check for single choice
        }
            
        $('#tbStudents tr[choose=1]').each(function( index ) {
                
            studentId = $(this).attr("keyvalue");//studentId
            AddOneStudentToGroup(studentId, checkExist);

        });
    }
    function AddOneStudentToGroup(studentId, checkExist) {
        var school = $('#selectSchoolAddEdit option:selected').text();
        var studentTrId = '#tbStudents' + studentId;
        var temp = '#tbStudents tr[keyvalue=' + studentId + '] td';
        var studentName = $.trim($(temp).text());
        //var detail = $.trim(school) + ', ' + $.trim($('#tbTeachers tr[choose=1] td').text()) + ', ' + $.trim($('#tbTerms tr[choose=1] td').text()) + ', ' + $.trim($('#tbClasses tr[choose=1] td').text()) + ', ' + $.trim($('#tbStudents tr[choose=1] td').text().replace(',', ''));
        var detail = $.trim(school) + ', ' + $.trim($('#tbTeachers tr[choose=1] td').text()) + ', ' + $.trim($('#tbTerms tr[choose=1] td').text()) + ', ' + $.trim($('#tbClasses tr[choose=1] td').text()) + ', '
            + studentName.replace(',', '');
        

        var teacherId = $('#tbTeachers tr[choose=1]').attr("keyvalue");
        var trId = "tbGroupStudent" + studentId;
        var table = $('#tbGroupStudent tbody');
        if ($('#tbGroupStudent tr[id=' + trId + ']').length == 0) {
            table.append('<tr detail="' + detail + '" id="' + trId + '" keyName=' + trId + ' keyvalue="' + studentId + '" teacherId="' + teacherId + '" onclick="GroupStudentsSelected (this.id)" ><td style="" >' + studentName + ' </td></tr>');
        } else {
            if (checkExist) {
                //alert("Student " + $.trim(vValue) + " is already in this group.");
                alertMessage("Student " + $.trim(studentName) + " is already in this group.");
                
            }
        }
        //Reset background for student who has been selected
        $(studentTrId).removeAttr('choose');
        $(temp).attr("style", "background-color:; color:black;");
        
    }


    function ValidGroupStudentName(e) {
        e.preventDefault();
        //check empty or duplicate
        ShowBlock($('#divAddEditGroup'), "Saving");
        $("#error-messages-AddEdit").hide();
        var groupName = $("#Name").val();
        if (groupName.length == 0) {
            //alert("Group name is require."); 
            $("h1.title_edit_group").css('top', '0em');
            $("#error-messages-AddEdit").html("<li>Group name is required.</li>");
            $("#error-messages-AddEdit").show();
            $('#divAddEditGroup').unblock();
            return;
        }
        else {
            $.get('@Url.Action("CheckUniqueGroupName")?groupId=@Model.GroupId&strGroupName=' + groupName, function (response) {
            if (response.Success == false) {
                $("h1.title_edit_group").css('top', '0em');
                $("#error-messages-AddEdit").html("<li>" + response.Message + "</li>");
                $("#error-messages-AddEdit").show();
                $('#divAddEditGroup').unblock();
                return;
            }
            else {
                AddEditStudentGroup();
            }
        });
    }
    }
    function AddEditStudentGroup() {
        $("#error-messages-AddEdit").hide();
        var studentIdAddToGroup = [];
        
        $("#tbGroupStudent tr").each(function () {
            var key = $(this).attr("keyvalue");
            studentIdAddToGroup.push(key);
        });

        var vdata =
        {
            StudentIdList: studentIdAddToGroup,
            Name: $('#Name').val(),
            GroupId: '@Model.GroupId'
            //DistrictId: '@Model.DistrictId',
            //CreatedUserId: '@Model.CreatedUserId',
            //TeacherIdList: teacherIdAddToGroup,
            
        };
        
    $.ajax({
        url: '@Url.Action("AddEditStudentGroupSave")',
            traditional: true,
            type: 'POST',
            data: vdata,
            success: function (response) {
                if (response.Success != false) {
                    
                    //reload student Group and close popup
                    $(".dialog").dialog("close");

                    //refresh the list to show the new group
                    //ui.dataTable.fnDraw();
                    ui.dataTableStudentGroup.fnDraw();

                    
                    //Set the new group as selected group
                    //(Note that these control selectedStudentGroupContainer,currentlySelectedStudentGroup,currentlySelectedStudentGroupId are located in the outside page, Compose.cshtml
                    $('#selectedStudentGroupContainer').show();
                    $('#currentlySelectedStudentGroup').html(response.GroupName);
                    //Remember the Id of selected group
                    $('#currentlySelectedStudentGroupId').html(response.Id);
                    
                }
                else {
                    $("#error-messages-AddEdit").html("<li>" + response + "</li>");
                    $("#error-messages-AddEdit").show();
                }
                $('#divAddEditGroup').unblock();
            },
            failure: function (response) {
                $('#divAddEditGroup').unblock();
                alert(response);
            }
        });
    }
    
   
</script>
