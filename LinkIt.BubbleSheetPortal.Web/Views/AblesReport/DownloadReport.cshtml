@{
    ViewBag.Title = "Ables Download Report";
}

@using LinkIt.BubbleSheetPortal.Common
@model LinkIt.BubbleSheetPortal.Web.ViewModels.ABLESReport.AblesDownloadReportViewModel
<script src="@Url.Content("~/Scripts/moment.min.js")" type="text/javascript"></script>
@*<link href="@Url.Content("~/Content/css/sgohome.css")" rel="stylesheet" type="text/css" />*@
@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleSGOHomeBundle()

<article class="container_12">
    <section class="grid_12">
        <div id="ACTPageContent" class="block-border">
            <div class="block-content form bubbleSheetSelector">
                <h1>
                    Ables Report Filter
                </h1>
                <fieldset id="dateRangeContent" class="grey-bg">
                    <input type="hidden" id="enableDateRange" value="false" />
                    <input type="hidden" id="VirtualTestIdsForAllTest" value="false" />
                    <legend id="dateRangeContentLegend">Select Report Generated Date</legend>
                    <div class="columns">
                        <div class="colx2-left">
                            <p>
                                <label>From Date</label>
                                <span class="sgo-datetime" style="display: inline-block">
                                    <input name="resultDateFrom" style="font-size: 1.083em; padding: 0.385em; width: 235px;" readonly="readonly" id="resultDateFrom" />
                                    <span class="icon-sgo-calendar"></span>
                                </span>
                            </p>
                        </div>
                        <div class="colx2-right">
                            <p>
                                <label>To Date</label>
                                <span class="sgo-datetime" style="display: inline-block">
                                    <input name="resultDateTo" style="font-size: 1.083em; padding: 0.385em; width: 235px;" readonly="readonly" id="resultDateTo" />
                                    <span class="icon-sgo-calendar"></span>
                                </span>
                            </p>
                        </div>
                    </div>
                </fieldset>
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    <fieldset id="publisherContent" class="grey-bg">
                        <legend>Select State/@LabelHelper.DistrictLabel</legend>
                        <div class="columns">
                            <div class="colx2-left">
                                <p>
                                    <label>State</label>
                                    <select id="selectState"></select>
                                </p>
                            </div>
                            <div class="colx2-right">
                                <p>
                                    <label>@LabelHelper.DistrictLabel</label>
                                    <select id="selectDistrict"></select>
                                </p>
                            </div>
                        </div>
                    </fieldset>
                }
                <div class="clear"></div>
                <div class="u-text-right">
                    <button id="clearFilter" class="grey" type="button">Clear Filter</button>
                    <button id="filterSheets" class="u-m-l-10" type="button">Apply Filters</button>
                </div>
            </div>
        </div>
    </section>
</article>

<article class="container_12">
    <section class="grid_12">
        <div class="block-border" id="divStudent">
            <input type="hidden" id="isJobCompleted" value="false" />
            <div class="block-content form">
                <h1>
                    Download Report
                </h1>
                <div id="divNotifications"></div>
                <div class="clear-25">
                </div>
                <div class="no-margin last-child">
                    <table id="dataTable" class="datatable table no-margin" width="100%">
                        <thead>
                            <tr>
                                @*<th scope="col" class="black-cell"><span class="loading"></span></th>*@
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Id
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Report Type
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Learning Area
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    School
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Teacher
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Class
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Assessment Round
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Created date
                                </th>
                                <th scope="col" style="text-align: center;">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Download
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Created date string
                                </th>
                            </tr>
                        </thead>
                        <tbody style="cursor: pointer">
                            <tr>
                                <td style="height: 60px;"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</article>

@section scripts{
    <script>
        var oaTable;
        var startLoadingSpecializedReportJobId;

        $(function () {
            InitLoadSpecializedReportDownload();
            //startLoadingSpecializedReportJob();

            $('#filterSheets').click(function () {
                refreshList();
            });

            $('#clearFilter').click(function () {
                refreshList();
            });

            @if (Model.IsPublisher)
            {
                <text>
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
            </text>
            }
            else if (Model.IsNetworkAdmin)
            {
                <text>
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
            </text>
            }

            // Show menu
            $('.stats').addClass('current');
        });

        function populateStates(states) {
            addDefaultOption($('#selectState'), "State");
            addSelectListItems($('#selectState'), states);
        }

        $('#selectState').change(function () {
            $('#selectDistrict').empty();

            if ($('#selectState').val() != 'select') {
                populateDistricts();
            }
        });

        function populateDistricts() {
            $('#selectDistrict').empty();
            var stateValue = $('#selectState').val();
            if (stateValue != 'select') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
        }

        $('input[name="resultDateFrom"]').datepicker({
            dateFormat: jqueryDatePickerFormat(),
            beforeShow: function (input, inst) {
                $('#ui-datepicker-div').addClass('datepicker-sgo');
            }
        }).datepicker('setDate', '@Model.ResultDateFrom.DisplayDateWithFormat()');

        $('input[name="resultDateTo"]').datepicker({
            dateFormat: jqueryDatePickerFormat(),
            beforeShow: function (input, inst) {
                $('#ui-datepicker-div').addClass('datepicker-sgo');
            }
        }).datepicker('setDate', '@Model.ResultDateTo.DisplayDateWithFormat()');

        //function startLoadingSpecializedReportJob() {
        //    stopLoadingSpecializedReportJob();
        //    startLoadingSpecializedReportJobId = setInterval(function() {
        //        oaTable.fnDraw();
        //    }, 5000);
        //}

        function stopLoadingSpecializedReportJob() {
            clearInterval(startLoadingSpecializedReportJobId);
        }

        function InitLoadSpecializedReportDownload() {
            var options = {
                bDestroy: true,
                bServerSide: true,
                sAjaxSource: getAjaxSource(),
                fnServerParams: function (aoData) {
                },
                bAutoWidth: false,
                iDisplayLength: 10,
                aLengthMenu: [10, 50, 100, 500, 1000],
                aaSorting: [[7, "desc"]],
                oLanguage: { "sEmptyTable": "Match Not Found" },
                aoColumns: [
                    { sType: 'int', sName: 'AblesReportJobId', bSearchable: false, bSortable: false, bVisible: false },
                    { sType: 'string', sName: 'ReportName', bSearchable: true, bSortable: true },
                    { sType: 'string', sName: 'LearningArea', bSearchable: true, bSortable: true },
                    { sType: 'string', sName: 'SchoolName', bSearchable: true, bSortable: true },
                    { sType: 'string', sName: 'TeacherName', bSearchable: true, bSortable: true, sWidth: '70px' },
                    { sType: 'string', sName: 'ClassName', bSearchable: true, bSortable: true },
                    { sType: 'string', sName: 'AssessmentRound', bSearchable: true, bSortable: true, sWidth: '100px' },
                    { sType: 'string', sName: 'CreatedDate', bSearchable: true, bSortable: true, sWidth: '130px' },
                    { sType: 'string', sName: 'DownloadUrl', bSearchable: true, bSortable: true, sWidth: '105px' },
                    { sType: 'string', sName: 'CreatedDateString', bSearchable: true, bSortable: true, bVisible: false },
                ],
                fnRowCallback: function (nRow, aData) {
                    $('td:eq(6)', nRow).html('<span class="toLocalTime">' + aData[9] + '</span>');
                   // $('td:eq(1)', nRow).html(setStatus(aData[2]));
                    $('td:eq(7)', nRow).html(setDownload(1, aData[8]));
                   return nRow;
                },
                fnPreDrawCallback: function () {
                    ShowBlock($('#dataTable'), 'Loading');
                    $('#filterSheets').attr("disabled", "disabled");

                    $('#isJobCompleted').val('true');
                    return true;
                },
                fnDrawCallback: function () {
                    $('#dataTable').unblock();
                    $('.with-tip').tip();
                    $('#filterSheets').removeAttr("disabled");

                    ReplaceLocalTime();
                }
            }

            $("#dataTable").data("options", options);
            oaTable = initializeDataTable($("#dataTable"));
        }

        $('#resultDateFrom').change(function () {
            refreshList();
        });

        $('#resultDateTo').change(function () {
            refreshList();
        });

        $('#selectDistrict').change(function () {
            refreshList();
        });

        function refreshList() {
            var oTable = $("#dataTable").dataTable();
            oTable.fnSettings().sAjaxSource = getAjaxSource();
            oTable.fnDraw();
        }

        function getAjaxSource() {
            return '@Url.Action("SearchReportDownload", "ABLESReport")/?resultDateFrom=' + $('#resultDateFrom').val() + '&resultDateTo=' + $('#resultDateTo').val() + '&stateId=' + $('#selectState').val() + '&districtId=' + $('#selectDistrict').val();
        }

        function ReplaceLocalTime() {
            //Set Local Time
            $('.toLocalTime').each(function () {
                var element = $(this);
                var currentValue = element.text().trim();

                var localTimeUtc = moment.utc(currentValue).toDate();

                element.html(displayDateWithFormat(localTimeUtc.valueOf(), true));
            });
        }

        function convertUTCDateToLocalDate(datetime) {
            var date = new Date(datetime);
            var newDate = new Date(date.getTime());

            var offset = date.getTimezoneOffset() / 60;
            var hours = date.getHours();

            newDate.setHours(hours - offset);

            return newDate.toLocaleDateString() + ' ' + newDate.toLocaleTimeString();
        }


        function setStatus(status) {
            if (status != '1') {
                return 'Generating';
            }

            return 'Completed';
        }

        function setDownload(status, downloadUrl) {
            var downloadString = "";
            if (status == '0') {
                downloadString = '<p class="float-left" id="url">Generating...</p><img id="loading" class="float-right" alt="loading" src="@Url.Content("/Content/images/loadinfo.net.gif")" style="width: 16px;"/>';
            } else {
                downloadString = '<a target="_new" href="' + downloadUrl + '">Click to download</a>';
            }

            return downloadString;
        }
    </script>

}
