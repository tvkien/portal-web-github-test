@model LinkIt.BubbleSheetPortal.Web.ViewModels.TDLS.TDLSProfileViewModel
@using LinkIt.BubbleSheetPortal.Models.Enum
@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Models
@{
    ViewBag.Title = HelperExtensions.FormatPageTitle(ContaintUtil.ReportItemTLDSManager, "TLDS Upcoming School Submit",true);
    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }
    }
}
@section jQuery {
    @BundleHelper.jQueryUpgrade()
}
@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleTDLSUpcommingSchoolBundleV2()
@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.ScriptTDLSUpcommingSchoolBundle()
<link href="@Url.Content("~/Content/css/select2.css")" rel="stylesheet" />
<script src=@Url.Content("~/Scripts/select2.full.min.js")></script>

<style>
    .school-li.hide {
        display: none !important;
    }

    .ui-radio-group-item input[type="radio"]:checked + label, .ui-radio-group-item input[type="radio"]:checked + label:last-child, .ui-checkbox-item input[type="checkbox"]:checked + label {
        background: #00ace6;
        color: white;
    }

    .content-header p {
        margin-bottom: 8px;
    }

        .content-header p.header {
            margin-top: 24px;
        }

    #portal-v2-containter .ui-radio-group-item input[type="radio"] + label {
        border-radius: 0;
    }

    .ui-radio-group-item input[type="radio"], .ui-checkbox-item input[type="checkbox"] {
        position: absolute !important;
    }

    #portal-v2-containter .ui-radio-group-item input[type="radio"] + label,
    #portal-v2-containter .ui-radio-group-item input[type="radio"] + label:last-child,
    #portal-v2-containter .ui-checkbox-item input[type="checkbox"] + label {
        color: var(--lightBlue);
        background-color: var(--grey3);
        font-weight: bold;
        border: 0 none;
        border-left: 1px solid var(--lightBlue);
    }


    #portal-v2-containter .ui-radio-group-item:first-child input[type="radio"] + label,
    #portal-v2-containter .ui-checkbox-item input[type="checkbox"] + label {
        border: 0 none;
    }

    #portal-v2-containter .ui-radio-group-item input[type="radio"]:checked + label,
    #portal-v2-containter .ui-radio-group-item input[type="radio"]:checked + label:last-child,
    #portal-v2-containter .ui-checkbox-item input[type="checkbox"]:checked + label {
        color: var(--white);
        background-color: var(--red);
    }

    .modal-component-close {
        display: none !important;
    }

    #portal-v2-containter .modal-component-header {
        padding: 0;
        padding-top: 16px;
    }
</style>

<script src="@Url.Content("~/Scripts/jquery-editable-select.min.js")"></script>
<link href="@Url.Content("~/Content/css/jquery-editable-select.min.css")" rel="stylesheet" />

<article class="container_12" id="idTopNavigation">
    @Html.Partial("v2/_NavigationTabs", Model)
    <section class="grid_12">
        <div class="block-border">
            <div class="block-content form" id="divOnTop">
                <h3 class="h3 mb-3">Submit TLDS</h3>
                <form class="mb-3">
                    <div class="mb-3">
                        <ul class="tlds-notes p-0">
                            <li class="tlds-notes-item">
                                <p>Will the child be attending a school in Victoria?</p>
                                <div class="ui-radio-group u-m-b-15">
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-attending-school" value="yes" id="ra-1-1" />
                                        <label for="ra-1-1">Yes</label>
                                    </div>
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-attending-school" value="no" id="ra-1-2" checked />
                                        <label for="ra-1-2">No</label>
                                    </div>
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-attending-school" value="unknown" id="ra-1-3" />
                                        <label for="ra-1-3">Unknown</label>
                                    </div>
                                </div>
                            </li>
                            <li class="tlds-notes-item">
                                <p>Has the family been provided with a complete copy of their child's TLDS?</p>
                                <div class="ui-radio-group u-m-b-15">
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-transition-statement" id="ckbHasProvidedTransitionStatement" value="Yes" @Html.Raw(Model.HasProvidedTransitionStatement == "Yes" ? "checked" : "") />
                                        <label for="ckbHasProvidedTransitionStatement">Yes</label>
                                    </div>
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-transition-statement" id="ckbHasProvidedTransitionStatementNo" value="No" @Html.Raw(Model.HasProvidedTransitionStatement == "Yes" ? "" : "checked") />
                                        <label for="ckbHasProvidedTransitionStatementNo">No</label>
                                    </div>
                                </div>

                                <p>Has the family been made aware that the service will share the Transition Statement with their child's school and Outside School Hours Care (OSHC) service to support their child's transition?</p>
                                <div class="ui-radio-group u-m-b-15">
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-aware-child" id="ckbIsAwareTransitionChildSchoolAndOSHC" @Html.Raw(Model.IsAwareTransitionChildSchoolAndOSHC == "Yes" ? "checked" : "") />
                                        <label for="ckbIsAwareTransitionChildSchoolAndOSHC">Yes</label>
                                    </div>
                                    <div class="ui-radio-group-item">
                                        <input type="radio" name="ra-aware-child" id="ckbIsAwareTransitionChildSchoolAndOSHCNo" @Html.Raw(Model.IsAwareTransitionChildSchoolAndOSHC == "Yes" ? "" : "checked") />
                                        <label for="ckbIsAwareTransitionChildSchoolAndOSHCNo">No</label>
                                    </div>
                                </div>
                                <p>
                                    <input type="checkbox" id="ckbIsfamilyOptedOutTransitionStatement" value="Yes" @Html.Raw(Model.IsfamilyOptedOutTransitionStatement == "Yes" ? "checked" : "") />
                                    <label for="ckbIsfamilyOptedOutTransitionStatement">The family has opted out of sharing the Transition Statement with their child's school or OSHC service</label>
                                </p>
                                <p><b>Please note:</b> 'Yes' must be selected for the above questions to enable submission of the Transition Statement to the child's future school via the Insight platform. If you are not forwarding the Transition Statement to the school via the Insight platform, please select 'Completed but not sent via Insight.'</p>
                            </li>
                        </ul>
                    </div>
                    <div class="mb-4">
                        <h5 class="h5 mb-3">Select the school the child will attend</h5>
                        <div class="content-header mb-3">
                            <p>Please select the school the child will attend from the drop-down menu below. A copy of the TLDS will then be forwarded to the child's future school.</p>
                            <p><b><i>Please note, some schools in Victoria may not be included in the list.</i></b></p>
                            <p>Some Catholic and Independent schools are not using the Insight Assessment Platform and Outside School Hours Care services do not have access to the Insight Assessment Platform.</p>
                            <p>If the school is not listed the TLDS must be provided via post or secure email to the school.</p>
                            <p>Please select the 'School not listed' tick box and download the completed TLDS to send to the child's future school.</p>

                        </div>
                        <div>
                            <input type="checkbox" id="ckbSchoolNotListed" />
                            <label for="ckbSchoolNotListed">School not listed</label>
                        </div>
                        <input type="hidden" id="profileId" value="@Model.ProfileId" />
                        <select id="selectState" class="full-width" style="display: none"></select>
                        <div class="row g-3 u-m-t-15">
                            <div class="col-3">
                                <label>@LabelHelper.DistrictLabel</label>
                                <select id="selectDistrict" class="full-width" style="height: 45px"></select>
                            </div>
                            <div class="col-3" style="position: relative">
                                <label>School</label>
                                <select class="full-width" id="ddlSchool" disabled></select>
                                <div class="wraptag" style="max-width: 300px">
                                    <ul id="singleFieldTags"></ul>
                                </div>
                            </div>
                        </div>
                        <input id="idhdfDistrictId" type="hidden" value="@Model.CurrentDistrictId" />
                    </div>
                    <div class="text-end">
                        <button class="ms-3 @(Model.AccessRight == AccessRightEnum.Update && Model.Status != (int)TLDSProfileStatusEnum.SubmittedToSchool
                            && Model.Status != (int)TLDSProfileStatusEnum.AssociatedWithStudent
                            && Model.Status != (int)TLDSProfileStatusEnum.UploadedBySchool ? "btn-blue" : "btn-red")" type="button" id="btnPrintTLDS">
                            Download completed TLDS
                        </button>
                        @if (Model.AccessRight == AccessRightEnum.Update && Model.Status != (int)TLDSProfileStatusEnum.SubmittedToSchool
                            && Model.Status != (int)TLDSProfileStatusEnum.AssociatedWithStudent
                            && Model.Status != (int)TLDSProfileStatusEnum.UploadedBySchool)
                        {
                            <button id="btnComplateNotSend" type="button" class="ms-3 btn-blue with-tip" title="This is used when the receiving school is not using Insight">Completed but not sent via Insight</button>
                            <button id="btnSubmit" type="button" class="ms-3 btn-red with-tip" disabled title="This is used when the TLDS is to be sent electronically (via this platform) to the school">Submit TLDS</button>
                        }
                    </div>
                </form>
            </div>
        </div>
    </section>
</article>
<div id="divButtonSubmit">
    @Html.Partial("v2/_ModalConfirmSubmit")
</div>
<div id="divTrainingModeMessage">
    @Html.Partial("v2/_ModalTrainingModeMessage")
</div>

@section scripts {
    <script>
        var isAccessRight = '@Model.AccessRight' == '@AccessRightEnum.Create' || '@Model.AccessRight' == '@AccessRightEnum.Update';
        var UpcommingSchoolSubmit = new Vue({
            el: '#divButtonSubmit',
            data: {
                isShowModalConfirmSubmit: false,
                isSubmit: false
            },
            methods: {
                cancelSubmit: function() {
                    this.isShowModalConfirmSubmit = false;
                },
                submitProfile: function() {
                    this.isShowModalConfirmSubmit = false;
                    if (!this.isSubmit) return;
                    submitProfile(this.isSubmit);
                }
            }
        });

        var TrainingModeMessageModal = new Vue({
            el: '#divTrainingModeMessage',
            data: {
                isShowTrainingMessageModal: false,
            },
            methods: {
                closeMessage: function () {
                    this.isShowTrainingMessageModal = false;
                }
            }
        });

        $(function () {
            $("#ddlSchool").select2({
                placeholder: 'Select school',
                allowClear: true
            });

            populateDistricts();

            if ('@Model.ParentConsentIsIncluded' == 'True') {
                $("#ParentConsentIsIncluded_Yes").prop('checked', true);
                $("#ParentConsentIsIncluded_No").prop('checked', false);
            } else {
                $("#ParentConsentIsIncluded_Yes").prop('checked', false);
                $("#ParentConsentIsIncluded_No").prop('checked', true);
            }
            if ('@Model.SectionChildParentCompleted' == 'True') {
                $("#SectionChildParentCompleted_Yes").prop('checked', true);
                $("#SectionChildParentCompleted_No").prop('checked', false);
            } else {
                $("#SectionChildParentCompleted_Yes").prop('checked', false);
                $("#SectionChildParentCompleted_No").prop('checked', true);
            }
            if ('@Model.PrintAllSectionsFamily' == 'True') {
                $("#PrintAllSectionsFamily_Yes").prop('checked', true);
            } else {
                $("#PrintAllSectionsFamily_Yes").prop('checked', false);
            }
            @if (Model.WillAttendASchoolInVictoria != null)
            {
                if (Model.WillAttendASchoolInVictoria.ToString().ToLower() == "y")
                {
                    <text>
            $('#ra-1-1').prop('checked', true)
            </text>
                }
                if (Model.WillAttendASchoolInVictoria.ToString().ToLower() == "n")
                {
                    <text>
            $('#ra-1-2').prop('checked', true)
            </text>
                }
                if (Model.WillAttendASchoolInVictoria.ToString().ToLower() == "u")
                {
                    <text>
            $('#ra-1-3').prop('checked', true)
            </text>
                }
            }

            @if (Model.SchoolNotListed.HasValue)
            {
                if (Model.SchoolNotListed.Value)
                {
                    <text>
            $('#ckbSchoolNotListed').prop('checked', true);
            </text>
                }
            }


            checkButtonsEnable();
            $('input[type=radio][name=ra-attending-school]').change(function() {
                checkButtonsEnable();
            });

            $('#ckbSchoolNotListed').change(function () {
                var isChecked = $('#ckbSchoolNotListed').is(':checked');
                if (isChecked) {
                    $('#selectDistrict').val('select');
                    $('#ddlSchool').empty();
                    selectedSchool = null;
                }
                checkButtonsEnable();
            });

            if (!isAccessRight) {
                // Disable all controls
                tldsDisableInputControls();
            }
        });

        $('#selectState').change(function() {
            $('#selectDistrict').empty();
            if ($('#selectState').val() != 'select') {
                populateDistricts();
            }
        });

        $('#selectDistrict').change(function() {
            $("#ddlSchool").empty();
            if ($('#selectDistrict').val() != 'select') {
                populateSchools();
            }
        });

        function populateStates(states) {
            addDefaultOption($('#selectState'), "State");
            addSelectListItems($('#selectState'), states);
        }

        function populateDistricts() {
            $('#selectDistrict').empty();
            var stateValue = $('#selectState').val();
            if (stateValue != 'select') {
                $.get('@Url.Action("GetDistrictsTLDS")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);

                    @if (Model.UpcommingSchoolID.HasValue)
                    {
                        <text>
                        $('#selectDistrict').val(@Model.UpcommingDistrictID);
                        </text>
                    }

                    if (!isAccessRight) {
                        $('#selectDistrict').prop('disabled', true);
                        $('#ddlSchool').prop('disabled', true);
                    }

                    populateSchools();
                });
            }
        }

        function populateSchools() {
            var districtValue = $('#selectDistrict').val();
            $('#ddlSchool').empty();
            if (districtValue != 'select') {
                $.get('@Url.Action("GetSchoolsByDistrict", "TLDSManage")', { districtId: districtValue }, function (schools) {
                    InitSchoolList(schools);

                    @if (Model.UpcommingSchoolID.HasValue)
                    {
                        if ((Model.AccessRight == AccessRightEnum.Create || Model.AccessRight == AccessRightEnum.Update))
                        {
                            <text>
                            $('#ddlSchool').val('@Model.UpcommingSchoolID.Value').trigger("change");
                            </text>
                        }
                        else
                        {
                            <text>
                            $('#ddlSchool').val('@Model.UpcommingSchoolID.Value');
                            </text>
                        }

                    }
                    if (!isAccessRight) {
                        $('#selectDistrict').prop('disabled', true);
                        $('#ddlSchool').prop('disabled', true);
                    }
                });
            }
        }

        function InitSchoolList(schools) {
            $.each(schools, function (index, obj) {
                var newOption = new Option(obj.Name, obj.Id, false, false);
                $('#ddlSchool').append(newOption);
            });
            $("#ddlSchool").val('').trigger('change');

            $('#ddlSchool').on('select2:select', function (e) {
                selectedSchool = e.params.data.id;
                checkButtonsEnable();
            });
        }

        var selectedSchool = null;

        $('#btnSubmit').click(function () {
            var selectedDistrict = $('#selectDistrict').val();

            if (!selectedDistrict || selectedDistrict === 'select') {
                CustomAlert('Please Select Sector.');
                return;
            }

            if (!selectedSchool || selectedSchool != $('#ddlSchool').val()) {
                CustomAlert('Please Select School.');
                return;
            }

            preventTrainingDistrict(selectedDistrict);
        });

        $('input[name=ParentConsentIsIncluded]').on('change', function() {
            $('input[name=ParentConsentIsIncluded]').not(this).prop('checked', false);

        });
        $('input[name=SectionChildParentCompleted]').on('change', function() {
            $('input[name=SectionChildParentCompleted]').not(this).prop('checked', false);

        });
        
        
        $('#btnComplateNotSend').click(function() {
            submitProfile(false);
        });

        function submitProfile(needToSend, savingCompleteCallback) {
            var schoolId = 0;

            if(selectedSchool!=null){
                schoolId = selectedSchool;
            }

            var parentConsentIsIncluded = $("#ParentConsentIsIncluded_Yes").is(':checked');
            var sectionChildParentCompleted = $("#SectionChildParentCompleted_Yes").is(':checked');
            var printAllSectionsFamily = $("#PrintAllSectionsFamily_Yes").is(':checked');

            var willAttendASchoolInVictoria = $('input[type="radio"][name="ra-attending-school"]:checked').val();
            if (willAttendASchoolInVictoria != null) {
                if (willAttendASchoolInVictoria == 'yes') {
                    willAttendASchoolInVictoria = 'y';
                }
                if (willAttendASchoolInVictoria == 'no') {
                    willAttendASchoolInVictoria = 'n';
                }
                if (willAttendASchoolInVictoria == 'unknown') {
                    willAttendASchoolInVictoria = 'u';
                }
            }

            var schoolNotListed = $('#ckbSchoolNotListed').is(':checked');

            var container = $('#divOnTop');
            ShowBlock(container, "Loading");
            if(schoolId==0){
                schoolId = null;
            }

            var hasProvidedTransitionStatement = $('#ckbHasProvidedTransitionStatement').is(':checked') == true ? "Yes" : "No";
            var isAwareTransitionChildSchoolAndOSHC = $('#ckbIsAwareTransitionChildSchoolAndOSHC').is(':checked') == true ? "Yes" : "No";
            //var isFamilyDidNotCompleteSection3 = $('#ckbIsFamilyDidNotCompleteSection3').is(':checked') == true ? "Yes" : "No";
            var isfamilyOptedOutTransitionStatement = $('#ckbIsfamilyOptedOutTransitionStatement').is(':checked') == true ? "Yes" : "No";
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SubmitSchool", "TLDSManage")',
                data: {
                    profileId: $('#profileId').val(),
                    schoolId: schoolId,
                    parentConsentIsIncluded: parentConsentIsIncluded,
                    sectionChildParentCompleted: sectionChildParentCompleted,
                    printAllSectionsFamily: printAllSectionsFamily,
                    willAttendASchoolInVictoria: willAttendASchoolInVictoria,
                    schoolNotListed: schoolNotListed,
                    needToSend: needToSend,
                    hasProvidedTransitionStatement: hasProvidedTransitionStatement,
                    isAwareTransitionChildSchoolAndOSHC: isAwareTransitionChildSchoolAndOSHC,
                    //isFamilyDidNotCompleteSection3: isFamilyDidNotCompleteSection3,
                    isfamilyOptedOutTransitionStatement: isfamilyOptedOutTransitionStatement
                },
                success: function(response) {
                    container.unblock();
                    if (savingCompleteCallback == undefined) {

                        if (needToSend) {
                            CustomAlert('TLDS Submitted.');
                            $("#btnSubmit").remove();
                            $("#btnComplateNotSend").remove();

                        } else {
                            CustomAlert('TLDS saved but not sent.');

                            setTimeout(function() {
                                location.href = '@Url.Action("Index", "TLDSManage")';
                            }, 3000);
                        }
                    } else {
                        savingCompleteCallback();
                    }

                }
            });
        }

        function checkSubmitEnable() {
            var schoolNotListed = $('#ckbSchoolNotListed').is(':checked');
            if (selectedSchool != null && schoolNotListed == false) {
                $('#btnSubmit').prop('disabled', false);
            } else {
                $('#btnSubmit').prop('disabled', true);
            }
        }

        function resetButtons () {
            var $ckbSchoolNotListed = $('#ckbSchoolNotListed');
            var $selectDistrict = $('#selectDistrict');
            var $ddlSchool = $('#ddlSchool');
            var $btnSubmit = $('#btnSubmit');
            var $btnComplateNotSend = $('#btnComplateNotSend');
            var attendingSchoolVal = $('input[type="radio"][name="ra-attending-school"]:checked').val();

            // Initialize disable all buttons
            $ckbSchoolNotListed.prop('disabled', true);
            $selectDistrict.prop('disabled', true).addClass('is-disabled');
            $ddlSchool.prop('disabled', true).addClass('is-disabled');
            $btnSubmit.prop('disabled', true);
            $btnComplateNotSend.prop('disabled', true);
        }

        function checkButtonsEnable() {
            var $ckbSchoolNotListed = $('#ckbSchoolNotListed');
            var $selectDistrict = $('#selectDistrict');
            var $ddlSchool = $('#ddlSchool');
            var $btnSubmit = $('#btnSubmit');
            var $btnComplateNotSend = $('#btnComplateNotSend');
            var attendingSchoolVal = $('input[type="radio"][name="ra-attending-school"]:checked').val();
            var isSchoolNotListed = $ckbSchoolNotListed.is(':checked');
            // Initialize disable all buttons
            resetButtons();
            if (attendingSchoolVal === 'yes') {
                var schoolVal = $("#ddlSchool").val();
                $ckbSchoolNotListed.prop('disabled', false);
                $selectDistrict.prop('disabled', false).removeClass('is-disabled');
                $ddlSchool.prop('disabled', false).removeClass('is-disabled');
                if (!!schoolVal) {
                    $btnSubmit.prop('disabled', false);
                }
                $btnComplateNotSend.prop('disabled', true);

            } else {
                $btnSubmit.prop('disabled', true);
                $btnComplateNotSend.prop('disabled', false);
            }

            // If ‘School not listed’ is selected switch off ‘Submit TLDS’ button and switch on ‘Completed but not sent via Insight button’.
            if (isSchoolNotListed) {
                $selectDistrict.prop('disabled', true).addClass('is-disabled');
                $ddlSchool.prop('disabled', true);
                $btnSubmit.prop('disabled', true);
                $btnComplateNotSend.prop('disabled', false);
            }

            if ($('#ckbHasProvidedTransitionStatementNo').is(':checked')) {
                $btnSubmit.prop('disabled', true);
                $btnComplateNotSend.prop('disabled', true);
            }

            if ($('#ckbIsAwareTransitionChildSchoolAndOSHCNo').is(':checked')){
                $btnSubmit.prop('disabled', true);
            }

            if ($('#ckbIsfamilyOptedOutTransitionStatement').is(':checked')) {
                $btnSubmit.prop('disabled', true);
                checkYesAllQuestion();
            }

            var isAccessRight = '@Model.AccessRight' == '@AccessRightEnum.Create' || '@Model.AccessRight' == '@AccessRightEnum.Update';

            if (!isAccessRight) {
                resetButtons();
            }
        }

        function checkYesAllQuestion() {
            var chekVal1 = $('#ckbHasProvidedTransitionStatement').is(':checked');
            var chekVal2 = $('#ckbIsAwareTransitionChildSchoolAndOSHC').is(':checked');
            var chekVal3 = $('#ra-1-1').is(':checked');
            if (chekVal1 && chekVal2 && chekVal3) {
                $("#btnComplateNotSend").removeAttr("disabled");
            }
        }

        $('#btnPrintTLDS').click(function() {
            //Should save the change first
            submitProfile(false, function() {
                //After saving information on this page complete, call popup to show print confirm
                var url = '@Url.Action("LoadPrintConfirm", "TLDSManage")?profileId=@Model.ProfileId';
                $.ajax({ url: url, cache: false })
                    .done(function (html) {
                        $("#divOnTop").append('<div id="idPopupTLDSPrintConfirm" class="dialog"></div>');
                        $("#idPopupTLDSPrintConfirm").append(html);
                        $('#idPopupTLDSPrintConfirm').dialog({
                            title: "",
                            open: function () {
                                $(this).parents('.ui-dialog').find('.ui-dialog-titlebar-close').remove();
                                //Create overlay for popup
                                $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                            },
                            beforeclose: function () {
                                return true;
                            },
                            close: function () {
                                $('#idPopupTLDSPrintConfirm').remove();
                                $("body .my-overlay").remove();
                            },
                            modal: false,
                            width: 360,
                            resizable: false
                        });
                    });
            });
        });

        function closeTLDSPrintPopup() {
            $("#idPopupTLDSPrintConfirm").dialog("close");
        }

        function printreportTLDS(profileId) {
            ShowBlock($('#idTopNavigation'), "");
            ShowBlock($('#divTLDSPrintConfirm'), "Generating PDF");

            var reportFileName = "demo_blank.pdf";
            var data = {
                profileId: profileId,
                ReportFileName: reportFileName,
                TimezoneOffset: new Date().getTimezoneOffset()
            };
            $.ajax({
                url: '@Url.Action("Generate", "TLDSReport")',
                traditional: true,
                type: 'POST',
                data: data,
                success: function (response) {
                    getTLDSReportS3File(response.fileName,profileId);
                },
                failure: function (response) {
                    CustomAlert(response);
                },
                timeout: 300000
            });

        }
        function getTLDSReportS3File(checkUrl,profileId) {

            $.ajax({
                url: '@Url.Action("GetTLDSReportS3File", "TLDSReport")',
                type: 'POST',
                data: { fileName: checkUrl,profileId:profileId },
                success: function (response) {
                    if (response.Result != true) {
                        setTimeout(function () {
                            getTLDSReportS3File(checkUrl,profileId);//try again
                        }, 3000);
                    } else {
                        $('#idlinkSGOFilePrint').attr('href', response.Url);
                        $('#idlinkSGOFilePrint').show();
                        $('#idTopNavigation').unblock();
                        $('#divTLDSPrintConfirm').unblock();
                    $('#idbtnSGOSavePDFFile').prop('disabled', true)
                    }
                }
            });
        }

        function preventTrainingDistrict(submitDistrictId) {
            $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
            $.ajax({
                url: '@Url.Action("GetSubmitTLDSStatus", "TLDSManage")',
                type: 'GET',
                data: { submitDistrictId: submitDistrictId},
                success: function (response) {
                    $("body .my-overlay").remove();
                    if (response.SubmitTLDS) {
                        UpcommingSchoolSubmit.isSubmit = response.SubmitTLDS;
                        UpcommingSchoolSubmit.isShowModalConfirmSubmit = true;
                    } else {
                        TrainingModeMessageModal.isShowTrainingMessageModal = true;
                    }

                }
            });
        }

        $(document).ready(function () {
            $(function () {
                $('html').bind('keypress', function (e) {
                    if (e.keyCode == 13) {
                        return false;
                    }
                });

                $("input[name='ra-transition-statement']").on('change', function (e) {
                    checkButtonsEnable();
                });

                $("input[name='ra-aware-child']").on('change', function (e) {
                    checkButtonsEnable();
                });

                $('#ckbIsfamilyOptedOutTransitionStatement').change(function (e) {
                    checkButtonsEnable();
                });

                $("#idSgoNavigationStep7").removeClass("disabled");
                breadcrumbDetailPage('.stats', '#rpTLDSManager');
            })
        });

    </script>
}
