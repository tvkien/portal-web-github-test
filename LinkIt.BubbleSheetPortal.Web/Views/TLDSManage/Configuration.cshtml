@model LinkIt.BubbleSheetPortal.Models.TLDS.TLDSUserConfigurations
@{
    ViewBag.Title = "TLDS Configuration";
}

@*@MvcHtmlString.Create(
    Bundle.Css()
        .Add(@Url.Content("~/Content/css/custom.css"))
        .Add(@Url.Content("~/Content/css/sgohome.css"))
        .Render("/Content/themes/Constellation/css/c_combined_#.css")
     )*@

@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleTDLSConfigurationBundle()

    <style>
        .form select {
            height: 30px;
        }

        .wtSpreader, .wtHider, .htCore {
            width: 100% !important;
        }

        .wtHider {
            height: auto !important;
        }

        .form {
            padding-bottom: 40px;
        }

        .block-content h1 a {
            display: initial;
            position: unset;
        }

        .ui-widget-header {
            background: none repeat scroll 0 0 transparent !important;
            border: 0 solid #aaa !important;
            position: relative;
            top: 27px;
        }

        .ui-dialog {
            background: none repeat scroll 0 0 transparent;
            border: 0 none;
        }

            .ui-dialog .ui-dialog-titlebar-close {
                position: absolute;
                right: 7px;
                top: -8px;
            }

        .ui-widget-header .ui-icon {
            background-image: url("/Content/themes/base/images/fancy_close.png");
        }

        .ui-icon {
            height: 40px;
            width: 40px;
        }

        .ui-icon-closethick {
            background-position: 2px 2px;
        }

        .ui-widget-header .ui-state-hover {
            background: none repeat scroll 0 0 transparent !important;
            border: 0 none;
        }

        .ui-dialog .ui-dialog-titlebar-close {
            height: 42px;
            width: 30px;
        }

        .pointer {
            cursor: pointer;
        }

        .sub-list {
            list-style: disc;
            margin-left: 40px;
        }
            .sub-list li {
                margin: 4px;
                line-height: normal;
            }
</style>

<article class="container_12">
    <section class="grid_12">
        <div class="block-border">
            <div class="block-content form" id="divOnTop">
                <h1>Service Details</h1>
                @using (Html.BeginForm("Configuration", "TLDSManage", FormMethod.Post, new { id = "editTDLSConfigurationsForm", @class = "form u-m-t-20" }))
                {
                    if (ViewBag.HasBeenSavedSuccess != null && (bool)ViewBag.HasBeenSavedSuccess)
                    {
                        <ul id="success-messages" class="message success">
                            <li> Successfully saved</li>
                        </ul>
                    }
                    <ul id="fe-error-messages" class="message error u-m-t-20" style="display:none">
                        <li>Email Address in invalid format</li>
                    </ul>
                    <fieldset>
                        <legend>Early Childhood Service Details</legend>
                        <div class="colx2-left">
                            <p>
                                <label>
                                    Name of service
                                </label>
                                <span class="relative">
                                    @Html.TextBoxFor(m => m.EarlyChildHoodServiceConfiguration.NameOfService, new { @class = "full-width", @maxlength = "500" })
                                </span>
                            </p>
                            <p></p>
                        </div>
                        <div class="colx2-right">
                            <p>
                                <label>
                                    Address of service
                                </label>
                                <span class="relative">
                                    @Html.TextBoxFor(m => m.EarlyChildHoodServiceConfiguration.AddressOfService, new { @class = "full-width", @maxlength = "200" })
                                </span>
                            </p>
                            <p></p>
                        </div>

                        <div class="colx2-left">
                            <p>
                                <label>
                                    Service approval number
                                </label>
                                <span class="relative">
                                    <input id="EarlyChildHoodServiceConfiguration_ServiceApprovalNumber" maxlength="50" name="EarlyChildHoodServiceConfiguration.ServiceApprovalNumber" type="text" value="@Model.EarlyChildHoodServiceConfiguration.ServiceApprovalNumber" onkeypress="validateTLDSServiceNumber(event)" class="full-width" />
                                </span>
                            </p>
                            <p></p>
                        </div>
                        <div class="colx2-right">
                            <p>
                                <label>
                                    Phone
                                </label>
                                <span class="relative">
                                    @Html.TextBoxFor(m => m.EarlyChildHoodServiceConfiguration.Phone, new { @class = "full-width", @maxlength = "50" })
                                </span>
                            </p>
                            <p></p>
                        </div>
                        <div class="colx2-left">
                            <p>
                                <label>
                                    Email
                                </label>
                                <span class="relative">
                                    @Html.TextBoxFor(m => m.EarlyChildHoodServiceConfiguration.Email, new { @class = "full-width", @maxlength = "200" })
                                </span>
                            </p>
                            <p></p>
                        </div>
                        <div class="colx2-right">
                            <p></p>
                        </div>
                    </fieldset>

                    @Html.Partial("_ListProfileTeachers")

                    @Html.Partial("_ListGroups")

                    <fieldset>
                        <legend>Context of early years setting/s</legend>
                        <div class="colx2-left" style="width: 98%">
                            <p>
                                Please provide a brief description of the learning environment.
                                This should cover:
                                <ul class="sub-list">
                                    <li>Name and type of each relevant early childhood setting</li>
                                    <li>A description of program delivery (e.g. five-hour sessions, three times a week)</li>
                                    <li>Total number of children in group</li>
                                    <li>Information about staffing changes or the child's participation that may have impacted continuity of learning.</li>
                                </ul>
                            </p>
                            @Html.TextAreaFor(m => m.ContextSpecificConfiguration.ContextOfEarlyYearsSetting, new { @class = "full-width first-focus", @rows = "10", @cols = "100" })
                        </div>
                    </fieldset>
                    <div class="alert-warning">Click <b>Save</b> before you leave this page. If you click <b>Back to TLDS Home</b> your changes will not be saved.</div>
                    <div class="u-text-right u-m-t-15">
                        <button id="btnTLDSHome" type="button">Back to TLDS Home</button>
                        <button id="btnSave" class="u-m-l-10" type="button">Save</button>
                    </div>
                }
            </div>
        </div>
    </section>
</article>
<script>
    var informationFromSerializeString = '';

    $(function () {
        $('.stats').addClass('current');
        $('#rpTLDSManager').addClass('current');
        $('#EarlyChildHoodServiceConfiguration_QualificationId').val('@Model.EarlyChildHoodServiceConfiguration.QualificationId');

        informationFromSerializeString = getInformationFromSerializeString();

        $('#EarlyChildHoodServiceConfiguration_Email').on("keypress keyup blur", function (event) {
            $("#fe-error-messages").hide();
        });

        $('#EarlyChildHoodServiceConfiguration_Phone').on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^\d].+/, ""));
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    });


    $('#btnSave').click(function () {
        var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        const email = $("#EarlyChildHoodServiceConfiguration_Email").val();
        const isValid = regex.test(email.toLowerCase());

        if (email && !isValid) {
            $("#success-messages").hide();
            $("#fe-error-messages").show();
            $("html, body").animate({ scrollTop: 0 }, 200);
            return;
        }

        $('#editTDLSConfigurationsForm').submit();
    });

    $('#btnTLDSHome').click(function () {
        if (getInformationFromSerializeString() != informationFromSerializeString) {
            CustomConfirm({
                message: 'Changes have been made. Are you sure you would like to leave without saving?',
                yes: function () {
                    var url = '@Url.Action("Index", "TLDSManage")';
                    window.location.href = url;
                },
                no: function () {
                },
                open: function () {
                },
                close: function () {
                },
            });
        } else {
            var url = '@Url.Action("Index", "TLDSManage")';
            window.location.href = url;
        }
    });

    function validateTLDSServiceNumber(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /^[a-zA-Z0-9-_]+$/;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    function getInformationFromSerializeString() {
        return $("#editTDLSConfigurationsForm").find("textarea, input").serialize();
    }

    function searchDelay(inputFilter, dataTable) {
        var delay = null;

        inputFilter.off('keyup.DT input.DT');

        inputFilter.on("keyup", function () {
            var search = inputFilter.val();
            clearTimeout(delay);
            delay = setTimeout(function () {
                if (search != null) {
                    dataTable.dataTable().fnFilter(search);
                }
            }, 1000);
        });
    }

</script>
