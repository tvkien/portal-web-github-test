@using LinkIt.BubbleSheetPortal.Web.Helpers
@model LinkIt.BubbleSheetPortal.Web.ViewModels.TestPreferenceViewModel
           @{
               ViewBag.Title = "Lock/Unlock Test Banks";
}
<article class="container_12">
    <section class="grid_12">
        <div id="TestPreferenceContent" class="block-border">
            <div id="divLockBankFilterl2" class="block-content form bubbleSheetSelector">
                <h1>Lock/Unlock Test Banks</h1>
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    <fieldset id="publisherContent" class="grey-bg">
                        <legend>Select State/@LabelHelper.DistrictLabel</legend>
                        <div class="columns">
                            <div class="colx2-left">
                                <p>
                                    <label>State</label>
                                    <select id="selectState"></select>
                                </p>
                            </div>
                            <div class="colx2-right">
                                <div class="mb-3 block-content-dropdown-marquee">
                                    <label>@LabelHelper.DistrictLabel</label>
                                     <div class="block-text-name">
                                        <select id="selectDistrict"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                }
                else
                {
                    <input id="hdfDistrictId" value="@Model.CurrentDistrictId" type="hidden"/>
                }
                <fieldset class="grey-bg" style="z-index: 1002">
                    <legend>Select Test Bank</legend>
                    <div style="z-index: 1002">
                        <div class="colx2-left">
                            <div class="mb-3">
                                <label>@LabelHelper.GradeLabel</label>
                                <select id="selectGrade"></select>
                            </div>
                            <div>
                                <label>Lock Status</label>
                                <select id="selectFilterType">
                                    <option value="0">All</option>
                                    <option value="1">Not Locked</option>
                                    <option value="2">Locked</option>
                                </select>
                            </div>
                        </div>
                        <div class="colx2-right">
                             <div class="mb-3 block-content-dropdown-marquee">
                                <label>@LabelHelper.Subject</label>

                                <div class="block-text-name">
                                    <select id="selectSubject"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="clearfix"></div>
                <div class="float-right apply_filler">
                    <button id="filterSheets" type="button">Apply Filters</button>
                </div>
                <div class="clearfix"></div>

                <div class="block-border" id="divListLockbankdl1" >
                    <div id="divListLockbankdl2" class="block-content form bubbleSheetSelector" >
                        <div class="last-child testPreference">
                            <table id="datatable" class="datatable table" width="100%">
                                <thead>
                                    <tr>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            @LabelHelper.Subject
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            @LabelHelper.GradeLabel
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Bank
                                        </th>
                                        <th scope="col">
                                            <span class="column-sort">
                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                            </span>
                                            Lock/Unlock
                                        </th>
                                        <th scope="col" style="display: none">SubjectId</th>
                                        <th scope="col" style="display: none">GradeId</th>
                                        <th scope="col" style="display: none">DistrictId</th>
                                        <th scope="col" style="display: none">BankAccessId</th>
                                        <th scope="col" style="display: none">BankDistrictId</th>
                                        @*   <th scope="col" style="display: none"></th>*@
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="height: 60px;"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>

<script>
    $(function () {
        $('#selectDistrict').marquee();
        $('#selectSubject').marquee();
         @if (Model.IsPublisher)
         {
             <text>
                    $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                        populateStates(states);
                    });
            </text>
         }
         else
         {
             if(Model.IsNetworkAdmin)
             {
                 <text>
        $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
            populateStates(states);
        });
            </text>
             }
             else
             {

                 <text>
                    $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: '-1' }, function (grades) {
                        populateGrades(grades);
                    });
                   </text>
             }
         }

        @*$.get('@Url.Action("GetGrades", "PopulateTest")', function (grades) {
            populateGrades(grades);
        });*@
    });

    function populateGradesByDistrict() {
        $('#selectGrade').empty();
        $('#selectSubject').empty();
        var districtValue = $('#selectDistrict').val();
        if (districtValue != 'select') {
            $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: districtValue }, function (grades) {
                //populateSchools(schools);
                populateGrades(grades);
            });
        }
    }

    function populateDistricts() {
        $('#selectDistrict').empty();
        var stateValue = $('#selectState').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
        }
    }

    function populateStates(states) {
        addDefaultOption($('#selectState'), "State");
        addSelectListItems($('#selectState'), states);
    }

    $('#selectState').change(function () {
        $('#selectDistrict').empty();
        $('#selectGrade').empty();
        if ($('#selectState').val() != 'select') {
            populateDistricts();
        }
    });

    $('#selectDistrict').change(function () {
        populateGradesByDistrict();
        if ($('#selectDistrict').val() != 'select') {
            $('#btnLockedbank').show();
        } else {
            $('#btnLockedbank').hide();
        }
    });

    $('#selectGrade').change(function () {
        populateSubjects();
    });

    $('#selectSubject').change(function () {
        //TODO: Subject Change
    });

    function populateGrades(grades) {
        $('#selectGrade').empty();
        defaultSelectValue($('#selectGrade'), "0", "All @LabelHelper.TestGrade");
        addSelectListItems($('#selectGrade'), grades);
        defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subject");
    }

    function populateSubjects() {
        var gradeValue = $('#selectGrade').val();
        var districtValue = 0;
        if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() != 'select') {
            districtValue = $('#selectDistrict').val();
        }
        if (gradeValue > 0) {
            $.get('@Url.Action("GetSubjectsByGradeId", "SearchBank")', { gradeId: gradeValue, districtId: districtValue }, function (subjects) {
                defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subject");
                addSelectListItems($('#selectSubject'), subjects);
            });
        } else {
            defaultSelectValue($('#selectSubject'), "0", "All @LabelHelper.Subject");
        }
    }

</script>

<script type="text/javascript">
    $(function () {
        LoadTesClassAssignmentToTable();
    });

    function LoadTesClassAssignmentToTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            bProcessing: false,
            sAjaxSource: '@Url.Action("GetBankByDistrict")',
            fnServerParams: function (aoData) {
                var subject = [];
                if ($('#selectSubject').val() != null) {
                    subject = $('#selectSubject').val().split(',');
                }
                for (var i = 0; i < subject.length; i++) {
                    aoData.push({ name: "SubjectIds", value: subject[i] });
                }
                aoData.push(
                    //{ name: "SubjectIds", value: $('#selectSubject').val() },
                    { name: "GradeId", value: $('#selectGrade').val() },
                    { name: "DistrictId", value: $('#selectDistrict').val() },
                    { name: "BankDistrictAccessId", value: $('#selectFilterType').val() }
                );
            },
            iDisplayLength: 25,
            aoColumns: [
                { sType: 'string', sName: 'SubjectName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'GradeName', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'int', sName: 'BankDistrictAccessId', bSearchable: true, bSortable: true, bVisible: true },
                { sType: 'int', sName: 'SubjectId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'GradeId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'DistrictId', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'BankAccessId', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'int', sName: 'BankDistrictId', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(3)', nRow).html(SetIconVisibilityBank(aData[8], aData[3], aData[7]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                $('#filterSheets').attr("disabled", "disabled");

                return true;
            },
            fnDrawCallback: function () {
                $('#TestPreferenceContent').unblock();
                $('#filterSheets').removeAttr("disabled");
                return true;
            },
            fnInitComplete: function () {
            }
        };
        $("#datatable").data("options", options);
    }

    function setupFilters() {
        ShowBlock($('#TestPreferenceContent'), 'Loading');

        var dataTable = $('#datatable').dataTable();
        var settings = dataTable.fnSettings();
        fnResetAllFilters(settings);

        dataTable.fnDraw();
    }

    function fnResetAllFilters(oSettings) {
        for (var iCol = 0; iCol < oSettings.aoPreSearchCols.length; iCol++) {
            oSettings.aoPreSearchCols[iCol].sSearch = '';
        }
    }

    function filterColumn(searchTerm, columnIndex, settings) {
        settings.aoPreSearchCols[columnIndex].sSearch = searchTerm;
        settings.aoPreSearchCols[columnIndex].bRegex = false;
        settings.aoPreSearchCols[columnIndex].bSmart = true;
    }

    $('#filterSheets').unbind('click');
    $('#filterSheets').click(function () {
        setupFilters();
    });

    function SetIconVisibilityBank(bankDistrictId, districtBankStatus, bankStatus) {
        var result = '';
        var unlockString = '';
        var lockString = '';
        var lockIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/lock_70.png")';
        var unlockIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/Unlock_70.png")';
        if (bankDistrictId > 0) {
            if (districtBankStatus == 1) {
                if (bankStatus == 2) {
                    unlockString = '<img class="Gray-Out" src ="' + unlockIcon + '" style="margin-right: 4px; margin-top: -5px;" title="The bank is locked by the author">';
                    result += unlockString;
                } else {
                    unlockString = '<div onclick="LockAndUnLockBank(' + bankDistrictId + ')" class="with-tip actionIcon"><img src ="' + unlockIcon + '" style="margin-right: 4px; margin-top: -5px;" title="Lock Bank"></div>';
                    result += unlockString;
                }
            } else {

                if (bankStatus == 2) {
                    lockString = ' <img class="Gray-Out" src ="' + lockIcon + '" style="margin-right: 4px; margin-top: -5px;" title="The bank is locked by the author">';
                    result += lockString;

                } else {
                    lockString = '<div  onclick="LockAndUnLockBank(' + bankDistrictId + ')" class="with-tip actionIcon"><img src ="' + lockIcon + '" style="margin-right: 4px; margin-top: -5px;" title="Unlock Bank"></div>';
                    result += lockString;
                }
            }
        } else {
            if (bankStatus == 2) {
                lockString = '<img class="Gray-Out" src ="' + lockIcon + '" style="margin-right: 4px; margin-top: -5px;" title="The bank is not published by the author">';
                result += lockString;
            } else {
                unlockString = ' <img class="Gray-Out" src ="' + unlockIcon + '" style="margin-right: 4px; margin-top: -5px;" title="The bank is not published by the author">';
                result += unlockString;
            }
        }
        return result;
    }

    function LockAndUnLockBank(bankDistrictId) {
        $.get('@Url.Action("UpdateStatusBankDistrict", "TestPreference")', { bankDistrictId: bankDistrictId }, function (response) {
            if (response.Success == 'Success') {
                //TODO: Change Status Success
                //alert("Change Status Success: " + bankDistrictId);
                setupFilters();
            } else {
                //TODO: Change Status Fail
                //alert("Change Status Fail: " + bankDistrictId);
            }

        });
    }

    function defaultSelectValue(selectList, objctValue, objectText) {
        selectList.empty();
        selectList
            .append($("<option></option>")
                    .attr("value", objctValue)
                    .text("Select " + objectText));
    }
</script>

<style type="text/css">
    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
        top: 100px !important;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay {
        background: #2b2b2d !important;
    }

    .block-content .no-margin {
        margin-left: -0.667em !important;
    }

    .table thead td {
        color: #000 !important;
        text-shadow: 0 0px;
    }

    .ui-widget-header {
        position: relative;
        z-index: 9999;
    }

    .ui-widget-content {
        z-index: 1002;
    }
    #divListLockbankdl2 .block-footer{ margin-top: 0px !important;}
</style>
