<style>
    #dataTable tbody td {
        word-break: break-all;
        word-wrap: break-word;
    }
</style>
<div class="block-border" id="divStudent">
    <div class="block-content form">
        <h1 id="student-lookup-commands">
            Students
            <a href="javascript:void(0)" onclick="redirectToAddStudentPage()">
                <img src="@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png")" />
                Add New Student
            </a>
            <div class="clearfix"></div>
            <a href="javascript:void(0)" id="btnShowInactiveStudent" style="margin-left: 177px;">
                Show Inactive Students:
                <span id="showInactiveStudentText">Off</span>
            </a>
            <div class="clearfix"></div>
            <a href="javascript:void(0)" id="btnGenRCode" style="margin-left: 413px;" v-bind:class="{disabled: selectedUsersCount <= 0}">
                Generate Registration Code
            </a>
            <div class="clearfix"></div>
            <a href="javascript:void(0)" v-on:click="showingDistributeModal = !showingDistributeModal" style="margin-left: 645px;"
               v-bind:class="{disabled: selectedUsersCount <= 0}">
                DISTRIBUTE
            </a>
        </h1>
        <div id="divNotifications"></div>
        <div class="clear-25">
        </div>
        <div class="no-margin last-child">
            <table id="dataTable" class="datatable table no-margin" width="100%">
                <thead>
                    <tr>
                        <th scope="col" class="black-cell"><input type="checkbox" id="rcodeCheckAll" style="position:absolute; top:24px;" /> <span class="loading"></span></th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Name
                        </th>

                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Local ID
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            State ID
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            School
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            @LabelHelper.GradeLabel
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Race
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Gender
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Status
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            CanAccess
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Registration Code
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Email
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Email Sent
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="height: 60px;"></td>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="dialogManualGrading"></div>
<modal-component v-bind:show.sync="showingDistributeModal" v-bind:width="300" id="modal-distribute">
    <div slot="close"><span></span></div>
    <div slot="header">
        <div class="block-heading">
            <h1 class="block-heading-item is-active">DISTRIBUTE</h1>
        </div>
    </div>
    <div slot="body" class="u-m-t-20">
        <input type="radio" id="distribute-by-email" name="distribute-type" v-model="distributeMethod" value="distribute-by-email" />
        <label for="distribute-by-email"><b>Distribute by Email</b></label><br />
        <div style="margin-left:25px" v-show="checkedDistributeByEmail">You will be sending emails to <b>{{selectedUsersCount}}</b> user{{(selectedUsersCount > 0 ? 's' : '')}}. Emails will only be sent to users who have email addresses on file.</div>

        <input style="margin-top: 20px" type="radio" id="distribute-by-print-page" name="distribute-type" v-model="distributeMethod" value="distribute-by-print-page" />
        <label for="distribute-by-print-page"><b>Distribute by Printed Page</b></label>
        <div style="margin-left:25px" v-show="checkedDistributeByPrintedPage">You will be printing registration codes for <b>{{selectedUsersCount}}</b> user{{(selectedUsersCount > 0 ? 's' : '')}}</div>

    </div>
    <div slot="footer">
        <div class="u-text-center" style="margin-top: 20px;">
            <button id="btnSubmit" type="submit" v-on:click="submitDistribute" name="distribute">Submit</button>
            <button id="btnCancel" type="button" v-on:click="showingDistributeModal = false" class="grey">Cancel</button>
        </div>

    </div>
</modal-component>

<div id="idPopupPrintConfirm" class="dialog" style="display:none">
    <section>
        <div class='block-border'>
            <div class='block-content'>
                <h1>Student Detail Print</h1>
                <div>
                    <p>
                        <a id="idlinkFilePrint" target="_blank" href="#">
                            <u>
                                Click here to open PDF file
                            </u>
                        </a>
                    </p>
                    <p style="text-align: center;">
                        <button id="idbtnClosePrintPopup" type="button" onclick="closePrintPopup();">Close</button>
                    </p>
                </div>
            </div>
        </div>
    </section>
</div>
<script src="/Scripts/StudentLookup/StudentLookup.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        InitLoadStudent();
    });

    var showInactiveStudent = false;
    function InitLoadStudent() {
        var pageSize = _historyData && _historyData.pageSize > 0 ? parseInt(_historyData.pageSize) : 50;
        var options = {
            bDestroy: true,
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetStudentResult", "StudentLookup")',
            oSearch: {
                sSearch: _historyData.searchText
            },
            onSearch: storageSession,
            oLanguage: { "sZeroRecords": "No results meet your search criteria. Try changing your date range or other filters and search again." },
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "districtId", value: !isFirstLoad ? -1 : (_historyData && _historyData.districtID ? _historyData.districtID : $('#selectDistrict').val()) },
                    { name: "LastName", value: "" },
                    { name: "FirstName", value: _historyData && _historyData.selectFirstName ? _historyData.selectFirstName : $('#selectFirstName').val() },
                    { name: "Code", value: _historyData && _historyData.selectLocalId ? _historyData.selectLocalId : $('#selectLocalId').val() },
                    { name: "StateCode", value: _historyData && _historyData.selectStateId ? _historyData.selectStateId : $('#selectStateId').val() },
                    { name: "SchoolId", value: _historyData && _historyData.schoolID ? _historyData.schoolID : $('#selectAdminSchool').val() },
                    { name: "GradeId", value: _historyData && _historyData.gradeID ? _historyData.gradeID : $('#selectGrade').val() },
                    { name: "RaceName", value: _historyData && _historyData.selectRace ? _historyData.selectRace : ($('#selectRace').val() == null || $('#selectRace').val() == 'select' ? '' : $('#selectRace').val()) },
                    { name: "GenderId", value: _historyData && _historyData.selectGender ? _historyData.selectGender : $('#selectGender').val() },
                    { name: "ShowInactiveStudent", value: _historyData && _historyData.showInactive ? _historyData.showInactive : showInactiveStudent }
                );
                //TuanVo:encode text in filter searchbox
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                }
            },
            bAutoWidth: false,
            iDisplayLength: pageSize,
            aLengthMenu: [50, 100, 500, 1000],
            aaSorting: [[1, "asc"], [2, "asc"], [3, "asc"]],
            aoColumns: [
                { sType: 'int', sName: 'StudentId', bSearchable: false, bSortable: false, sWidth: '60px' },
                { sType: 'string', sName: 'FullName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Code', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'StateCode', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'SchoolName', bSearchable: false, bSortable: true },
                { sType: 'string', sName: 'GradeName', bSearchable: false, bSortable: true, sWidth: '56px' },
                { sType: 'string', sName: 'RaceName', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'GenderCode', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'int', sName: 'Status', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'CanAccess', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'RegistrationCode', bSearchable: false, bSortable: true, sWidth: '114px' },
                { sType: 'string', sName: 'Email', bSearchable: false, bSortable: true, sWidth: '114px' },
                { sType: 'string', sName: 'RegistrationCodeEmailLastSent', bSearchable: false, bSortable: true, sWidth: '114px' },
                { sType: 'string', sName: 'HasEmailAddress', bSearchable: false, bSortable: true, bVisible: false },
            ],
            fnRowCallback: function (nRow, aData) {
                var _studentIdColumnIndex = getCellIndexBysName('#dataTable', 'StudentId');
                var _statusColumnIndex = getCellIndexBysName('#dataTable', 'Status');
                var _canAccessColumnIndex = getCellIndexBysName('#dataTable', 'CanAccess');

                $('td:eq(0)', nRow).html(setIconVisibility(aData[_studentIdColumnIndex], aData[_statusColumnIndex], aData[_canAccessColumnIndex]));

                var _emailLastSentColumnIndex = getCellIndexBysName('#dataTable', 'RegistrationCodeEmailLastSent');
                $('td:eq(7)', nRow).html(displayDateWithFormat(aData[_emailLastSentColumnIndex], true));

                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTable'), 'Loading');
                StudentLookupApp.selectedUsers = [];
                $('#rcodeCheckAll').prop("checked", false);
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTable').unblock();


                $('.with-tip').tip();
                var _pageSizeDefault = _historyData.pageSize ? _historyData.pageSize : 50;
                var pageSizeGrid = $('#dataTable_length select').val();
                if (_pageSizeDefault != pageSizeGrid) {
                    storageSession();
                    _pageSizeDefault = pageSizeGrid;
                }
            },
            fnInitComplete: function () {
            }
        }

        $("#dataTable").data("options", options);
    }

    function setIconVisibility(studentId, status, canAccess) {
        var iconString = "";

        var detailsIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var detailsString = '<input type="checkbox" did="' + studentId + '" class="rcode" onchange="rcode_onchange(this,' + studentId + ')" />';
        detailsString += '<a title="Edit" href="@Url.Action("EditStudent", "ManageClasses")/?id=' + studentId + '&ReturnUrl=sm"><img src ="' + detailsIcon + '" width="14" height="14" style="margin-right: 4px"></a>';
        if (canAccess != 'True') {
            detailsString = '<img src ="' + detailsIcon + '" width="14" height="14" style="margin-right: 4px; -webkit-filter: grayscale(100%);">';
        }

        var actionIcon = '';
        var actionString = '';
        if (status == '1') {
            // If this student is active ==> show deactivate icon
            actionIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
            if (canAccess == 'True') {
                actionString = '<a href="javascript:void(0);" title="Deactivate" onclick="deactivateStudent(event,' + studentId + ')"><img src ="' + actionIcon + '" width="14" height="14" style="margin-right: 4px"></a>';
            } else {
                actionString = '<img src ="' + actionIcon + '" width="14" height="14" title="Deactivate" style="margin-right: 4px; -webkit-filter: grayscale(100%); filter: grayscale(100%);">';
            }
        } else {
            // Else ==> show activate icon
            actionIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle.png")';
            if (canAccess == 'True') {
                actionString = '<a href="javascript:void(0);" title="Activate" onclick="activateStudent(event,' + studentId + ')"><img src ="' + actionIcon + '" width="14" height="14" style="margin-right: 4px"></a>';
            } else {
                actionString = '<img src ="' + actionIcon + '" width="14" height="14" title="Activate" style="margin-right: 4px; -webkit-filter: grayscale(100%); filter: grayscale(100%);">';
            }
        }

        iconString += detailsString + actionString;

        return iconString;
    }

    $('#btnShowInactiveStudent').click(function() {
        showInactiveStudent = !showInactiveStudent;
        if (_historyData) {
            _historyData.showInactive = showInactiveStudent;
        }
        $("#showInactiveStudentText").html(showInactiveStudent ? "on" : "off");
        // Just apply searching when Apply filter button is active
        if ($('#filterSheets').attr('disabled') != 'disabled') {
            var dataTable = $('#dataTable').dataTable();
            var settings = dataTable.fnSettings();
            dataTable.fnDraw();

            storageSession();
        }
    });

    function activateStudent(event, studentId) {
        event.preventDefault();

        var confirmMessage = "Do you want to activate this student?";
        popupAlertMessageV2('confirm', confirmMessage, 450, 500, 'ConfirmActiveStudent', studentId);
    }

    function ConfirmActiveStudent(e) {
        var $self = $(e);
        ShowBlock($('#divStudent'), 'Loading');

        var studentId = $self.attr('valueInfor');
        $.post('@Url.Action("ActivateStudent")', { studentId: studentId }, function(response) {
            $('#divStudent').unblock();
            if (response.Result == true) {
                LinkIt.success('#divNotifications', 'Student is activated');
                ui.dataTable.fnDraw();
            } else {
                alert('An error has occured. Please try again.');
            }
        });
        $self.parents('.ui-dialog').remove();
    }


    function deactivateStudent(event, studentId) {
        event.preventDefault();

        var confirmMessage = "Do you want to deactivate this student?";
        popupAlertMessageV2('confirm', confirmMessage, 450, 500, 'confirmDeactiveStudent', studentId);

    }

    function confirmDeactiveStudent(e) {
        var $self = $(e);
        ShowBlock($('#divStudent'), 'Loading');

        var studentId = $self.attr('valueInfor');
        $.post('@Url.Action("DeactivateStudent")', { studentId: studentId }, function (response) {
            $('#divStudent').unblock();

            if (response.Result == true) {
                LinkIt.success('#divNotifications', 'Student is deactivated');
                ui.dataTable.fnDraw();
            } else {
                var vMessage = 'An error has occured. Please try again.';
                popupAlertMessage('alert', vMessage, 300, 500);
            }
        });
        $self.parents('.ui-dialog').remove();
    }

    function redirectToAddStudentPage() {
        var districtId = $('#selectDistrict').val();
        if (districtId == null || districtId == 'select') {
            districtId = 0;
        }
        var link = '@Url.Action("AddNewStudent", "ManageClasses")?fromManageStudent=true&filterDistrictId=' + districtId;
        window.location.href = link;
    }

    function rcode_onchange(t, studentId) {
        var isAllSelected = true;
        StudentLookupApp.updateSelectedUsers();
        $("input.rcode").each(function (index, elem) {
            if (!$(elem).is(':checked')) {
                isAllSelected = false;
            }
        });

        $('#rcodeCheckAll').prop("checked", isAllSelected);
    }

    $('#btnGenRCode').click(function () {
        var idlist = '';
        $("input.rcode:checked").each(function (index, elem) {
            idlist += $(elem).attr('did') + ',';
        });

        if (idlist == '') {
            CustomAlert('Please select student.');
            return;
        } else {
            ShowBlock($('#divStudent'), 'Loading');
            $.post('@Url.Action("GenRCode")', { idList: idlist }, function (response) {
                $('#divStudent').unblock();
                if (response.Result == true) {
                    LinkIt.success('#divNotifications', 'Generate Registration Code successfully');
                    ui.dataTable.fnDraw();
                } else {
                    alert('An error has occured. Please try again.');
                }
            });
        }
    });

    $('#rcodeCheckAll').click(function () {
        $("input.rcode").each(function (index, elem) {
            $(elem).prop("checked", $('#rcodeCheckAll').is(':checked'));
        });
        StudentLookupApp.updateSelectedUsers();
    });

    function closePrintPopup() {
        $("#idPopupPrintConfirm").dialog("close");
    }
</script>

