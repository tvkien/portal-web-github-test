@using LinkIt.BubbleSheetPortal.Web.Helpers
<style>
    #dataTable tbody td {
        word-break: break-all;
        word-wrap: break-word;
    }

    #portal-v2-containter * .no-margin.last-child {
        margin: 0;
    }

    #portal-v2-containter .last-child .block-pagination {
        margin-left: 0;
        margin-right: 0;
    }

    #portal-v2-containter table thead th:first-child,
    #portal-v2-containter table tbody td:first-child {
        text-align: center;
    }

    #portal-v2-containter table tbody td:nth-child(1) {
        text-align: center;
        padding: 8px 0;
    }

    #portal-v2-containter table thead th:first-child input {
        margin-right: 0 !important;
    }

    #portal-v2-containter table tbody td:first-child:not(:empty) a {
        display: inline-block;
    }

    #portal-v2-containter .modal-component-body {
        padding: 0px 24px 24px 24px;
    }

    #portal-v2-containter .modal-component-header {
        padding: 24px 0 0 24px;
    }

    #portal-v2-containter .ui-dialog .block-content {
        padding: 1.5rem !important;
        min-width: 240px;
    }

    #portal-v2-containter .ui-widget-content {
        background: none;
    }

    .mr-auto {
        margin-right: auto !important;
    }

    .cls-copy:hover {
        background-color: #C3E3EE;
    }

    #btnCancel:hover {
        background-color: #970200 !important;
    }

    #portal-v2-containter .wrapper-icons {
        flex-wrap: wrap;
    }

        #portal-v2-containter .wrapper-icons .icon-item {
            width: 40%;
            display: flex;
            justify-content: center;
            padding: 8px;
            margin-left: 2px;
            margin-right: 2px;
        }

        #portal-v2-containter .wrapper-icons .icon-reset-btn {
            cursor: pointer;
        }

    #portal-v2-containter .customResetModal .modal-component-close,
    #portal-v2-containter .customResetModal .modal-component-header,
    #portal-v2-containter .customResetModal .modal-component-footer {
        display: none;
    }

    #portal-v2-containter .customResetModal .modal-component-body {
        padding: 0
    }
</style>
<div class="block-border" id="divStudent">
    <div class="block-content form">
        <div class="row g-0">
            <h1 id="student-lookup-commands" class="w-auto">
                Students
            </h1>
            <button id="addNewStudentBtn" class="btn-plus-icon btn-text ms-auto mb-3" onclick="redirectToAddStudentPage()">
                Add new student
            </button>
        </div>

        <div id="exportStudentLogin" style="display: none; margin-bottom: 6px">
            <button class="btn-blue mx-2" id="btnExportStudentLogin"  v-on:click="showingExportStudentModal = !showingExportStudentModal" @*v-on:click="exportStudentLogin"*@>
                Export
            </button>
        </div>
        <div id="showBtnGenerateGroup" style="display: none; margin-bottom: 6px">
            <button class="btn-blue" id="btnGenRCode">
                Generate Registration Code
            </button>
            <button class="btn-blue mx-2" id="btnDistribute" v-on:click="showingDistributeModal = !showingDistributeModal">
                Distribute
            </button>
        </div>

        <div style="display: none" id="formListStudentDeactivate" class="form-check form-switch flex-row align-items-center mt-3 ps-0 float-left">
            <label class="form-check-label mb-0 deactivated-title" for="btnShowInactiveStudent">Show Inactive Students:</label>
            <span class="ms-1 me-3" id="showInactiveStudentText">Off</span>
            <div id="btnActiveTestClassAssignment">
                <input class="form-check-input" type="checkbox" name="btnShowInactiveStudent" id="btnShowInactiveStudent">
            </div>
        </div>

        <div id="divNotifications"></div>
        <div>
            <table id="dataTable" class="datatable table no-margin student-table" width="100%">
                <thead>
                    <tr>
                        <th scope="col" class="black-cell" style="padding-left: .7rem"><input type="checkbox" id="rcodeCheckAll" /></th>
                        <th scope="col"></th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Name
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Local ID
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            State ID
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            School
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Class(es)
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            @LabelHelper.StudentGrade
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            @LabelHelper.StudentRace
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Gender
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Status
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            CanAccess
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Registration Code
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Username
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Passcode
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Email
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                            </span>
                            Email Sent
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="height: 60px;"></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="dialogManualGrading"></div>

<modal-component v-bind:show.sync="showingDistributeModal" v-bind:width="400" id="modal-distribute">
    <div slot="close"><span></span></div>
    <div slot="header">
        <div class="block-heading">
            <h2 class="header">DISTRIBUTE</h2>
        </div>
    </div>
    <div slot="body">
        <input type="radio" id="distribute-by-email" name="distribute-type" v-model="distributeMethod" value="distribute-by-email" />
        <label for="distribute-by-email" class="ms-1"><b>Distribute by Email</b></label><br />
        <div style="margin-left: 1.6rem" v-show="checkedDistributeByEmail">You will be sending emails to <b>{{selectedUsersCount}}</b> user{{(selectedUsersCount > 1 ? 's' : '')}}. Emails will only be sent to users who have email addresses on file.</div>

        <input style="margin-top: 24px" type="radio" id="distribute-by-print-page" name="distribute-type" v-model="distributeMethod" value="distribute-by-print-page" />
        <label for="distribute-by-print-page" class="ms-1"><b>Distribute by Printed Page</b></label>
        <div style="margin-left: 1.6rem" v-show="checkedDistributeByPrintedPage">You will be printing registration codes for <b>{{selectedUsersCount}}</b> user{{(selectedUsersCount > 1 ? 's' : '')}}</div>
    </div>
    <div slot="footer">
        <button id="btnCancel" type="button" v-on:click="showingDistributeModal = false" class="grey">Cancel</button>
        <button id="btnSubmit" type="submit" v-on:click="submitDistribute" name="distribute">Submit</button>
    </div>
</modal-component>

<modal-component v-bind:show.sync="showingExportStudentModal" v-bind:width="500" id="modal-export">
    <div slot="close"><span></span></div>
    <div slot="header" style="margin-bottom: 15px; ">
        <div class="block-heading">
            <h2 class="header" style="margin-bottom: 0px !important;">Print</h2>
        </div>
    </div>
    <div slot="body" style="max-height: 450px; overflow-y: auto;">
        <input type="radio" id="export-by-list" name="export-type" v-model="exportMethod" value="export-by-list" />
        <label for="export-by-list" class="ms-1"><b>List </b></label><br />

        <div v-show="hasGenerateLogin">
            <div>
                <input style="margin-top: 24px" type="radio" id="export-by-per-student" name="export-type" v-model="exportMethod" value="export-by-per-student" />
                <label for="export-by-per-student" class="ms-1"><b>One page per student</b></label>
            </div>
            <div>
                <input style="margin-top: 24px" type="radio" id="export-by-avery" name="export-type" v-model="exportMethod" value="export-by-avery" />
                <label for="export-by-avery" class="ms-1"><b>Labels </b></label>
            </div>
        </div>
    </div>
    <div slot="footer">
        <button id="btnCancel" type="button" v-on:click="showingExportStudentModal = false" class="grey">Cancel</button>
        <button id="btnSubmit" type="submit" v-on:click="okExportPage" name="distribute">OK</button>
    </div>
</modal-component>

<modal-component v-bind:show.sync="showingSessionStudentModal" v-bind:width="1050" id="modal-SessionStudent" class="dataSessionStudent">
    <div slot="close"><span></span></div>
    <div slot="header">
        <div class="block-heading">
            <h2 class="header">Student Sessions - {{student}}</h2>
        </div>
    </div>
    <div slot="body" style=" max-height: calc(100vh - 205px); overflow-x: hidden;">
        @Html.Partial("v2/_ListStudentSession")
    </div>
    <div slot="footer" class="clsFooter">
        <button style="background-color: #e73a46" id="btnCancel" type="button" v-on:click="closeStudentSession()" class="grey">Close</button>
        <button style="display: none"></button>
    </div>
</modal-component>

<div id="idPopupPrintConfirm" class="dialog" style="display:none">
    <section>
        <div class='block-border'>
            <div class='block-content block-24'>
                <h2 class="header">Student Detail Print</h2>
                <a class="d-inline-block" style="margin-bottom: 2rem" id="idlinkFilePrint" target="_blank" href="#">
                    <u>
                        Click here to open PDF file
                    </u>
                </a>
                <div class="modal-component-footer" style="margin: 0 -24px -24px -24px">
                    <div slot="footer">
                        <button id="idbtnClosePrintPopup" type="button" class="btn-red" onclick="closePrintPopup();">Close</button>
                    </div>
                    </d iv>
                </div>
            </div>
    </section>
</div>

<modal-component v-bind:show.sync="showingResetPortalModal" v-bind:width="500" class="resetPortalModal customResetModal">
    <div slot="body" style=" max-height: calc(100vh - 205px); overflow-x: hidden;" class="body">
        <div id="portalPasswordContainer">
        </div>
    </div>
</modal-component>

<script src="@BundleHelper.Version("~/Scripts/StudentLookup/StudentLookupV2.js")"></script>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.HasAddNewStudent' == 'True') {
            $('#addNewStudentBtn').show();
        } else {
            $('#addNewStudentBtn').hide();
        }

        InitLoadStudent();
    });

    function InitLoadStudent() {
        StudentLookupApp.hasGenerateLogin = '@ViewBag.HasGenerateLogin' === 'True';

        var pageSize = _historyData && _historyData.pageSize > 0 ? parseInt(_historyData.pageSize) : 50;
        var options = {
            bDestroy: true,
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetStudentResult", "StudentLookup")',
            oSearch: {
                sSearch: _historyData.searchText
            },
            onSearch: storageSession,
            oLanguage: { "sZeroRecords": "No results meet your search criteria. Try changing your date range or other filters and search again." },
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "districtId", value: !isFirstLoad ? -1 : (_historyData && _historyData.districtID ? _historyData.districtID : $('#selectDistrict').val()) },
                    { name: "LastName", value: "" },
                    { name: "FirstName", value: _historyData && _historyData.selectFirstName ? _historyData.selectFirstName : $('#selectFirstName').val() },
                    { name: "Code", value: _historyData && _historyData.selectLocalId ? _historyData.selectLocalId : $('#selectLocalId').val() },
                    { name: "StateCode", value: _historyData && _historyData.selectStateId ? _historyData.selectStateId : $('#selectStateId').val() },
                    { name: "SchoolId", value: _historyData && _historyData.schoolID ? _historyData.schoolID : $('#selectAdminSchool').val() },
                    { name: "GradeId", value: _historyData && _historyData.gradeID ? _historyData.gradeID : $('#selectGrade').val() },
                    { name: "RaceName", value: _historyData && _historyData.selectRace ? _historyData.selectRace : ($('#selectRace').val() == null || $('#selectRace').val() == 'select' ? '' : $('#selectRace').val()) },
                    { name: "GenderId", value: _historyData && _historyData.selectGender ? _historyData.selectGender : $('#selectGender').val() },
                    { name: "ShowInactiveStudent", value: _historyData && _historyData.showInactive ? _historyData.showInactive : showInactiveStudent },
                    { name: "ClassId", value: _historyData && _historyData.classID ? _historyData.classID : $('#selectClass').val() }
                );
                //TuanVo:encode text in filter searchbox
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                }
            },
            bAutoWidth: false,
            iDisplayLength: pageSize,
            aLengthMenu: [50, 100, 500, 1000],
            aaSorting: [[2, "asc"], [3, "asc"]],
            aoColumns: [
                { sType: 'int', sName: 'StudentId', bSearchable: false, bSortable: false },
                { sType: 'string', sName: 'Action', bSearchable: false, bSortable: false, sWidth: '110px', sClass: 'col-action' },
                { sType: 'string', sName: 'FullName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Code', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'StateCode', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'SchoolName', bSearchable: false, bSortable: true },
                { sType: 'string', sName: 'Classes', bSearchable: false, bSortable: false, sWidth: '160px', bVisible: false },
                { sType: 'string', sName: 'GradeName', bSearchable: false, bSortable: true, sWidth: '85px' },
                { sType: 'string', sName: 'RaceName', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'GenderCode', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'int', sName: 'Status', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'CanAccess', bSearchable: false, bSortable: true, bVisible: false },
                { sType: 'string', sName: 'RegistrationCode', bSearchable: false, bSortable: true },
                { sType: 'string', sName: 'UserName', bSearchable: false, bSortable: true, bVisible: StudentLookupApp.hasGenerateLogin },
                { sType: 'string', sName: 'SharedSecret', bSearchable: false, bSortable: true, bVisible: StudentLookupApp.hasGenerateLogin },
                { sType: 'string', sName: 'Email', bSearchable: false, bSortable: true, sWidth: '144px' },
                { sType: 'string', sName: 'RegistrationCodeEmailLastSent', bSearchable: false, bSortable: true, sWidth: '144px' },
                { sType: 'bool', sName: 'HasEdit', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'HasDelete', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'HasView', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'HasResetPassword', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'HasGenerateLogin', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconCheckbox(aData));
                $('td:eq(1)', nRow).html(setIconVisibility(aData));

                StudentLookupApp.hasGenerateLogin = aData[getCellIndexBysName('#dataTable', 'HasGenerateLogin')] == 'True';
                var emailLastSentIndex = StudentLookupApp.hasGenerateLogin ? 10 : 8;
                var _emailLastSentColumnIndex = getCellIndexBysName('#dataTable', 'RegistrationCodeEmailLastSent');
                $(`td:eq(${emailLastSentIndex})`, nRow).html(displayDateWithFormat(aData[_emailLastSentColumnIndex], true));

                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTable'), 'Loading');
                StudentLookupApp.selectedUsers = [];
                $('#rcodeCheckAll').prop("checked", false);
                $("#showBtnGenerateGroup").hide();
                $("#exportStudentLogin").hide();

                return true;
            },
            fnDrawCallback: function () {
                $('#dataTable').unblock();
                var _pageSizeDefault = _historyData.pageSize ? _historyData.pageSize : 50;
                var pageSizeGrid = $('#dataTable_length select').val();
                if (_pageSizeDefault != pageSizeGrid) {
                    storageSession();
                    _pageSizeDefault = pageSizeGrid;
                }

                var table = $(this).dataTable();
                var firstRow = table.fnGetData(0);
                if (firstRow) {
                    table.fnSetColumnVis(getCellIndexBysName('#dataTable', 'UserName'), StudentLookupApp.hasGenerateLogin);
                    table.fnSetColumnVis(getCellIndexBysName('#dataTable', 'SharedSecret'), StudentLookupApp.hasGenerateLogin);

                    $(".block-custom-header .data-table-action ").prepend($("#showBtnGenerateGroup"));
                    $("#showBtnGenerateGroup").show();

                    if (StudentLookupApp.hasGenerateLogin) {
                        $(".block-custom-header .data-table-action ").prepend($("#exportStudentLogin"));
                        $("#exportStudentLogin").show();
                    }
                }

                $('.withTip').tip();
                reCheckClassCheckBox();
            },
            fnInitComplete: function () {
                tranformSearchInputDataTable("dataTable_filter");
                $("#dataTable_wrapper .block-custom-header").prepend($("#formListStudentDeactivate"));
                $("#formListStudentDeactivate").addClass("d-flex");
                $(".data-table-action").addClass("d-flex");

                $('.withTip').tip()
            }
        }

        $("#dataTable").data("options", options);
    }

    function setIconCheckbox(aData) {
        var studentId = aData[getCellIndexBysName('#dataTable', 'StudentId')];
        var html = '<input type="checkbox" did="' + studentId + '" class="rcode mr-auto" onchange="rcode_onchange(this,' + studentId + ')" />';
        return html;
    }

    function setIconVisibility(aData) {
        var studentId = aData[getCellIndexBysName('#dataTable', 'StudentId')];
        var studentName = aData[getCellIndexBysName('#dataTable', 'FullName')];
        var active = aData[getCellIndexBysName('#dataTable', 'Status')] == '1';
        var hasPortalAccount = !!aData[getCellIndexBysName('#dataTable', 'UserName')];
        var hasEditBtn = aData[getCellIndexBysName('#dataTable', 'HasEdit')] == 'True';
        var hasActiveBtn = aData[getCellIndexBysName('#dataTable', 'HasDelete')] == 'True';
        var hasSessionBtn = aData[getCellIndexBysName('#dataTable', 'HasView')] == 'True';
        var hasResetPasswordBtn = aData[getCellIndexBysName('#dataTable', 'HasResetPassword')] == 'True';

        var actionHtml = "";

        if (hasEditBtn) {
            var editIcon = '<span class="icon fa-solid fa-pencil icon-grey"></span>';
            var editHtml = '<a title="Edit" class="withTip icon-item" href="@Url.Action("EditStudent", "ManageClasses")/?id=' + studentId + '&returnUrl=sm">' + editIcon + '</a>';
            actionHtml += editHtml;
        }

        if (hasActiveBtn) {
            var activeHtml = '';
            if (active) {
                var activeIcon = '<span class="icon fa-solid fa-circle-minus icon-red"></span>';
                activeHtml = '<a href="javascript:void(0);" class="withTip  icon-item" title="Deactivate" onclick="deactivateStudent(event,' + studentId + ')">' + activeIcon + '</a>';
            } else {
                var activeIcon = '<span class="icon fa-solid fa-circle-plus icon-green"></span>';
                activeHtml = '<a href="javascript:void(0);" class="withTip  icon-item" title="Activate" onclick="activateStudent(event,' + studentId + ')">' + activeIcon + '</a>';
            }
            actionHtml += activeHtml;
        }

        if (hasSessionBtn) {
            var studentName = studentName.split(',');
            var studentNameJoin = studentName.length > 1 ? studentName[1] + " " + studentName[0] : '';
            var sessionHtml = '<a href="javascript:void(0);" class="withTip  icon-item" title="Sessions" onclick="showSessionStudent(event,' + studentId + ',' + "'" + studentNameJoin + "'" + ')"><span class="icon fa-solid fa-info-circle icon-blue"></span></a>';

            actionHtml += sessionHtml;
        }

        if (hasResetPasswordBtn) {
            var resetIcon = '<span class="icon fa-solid fa-rotate-right"></span>'
            var resetPassHtml = '<span title="Reset portal password" class="withTip icon-item icon-reset-btn" onclick="showResetPortalPassword(event,' + studentId + ',' + "'" + hasPortalAccount + "'" + ')">' + resetIcon + '</span>';

            actionHtml += resetPassHtml;
        }

        return `<div class="d-flex flex-row align-items-center justify-content-center wrapper-icons">${actionHtml}</div>`;
    }

    $('#btnShowInactiveStudent').click(function() {
        showInactiveStudent = !showInactiveStudent;
        if (_historyData) {
            _historyData.showInactive = showInactiveStudent;
        }
        $("#showInactiveStudentText").html(showInactiveStudent ? "On" : "Off");
        // Just apply searching when Apply filter button is active
        if ($('#filterSheets').attr('disabled') != 'disabled') {
            var dataTable = $('#dataTable').dataTable();
            var settings = dataTable.fnSettings();
            dataTable.fnDraw();

            storageSession();
            setActionButtonGroup(true);
        }
    });

    function cancelDialog() {
        $("#confirmManageStudentDialog").dialog("close");
    }

    function confirmManageStudent(message, yesFn, closeFn) {
        var params = { message };
        if (yesFn) {
            params.cbYesBtnFuncName = yesFn;
        } else {
            params.cbYesBtnFuncName = 'cancelDialog()';
        }
        if (!closeFn) {
            params.cbCancelBtnFuncName = 'cancelDialog()'
        }
        confirmMessageV2(
            params,
            {
                dialogAttr: {
                    attr: {
                        id: 'confirmManageStudentDialog'
                    }
                }
            }
        )
    }

    function activateStudent(event, studentId) {
        event.preventDefault();
        var confirmMessage = "Do you want to activate this student?";
        confirmManageStudent(confirmMessage, `ConfirmActiveStudent(${studentId})`);
    }

    function ConfirmActiveStudent(studentId) {
        ShowBlock($('#divStudent'), 'Loading');
        $.post('@Url.Action("ActivateStudent")', { studentId: studentId }, function(response) {
            $('#divStudent').unblock();
            if (response.Result == true) {
                LinkIt.success('#divNotifications', 'Student is activated');
                ui.dataTable.fnDraw();
            } else {
                confirmManageStudent('An error has occured. Please try again.', null, true);
            }
        });
        cancelDialog();
    }


    function deactivateStudent(event, studentId) {
        event.preventDefault();

        var confirmMessage = "Do you want to deactivate this student?";
        confirmManageStudent(confirmMessage, `confirmDeactiveStudent(${studentId})`);
    }

    function showSessionStudent(event, studentId, studentName) {
        $('#dataTableStudentSession tbody').empty();
        StudentLookupApp.student = studentName;
        StudentLookupApp.studentId = studentId;
        displayDataStudentSession();
        StudentLookupApp.showingSessionStudentModal = true;
        $('#dataTableStudentSession').dataTable().fnDraw()
    }

    function confirmDeactiveStudent(studentId) {
        ShowBlock($('#divStudent'), 'Loading');
        $.post('@Url.Action("DeactivateStudent")', { studentId: studentId }, function (response) {
            $('#divStudent').unblock();

            if (response.Result == true) {
                LinkIt.success('#divNotifications', 'Student is deactivated');
                ui.dataTable.fnDraw();
            } else {
                var vMessage = 'An error has occured. Please try again.';
                confirmManageStudent(vMessage, null, true);
            }
        });
        cancelDialog();
    }

    function redirectToAddStudentPage() {
        var districtId = $('#selectDistrict').val();
        if (districtId == null || districtId == 'select') {
            districtId = 0;
        }
        var link = '@Url.Action("AddNewStudent", "ManageClasses")?fromManageStudent=true&filterDistrictId=' + districtId;
        window.location.href = link;
    }

    function rcode_onchange(t, studentId) {
        var isAllSelected = true;
        var anyChecked = false;
        StudentLookupApp.updateSelectedUsers();
        $("input.rcode").each(function (index, elem) {
            if (!$(elem).is(':checked')) {
                isAllSelected = false;
            }
            else {
                anyChecked = true;
            }
        });

        $('#rcodeCheckAll').prop("checked", isAllSelected);
        if (!isAllSelected) {
            $('#rcodeCheckAll').removeClass("input-checked-v2")
        }

        if (!anyChecked)
            setActionButtonGroup(!$(t).is(":checked"));
        else
            setActionButtonGroup(false);
    }

    $('#btnGenRCode').click(function () {
        if (!StudentLookupApp.selectedUsers.length) {
            CustomAlert('Please select a student.');
            return;
        }

        ShowBlock($('#divStudent'), 'Loading');

        var districtId = $('#selectDistrict').val();
        $.ajax({
            url: '@Url.Action("GenRCode")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ districtId, studentIds: StudentLookupApp.selectedUsers }),
            success: function (response) {
                $('#divStudent').unblock();
                if (response.Result === true) {
                    LinkIt.success('#divNotifications', 'Generate Registration Code successfully');
                    ui.dataTable.fnDraw();
                } else {
                    alert('An error has occurred. Please try again.');
                }
            },
            error: function () {
                $('#divStudent').unblock();
                alert('An unexpected error occurred.');
            }
        });
    });

    $('#rcodeCheckAll').click(function () {
        $("input.rcode").each(function (index, elem) {
            $(elem).prop("checked", $('#rcodeCheckAll').is(':checked'));
        });
        setActionButtonGroup(!$('#rcodeCheckAll').is(':checked'));
        StudentLookupApp.updateSelectedUsers();
    });

    function closePrintPopup() {
        $("#idPopupPrintConfirm").dialog("close");
    }

    function reCheckClassCheckBox() {
        var isChecked = $("#rcodeCheckAll").is(":checked");
        if (!isChecked) {
            $("#rcodeCheckAll").removeClass("input-checked-v2")
        }
        setActionButtonGroup(!isChecked);
    }

    function copyData() {
        var body = document.body;
        var range = null; dataTableStudentSession_filter;
        var parentNode = document.querySelector('.dataSessionStudent').cloneNode(true);
        let childNodeSearch = parentNode.querySelector('#dataTableStudentSession_filter');
        let childNodeCopy = parentNode.querySelector('.cls-copy');
        let childNodePaggingInfo = parentNode.querySelector('#dataTableStudentSession_info');
        let childNodePagging = parentNode.querySelector('.block-pagination');
        let childNodeFooter = parentNode.querySelector('.modal-component-footer');

        var el = parentNode;
        childNodeSearch.remove();
        childNodeCopy.remove();
        childNodeFooter.remove();
        childNodePaggingInfo.remove();
        childNodePagging.remove();
        document.body.appendChild(parentNode);
        if (document.createRange && window.getSelection) {
            range = document.createRange();
            var sel = window.getSelection();
            sel.removeAllRanges();
            try {
                range.selectNodeContents(el);
                sel.addRange(range);
            } catch (e) {
                range.selectNode(el);
                sel.addRange(range);
            }
        } else if (body.createTextRange) {
            range = body.createTextRange();
            range.moveToElementText(el);
            range.select();
        }

        document.execCommand('copy', null, null);
        parentNode.remove();
    }

    function showResetPortalPassword(event, studentId, hasPortalAccount) {
        if (hasPortalAccount === 'true') {
            StudentLookupApp.studentId = studentId;
            ShowBlock($('#divStudent'), 'Loading');
            StudentLookupApp.showingResetPortalModal = false;
            $('#portalPasswordContainer').empty();

            var url = window.location.protocol + '//' + window.location.host;
            var resetPortalPasswordUrl = `${url}/ManageClasses/ResetPassword`;
            $.get(resetPortalPasswordUrl, { userId: studentId }, function (result) {
                $('#portalPasswordContainer').html(result);
                $('#portalPasswordContainer').show();
                StudentLookupApp.showingResetPortalModal = true;
                $('#divStudent').unblock();;
            });
        } else {
            CustomAlert('The student does not have a portal account.', false, null, null, null, 440, 440);
        }
    }

    $(document).on('click', '#resetPassword button[name="btnResetPasswordCancel"]', function () {
        StudentLookupApp.showingResetPortalModal = false;
    });

    function resetStudentPassword() {
        StudentLookupApp.showingResetPortalModal = false;
        if (StudentLookupApp.hasGenerateLogin) {
            $('#dataTable').dataTable().fnDraw();
        }
    }

    function setActionButtonGroup(isDisabled) {
        $("#btnExportStudentLogin").attr('disabled', isDisabled);
        $("#btnGenRCode").attr('disabled', isDisabled);
        $("#btnDistribute").attr('disabled', isDisabled);
    }
</script>

