<div class="modal-component-assign-user-sharing-group">
    <div class="mb-4 mt-2">
        <div class="form mb-4">
            <div class="manage-class-toggle" v-bind:class="{ 'is-toggle': isShowFilter }">

                <div v-on:click="toggleFilter" class="u-cursor-pointer manage-class-legend d-flex justify-content-between align-items-center">
                    <span>Filter by Role and School</span>
                    <i class="fa-solid fa-chevron-down icon-arrow"></i>
                </div>

                <div id="filterContent" class="columns" v-if="isShowFilter">
                    <div class="" style="width: 20%;">
                        <h4 class="mb-2">
                            <input id="checkAllRoles" v-model="isCheckAllRole" v-on:change="checkAllRoles" class="me-2" type="checkbox"> All Roles
                        </h4>
                        <div class="columns-filters" style="display: table !important; ">
                            <div v-for="role in assignUser.roles" class="columns-filter" :key="role.Id">
                                <label class="d-flex align-items-center">
                                    <input class="me-2" name="chkRoleId" type="checkbox" v-on:change="checkRoles" v-bind:value="role.Id" v-model="assignUser.roleSelected">
                                    {{ role.Name }}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="" style="width: 80%; ">
                        <h4 class="mb-2"><input class="me-2" v-model="isCheckAllSchool" v-on:change="checkAllSchools" type="checkbox">All Schools</h4>
                        @*<div class="mb-2">
                            <input v-on:keyup="onSearchSchool" id="idSearchSchool" class="me-2 form-control" placeholder="Input to search" type="text" style="width: 50%; ">
                        </div>*@
                        <div class="columns-filters">
                            <div v-for="school in assignUser.schools" class="columns-filter" :key="school.Id">
                                <label class="d-flex align-items-center">
                                    <input class="me-2" name="chkSchoolId" v-on:change="checkSchools" type="checkbox" v-bind:value="school.Id" v-model="assignUser.schoolSelected">
                                    {{ school.Name }}
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button v-on:click="clearAllCheckBox" class="btn-blue d-block me-3">Clear Filter</button>
            <button v-on:click="applyFilter" class="btn-red d-block">Apply Filters</button>
        </div>
    </div>
    <div class="">
        <div class="form">
            <div class="block-heading mb-3">
                <div class="d-flex justify-content-between align-items-center">
                    <a href="javascript:void(0)" class="block-heading-item d-block text-decoration-none title-large">
                        Users
                    </a>
                    <div>
                        <a class="btn btn-link button-student-action p-0 ms-3" v-on:click="prompAddUserToSharingGroup" v-bind:disabled="isDisabledButton">
                            Add user(s) to sharing group
                            <i class="fa-solid fa-plus ms-2"></i>&nbsp;
                        </a>
                    </div>
                </div>
            </div>

            <div style="position: relative">
                <div>
                    <a style="position: absolute; margin-top: 18px;" id="customCheckDeactive" class="block-heading-item d-inline-flex align-items-center text-decoration-none" href="#" v-on:click="changeInactive">
                        <label class="form-check-label m-0 deactivated-title text-switch">Show Inactive:</label>
                        <span class="ms-1 me-3 text-switch">{{ showInactiveText}}</span>
                        <span class="form-check-input custom-switch" v-bind:class="{ 'active': showInactiveText === 'On' }"></span>
                    </a>

                    <div class="no-margin last-child">
                        <table id="datatablefilterUserAddSharingGroup" class="datatable table no-margin datatable-filter-manage-class center-first-column" width="100%">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 2%">
                                        <input type="checkbox" id="chkAllUsers" v-on:click="checkAllUser" v-model="isCheckAllUser" />
                                    </th>
                                    <th scope="col" style="width: 14%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        First Name
                                    </th>
                                    <th scope="col" style="width: 14%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Last Name
                                    </th>
                                    <th scope="col" style="width: 14%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Username
                                    </th>
                                    <th scope="col" style="width: 14%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Role
                                    </th>
                                    <th scope="col" style="width: 17%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Schools
                                    </th>
                                    <th scope="col" style="width: 14%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Status
                                    </th>
                                    <th scope="col" style="width: 17%">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Sharing Groups
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <modal-component v-bind:show.sync="isShowModalAddUserToSharingGroup" class="static" v-bind:width="420">
        <div name="close"></div>
        <div slot="header"></div>
        <div slot="body">
            <p v-html="promtMessage"></p>
        </div>
        <div slot="footer">
            <button v-on:click="closeModalConfirmAddUserToSharingGroup">Cancel</button>
            <button id="isShowButtonAddUserToSharingGroup" v-on:click="addUserToSharingGroup">Add Users To Sharing Group</button>
        </div>
    </modal-component>
</div>

<script type="text/javascript">
    var allUserTable;
    var selectedUserTable;

    function displayFilterUserAddSharingGroup() {
        var $datatableFilterUserAddSharingGroup = $('#datatablefilterUserAddSharingGroup');
        var sAjaxSourceUrl = SharingGroupModel.getAjaxSource();

        var datatableSettings = {
            oLanguage: {sSearch: "" },
            bServerSide: true,
            sServerMethod: "GET",
            bDestroy: true,
            sAjaxSource: sAjaxSourceUrl,
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { mData: 'UserId', sName: 'UserId', bSearchable: false, bSortable: false, sClass: 'col-action' },
                { mData: 'FirstName', sName: 'FirstName', bSearchable: true, bSortable: true, sClass: 'add-user-group-column-fix' },
                { mData: 'LastName', sName: 'LastName', bSearchable: true, bSortable: true, sClass: 'add-user-group-column-fix' },
                { mData: 'UserName', sName: 'UserName', bSearchable: true, bSortable: true },
                { mData: 'RoleName', sName: 'RoleName', bSearchable: true, bSortable: true },
                { mData: 'SchoolList', sName: 'SchoolList', bSearchable: false, bSortable: false },
                { mData: 'UserStatusName', sName: 'UserStatusName', bSearchable: true, bSortable: true },
                { mData: 'SharingGroupName', sName: 'SharingGroupName', bSearchable: false, bSortable: false },
            ],
            fnRowCallback: function (nRow, aData) {
                SharingGroupModel.isCheckAllUser = false;
                $('td:eq(0)', nRow).html(setIconCheckBox(aData['UserId']));
                if (aData['SharingGroupName'] != null) {
                    $('td:eq(7)', nRow).html('<div style="overflow-wrap: anywhere; ">' + aData['SharingGroupName'] + '</div>');
                }
                return nRow;
            },
            fnPreDrawCallback: function () {
                $datatableFilterUserAddSharingGroup.css('width', 'auto').css('width', '100%');
                ShowBlock($datatableFilterUserAddSharingGroup, 'Loading');
                return true;
            },
            fnDrawCallback: function () {
                $datatableFilterUserAddSharingGroup.unblock();
                $datatableFilterUserAddSharingGroup.css('width', 'auto').css('width', '100%');
                var isCheckAllStudent = false
                var checkboxes = $('INPUT[name="chkUserId"][type=checkbox]');
                var checkedboxes = $('INPUT[name="chkUserId"][type=checkbox]:checked');
                if(checkedboxes && checkedboxes.length) {
                    checkedboxes.each(function() {
                        $(this).parents('tr').addClass('is-selected');
                    });
                    isCheckAllStudent = checkboxes.length === checkedboxes.length;
                }

                SharingGroupModel.isCheckAllStudent = isCheckAllStudent;
                $('#chkAllUsers').prop('checked', isCheckAllStudent);
                portalV2SkinCheckBox()
            },
            fnInitComplete: function () {
                var elSearchLabel = $('#datatablefiltermanageclass_filter');
                var elSearchInput = elSearchLabel.find('input');
                elSearchInput.attr('style', 'padding-left: 32px !important; position: relative;');
                $('#datatablefiltermanageclass_filter').addClass('data-search');
            }
        }

        $datatableFilterUserAddSharingGroup.dataTable().fnDestroy();
        $datatableFilterUserAddSharingGroup.data('options', datatableSettings);
        allUserTable = initializeDataTable($datatableFilterUserAddSharingGroup);
        SharingGroupModel.datatableSettingAssigns = datatableSettings;
        $('#divManageUserInSharingGroup').unblock();
    }

    function displaySelectedStudentOnly() {
        SharingGroupModel.initialDatableSelectedOnly = true;
        var $datatableSelectedStudentOnly = $('#datatableSelectedStudentOnly');
        var datatableSettings = {
            aaData: SharingGroupModel.selectedStudentsObject,
            bAutoWidth: false,
            iDisplayLength: 10,
            bFilter: false,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                 { sType: 'integer', sName: 'StudentId', bSearchable: false, bSortable: false, sClass: 'col-action' },
                 { sType: 'string', sName: 'FirstName', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'LastName', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'Code', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'Gender', bSearchable: false, bSortable: true },
                 { sType: 'string', sName: 'Grade', bSearchable: false, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconCheckBox(aData[0]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($datatableSelectedStudentOnly, 'Loading');
                return true;
            },
            fnDrawCallback: function () {
                this.parent().applyTemplateSetup();
                $datatableSelectedStudentOnly.unblock();
            },
            fnInitComplete: function () {
                this.parent().applyTemplateSetup();
            },
            sDom: '<"block-controls"l<\'float-left\'<"#showUser">><f>>rti<"block-footer clearfix"<"controls-buttons"p>>'
        };

        selectedUserTable = $datatableSelectedStudentOnly.dataTable(datatableSettings);
    }

    function setIconCheckBox(userId) {
        var checkboxString = '<div style="text-align: center;">' + '<input style="text-align: center;" type="checkbox" name="chkUserId" value="' + userId + '" /></div>';
        if (SharingGroupModel.isCheckAllUser) {
            checkboxString = '<div style="text-align: center;">' + '<input style="text-align: center;" type="checkbox" checked="checked" name="chkUserId" value="' + userId + '" /></div>';
        }
        if (SharingGroupModel.isShowSelectedUser) {
            var deassignIcon = '<i class="custom-icon fa-solid fa-circle-xmark icon-red"></i>';
            checkboxString = '<a href="#" title="Remove" class="with-tip" onclick="removeUser(event,' + userId + ')">' + deassignIcon + '</a>';
        } else if (checkSelected(userId)) {
            checkboxString = '<div style="text-align: center;">' + '<input style="text-align: center;" type="checkbox" checked="checked" name="chkUserId" value="' + userId + '" /></div>';
        }
        return checkboxString;
    }

    $('input[name="chkUserId"][type=checkbox]').live("click", function (e) {
        var data = allUserTable.fnGetData($(this).parents('tr').index());
        var $chkAllUsers = $(this).parents("table").find('#chkAllUsers');
        var $trRow = $(this).parents('tr');
        if (this.checked) {
            $trRow.addClass('is-selected');
            if (SharingGroupModel.selectedStudents.indexOf(this.value) < 0) {
                SharingGroupModel.selectedStudents.push(this.value);
                SharingGroupModel.selectedStudentsObject.push(data);
            }
            var checkboxes = $('INPUT[name="chkUserId"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $chkAllUsers.prop('checked', false);
                    $chkAllUsers.removeClass('input-checked-v2');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $chkAllUsers.prop('checked', true);
            }
        } else {
            var index = SharingGroupModel.selectedStudents.indexOf(this.value);
            SharingGroupModel.selectedStudents.splice(index, 1);
            SharingGroupModel.selectedStudentsObject.splice(index, 1);
            $chkAllUsers.prop('checked', false);
            $chkAllUsers.removeClass('input-checked-v2');
            $trRow.removeClass('is-selected');
            if (SharingGroupModel.isCheckAllUser && SharingGroupModel.removeUserSelectAll.indexOf(this.value) < 0) {
                SharingGroupModel.removeUserSelectAll.push(this.value);
            }
        }
    });

    function checkSelected(userId) {
        if ((SharingGroupModel.selectedStudents.indexOf(userId.toString()) > -1)
            && (SharingGroupModel.removeUserSelectAll.indexOf(userId.toString()) == -1)) {
            return true;
        }
        return false;
    }

    function removeUser(event, userId) {
        event.preventDefault();
        $('#tips > div').remove();
        var index = SharingGroupModel.selectedStudents.indexOf(userId.toString());
        SharingGroupModel.selectedStudents.splice(index, 1);
        SharingGroupModel.selectedStudentsObject.splice(index, 1);
        if (SharingGroupModel.isCheckAllUser) {
            SharingGroupModel.removeUserSelectAll.push(userId.toString());
        }
        selectedUserTable.fnClearTable();
        selectedUserTable.fnAddData(SharingGroupModel.selectedStudentsObject);
        selectedUserTable.fnDraw();
    }

    function registerEvent() {
        $('#btnAddNewUserToSchool').click(function () {
            $.ajax({
                url: '@Url.Action("AddNewStudentToClass")',
                type: 'POST',
                data: { classId: SharingGroupModel.classId },
                success: function (response) {
                    location.href = '@Url.Action("AddNewStudent")';
                }
            });
        });
    }
</script>
