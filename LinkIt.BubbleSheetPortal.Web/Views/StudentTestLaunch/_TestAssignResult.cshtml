@using LinkIt.BubbleSheetPortal.Web.ViewModels
@model LinkIt.BubbleSheetPortal.Web.ViewModels.TestAssignResultViewModel
@if (Model != null)
{
    if (Model.ErrorList != null && Model.ErrorList.Count > 0)
    {
        @LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.ScriptCustomBundle()
        <script>
            $(function () {
                addErrorMessages(@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)));
            });
        </script>
    }
    else
    {
    <div id="divPopupTestResult1" style="margin-top: 10px;">
        <fieldset class="grey-bg">
            <legend>Test Assignment Codes</legend>
            <div style="margin-bottom: 15px;">
                <div style="float: right;">
                    <div style="text-align: center; float: right; margin-bottom: 15px;">
                        <a href='@Url.Action("PrintAssignment", "TestAssignment")' target="_blank" style="width: 50px"
                           class="LinkitStypeButton big-button" id="divLinkPrintAssignment">Print</a>
                    </div>
                </div>
            </div>
            <div class="clear"></div>
            <div id="divContentPrint">
                <link href="@Url.Content("~/Content/themes/Constellation/css/table.css")" rel="stylesheet" />
                <div id="divTabs" style="width: 100%">
                    <div id="divMenuClassAssigment" class="tab_default" style="float: left; display: none; margin-right: 2px;" onclick="OpenClassAssignment();">Class Assignment</div>
                    <div id="divMenuStudentAssignment" class="tab_default" style="float: left; display: none; margin-right: 2px;" onclick="OpenStudentAssignment();">Student Assignment</div>
                    <div id="divMenuStudentGroupAssignment" class="tab_default" style="float: left; display: none; margin-right: 2px;" onclick="OpenStudentGroup();">Student Group Assignment</div>
                </div>
                <div class="clear"></div>
                <div id="divTabClassAssignments" style="display: none;">
                    @if (Model.ListClassAssign != null && Model.ListClassAssign.Count > 0)
                    {
                        <table class="table" width="100%">
                            <thead>
                                <tr>
                                    <th>Assigned</th>
                                    <th>Assignment</th>
                                    <th>Teacher</th>
                                    <th>Class</th>
                                    <th>Assignment Code</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (TestClassAssignResultViewModel testClassAssignResultViewModel in @Model.ListClassAssign.OrderByDescending(o=>o.Assigned))
                                {
                                    <tr>
                                        <td class="toLocalTime">
                                            @testClassAssignResultViewModel.Assigned.ToString()    
                                        </td>
                                        <td>
                                            @testClassAssignResultViewModel.Test
                                        </td>
                                        <td>
                                            @testClassAssignResultViewModel.TeacherName
                                        </td>
                                        <td>
                                            @testClassAssignResultViewModel.ClassName
                                        </td>
                                        <td>
                                            @testClassAssignResultViewModel.TestCode
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    }
                </div>
                <div id="divTabStudentAssigns" style="display: none;">
                    @if (Model.ListStudentAssign != null && Model.ListStudentAssign.Count > 0)
                    {
                        <table class="table" width="100%">
                            <thead>
                                <tr>
                                    <th>Assigned
                                    </th>
                                    <th>Assignment
                                    </th>
                                    <th>Teacher
                                    </th>
                                    <th>Student
                                    </th>
                                    <th>Student ID
                                    </th>
                                    <th>Assignment Code
                                    </th>
                                    <th>Passcode
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (TestStudentAssignResultViewModel testStudentAssignResultViewModel in @Model.ListStudentAssign.OrderByDescending(o => o.Assigned))
                                {
                                    <tr>
                                        <td class="toLocalTime">
                                            @testStudentAssignResultViewModel.Assigned.ToString()
                                        </td>
                                        <td>
                                            @testStudentAssignResultViewModel.Test
                                        </td>
                                        <td>
                                            @testStudentAssignResultViewModel.TeacherName
                                        </td>
                                        <td>
                                            @testStudentAssignResultViewModel.StudentName
                                        </td>
                                        <td>
                                            @testStudentAssignResultViewModel.StudentId
                                        </td>
                                        <td>
                                            @testStudentAssignResultViewModel.TestCode
                                        </td>
                                        <td>
                                            @testStudentAssignResultViewModel.ShortGUID
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    }
                </div>
                <div id="divTabGroupStudents" style="display: none;">
                    @if (Model.ListGroupStudent != null && Model.ListGroupStudent.Count > 0)
                    {
                        <table class="table" width="100%">
                            <thead>
                                <tr>
                                    <th>Assigned
                                    </th>
                                    <th>Assignment
                                    </th>
                                    <th>School
                                    </th>
                                    <th>Teacher
                                    </th>
                                    <th>Student
                                    </th>
                                    <th>Student ID
                                    </th>
                                    <th>Assignment Code
                                    </th>
                                    <th>Passcode
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (TestGroupStudentAssignResultViewModel testGroupStudent in @Model.ListGroupStudent.OrderByDescending(o => o.Assigned))
                                {
                                    <tr>
                                        <td class="toLocalTime">
                                            @testGroupStudent.Assigned.ToString()
                                        </td>
                                        <td>
                                            @testGroupStudent.Test
                                        </td>
                                        <td>
                                            @testGroupStudent.SchoolName
                                        </td>
                                        <td>
                                            @testGroupStudent.TeacherName
                                        </td>
                                        <td>
                                            @testGroupStudent.StudentName
                                        </td>
                                        <td>
                                            @testGroupStudent.StudentId
                                        </td>
                                        <td>
                                            @testGroupStudent.TestCode
                                        </td>
                                        <td>
                                            @testGroupStudent.ShortGUID
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    }
                </div>
            </div>
        </fieldset>
    </div> 
     
    }

    <script type="text/javascript">
         
        $('#btnPrintAssignResult').click(function () {
            Popup($('#divContentPrint').html());
        });

            function Popup(data) {
                var mywindow = window.open('', 'Assignment Result', 'height=400,width=600');
                mywindow.document.write(data);
                mywindow.document.close();
                mywindow.focus();
                if (navigator.appName == 'Microsoft Internet Explorer')
                    document.execCommand('Print');
                else mywindow.print();
                mywindow.close();
                return true;
            }

            function OpenStudentGroup() {
                $('#divTabs > div').removeClass('tab_assign_active');
                $('#divMenuStudentGroupAssignment').addClass('tab_assign_active');

                $('#divTabGroupStudents').show();
                $('#divTabStudentAssigns').hide();
                $('#divTabClassAssignments').hide();
                var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=3';
                $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
            }
            function OpenStudentAssignment() {
                $('#divTabs > div').removeClass('tab_assign_active');
                $('#divMenuStudentAssignment').addClass('tab_assign_active');
                $('#divTabGroupStudents').hide();
                $('#divTabStudentAssigns').show();
                $('#divTabClassAssignments').hide();
                var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=2';
                $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
            }
            function OpenClassAssignment() {
                $('#divTabs > div').removeClass('tab_assign_active');
                $('#divMenuClassAssigment').addClass('tab_assign_active');
                $('#divTabGroupStudents').hide();
                $('#divTabStudentAssigns').hide();
                $('#divTabClassAssignments').show();
                var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=1';
                $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
            }

            $(function () {
                $('#divTabs > div').removeClass('tab_assign_active');
                @if (Model.ListClassAssign != null && Model.ListClassAssign.Count > 0)
        {
            <text>
                $('#divMenuClassAssigment').show();
                </text>
        }
                @if (Model.ListStudentAssign != null && Model.ListStudentAssign.Count > 0)
        {
            <text>
                $('#divMenuStudentAssignment').show();
                </text>
        }
                @if (Model.ListGroupStudent != null && Model.ListGroupStudent.Count > 0)
        {
            <text>
                $('#divMenuStudentGroupAssignment').show();
                </text>
        }
        
                @switch (Model.CurrentTab)
        {
            case 1:
                {
                    <text>
                var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=1';
                $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                $('#divMenuClassAssigment').show().addClass('tab_assign_active');
                $('#divTabClassAssignments').show();
                </text>
                } break;
            case 2:
                {
                    <text>
                var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=2';
                $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                $('#divMenuStudentAssignment').show().addClass('tab_assign_active');
                $('#divTabStudentAssigns').show();
                </text>
                } break;
            case 3:
                {
                    <text>
                var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=3';
                $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                $('#divMenuStudentGroupAssignment').show().addClass('tab_assign_active');
                $('#divTabGroupStudents').show();
                </text>
                } break;
        }
                @if (Model.TotalTabs == 1)
        {
            <text>
                $('#divTabs').hide();
                </text>
        }
            });

    </script>

}
