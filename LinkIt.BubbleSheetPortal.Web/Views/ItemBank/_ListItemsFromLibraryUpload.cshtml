@*<article class="container_12">
    <section class="grid_12">
        <div class="block-border">*@
<style type="text/css">
    #dataTableUpload td {
        font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook;
        font-size: 12px;
    }
</style>
<style>
    #dataTableUpload tbody tr {
        height: 100% !important;/* Fix for IE9 */
    }
</style>
<style>
     /* No data available in table */
    #dataTableUpload .dataTables_empty div {
        width: 455px !important;
    }

    .scrollItemDataTableUpload thead,
    .scrollItemDataTableUpload tbody{display: block;}
    .scrollItemDataTableUpload tbody {
        height: 290px;
        overflow: auto;
        overflow-x: hidden;
    }
    .scrollItemDataTableUpload{
        width: 416px !important;
    }
    .scrollItemDataTableUpload tbody td {
        /*word-break: break-all */
        word-wrap: break-word;
    }
    .scrollItemDataTableUpload tbody td:nth-of-type(1) .divContainerStyle{
        width: 16px;
    }
    .scrollItemDataTableUpload tbody td:nth-of-type(2) .divContainerStyle
    {
        width: 347px;
    }
    .scrollItemDataTableUpload td img {
        padding-left: 0px;
        padding-right: 0px;
    }
    .noscrollItemDataTableUpload tbody td:nth-of-type(2) .divContainerStyle
    {
        width: 362px;
    }
    #divdataTableUpload {
        margin-top: -22px !important;
        height: 291px !important;
    }
    .divContainerStyle p {
        line-height: 1.57143em;
        font-size: 14px;
        font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook;
    }
</style>
<div style="display:none;">ItemBank\_ListItemsFromLibraryNew</div>
<div class="block-content form" id="divOnTop" style="height:425px;">
    <div class="toggle" style="padding-top: 0px; margin-top: -55px">
        <h1 style="margin-top: -5px">Filtered Items</h1>
        <button id="btnAddItemsToItemSetUpload" type="button" style="margin-left: 170px;margin-right: 2px;height: 35px;margin-top: 5px" disabled="disabled">Add Items to Item Set</button>
    </div>
    <div class="no-margin last-child" style="height:425px;overflow: hidden;padding-top: 37px;">
        <table id="dataTableUpload" class="datatable table no-margin scrollItemDataTableUpload" width="100%">
            <thead>
                <tr>
                    <th scope="col" style="width: 20px">
                       <input type="checkbox" id="chkAllItemUpload" />
                    </th>
                    <th scope="col">Content</th>
                    <th scope="col" style="display: none"></th><!--Tooltip-->
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td style="height: 60px;"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
@*        </div>
    </section>
</article>*@
<script type="text/javascript">

    $(function () {
        var optionsUpload = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: getAjaxSourceUpload(),
            fnServerParams: function (aoData) {
                //TuanVo:encode text in filter searchbox
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }

            },
            bFilter:false,
            bStateSave: false,
            bAutoWidth: false,
            iDisplayLength: 100,
            aaSorting: [[0, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'QTI3pItemID', bSearchable: false, bSortable: false, sWidth: "10px" },
                { sType: 'string', sName: 'Name', bSearchable: false, bSortable: false, sWidth: "400px" },
                { sType: 'string', sName: 'ToolTip', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                //$('td:eq(0)', nRow).html(setIconVisibilityUpload(aData[0]));
                $('td:eq(0)', nRow).html(setCheckBoxItemUpload(aData[0]));
                $('td:eq(1)', nRow).html(parseXmlContentQtiItem(aData[1]));
                $('td:eq(1)', nRow).addClass('with-tip');
                $('td:eq(1)', nRow).bind({
                    mouseenter: function () {
                        displaItemUploadTooltip($(this), aData[2],aData[3]);
                    },
                    mouseleave: function () {
                        $(this).removeClass('with-tip');
                        $('#tips div:last-child').html('');
                    }
                });
                $('td:eq(1)', nRow).addClass('cursor-pointer');
                $('td:eq(1)', nRow).attr("onclick", 'showEditQtiItemPopupUpload(' + aData[0] + ',1)');
                addWordBreakToTableCellItem($('td:eq(1)', nRow), 35, aData[1]);
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableUpload'), 'Loading');
                return true;
            },
            fnDrawCallback: function () {
                firstLoad = false;//firstLoad defined in ItemsFromLibrary.cshtml
                firstLoadListItemsFromLibrary = false;
                MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                LoadImages('#dataTableUpload');
                $('.with-tip').tip();
                $('#dataTableUpload').unblock();

                //fraction is broken in new line
                $("#dataTableUpload").find('span[class="math-tex"]').each(function (index, value) {
                    var span = $(value);
                    //add display:inline-block
                    span.css('display', 'inline-block');
                });
                //replace list by ol ( list is generated from xmlcontent )

                $("#dataTableUpload list[liststyletype='decimal']").each(function (index, value) {
                    var html = '<ol style="list-style-type:decimal;list-style-position: inside">';
                    $(value).find('li').each(function (idx, li) {
                        html += $(li).outerHTML();
                    });
                    html += '</ol>';
                    $(value).html(html);
                });

                formatTableForAddingVertialScrollBar('dataTableUpload', 'scrollItemDataTableUpload', 'noscrollItemDataTableUpload', 'scrollItemDataTableUploadIE9', 'noscrollItemDataTableUploadIE9');

                loadContentNumberLineHotspot('#dataTableUpload');
                loadContentImageHotSpot('#dataTableUpload');
                loadContentDragAndDrop('#dataTableUpload');

                calculatorSequenceWidth("#dataTableUpload partialsequence");
            }
        };

        $("#dataTableUpload").data("options", optionsUpload);        
        initializeDataTable($("#dataTableUpload"));
    });

    function getAjaxSourceUpload() {
        $('#chkAllItemUpload').removeAttr('checked');
        return getAjaxLoadItemFromLibraryByFilter();
    }

    function setIconVisibilityUpload(qtiItemId) {
        var editIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editString = '<a href="javascript:void(0)" onclick="showEditQtiItemPopupUpload(' + qtiItemId + ',1)"  title="Edit Item" qtiItemId="' + qtiItemId + '" class="with-tip EditQtiItem"><img src="' + editIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        var addToItemSet = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle.png")';
        var addToItemSetString = '<a href="javascript:void(0)" title="Add To Item Set" qtiItemId="' + qtiItemId + '" class="with-tip addToItemSet2" onclick="AddToItemSetUpload(this);"><img src="' + addToItemSet + '" width="16" height="16"></a>';
        return editString + addToItemSetString;
    }
    function setCheckBoxItemUpload(qtiItemId) {
        var checkboxString = '<input type="checkbox" name="chkItemUpload" value="' + qtiItemId + '"  />';

        return checkboxString;
    }
    $('#btnAddItemsToItemSetUpload').die('click');
    $('#btnAddItemsToItemSetUpload').live("click", function (e) {
        var selectedItemId = getSelectedItemsUpload();
        $('#btnAddItemsToItemSetUpload').attr('disabled', 'disabled');
        ShowBlock($("#dataTableUpload"), "Adding");

        $.post('@Url.Action("AddQTI3UploadToItemSetMany", "ItemBank")', { qti3pItemIdString: selectedItemId, qtiGroupId: $("#hiddenQIItemGroupID").val() }, function (response) {
            $("#dataTableUpload").unblock();
            $('#btnAddItemsToItemSetUpload').removeAttr('disabled');
            if (response.Success == 'Success') {
                uncheckAllSelectedqQtiItemsUpload();
                //href.css({ 'display': 'none' });
                ui.dataTableUpload.fnDraw();
                if ($('#qtiItemDataTableView').length > 0) {
                    ui.qtiItemDataTableView.fnDraw();
                }

            } else {
                alert(response.errorMessage);
            }
        });

    });

    function AddToItemSetUpload(control) {
        ShowBlock($("#dataTableUpload"), "Adding");
        var id = $(control).attr("qtiItemId");
        var href = $(control);
        $.post('@Url.Action("AddQTI3UploadToItemSetMany", "ItemBank")', { qti3pItemIdString: id, qtiGroupId: $("#hiddenQIItemGroupID").val() }, function (response) {
            $("#dataTableUpload").unblock();
            if (response.Success == 'Success') {
                //href.css({ 'display': 'none' });
                ui.dataTableUpload.fnDraw();
            } else {
                alert(response.errorMessage);
            }

        });
    }

    function ReloadItemUpload() {
        $("#dataTableUpload").dataTable().fnReloadAjax(getAjaxSourceUpload());
    }
    function showEditQtiItemPopupUpload(qtiItemId, showPassage) {
        ShowBlock($('#dataTableUpload'), "Opening Item");
        var worker = $('<div />');
        worker
            .addClass("dialog EditQtiItemPopUpDialogCSS")
            .attr("id", "editQtiItemDialog")
            .appendTo("body")
            .load('@Url.Action("ShowEditQtiItemItem")\?qtiItemId=0' + '&showPassage=' + showPassage + '&qti3pItemIdUploaded=' + qtiItemId, function () {
                worker.dialog({
                    title: $(this).attr("Standard"),
                    open: function () {
                        //a new overlay will be generated when opening an dialog
                        //set zindex of new overlay to make it cover Filter Item From Library Popup
                        var z_index = $("#addNewItemFromLibraryPopup").parent().css('z-index');
                        $('.ui-widget-overlay:last').css('z-index', parseInt(z_index) + 1);
                        $("#editQtiItemDialog").parent().css('z-index', parseInt(z_index) + 2);
                        $("#editQtiItemDialog").prev().css('top', '30px');
                        $('.ui-widget-overlay:last').height(2000);
                        $('#dataTableUpload').unblock();
                        AdjustQtiItemDetail();//declared in _QtiItemDetail.cshtml

                        var qtiItemHTML = $('#divQtiItemDetail').html();
                        qtiItemHTML = qtiItemHTML.replace(/<videolinkit/g, "<video").replace(/<\/videolinkit>/g, "</video>").replace(/<sourcelinkit /g, "<source ").replace(/<\/sourcelinkit>/g, "</source>");
                        $('#divQtiItemDetail').html(qtiItemHTML);

                        $('#divQtiItemDetail').find('video').trigger('play');
                        // Load content in file qtiItemLoadMedia.js
                        loadContentNumberLineHotspot('#divQtiItemDetail');
                        loadContentImageHotSpot('#divQtiItemDetail');
                        loadContentDragAndDrop('#divQtiItemDetail');
                        loadContentGlossary('#divQtiItemDetail', '#glossaryMessage');
                        calculatorSequenceWidth("#divQtiItemDetail partialsequence");
                    },
                    close: function () {
                        $('.ui-widget-overlay:last').remove();
                        $(this).remove();
                        $('#tips').html('');
                    },
                    modal: false,
                    width: 480,
                    resizable: false
                });
            });
        showModalDialogBG();
    }

    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }

    jQuery.fn.outerHTML = function (s) {
        return (s)
            ? this.before(s).remove()
            : jQuery("<p>").append(this.eq(0).clone()).html();
    };
    function displaItemUploadTooltip(e, data, maxItemTooltipLength) {
        if (data == null) {
            data = '';
        }
        var width = '100px'; //default
        if (maxItemTooltipLength <= 300) {
            width = '300px';
        }
        else if (data.length <= 400) {
            width = '400px';
        }
        else {
            width = '500px';
        }

        $(e).attr('title', '<p style="text-align:left;width:' + width + ';white-space: normal;word-break: break-all">' + data.split('|').join('<br />') + '</p>');
    }
</script>
<!-- script for checkbox all-->
<script type="text/javascript">
    $('#chkAllItemUpload').die('click');
    $('#chkAllItemUpload').live("click", function (e) {
        if (this.checked) {
            $('INPUT[name="chkItemUpload"][type=checkbox]').attr('checked', 'checked');
            $('#btnAddItemsToItemSetUpload').removeAttr('disabled');
        }
        else {
            $('INPUT[name="chkItemUpload"][type=checkbox]').removeAttr('checked');
            $('#btnAddItemsToItemSetUpload').attr('disabled', 'disabled');
        }
    });

    $('INPUT[name="chkItemUpload"][type=checkbox]').live("click", function (e) {
        if (this.checked) {
            $('#btnAddItemsToItemSetUpload').removeAttr('disabled');
            var checkboxes = $('INPUT[name="chkItemUpload"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $('#chkAllItemUpload').removeAttr('checked');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $('#chkAllItemUpload').attr('checked', 'checked');
            }
        }
        else {
            $('#chkAllItemUpload').removeAttr('checked');
            var checkedboxes = $('INPUT[name="chkItemUpload"][type=checkbox]:checked');
            if (checkedboxes.length > 0) {
            }
            else {
                $('#btnAddItemsToItemSetUpload').attr('disabled', 'disabled');
            }
        }
    });

    function getSelectedItemsUpload() {
        var Ids = '';
        $('INPUT[name="chkItemUpload"][type=checkbox]:checked').each(function (i, e) {
            Ids += $(e).val() + ',';
        });
        return Ids.substr(0, Ids.length - 1);
    }
    function uncheckAllSelectedqQtiItemsUpload() {
        $('INPUT[name="chkItemUpload"][type=checkbox]').removeAttr('checked');
        $('#btnAddItemsToItemSetUpload').attr('disabled', 'disabled');
    }
</script>