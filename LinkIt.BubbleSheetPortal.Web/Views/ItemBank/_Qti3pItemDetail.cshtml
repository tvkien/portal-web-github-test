@using LinkIt.BubbleSheetPortal.Web.ViewModels
<style>
     .noPadding {
         padding-left: 0px ;
         padding-right: 0px;
         padding-bottom: 0px;
         padding-top: 0px;
     }
    #divQtiItem3pDetail .assessmentItem:before {
         content: '';
     }
    #divQtiItem3pDetail .simpleChoice {
        position: relative;
    }
    #editQtiItem3pDialog .block-content {
         padding-top: 10px;
     }

    #divQtiItem3pDetail .choiceInteraction {
        counter-reset: my-counter;
        display: inline-block;
     }
     #divQtiItem3pDetail .choiceInteraction .simpleChoice:before {
        content: counter(my-counter, upper-latin) ".";
        counter-increment: my-counter;
        float: left;
     }
     .choiceInteraction .simpleChoice2:before {
        content: counter(my-counter,decimal);
     }
     #divQtiItem3pDetail .answer {
         line-height: 20px;
         font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook;
     }
     /*Sometime title is normally in a span*/
     /*#divQtiItem3pDetail .simpleChoice span {
          line-height: 22px;
          font-size: 1.1em;
     }*/
     /*Sometime title is in a div*/
      /*#divQtiItem3pDetail .simpleChoice div {
          line-height: 22px;
          font-size: 1.1em;
     }*/
    inlineChoiceInteraction, .inlineChoiceInteraction { /* LNKT-5787 */
        margin: 0 5px;
    }
    textEntryInteraction, .textEntryInteraction {
        margin: 0 5px;
    }
    .itemBody b{
        font-size: 16px;
        font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook
    }
    .itembody b{
        font-size: 16px;
        font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook
    }

     .itemBody, .itembody
	{
		overflow: hidden;
	}
	rubricblock{display: none;}
	#divQtiItem3pDetail .simpleChoice .MathJax span{font-size: 1em;padding-left: 0px;}
   
    li.simpleChoice {
        padding-left: 0px !important;
    }
    #divQtiItem3pDetail ol.choiceInteraction {
        margin-left: 0px !important;
    }
    #divQtiItem3pDetail .assessmentItem img {
        max-width: 2000px !important; /*Linkit need to see real image, a scrollbar is displayed if it's too big*/
    }
 </style>

<style type="text/css">
    @Html.Raw(ViewBag.Css)
    </style>
<style type="text/css">
    #listReference li {
        background-color: #F9F9F9;
        border: 1px solid #DCDCDC;
        border-radius: 8px;
        float: left;
        margin: 5px 5px 5px 0;
        padding: 2px;
        cursor: pointer;
    }
    #listReference li .delReference {
        background: url("images/delete.gif") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
        border: 0 solid #FFFFFF;
        cursor: pointer;
        height: 24px;
        width: 24px;
    }
    #listReference li .viewReference {
        background: url("images/view.gif") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
        border: 0 solid #FFFFFF;
        cursor: pointer;
        height: 24px;
        width: 24px;
    }
</style>
<section>   
    <div class="block-border">
    <div class="block-content form">
        <div id="divQtiItem3pDetail">
           @Html.Raw(ViewBag.HtmlContent)
            <div>
            </div>
            <div style="clear: both"></div>
            <div id="divQti3pItemDetailPassage">
                @* <ul id="listReference">
                    @for(int i = 0;i < ViewBag.PassageList.Count;i++)
                    {
                        var passage = (PassageViewModel) ViewBag.PassageList[i];
                        if(passage.RefObjectID > 0)
                        {
                            <li onclick="showPassageDetailPopupOnQti3pItemDetail(@passage.RefObjectID,'')"><input type="button" class="delReference" value="" >Reference: @passage.RefObjectID<input type="button" class="viewReference" value=""></li>
                        }
                        else
                        {
                            <li onclick="showPassageDetailPopupOnQti3pItemDetail(0,'@passage.Data')"><input type="button" class="delReference" value="" >Reference: @passage.Data.Substring(0,10) ...<input type="button" class="viewReference" value=""></li>
                        }
                    }
                </ul>*@
                
                    @for(int i = 0;i < ViewBag.PassageList.Count;i++)
                    {
                        var passage = (PassageViewModel) ViewBag.PassageList[i];
                        if (passage.Qti3pSourceID > 1)
                        {
                            if (passage.RefNumber > 0)
                            {
                                <div style="float: left; margin-left: 0px"><button onclick="showPassageDetailPopupOnQti3pItemDetail(0, '@passage.Data','@passage.Qti3pPassageID','@passage.Qti3pSourceID')" type="button" style="margin-left: 2px; margin-bottom: 2px">@passage.Qti3pSource Reference Number: @passage.RefNumber</button>
                                </div>
                            }
                            else
                            {
                                <div style="float: left; margin-left: 0px"><button onclick="showPassageDetailPopupOnQti3pItemDetail(0, '@passage.Data','@passage.Qti3pPassageID','@passage.Qti3pSourceID')" type="button" style="margin-left: 2px; margin-bottom: 2px" class="with-tip">@passage.Qti3pSource Reference: @passage.Data.Substring(0, 10) ...</button>
                                </div>
                            }
                        }
                        else 
                        {
                            if (passage.RefNumber > 0)
                            {
                                <div style="float: left; margin-left: 0px"><button onclick="showPassageDetailPopupOnQti3pItemDetail(0, '@passage.Data','@passage.Qti3pPassageID','@passage.Qti3pSourceID')" type="button" style="margin-left: 2px; margin-bottom: 2px">Navigate Reference Number: @passage.RefNumber</button>
                                </div>
                            }
                            else
                            {
                                <div style="float: left; margin-left: 0px"><button onclick="showPassageDetailPopupOnQti3pItemDetail(0, '@passage.Data','@passage.Qti3pPassageID','@passage.Qti3pSourceID')" type="button" style="margin-left: 2px; margin-bottom: 2px" class="with-tip">Reference: @passage.Data.Substring(0, 10) ...</button>
                                </div>
                            }
                        }

                    }
            </div>
            <div style="clear: both"></div>
            <div class="no-margin last-child" style="padding-left: 8px" >
                <button id="btnCloseUserClick" type="button" class="grey classProgramButton" data-dialog="close">Close</button>
            </div>
        </div>
    </div>
        </div>
</section>
<div id="hdDivXmlContnet" style="display: none">
    @Html.Raw(ViewBag.XmlContent)
</div>
<script type="text/javascript">
    function ReplaceSimplechoice(selector) { //do for LNKT-12583
        
        $(selector + ' .simpleChoice').replaceWith(function () {
            
            var newSimplechoice = $('<li/>');
            CopyAttributes($(this), newSimplechoice);
            //get the html inside 
            var content = $(this).html();
            var answer = $('<div styleName="answer" class="answer">');
            answer.html(content);
            newSimplechoice.prepend(answer);
            //newSimplechoice.addClass('simpleChoiceMainBody');
            return newSimplechoice;
        });
    }

    function CopyAttributes(from, to) {
        var attrs = from.prop("attributes");
        $.each(attrs, function (index, attribute) {
            to.attr(attribute.name, attribute.value);
        });
    }
</script>
<script type="text/javascript">
    $(function () {
        loadContent();
        ReplaceSimplechoice('.choiceInteraction');
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
        $("#divQtiItem3pDetail").find('span[class="math-tex"]').each(function (index, value) {
            var span = $(value);
            //add display:inline-block
            span.css('display', 'inline-block');
        });

        // Remove title attribute of HtmlContent
        $('.assessmentItem').attr('title', '');
    });
    var correctAnswer = '';
    function loadContent() {
        
        $("#hdDivXmlContnet").find('responseDeclaration correctresponse value').each(function () {
            correctAnswer += '-' + $(this).text() + '-,';

        });
        $("#hdDivXmlContnet").find('responseDeclaration correctResponse value').each(function () {
            correctAnswer += '-' + $(this).text() + '-,';

        });
        $(".simpleChoice").each(function (index, value) {
            var divSimpleChoice = value;
            
            if (divSimpleChoice != null) {
                if (divSimpleChoice.attributes["identifier"] != null) {
                    var identifier = divSimpleChoice.attributes["identifier"];
                    if (isNumber(identifier))//not a number
                    {
                        $(divSimpleChoice).addClass("simpleChoice2");
                    } else {
                        $(divSimpleChoice).addClass("simpleChoice");
                    }
                    var span = $(divSimpleChoice).find('span').first();
                    if (span != null) {
                        var iconCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-check-16.png")';
                        var iconUnCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-uncheck-16.png")';
                        var idx = correctAnswer.indexOf('-' + identifier.nodeValue + '-,');
                        var img = '';
                        if (idx >= 0) {
                            //correct answer
                            /*<div class="simpleChoice" identifier="A">
                                <div class="answer" stylename="answer">
                                    <p>
                                        <span>Answer A</span>
                                    </p>
                                </div> 
                            </div>
                            */
                            img = '<img src="' + iconCheck + '" width="16" height="16" style="margin-right: 0px;margin-left:0px;">';
                        } else {
                            img = '<img src="' + iconUnCheck + '" width="16" height="16" style="margin-right: 0px;margin-left:0px">';
                        }
                         
                        var html = $(span).parent().html();
                        //html += img;
                        html = img + html;//LNKT-5818 check icon is moved
                        $(span).parent().html(html);

                    }
                }
            }
        });
        
    }
    
    
    function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

</script>
<script type="text/javascript">

    function showPassageDetailPopupOnQti3pItemDetail(id, data,qti3pPassageId, qti3pSourceId) {
        var worker = $('<div />');
        worker
            .addClass("dialog PassageDetailPopupOnQtiItemDetailCSS")
            .attr("id", "PassageDetailDialog")
            .appendTo("body")
            .load('@Url.Action("ShowPassageDetail", "QTIItem")\?refObjectID=' + id + '&data=' + encodeURI(data) + '&qti3pPassageId='+ qti3pPassageId + '&qti3pSourceId=' + qti3pSourceId, function () {
                worker.dialog({
                    title: $(this).attr("PassageDetail"),
                    open: function () {
                        //a new overlay will be generated when opening an dialog
                        //set zindex of new overlay to make it cover Filter Item From Library
                        var z_index = $("#editQti3pItemDialog").parent().css('z-index');
                        $('.ui-widget-overlay:last').css('z-index', parseInt(z_index) + 1);
                        $("#PassageDetailDialog").parent().css('z-index', parseInt(z_index) + 2);
                        $("#PassageDetailDialog").prev().css('top', '30px');
                        $('.ui-widget-overlay:last').height(2000);

                        $('#divPassageDetail').find('video').trigger('play');
                    },
                    close: function () {
                        $('.ui-widget-overlay:last').remove();
                        $(this).remove();
                        $('#tips').html('');
                        
                        var z_index = $("#addNewItemFromLibraryPopup").parent().css('z-index');
                        $('.ui-widget-overlay:last').css('z-index', parseInt(z_index) + 1);
                        $("#editQtiItemDialog").parent().css('z-index', parseInt(z_index) + 2);
                        $('.ui-widget-overlay:last').height(2000);

                        if (window.playsound != null) {
                            window.playsound.pause();
                        }
                    },
                    modal: false,
                    width: 780,
                    resizable: false
                });
            });
        showModalDialogBG();
    }
    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }
    function AdjustQti3pItemDetail() {

        $("#divQtiItem3pDetail .answerText").each(function (index, value) {
            //sometime the answer has special xmlcontent structure //LNKT-6197
            AdjustQti3pItemAnswers(value);
        });
        
        $(".itemBody div[identifier]").each(function (index, value) {
            AdjustQti3pItemAnswers(value);
        });
        $(".itembody div[identifier]").each(function (index, value) {
            AdjustQti3pItemAnswers(value);
        });

    }
    function AdjustQti3pItemAnswers( item) {
        var divAnswerText = item;
        //add the image checkbox for each answer
        var identifier = divAnswerText.attributes["identifier"];
        var src = '';
        if (identifier != null) {
            var iconCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-check-16.png")';
            var iconUnCheck = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/square-uncheck-16.png")';
            var idx = correctAnswer.indexOf('-' + identifier.nodeValue + '-,');
            var img = '';
            if (idx >= 0) {
                img = '<img src="' + iconCheck + '" width="14" height="14" style="margin-right: 6px;margin-right:0px">';
                src = iconCheck;
            } else {
                img = '<img src="' + iconUnCheck + '" width="14" height="14" style="margin-right: 6px;margin-right:0px">';
                src = iconUnCheck;
            }

            var divAnswer = $(divAnswerText).children().first();
            if (divAnswer != null) {
                //check if the checkbox is existing or not
                var html = divAnswer.html();
                src = src.trim();
                if (src.length > 1) {
                    src = src.substring(1, src.length); //remove the firt character '/'
                }
                var imgCheckbox = $(html).filter('img[src="' + src + '"]').first();
                if (imgCheckbox.length == 0) {
                    //sometime src starts with '/', check again to make sure
                    imgCheckbox = $(html).filter('img[src="/' + src + '"]').first();
                    if (imgCheckbox.length == 0) {
                        //sometime filter does not work when html is wrapped by tag p
                        if (html.indexOf(src) < 0) {
                            html = img + html;
                            divAnswer.html(html);
                        }
                    }
                }
            }
        }
    }
</script>
