@using LinkIt.BubbleSheetPortal.Web.Helpers.Media
@model LinkIt.BubbleSheetPortal.Web.ViewModels.EditPassageViewModel
@using LinkIt.BubbleSheetPortal.Web.Helpers
@{
    ViewBag.Title = "Edit Passage";
}
<style>


    #audioQuestion {
        border: none;
        box-shadow: 0 0 0;
    }

    .addAudio {
        height: 30px;
        width: 70px;
        line-height: 30px;
    }
    .btnSave {
        margin-right: 10px;
    }
  /*  .bubbleSheetSelector select {
        max-width: 305px;
    }*/
</style>
<style type="text/css">
  /*  button
    {
        margin-left: 10px;
    }*/
    .notSelectedTR td
    {
        background-color: #fdd252 !important;
    }
    #divSummary p
    {
        margin-bottom: 10px;
    }
    .ui-widget-header {
        border: 0px solid var(--grey0) !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }
    .ui-dialog
    {
        background: transparent;
        border: 0;
    }
    .ui-dialog .ui-dialog-titlebar-close
    {
        position: absolute;
        right: 7px;
        top: -8px;
    }
    .ui-widget-header .ui-icon
    {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }
    .ui-icon
    {
        width: 40px;
        height: 40px;
    }
    .ui-icon-closethick
    {
        background-position: 2px 2px;
    }
    .ui-widget-header .ui-state-hover
    {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close
    {
        width: 30px;
        height: 42px;
    }
    .ui-widget-overlay {
        background: var(--dark) !important;
    }
    .ckbutton {
        font-size: 12px !important;
        font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook !important;
    }

    .passage-container {
        display: flex;
        font-size: 0;
        /*gap: 1.5rem;*/
        flex-wrap: wrap;
    }

        .passage-container div {
            display: inline-block;
            margin: 0 1.5rem 1.5rem 0;
            width: calc(100% * (1/3) - 1.5rem - 1px)
        }

            .passage-container div:last-child {
                margin-bottom: 0 !important;
            }
    #error-messages, #success-message-edit {
        margin-right: 1.5rem !important;
    }
</style>
<script type="text/javascript" src="@BundleHelper.Version("~/Scripts/Passage/PopupRevertPassage.js")"></script>
<article class="container_12">
    <section class="grid_12">
        <div class="block-border">
            <div class="block-content form" style="padding-right:0">
                <div id="divPassageEdit" class="bubbleSheetSelector" style="margin-top: 0px">
                    <h1>Edit Passage - @Model.Name</h1>
                    <ul style="display: none; margin-top: 10px;" id="error-messages" class="message error"></ul>
                    <ul style="display: none; margin-top: 10px;" id="success-message-edit" class="message success">
                        <li>Passage successfully updated.</li>
                    </ul>
                    @using (Html.BeginForm("Edit", "PassageEditor", FormMethod.Get, new { id = "editPassageForm", @class = "form" }))
                    {
                        <div id="notification"></div>
                        <div class="u-m-t-15">
                            <div class="title-large mb-2">Passage Properties</div>
                            <div class="columns">
                                <input type="hidden" id="qtiRefObjectId" name="QtiRefObjectId" value="@Model.QtiRefObjectId"/>
                                @Html.TextArea("xmlContentPassage", Model.XmlContentPassage, new { @style = "display:none" })
                                <div class="passage-container mb-2">
                                    <div>
                                        <label>Name</label>
                                        <input id="txtNameEdit" name="Name" type="text" class="full-width" value="@Model.Name" />
                                    </div>
                                    <div>
                                        <label>@LabelHelper.TestGrade</label>
                                        <select id="selectPassageGradeEdit" name="GradeId" data-bind='options: PassageGrades, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select @LabelHelper.TestGrade", value: PassageGradeId'></select>
                                    </div>
                                    <div>
                                        <label>@LabelHelper.Subject</label>
                                        <select id="selectPassageSubjectEdit" name="Subject" data-bind='options: PassageSubjects, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Passage @LabelHelper.Subject", value: PassageSubjectText'></select>
                                    </div>
                                </div>
                                <div class="passage-container">
                                    <div>
                                        <label>Text Type</label>
                                        <select id="selectTextTypeEdit" name="TextTypeId" data-bind='options: TextTypes, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Text Type", value: TextTypeId' ></select>
                                    </div>
                                    <div>
                                        <label>Text Sub Type</label>
                                        <select id="selectTextSubTypeEdit" name="TextSubTypeId" data-bind='options: TextSubTypes, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Text Sub Type", value: TextSubTypeId'></select>
                                    </div>
                                    <div>
                                        <label>Flesch Kincaid</label>
                                        <select id="selectFleschKincaidIdsEdit" name="FleschKincaidId" data-bind='options: FleschKincaidIds, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Flesch Kincaid", value: FleschKincaidId'></select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="editorArea my-0 mb-4 w-100 pe-4">
                            <div>
                                <div class="title-large mb-2">Passage Content</div>
                                <div class="topMenu w-100">
                                    <div id="topSpacePassage"></div>
                                    <div class="questionType" id="questionType">
                                        <ul>
                                            <li>
                                                <div class="audio js-audio" id="audioPassage">
                                                    <div class="audioRemove" id="audioRemovePassage">
                                                        <img alt="Play audio" class="bntPlay" src="../../Content/themes/TestMaker/v2/multiplechoice_images_small_audio_play.svg" title="Play audio" />
                                                        <img alt="Stop audio" class="bntStop" src="../../Content/themes/TestMaker/v2/multiplechoice_images_small_audio_stop.svg" title="Stop audio" />
                                                        <input type="button" value="Remove audio" class="ckbutton removeAudio cke_toolgroup" />
                                                        <span class="audioRef"></span>
                                                    </div>
                                                </div>
                                            </li>
                                        </ul>
                                        <div class="clear"></div>
                                    </div>
                                </div>
                                <div class="clear"></div>
                                <div class="qContent">
                                    <div class="clear"></div>
                                    <textarea cols="80" id="passageContent" name="editor1" rows="10"></textarea>
                                </div>
                            </div>
                            <div class="clear10"></div>
                        </div>

                        <div class="divBotButton text-end">
                            <button id="btnRevertPassage" type="button" class="btn-blue mx-4" onclick="openPopupRevertPassage()">Revert</button>
                            <button id="btnCancelPassage" type="button" class="btn-blue" onclick="backToPassageListEdit()">Cancel</button>
                            <button id="btnSubmit" type="button" class="btn-accept mx-4 btnSave" onclick="EditPassage()">Save</button>
                        </div>
                        <div class="clear"></div>
                        <input type="hidden" id="SubjectText" name="SubjectText"/>
                    }
                    <popup-revert-passage v-ref:popuprevertpassage :is-show-popup-revert-passage.sync="isShowPopupRevertPassage" :qti-ref-object-id="@Model.QtiRefObjectId" v-on:on-revert-passage="revertPassageVueInstantClick" />
                </div>
            </div>
        </div>
    </section>
</article>
<!-- Remember filter -->
<input type="hidden" id="hdNameSearch" name="hdNameSearch"/>
<input type="hidden" id="hdSubject" name="hdSubject"/>
<input type="hidden" id="hdSearchBox" name="hdSearchBox"/>


<script type="text/javascript">
    // Replace the <textarea id="editor"> with an CKEditor
    // instance, using default configurations.
    MKEditor = {
        isPassageEditor:true,
        imgUrl: "../../Content/themes/TestMaker/",
        audioUrl: '@Url.Action("AudioUpload","PassageEditor")',
        videoUrl: '@Url.Action("VideoUpload","PassageEditor")',
        objectId: '@Model.QtiRefObjectId',
        loadAudioUrl: window.location.protocol + "//" + window.location.hostname + '@Url.Action("GetAudio","PassageEditor")',
        imgUpload: '@Url.Action("ImageUpload","PassageEditor")',
        GetViewReferenceImg: window.location.protocol + "//" + window.location.hostname + '/TestAssignmentRegrader/GetViewReferenceImg?imgPath=', //This is config for view image on test maker
        UseS3Content: true, // this variable use to download to applition(  server) or S3
        S3PassageMedia: '',
        GetViewReferenceImgS3: ''
    };

    @if (Model.MediaModel != null)
    {
        <text>MKEditor.S3PassageMedia = '@Model.MediaModel.PassageMediaFolderPath';</text>
        <text>MKEditor.GetViewReferenceImg = '@Model.MediaModel.TestMediaFolderPath';</text>
        <text>MKEditor.GetViewReferenceImgS3 = '@Model.MediaModel.TestMediaFolderPath';</text>
        <text>MKEditor.UseS3Content = true;</text>
    }

    CKEDITOR.replace('passageContent', {
        customConfig: window.location.protocol + "//" + window.location.hostname + '/Content/themes/TestMaker/myconfig.js',
        contentsCss: window.location.protocol + '//' + window.location.hostname + '/Content/themes/TestMaker/contentsV2.css'  + (window.CKE_VERSION || ''),
        extraPlugins: 'mathjax,sharedspace,multiplechoice,mathfraction,imageupload,indent,dialog,contextmenu,liststyle,boxedtext,pastefromword,video,glossary,tabspaces,leaui_formula',
        alphaBeta: alphabet,
        playAudio: loadAudioUrl,
        qtiSchemeID: 1,
        height: 400,
        toolbar: [
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', '-', 'NumberedList', 'BulletedList'],
            ['Bold', 'Italic', 'Underline'],
            ['Sameline'],
            ['FontSize', 'Subscript', 'Superscript', '-', 'RemoveFormat'],
            ['Link', 'Unlink', 'Table', 'AudioUpload', 'ImageUpload', 'VideoUpload', 'SpecialChar', 'Mathjax', 'LeauiFormula', 'Glossary'],
            ['Indent','Outdent','Tabspaces'],
            ['BoxedText']
        ],
        sharedSpaces:
            {
                top: 'topSpacePassage',
                bottom: 'bottomSpacePassage'
            },
        extraAllowedContent: 'span[stylename]; span(smallText,normalText,largeText,veryLargeText);'
    });

    CKEDITOR.on('instanceReady', function (ev) {
        $(document).scrollTop(0);
    });



    if (CKEDITOR.env.ie && CKEDITOR.env.version == 8)
        document.getElementById('ie8-warning').className = 'warning';

    $(document).ready(function () {
        if('@Model.FileNotFound'==='True') {
            customAlert("File Not Found!<br>" + decodeURIComponent('@Model.FileName'));
        }
        ckID = "passageContent";

        //$('#xmlContent').val('<passage toolName="linkitTLF" xmlUnicode="true" toolVersion="1.0"><div class="passage" styleName="passage">daffadfda<img class="imageupload" drawable="false" percent="2" src="RO/RO_4411_media/no-image.png" style="" contenteditable="false" height="38.6" width="53.800000000000004"> dfgh fdhdgh<span class="largeText" styleName="largeText">etyertyetv te<span class="veryLargeText" styleName="veryLargeText">et ytryryte<span class="smallText" styleName="smallText">et ytrryr<span class="sub" styleName="sub">ertytyr</span><span class="sup" styleName="sup">rtytryryr</span></span></span></span> eryyy er yer+-÷·x=≠≤≥°′″√~≈≅±∓∠⊥∥π∞∫¢⟶αβγΔηθκλμρΣστφψΩωℓ ÁÉÍÓÚÜÑ?¿¡!ñüúóíéá<br />gsfgg<p class="center" styleName="center">dgsdgf</p><p class="alignRight" styleName="alignRight">sdgdf</p><list listStylePosition="outside" listStyleType="decimal" paragraphSpaceAfter="12" styleName="passageNumbering"><listMarkerFormat><ListMarkerFormat color="#aaaaaa" paragraphEndIndent="20"/></listMarkerFormat><li>List 1</li><li><span class="bold" styleName="bold">list 2</span></li><li><span class="underline" styleName="underline">list </span>3</li><li><span class="italic" styleName="italic">list 4</span></li><li>list 5</li></list><span><span><span class="math-tex"><math class="simpleFraction" xmlns="http://www.w3.org/1998/Math/MathML"><mstyle displaystyle="true"><mrow class="MJX-TeXAtom-ORD"><mfrac><mn>1</mn><mn>10</mn></mfrac></mrow></mstyle></math></span></span></span><span class="math-tex"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle displaystyle="true"><mi>f</mi><mrow><mo>(</mo><mi>a</mi><mo>)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><mi>i</mi></mrow></mfrac><msub><mo>∮</mo><mrow><mi>γ</mi></mrow></msub><mfrac><mrow><mi>f</mi><mo>(</mo><mi>z</mi><mo>)</mo></mrow><mrow><mi>z</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mi>d</mi><mi>z</mi></mstyle></math></span></div></passage>');
        //$('#xmlContent').val('<passage toolName="linkitTLF" xmlUnicode="true" toolVersion="1.0"><div class="passage" styleName="passage">daffadfda<img class="imageupload" drawable="false" percent="2" src="RO/RO_4411_media/no-image.png" style="" contenteditable="false" height="38.6" width="53.800000000000004"> dfgh fdhdgh<span class="largeText" styleName="largeText">etyertyetv te<span class="veryLargeText" styleName="veryLargeText">et ytryryte<span class="smallText" styleName="smallText">et ytrryr<span class="sub" styleName="sub">ertytyr</span><span class="sup" styleName="sup">rtytryryr</span></span></span></span> eryyy er yer+-÷·x=≠≤≥°′″√~≈≅±∓∠⊥∥π∞∫¢⟶αβγΔηθκλμρΣστφψΩωℓ ÁÉÍÓÚÜÑ?¿¡!ñüúóíéá<br />gsfgg<p class="center" styleName="center">dgsdgf</p><p class="alignRight" styleName="alignRight">sdgdf</p><ol><li>List 1</li><li><span class="bold" styleName="bold">list 2</span></li><li><span class="underline" styleName="underline">list </span>3</li><li><span class="italic" styleName="italic">list 4</span></li><li>list 5</li></ol><span><span><span><span class="math-tex"><math class="simpleFraction" xmlns="http://www.w3.org/1998/Math/MathML"><mstyle displaystyle="true"><mrow class="MJX-TeXAtom-ORD"><mfrac><mn>1</mn><mn>10</mn></mfrac></mrow></mstyle></math></span></span></span></span><span><span><span><span class="math-tex"><math xmlns="http://www.w3.org/1998/Math/MathML"><mstyle displaystyle="true"><mi>f</mi><mrow><mo>(</mo><mi>a</mi><mo>)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><mi>i</mi></mrow></mfrac><msub><mo>∮</mo><mrow><mi>γ</mi></mrow></msub><mfrac><mrow><mi>f</mi><mo>(</mo><mi>z</mi><mo>)</mo></mrow><mrow><mi>z</mi><mo>−</mo><mi>a</mi></mrow></mfrac><mi>d</mi><mi>z</mi></mstyle></math></span><br /><br />dfgsf<sameline class="nobreak" styleName="nobreak">dgsg </sameline>df gsgsfdg s</span></span></span><br />&nbsp;</div></passage>');
        xmlPassageImport($('#xmlContentPassage'));

        //Assign search criteria to hidden fields
        $("#hdNameSearch").val('@Model.NameFilter');
        $("#hdNameSearch").html('@Model.NameFilter').text();
        $("#hdNameSearch").val(encodeURIComponent(htmlEncode($("#hdNameSearch").text())));

        $("#hdSubject").val('@Model.SubjectFilter');
        $("#hdSubject").html('@Model.SubjectFilter').text();
        $("#hdSubject").val(encodeURIComponent(htmlEncode($("#hdSubject").text())));

        $("#hdSearchBox").val('@Model.SearchBoxFilter');
        $("#hdSearchBox").html('@Model.SearchBoxFilter').text();
        $("#hdSearchBox").val(encodeURIComponent(htmlEncode($("#hdSearchBox").text())));
        if(@Model.QtiRefObjectId == 0) {
            //Can not find ref object
            $('#btnSubmit').attr('disabled', 'disabled');
        }
        if ('@Model.FromPassageEditor' == 'False') {
            $('#btnCancelPassage').text('Close');
        }
        //stop video
        $('iframe').filter((idx, e) => e.src?.startsWith(window.location.origin)).contents().find("video").trigger('pause');
    });

    function backToPassageListEdit() {
        if ('@Model.FromPassageEditor' == 'True') {
            var url = '@Url.Action("Index", "PassageEditor")?nameSearch=' + $("#hdNameSearch").val();
            @if (Model.PassageNumber != null)
            {
                <text>
            url += '&passageNumber=' + @Model.PassageNumber;
            </text>
            }
            url += '&gradeId=' + @Model.GradeIdFilter;


            url += '&subject=' + $("#hdSubject").val();
            url += '&textTypeId=' + @Model.TextTypeIdFilter;
            url += '&textSubTypeId=' + @Model.TextSubTypeIdFilter;
            url += '&fleschKincaidId=' + @Model.FleschKincaidIdFilter;
            url += '&searchBox=' + $("#hdSearchBox").val();
            window.location.replace(url);
        }

        if ('@Model.FromItemSetEditor' == 'True') {
            //close this dialog and display the already created passage in the filter
            SetReloadFilterPasssage('fromItemSetEditor');
        }

        if ('@Model.FromItemEditor' == 'True') {
            //close this dialog and display the already created passage in the filter
            SetReloadFilterPasssage('fromItemEditor');

        }
    }

    function EditPassage() {
        var vName = $('#txtNameEdit').val();
        if (vName.length > 50) {
            loadAlertMessage();
        } else {
            SavePassageEdit();
        }
    }

    function revertPassageClick(item) {
        var vName = $('#txtNameEdit').val();
        if (vName.length > 50) {
            loadAlertMessage(true);
        } else {
            var dateString = moment(item.ChangedDate).format("MMM DD, YYYY hh:mmA") || "";
            var message = `Your current item will be reverted to the version from ${dateString}`;
            customConfirm(message).then(function (result) {
                if (result) {
                    performRevertPassage(item);
                } else {
                    openPopupRevertPassage();
                }
            });
        }
    }
    function performRevertPassage(item) {
        $('#btnSubmit').disableBt();
        $('#success-message-edit').hide();
        ShowBlock($('#divPassageEdit'), "Reverting");
        $.ajax({
            url: '@Url.Action("RevertPassage")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                qtiRefObjectId: item.QTIRefObjectId,
                qtiRefObjectHistoryId: item.QTIRefObjectHistoryId
            })
        }).done(function (response) {
            $('#divPassageEdit').unblock();
            $('#btnSubmit').enableBt();
            passageEditorVueInstant.$refs.popuprevertpassage.GetMostRecentItemVersions();
            if (response.success) {
                var newXmlContent = response.revertedXmlContent;
                if(newXmlContent && newXmlContent.trim() !== '') {
                    $('#xmlContentPassage').val(response.revertedXmlContent);
                    xmlPassageImport($('#xmlContentPassage'));
                } else {
                    $('#xmlContentPassage').val('');
                    CKEDITOR.instances['passageContent'].setData('');
                }
                $('#success-message-edit').show();
            } else {
                addErrorMessages(response);
                setTimeout(function () {
                    $('#error-messages').hide();
                }, 5000);
            }
        });
    }

    function SavePassageEdit() {
        $('#btnSubmit').disableBt();
        $('#success-message-edit').hide();

        if (CKEDITOR.instances['passageContent'].getData()) {
            $('#xmlContentPassage').val(xmlPassageExport());
        }

        $('#SubjectText').val( $("#selectPassageSubjectEdit option:selected").text());
        if ($('#SubjectText').val() === 'Select Passage @LabelHelper.Subject') {
            $('#SubjectText').val('');
        }
        $.ajax({
            url:'@Url.Action("Edit", "PassageEditor")',
            type: 'POST',
            data: $('#editPassageForm').serialize(),
            success: function (response) {
                passageEditorVueInstant.$refs.popuprevertpassage.GetMostRecentItemVersions();
                if (response.Success == true) {
                    $('#error-messages').hide();
                    $('#success-message-edit').show();
                } else {
                    addErrorMessages(response);
                }
                $('#btnSubmit').enableBt();
            },
            failure: function (response) {
                alert(response);
            }
        });

    }

    function KeyValuePair(data) {
        var self = this;
        self.Text = ko.observable(data.Name);
        self.Value = ko.observable(data.Id);
    }

    var vmPassageEdit;
    var viewModelPassageEdit = function () {
        var self = this;

        //Grade
        self.PassageGradeId = ko.observable('');
        self.PassageGrades = ko.observableArray([]);
        self.DisplayPassageGrades = ko.computed(function () {
            var url = '@Url.Action("GetAvailableGrades")';
            $.ajax({
                url: url,
                type: 'get',
                cache: false,
                data: {}
            }).done(function (data) {
                var mappedObjects = $.map(data, function (item) {
                    return new KeyValuePair(item);
                });
                self.PassageGrades(mappedObjects);
                self.PassageGradeId('@Model.GradeId');
            });
        });


        //Subject
        self.PassageSubjectText = ko.observable('');
        self.PassageSubjects = ko.observableArray([]);

        self.DisplayPassageSubjects = ko.computed(function () {
            var url = '@Url.Action("GetQtiPassageSubjects", "Passage")';
            $.ajax({
                url: url,
                type: 'get',
                cache: false,
                data: {}
            }).done(function (data) {
                var mappedObjects = $.map(data, function (item) {
                    return new KeyValuePair(item);
                });
                self.PassageSubjects(mappedObjects);

                self.PassageSubjectText('@Model.SubjectText');
                $("#selectPassageSubjectEdit option").each(function() {
                    if($(this).text() == '@Html.Raw(Model.SubjectText)') {
                        $(this).attr('selected', 'selected');
                    }
                });
            });
        });

        //TextType
        self.TextTypeId = ko.observable('');
        self.TextTypes = ko.observableArray([]);

        self.DisplayTextType = ko.computed(function () {
            var url = '@Url.Action("GetQTI3PTextType", "ItemBank")';
            $.ajax({
                url: url,
                type: 'get',
                cache: false,
                data: {}
            }).done(function (data) {
                var mappedObjects = $.map(data, function (item) {
                    return new KeyValuePair(item);
                });
                self.TextTypes(mappedObjects);
                self.TextTypeId('@Model.TextTypeId');
            });
        });

        //TextSubType
        self.TextSubTypeId = ko.observable('');
        self.TextSubTypes = ko.observableArray([]);

        self.DisplayTextSubType = ko.computed(function () {
            var url = '@Url.Action("GetQTI3PTextSubType", "ItemBank")';
            $.ajax({
                url: url,
                type: 'get',
                cache: false,
                data: {}
            }).done(function (data) {
                var mappedObjects = $.map(data, function (item) {
                    return new KeyValuePair(item);
                });
                self.TextSubTypes(mappedObjects);
                self.TextSubTypeId('@Model.TextSubTypeId');
            });
        });

        //FleschKincaid
        self.FleschKincaidId = ko.observable('');
        self.FleschKincaidIds = ko.observableArray([]);

        self.DisplayFleschKincaid = ko.computed(function () {
            var url = '@Url.Action("GetQTI3PFleschKincaid", "ItemBank")';
            $.ajax({
                url: url,
                type: 'get',
                cache: false,
                data: {}
            }).done(function (data) {
                var mappedObjects = $.map(data, function (item) {
                    return new KeyValuePair(item);
                });
                self.FleschKincaidIds(mappedObjects);
                self.FleschKincaidId('@Model.FleschKincaidId');
            });
        });

    };

    var passageEditorVueInstant = new Vue({
        el: '#divPassageEdit',
        data: {
            isShowPopupRevertPassage: false,
        },
        methods:{
            revertPassageVueInstantClick: function (item) {
                this.isShowPopupRevertPassage = false;
                revertPassageClick(item)
            },
            openPopup: function (item) {
                this.isShowPopupRevertPassage = true
            },
        }
    });
    function openPopupRevertPassage() {
        passageEditorVueInstant.openPopup();
    }


    $(function () {
        vmPassageEdit = new viewModelPassageEdit();
        ko.cleanNode(document.getElementById("divPassageEdit"));
        ko.applyBindings(vmPassageEdit, document.getElementById("divPassageEdit"));
        bindEventsEdit();
        //display subject
        $('#SubjectText').val('@Html.Raw(Model.SubjectText)');

    });

    function bindEventsEdit() {
        $('button[data-dialog="close"]').die('click');
        $(document).on('click', 'button[data-dialog="close"]', function(e) {

            var self = $(e.target);
            self.closest('.dialog').dialog('close');

        });
    }

    function SetReloadFilterPasssage(from) {
        $('#txtName').val($('#txtNameEdit').val());
        $('#selectPassageGrade').val($('#selectPassageGradeEdit').val());
        $('#selectPassageSubject').val($('#selectPassageSubjectEdit').val());
        $('#selectTextType').val($('#selectTextTypeEdit').val());
        $('#selectTextSubType').val($('#selectTextSubTypeEdit').val());
        $('#selectFleschKincaidIds').val($('#selectFleschKincaidIdsEdit').val());
        if (from == 'fromItemSetEditor') {
            $('.ui-widget-overlay').last().remove();
            $('#editPassageDialog').parent().dialog("close");
            $('#editPassageDialog').remove();

            $("#passageListDataTable").dataTable().fnReloadAjax(getAjaxSource()); //call this function on the Passage filter list
        }
        if (from == 'fromItemEditor') {
            $('.ui-widget-overlay').last().remove();
            $('#editPassageDialog').parent().dialog("close");
            $('#editPassageDialog').remove();


            $("#passageListDataTable").dataTable().fnReloadAjax(getAjaxSourceForPassage()); //call this function on the TestMaker/_PassageAvailable.cshtml
            $('#PopupAddReference').prev('.ui-widget-header').css('top', '40px');
            //reset config for CKEditor used in TestMaker
            MKEditor = {
                isPassageEditor: false,
                imgUrl: "../../Content/themes/TestMaker/",
                audioUrl: '@Url.Action("AudioUpload", "TestMaker")',
                loadAudioUrl: window.location.protocol + "//" + window.location.hostname + "/TestMaker/GetAudio",
                objectId: '@Model.QtiItemGroupId',
                imgUpload: '@Url.Action("ImageUpload", "TestMaker")',
                GetViewReferenceImg: window.location.protocol + "//" + window.location.hostname + '/TestAssignmentRegrader/GetViewReferenceImg?imgPath=', //This is config for view image on test maker
                UseS3Content: true, // this variable use to download to applition(  server) or S3
                S3PassageMedia: '',
                GetViewReferenceImgS3: ''
            };
            @if (Model.MediaModel != null)
            {
                <text>MKEditor.S3PassageMedia = '@MediaHelper.GetS3LinkForPassageMedia(Model.MediaModel, "")';</text>
                <text>MKEditor.GetViewReferenceImg = '@MediaHelper.GetS3LinkForItemMedia(Model.MediaModel, "")';</text>
                <text>MKEditor.GetViewReferenceImgS3 = '@MediaHelper.GetS3LinkForItemMedia(Model.MediaModel, "")';</text>
                <text>MKEditor.UseS3Content = true;</text>
            }
        }
        $('.cke_editor_passageContent_dialog').remove();//clear dialog of image upload ,video upload
    }

    function loadAlertMessage(ReopenRevertPassagePopup)
    {
        var url = '@Url.Action("LoadAlertPassageName", "PassageEditor")';
        $.ajax(
            {
                url: url, cache: false
            })
            .done(function (html) {
                $("#divPassageEdit").append('<div id="PopupAlertPassageName" class="dialog"></div>');
                $("#PopupAlertPassageName").append(html);
                $('#PopupAlertPassageName').dialog({
                    title: "",
                    open: function () {
                        $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                    },
                    beforeclose: function () {
                        //TODO if you want do anything after close popup.
                        return true;
                    },
                    close: function () {
                        $('#PopupAlertPassageName').remove();
                        $("body .my-overlay").remove();
                        if (ReopenRevertPassagePopup) {
                            openPopupRevertPassage();
                        }
                    },
                    modal: false,
                    width: 400,
                    resizable: false
                });
            });

        $(".close").unbind("click");
        $(".close").live("click", function (e) {
            e.preventDefault();
        });
    }
    $(function() {
        $("#editPassageForm").submit(function(e) {
            e.preventDefault();
            return;
        });
    });

    function cancelAlertPassage() {
        $(".dialog").dialog("close");
        $("body .my-overlay").remove();
    }
</script>
