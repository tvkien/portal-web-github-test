@using System.Configuration
@model LinkIt.BubbleSheetPortal.Web.ViewModels.AccountInformationViewModel
@{
    Layout = "~/Views/Shared/_LogOnPartial_v2.cshtml";
}

<script src="@Url.Content("~/Scripts/customV2.js")" type="text/javascript"></script>

<section id="login-block" class="box-shadow">
    <div class="block-border">
        @if (!string.IsNullOrEmpty(Model.ChangePasswordToken))
        {
            <div class="block-header">Reset Password</div>
        }
        else
        {
            <div class="block-header">Account Details</div>
        }
        <div class="block-content form">
            <p class="message loading no-margin" id="loading-message" style="display:none">Please wait..</p>
            <ul style="display: none" id="error-messages" class="message error">
            </ul>
            @if (!Model.HasEmailAddress)
            {
                <div>
                    <label class="mb-4 title-small">Email</label>
                    <ul class="no-margin message">
                        <li class="info-li">Your account does not have an associated Email Address. Please set one now before continuing.</li>
                    </ul>
                    <p>
                        <input id="email" type="text" class="full-width" />
                        <div class="visuallyhidden">
                            <input type="text" value="@Model.UserName" name="username">
                        </div>
                    </p>
                </div>
            }
            @if (!Model.HasSecurityQuestion)
            {
                <div>
                    <label class="mb-4 title-small">Security Question/Answer</label>
                    <ul class="no-margin message">
                        <li class="info-li">Your account does not have an associated Security Question/Answer set. Please set one up now before continuing.</li>
                    </ul>
                    <p>
                        @Html.DropDownList("Questions", Model.Questions, new { @id = "question", @style = "width:302px" })
                    </p>
                    <p>
                        <input id="answer" type="text" class="full-width" />
                        <div class="visuallyhidden">
                            <input type="text" value="@Model.UserName" name="username">
                        </div>
                    </p>
                </div>
            }
            @if (Model.HasTemporaryPassword)
            {
                <div>
                    <label class="mb-4 title-small">Submit new password</label>
                    <p>
                        <label>New Password</label>
                        <input id="password" type="password" maxlength="50" class="full-width" />
                    </p>
                    <p>
                        <label>Confirm New Password</label>
                        <input id="confirm-password" type="password" maxlength="50" class="full-width" />
                    </p>
                </div>
            }

            @if (Model.ShowDisclaimerContent)
            {
                <div>
                    <label class="mb-4 title-small">Terms Of Use</label>
                    <div class="teacherRegistration-terms">
                        <div class="teacherRegistration-terms-content" style="height: 100px; overflow: auto; margin-bottom: 15px;">
                            <p>
                                @Html.Raw(Model.DisclaimerContent)
                            </p>
                        </div>
                        <div class="teacherRegistration-terms-argree">
                            <input id="idchbTermsOfUse" name="TermsofUse" tabindex="10" type="checkbox" value="true"><input name="TermsofUse" type="hidden" value="false">
                            <label for="idchbTermsOfUse" style="display: inline-block;">@Model.DisclaimerCheckboxLabel</label>
                        </div>
                    </div>
                </div>
            }
            <div class="text-end mt-4">
                <button id="btnSubmit" class="btn-accept" type="submit" @(Model.ShowDisclaimerContent ? "disabled" : "")>Submit</button>
            </div>

        </div>
    </div>
</section>

<script type="text/javascript">
    function submitSetAccountInformation() {
            var showDisclaimerContent = '@Model.ShowDisclaimerContent' == 'True';
            if (showDisclaimerContent) {
                if (!$('#idchbTermsOfUse').is(":checked")) {
                    CustomAlert('Please check the agreement', false, 460);
                    return;
                }
            }
            $('#btnSubmit').disableBt();
            $('#loading-message').show();
            $.post('@Url.Action("SetAccountInformation")',
                {
                    HasEmailAddress: '@Model.HasEmailAddress',
                    HasSecurityQuestion: '@Model.HasSecurityQuestion',
                    HasTemporaryPassword: '@Model.HasTemporaryPassword',
                    Email: $('#email').val(),
                    Question: $('#question').val(),
                    Answer: $('#answer').val(),
                    UserID: '@Model.UserID',
                    Password: $('#password').val(),
                    ConfirmPassword: $('#confirm-password').val(),
                    TermOfUse: $('#idchbTermsOfUse').is(':checked'),
                    ChangePasswordToken: '@Model.ChangePasswordToken'
                },
                function (data) {
                    $('#loading-message').hide();
                    if (data.Success) {
                        $('#error-messages').hide();
                        location.href = data.RedirectUrl;
                    }
                    else {
                        $('#btnSubmit').enableBt();
                        if (data.ErrorMessage != undefined && data.ErrorMessage != null) {
                            $('#error-messages').empty();
                            $('#error-messages').append('<li>' + data.ErrorMessage + '</li>');
                        } else {
                            addErrorMessages(data);
                            $('#error-messages').addClass('no-margin');
                        }
                    }
                });
        }
    $(function () {
        $('#btnSubmit').click(submitSetAccountInformation);

        $('#password').blur(function () {
            var regex = new RegExp('@ConfigurationManager.AppSettings["PasswordRegex"]');
            var errorMessage = '@ConfigurationManager.AppSettings["PasswordRequirements"]';
            if (regex.test($(this).val())) {
                $('#error-messages').hide();
                $('#error-messages').empty();
            }
            else {
                $('#error-messages').empty();
                $('#error-messages').append('<li>' + errorMessage + '</li>');
                $('#error-messages').show();
                $('#error-messages').addClass('no-margin');
            }
        });
    });

    $('#idchbTermsOfUse').change(function () {
        if ($(this).is(':checked')) {
            $('#btnSubmit').removeAttr('disabled');
        } else {
            $('#btnSubmit').attr('disabled', 'disabled');
        }
    });

</script>
<style>
    /*#portal-v2-containter .message.error li::before,*/
    #portal-v2-containter.special-page-login .message.error::before {
        content: none !important
    }

    #portal-v2-containter.special-page-login .message.error {
        flex-wrap: wrap;
    }

        #portal-v2-containter.special-page-login .message.error li {
            padding: 4px 0;
        }

    #portal-v2-containter.special-page-login .message li {
        background-image: none !important;
        padding-left: 0 !important
    }

    #portal-v2-containter.special-page-login .message .info-li {
        background-image: url(/Content/images/icons/icon-info.svg) !important;
        padding-left: 2rem !important
    }
</style>
