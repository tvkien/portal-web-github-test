<script type="text/javascript" src="@Url.Content("~/Scripts/knockout-3.0.0.js")"></script>
<style type="text/css">
    .grid_10
    {
        margin-left: 0px;
        margin-right: 0px;
        width: 834px !important;
    }
    
    tr.even.row_selected td {
        background-color: #82CAFA!important;
    }
    tr.odd.row_selected td {
        background-color: #82CAFA!important;
    }
    #dataTableMasterStandard tr td {
        padding-left: 0px;
        padding-right: 0px;
    }
    #dataTableAssignedMasterStandard tr td {
        padding-left: 0px;
        padding-right: 0px;
    }
</style>
<!-- Style for scrollbar-->
<style>
    /*********** Default css ***********/
    #dataTableMasterStandard tbody tr {
        height: 100% !important;/* Fix for IE9*/
    }
    #dataTableMasterStandardHeader thead tr {
        height: 100% !important;/* Fix for IE9*/
    }
    /*No data*/
    #dataTableMasterStandard .dataTables_empty div {
        width: 398px !important;
        height: 100%;
    }
    .dataTableMasterStandardStyle td img {
        padding-left: 3px;
        padding-right: 3px;
    }
    .dataTableMasterStandardStyle thead,
    .dataTableMasterStandardStyle tbody{display: block;}
    .dataTableMasterStandardStyle tbody {
        height: 257px;
        overflow: auto;
        overflow-x: hidden;
    }
    .dataTableMasterStandardStyle{
        width: 399px !important;
        height: 287px;
    }
    .dataTableMasterStandardStyle tbody tr td {
        /*word-break: break-all;*/
        word-wrap: break-word;
    }
    
    /* Set width for  div in td*/
    /* Padding content inside div */
    .dataTableMasterStandardStyle tbody tr td div {
        padding-left: 3px !important;
        padding-right: 3px !important;
    }
    .dataTableMasterStandardStyle tbody tr td:nth-of-type(1) div {
        width: 36px;
    }
    .dataTableMasterStandardStyle tbody tr td:nth-of-type(2) div {
        width: 33px;
    }
    .dataTableMasterStandardStyle tbody tr td:nth-of-type(3) div {
        width: 93px;
    }
    
    /* Set width for  th*/
    .dataTableMasterStandardStyle thead th:nth-of-type(1) {
        width: 21px;
    }
    .dataTableMasterStandardStyle thead th:nth-of-type(2) {
        width: 18px;
    }
    .dataTableMasterStandardStyle thead th:nth-of-type(3) {
        width: 78px;
    }
   
    /*********** Has scroll bar ***********/
    .scrollDataTableMasterStandard tbody tr td:nth-of-type(4) div {
        width: 151px;
    }
    .scrollDataTableMasterStandard tbody tr td:nth-of-type(5) div {
        width: 36px;
    }
    .scrollDataTableMasterStandard thead th:nth-of-type(4) {
        width: 136px;
    }
    .scrollDataTableMasterStandard thead th:nth-of-type(5) {
        width: 40px;
    }
    /**************** No scroll bar *********************************************/
    .noscrollDataTableMasterStandard tbody tr td:nth-of-type(4) div {
        width: 167px;
    }
    .noscrollDataTableMasterStandard tbody tr td:nth-of-type(5) div {
        width: 36px;
    }
    /* Set width for  th*/
    .noscrollDataTableMasterStandard thead th:nth-of-type(4) {
        width: 152px;
    }
    .noscrollDataTableMasterStandard thead th:nth-of-type(5) {
        width: 21px;
    }
    /* IE9*/
     #divdataTableMasterStandard {
         height: 262px !important;
     }
     .scrollDataTableMasterStandardStyleIE9 {
         height: auto !important;
     }
    .scrollDataTableMasterStandardStyleIE9 thead th:nth-of-type(4) {
        width: 136px !important;
    }
    .scrollDataTableMasterStandardStyleIE9 thead th:nth-of-type(5) {
        width: 40px !important;
    }
    .scrollDataTableMasterStandardStyleIE9 tbody tr td:nth-of-type(4) div {
        width: 149px !important;
    }
    .scrollDataTableMasterStandardStyleIE9 tbody tr td:nth-of-type(5) div {
        width: 54px !important;
    }

    .noscrollDataTableMasterStandardStyleIE9 thead th:nth-of-type(4) {
        width: 152px !important;
    }
    .noscrollDataTableMasterStandardStyleIE9 thead th:nth-of-type(5) {
        width: 23px !important;
    }
    .noscrollDataTableMasterStandardStyleIE9 tbody tr td:nth-of-type(4) div {
        width: 158px !important;
    }

</style>
<style>
    /*********** Default css ***********/
    
    #dataTableAssignedMasterStandard tbody tr {
        height: 100% !important;/* Fix for IE9*/
    }
    /*No data*/
     #dataTableAssignedMasterStandard .dataTables_empty div {
         width: 398px !important;
     }
    .dataTableAssignedMasterStandardStyle td img {
        padding-left: 3px;
        padding-right: 3px;
    }
    .dataTableAssignedMasterStandardStyle thead,
    .dataTableAssignedMasterStandardStyle tbody{display: block;}
    .dataTableAssignedMasterStandardStyle tbody {
        height: 411px;
        overflow: auto;
    }
    .dataTableAssignedMasterStandardStyle tbody td {
        /*word-break: break-all;*/
        word-wrap: break-word;
    }
    /* Padding content inside div */
    .dataTableAssignedMasterStandardStyle tbody tr td div {
        padding-left: 3px !important;
        padding-right: 3px !important;
    }
    .dataTableAssignedMasterStandardStyle tbody td:nth-of-type(1) div {
        width: 30px;
    }
    .dataTableAssignedMasterStandardStyle tbody td:nth-of-type(2) div
    {
        width: 97px;
    }

    .dataTableAssignedMasterStandardStyle thead th:nth-of-type(1) {
        width: 15px;
    }
    .dataTableAssignedMasterStandardStyle thead th:nth-of-type(2) {
        width: 83px;
    }
    .dataTableAssignedMasterStandardStyle thead th:nth-of-type(3) {
        width: 237px;
    }
    /*********** Has scroll bar ***********/
    .scrollItemDataTableAssignedMasterStandard tbody td:nth-of-type(3) div
    {
        width: 221px;
    }
    /*********** No scroll bar ***********/
    .noscrollItemDataTableAssignedMasterStandard tbody td:nth-of-type(3) div
    {
        width: 252px;
    }

    /*IE9*/
    #divdataTableAssignedMasterStandard {
        height: 416px !important;
    }
    .scrollItemDataTableAssignedMasterStandardIE9 tbody td:nth-of-type(3) div
    {
        width: 221px;
    }
    .scrollItemDataTableAssignedMasterStandardIE9 thead th:nth-of-type(2) {
        width: 88px !important;
    }
    .scrollItemDataTableAssignedMasterStandardIE9 thead th:nth-of-type(3) {
        width: 230px !important;
    }
     .noscrollItemDataTableAssignedMasterStandardIE9 tbody td:nth-of-type(3) div
    {
        width: 221px;
    }
    .noscrollItemDataTableAssignedMasterStandardIE9 thead th:nth-of-type(2) {
        width: 88px !important;
    }
    .noscrollItemDataTableAssignedMasterStandardIE9 thead th:nth-of-type(3) {
        width: 230px !important;
    }
	.lmsRow {
        padding:10px 0px;
    }
    .colx2-left {
        width:400px; 
        padding-right: 0px;
        position: relative;
    }
    .colx2-right {
        width:385px; 
        padding-right: 0px;
        padding-left: 2px;
        position: relative;
    }
	#addStandardDialog{
		overflow: hidden;
	}
</style>  
<section>   
    <div class="block-border">
        <div class="block-content form"  >
            <h1>Assign Standard
            </h1>
            <p style="height: 5px">
                <div id="masterStandardNotInLessonNotifications"></div>
            </p>
            <div>
                <div class="no-margin last-child" >
                    <fieldset>
                        <div class="columns" id="lmsColumn">
                            <div class="colx2-left" style="z-index: 2;">
                                <div id="states" class="lmsRow">
                                    <label>State</label>
                                      <select id="selectState" class="qtiItemSelector" data-bind="options: listStates, optionsText:'Name', optionsCaption: 'Select State', optionsValue: 'Id', value: stateId" style="width: 350px"></select>
                                </div>
                                <div class="lmsRow">
                                    <select id="selectSubject" data-bind="options: listSubjects, optionsText: 'SubjectName', optionsCaption: 'Select @LabelHelper.Subject', optionsValue: 'SubjectName', value: subjectName" style="width: 350px"></select>
                                </div>
                                <div class="lmsRow">
                                    <select id="selectGrade" data-bind="options: listGrades, optionsText: 'GradeName', optionsCaption: 'Select @LabelHelper.TestGrade', optionsValue: 'GradeName', value: grade" style="width: 350px"></select>
                                </div>
                                
                                <div class="block-content form tableFix" style="overflow: hidden; height: 422px">
                                        <div style="height:100%; width: 100%">
                                            <table id="dataTableMasterStandard" class="datatable table no-margin dataTableMasterStandardStyle scrollDataTableMasterStandard" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th scope="col">
                                                        </th>
                                                        <th scope="col">
                                                        </th>
                                                        <th scope="col">
                                                            <span class="column-sort">
                                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                            </span>
                                                            Number
                                                        </th>
                                                        <th scope="col">
                                                            <span class="column-sort">
                                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                            </span>
                                                            Description
                                                        </th>
                                                        <th scope="col">
                                                        </th>
                                                        <th scope="col">
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                
                            </div>
                            <div class="colx2-right" style="z-index: 1;">
                                <label style="padding-bottom: 4px;">Associated Standards
                                </label>
                                 <div class="block-content form restoreItemTable" style="overflow: hidden; height: 579px">
                                        
                                        <div class="block-border" style="box-shadow:none">
                                            <table id="dataTableAssignedMasterStandard" class="datatable table no-margin dataTableAssignedMasterStandardStyle scrollItemDataTableAssignedMasterStandard" style="width: 384px">
                                                <thead>
                                                    <tr>
                                                        <th scope="col">
                                                        </th>
                                                        <th scope="col">
                                                        </th>
                                                        <th scope="col">
                                                            <span class="column-sort">
                                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                            </span>
                                                            Number
                                                        </th>
                                                        <th scope="col">
                                                            <span class="column-sort">
                                                                <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                                <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                            </span>
                                                            Description
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                    
            </div>
            <div style="margin-top:40px; margin-bottom:-10px">
                <button id="btnCloseUserClick" type="button" class="grey classProgramButton" data-dialog="close">Close</button>
                <input type="hidden" id="SelectedParentMasterStandardGUID"/>
            </div>
        </div>
            
    </div>
</section>
<input type="hidden" id="QtiItemAssignedStandardIdString"/>
<script type="text/javascript">
    var vm;
    var viewModel = function() {
        var self = this;
        self.listStates = ko.observableArray([]);
        self.listSubjects = ko.observableArray([]);
        self.listGrades = ko.observableArray([]);
        self.stateId = ko.observable();
        self.subjectName = ko.observable();
        self.grade = ko.observable();

        $.ajax({
            url: "@Url.Action("GetStateStandardWithCC", "PopulateStateDistrict")",
            type: "get",
            async: false,
            success: function(data) {
                var array = [];
                $.each(data, function(index, value) {
                    array.push(value);
                });
                self.listStates(array);
                
            }
        });

        self.stateId.subscribe(function (selectedState) {
            if (selectedState > 0) {
                $.ajax({
                    url: '@Url.Action("GetStandardSubjectByStateId", "MasterStandard")',
                    type: 'post',
                    data: { stateId: selectedState },
                    success: function(response) {
                        if (response.Success == true) {
                            var data = response.Data;
                            var array = [];
                            $.each(data, function(index, value) {
                                array.push(value);
                            });
                            self.listSubjects(array);
                            if (selectSubjectId != null && selectSubjectId.length > 0) {
                                $('#selectSubject').val(selectSubjectId);
                                $('#selectSubject').trigger('change');
                            }
                            ui.dataTableMasterStandard.fnReloadAjax(getAjaxSourceForMasterStandard());
                        }
                    }
                });
            } else {
                self.listSubjects([]);
            }
        });

        self.subjectName.subscribe(function(selectedSubject) {
            if (selectedSubject != null) {
                $.ajax({
                    url: '@Url.Action("GetStandardGradeByStateAndSubject", "MasterStandard")',
                    type: 'post',
                    data: { stateId: self.stateId, subject: selectedSubject },
                    success: function (response) {
                        if (response.Success == true) {
                            var data = response.Data;
                            var array = [];
                            $.each(data, function (index, value) {
                                array.push(value);
                            });
                            self.listGrades(array);
                            if(selectGradeId !=null && selectGradeId.length > 0) {
                                $('#selectGrade').val(selectGradeId);
                                $('#selectGrade').trigger('change');
                                //
                                
                            }
                            ui.dataTableMasterStandard.fnReloadAjax(getAjaxSourceForMasterStandard());
                        }
                    }
                });
            } else {
                self.listGrades([]);
            }
        });

        self.grade.subscribe(function(selectedGrade) {
            ui.dataTableMasterStandard.fnReloadAjax(getAjaxSourceForMasterStandard());
            parentId = 0;
            //if (selectedGrade != null) {
            //    if(parentId != null && parentId > 0) {
            //        GetStandardNextLevelOnLoad();
            //    }
            //    if(childId != null && childId > 0) {
            //        GetStandardPreviousLevelOnLoad();
            //    }

            //}
        });
    };


    $(function () {
        vm = new viewModel();
        ko.applyBindings(vm);
        bindEvents();

        $.get('@Url.Action("GetAssignStandardIdString", "MasterStandard")/?qtiItemId=@ViewBag.QtiItemId', function(data) {
            LoadStandardTable();
            LoadAssignedStandardTable();
            if (data.QtiItemAssignedStandardIdString.length > 0) {
                $("#QtiItemAssignedStandardIdString").val(data.QtiItemAssignedStandardIdString);
            }
        });
        if (selectStateId > 0) {
            $('#selectState').val(selectStateId);
            $('#selectState').trigger('change');
        }
        //if (selectSubjectId != null && selectSubjectId.length > 0) {
        //    $('#selectSubject').val(selectSubjectId);
        //}
        
        //if (parentId != null && parentId > 0) {
        //    //get next item
        //    GetStandardNextLevelOnLoad();
        //} else {
        //    if (childId != null && childId > 0) {
        //        GetStandardPreviousLevelOnLoad();
        //    } else {
        //        LoadStandardTable();
        //    }
        //}
    })
        ;

    var standardTable = null;
    function LoadStandardTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: getAjaxSourceForMasterStandard(),
            fnServerParams: function (aoData) {
                //TuanVo:encode text in filter searchbox 
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }

            },
            bStateSave: false,
            bAutoWidth: false,
            iDisplayLength: 100,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'string', sName: 'GUID', bSearchable: false, bSortable: false },
                { sType: 'integer', sName: 'MasterStandardID', bSearchable: false, bSortable: false},
                { sType: 'string', sName: 'Number', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Description', bSearchable: true, bSortable: true},
                { sType: 'integer', sName: 'Level', bSearchable: false, bSortable: false},
                { sType: 'integer', sName: 'Children', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconViewParentStandards(aData[1],aData[4]));
                $('td:eq(1)', nRow).html(setIconVisibilityMasterStandard(aData[1], aData[4], aData[5]));
                if(aData[0]==null || aData[0]=='') {
                    $('td:eq(4)', nRow).html('');
                } else {
                    $('td:eq(4)', nRow).html(setIconViewChildStandards(aData[1],aData[5]));
                }
                //Add word-break: break-all; to td which has long text ,such as text_123_456_789_1011
                addWordBreakToTableCell($('td:eq(2)', nRow),15,aData[2]);
                addWordBreakToTableCell($('td:eq(3)', nRow),25,aData[3]);
                
                $(nRow).each(function(idx,row){
                    
                    $(this).draggable({
                        revert: "invalid", // when not dropped, the item will revert back to its initial position
                        containment: "document",
                        helper: "clone",
                        cursor: "move",
                        zIndex: 99999,
                        stop: function( event, ui ) {
							$(this).parents("#lmsColumn .colx2-left").attr({"style": ""});
							$('.tableFix').css({
                                'height': '413px',
                                 //'overflow': 'auto', ->OK
                                'overflow': 'hidden',
                                'z-index': '1'
                            });
                            $('.restoreItemTable').css('z-index', '0');
                        },
                        drag: function(event,ui){
							$(this).parents("#lmsColumn .colx2-left").css({
                                'z-index': '2',
                            });
                            $('.tableFix').css({
                                'height': '413px',
                                'overflow': 'visible',
                                'z-index': '1'
                            });
                           
                            $('.restoreItemTable').css('z-index', '0');
                        }
                        
                    });
                });
                // let the be droppable, accepting items
                $containDrap.droppable({
                    accept: "#dataTableMasterStandard tbody tr",
                    activeClass: "ui-state-highlight",
                    tolerance: "pointer",
                    drop: function( event, ui ) {
                        dragItem( ui.draggable );
                        $('.tableFix').css({
                            'height': '413px',
                            //'overflow': 'auto' -> OK
                            'overflow': 'hidden'
                        });
                    }
                });
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableMasterStandard'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableMasterStandard').unblock();
                $('.with-tip').tip();
                formatTableForAddingVertialScrollBar('dataTableMasterStandard', 'scrollDataTableMasterStandard', 'noscrollDataTableMasterStandard', 'scrollDataTableMasterStandardStyleIE9', 'noscrollDataTableMasterStandardStyleIE9');
                
				if (jQuery.browser.msie && jQuery.browser.version == '9.0') {
					$("#dataTableMasterStandard, #dataTableAssignedMasterStandard").css({"position": "inherit"});
					
                    if($('#dataTableMasterStandard .dataTables_empty').length ==1) {
                        //No data
                        $('#dataTableMasterStandard').height(32);
                    }  
                }
            }
        };

        $("#dataTableMasterStandard").data("options", options);
        standardTable = initializeDataTable($("#dataTableMasterStandard"));
    }

    // drag and drop
    var $containDrap = $('#dataTableAssignedMasterStandard');
    var $ContainRestore = $('#dataTableMasterStandard');

    function dragItem( $item ) {
        var dragged = $item.clone(true);

        dragged.fadeOut(function() {
            var $tbody = $( "tbody", $containDrap ).length ?
              $( "tbody", $containDrap ) :
              $( "<tbody class='gallery ui-helper-reset'></tbody>" ).appendTo( $containDrap );

            dragged.find('.assignMasterStandard').trigger('click');
            dragged.find('td:eq(0),td:eq(4)').hide();
            dragged.find('.assignMasterStandard').hide().end()
                   .find('.removeAssignedMasterStandard').addClass('btnRemove').show();
            dragged
                //.appendTo( $tbody )
                .fadeIn();
        });

       // $('.dataTables_empty').hide();
    }
    // restore items
    function restoreItems( $item ) {
        var $restoreItem = $item.clone(true);
        $restoreItem.fadeOut(function() {
            $item.find('a[title="Remove standard"]').trigger('click');

            $restoreItem.find(".assignMasterStandard" ).show().end()
                        .find('.removeAssignedMasterStandard').hide().end()
                        .find('td:eq(0),td:eq(4)').show().end()
                        //.appendTo($ContainRestore)
                        .fadeIn();
        });
    }

    function LoadAssignedStandardTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: getAjaxSourceForAssignedMasterStandard(),
            fnServerParams: function (aoData) {
                //TuanVo:encode text in filter searchbox 
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }

            },
            bStateSave: false,
            bAutoWidth: false,
            iDisplayLength: 100,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'string', sName: 'GUID', bSearchable: false, bSortable: false,sWidth: '0px',bVisible:false },
                { sType: 'integer', sName: 'MasterStandardID', bSearchable: false, bSortable: false },
                { sType: 'string', sName: 'Number', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Description', bSearchable: true, bSortable: true}
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconRemoveMasterStandard(aData[1]));
                //Add word-break: break-all; to td which has long text ,such as text_123_456_789_1011
                addWordBreakToTableCell($('td:eq(1)', nRow),15,aData[2]);
                addWordBreakToTableCell($('td:eq(2)', nRow),25,aData[3]);
                
                $(nRow).each(function(){
                    $(this).draggable({
                        revert: "invalid", // when not dropped, the item will revert back to its initial position
                        containment: "document",
                        helper: "clone",
                        cursor: "move",
                        zIndex: 99999,
                        stop: function( event, ui ) {
                            $('.restoreItemTable').css({
                                'height': '579px',
                                'overflow': 'hidden'
                            });
							$(this).parents("#lmsColumn .colx2-right").attr({"style": ""});
                        },
                        drag: function(event,ui){
                            $('.restoreItemTable').css({
                                'height': 'auto', 
                                'overflow': 'visible'
                            });
                            $('.tableFix').css({
                                'z-index': '0'
                            });
							$(this).parents("#lmsColumn .colx2-right").css({
                                'z-index': '3',
                            });
							
                        }
                    });
                });

                // let the be droppable, accepting items
                $ContainRestore.droppable({
                    accept: "#dataTableAssignedMasterStandard tbody tr",
                    activeClass: "ui-state-highlight",
                    tolerance: "pointer",
                    drop: function( event, ui ) {
                        restoreItems( ui.draggable );
                        $('.restoreItemTable').css({
                            'height': '579px',
                            'overflow': 'hidden'
                        });
                    }
                });
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableAssignedMasterStandard'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableAssignedMasterStandard').unblock();
                $('.with-tip').tip();
                formatTableForAddingVertialScrollBar('dataTableAssignedMasterStandard', 'scrollItemDataTableAssignedMasterStandard', 'noscrollItemDataTableAssignedMasterStandard', 
                    'scrollItemDataTableAssignedMasterStandardIE9', 'noscrollItemDataTableAssignedMasterStandardIE9');
				if (jQuery.browser.msie && jQuery.browser.version == '9.0') {	
					$("#dataTableMasterStandard, #dataTableAssignedMasterStandard").css({"position": "inherit"});
				}
            }
        };

        $("#dataTableAssignedMasterStandard").data("options", options);
        initializeDataTable($("#dataTableAssignedMasterStandard"));
        
    }
    function getAjaxSourceForMasterStandard() {
        if (vm.stateId() != null && vm.subjectName() != null && vm.grade() != null) {
            return '@Url.Action("GetStandardByStateAndSubjectAndGradeTopLevel", "MasterStandard")/?stateId=' + vm.stateId() + '&subject=' + vm.subjectName() + '&grade=' + vm.grade();
        } else {
            return '@Url.Action("GetStandardByStateAndSubjectAndGradeTopLevel", "MasterStandard")/?stateId=0&subject=0&grade=0';
        }
    }
    function getAjaxSourceForAssignedMasterStandard() {
        return '@Url.Action("GetAssignedStandard", "MasterStandard")/?qtiItemId=@ViewBag.QtiItemId';
    }
    
    function setIconVisibilityMasterStandard(masterStandardId, level, children) {
        var addDisplayed = 'none';
        var deleteDisplayed = 'none';
        var standardIdList = $("#QtiItemAssignedStandardIdString").val();
        if (standardIdList == null) {
            standardIdList = '';
        }
        
        if (standardIdList.indexOf(',-'+masterStandardId + '-') >= 0) {
            deleteDisplayed = 'inline';
        } else {
            addDisplayed = 'inline';//if standard has not been assigned, display green icon,else display the red icon
        }

        var addIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png")';
        var addString = '<a id="iconAdd_' + masterStandardId + '" href="javascript:void(0)" onclick="AssignStandard(this);" title="Assign Standard" masterStandardId="' + masterStandardId + '" class="with-tip assignMasterStandard" style="display:' + addDisplayed  + '"><img src="' + addIcon + '" width="16" height="16"></a>';
        
        @*var deleteIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/icon-red.png")';
        var deleteString = '<a id="iconDelete_' + masterStandardId + '" href="javascript:void(0)" onclick="RemoveStandard(this);" title="Remove" operation="1" masterStandardId="' + masterStandardId + '" class="with-tip actionIcon removeAssignedMasterStandard" style="display:' + deleteDisplayed  + '"><img src="' + deleteIcon + '" width="16" height="16"></a>';*@
        //Linkit does not want delete icon, just the check icon 
        var deleteIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/icon-check.png")';
        var deleteString = '<a id="iconDelete_' + masterStandardId + '" href="javascript:void(0)" operation="1" masterStandardId="' + masterStandardId + '" class="actionIcon " style="display:' + deleteDisplayed  + '"><img src="' + deleteIcon + '" width="16" height="16"></a>';
        var result = '';
        result = addString + deleteString;
        return result;
        
    }
    function setIconViewParentStandards(masterStandardId, level) {
        if(level > 1) {
            var backIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/viewparentstandard.png")';
            var backString = '<a masterStandardId="' + masterStandardId + '" href="javascript:void(0);" onclick="GetStandardPreviousLevel(this);" title="back" class="with-tip"><img src="' + backIcon + '" width="16" height="16" style="margin-right: 0px"></a>';
            return backString;
        } else {
            return '';
        }
    }
    function setIconViewChildStandards(masterStandardId, countChildren) {
        
        if (countChildren > 0) {
            var nextIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/viewchildstandard.png")';
            var nextString = '<a masterStandardId="' + masterStandardId + '" href="javascript:void(0);" onclick="GetStandardNextLevel(this);" title="next" class="with-tip"><img src="' + nextIcon + '" width="16" height="16" style="margin-right: 0px"></a>';
            return nextString;
        } else {
            return '';
        }
       
    }
    function setIconRemoveMasterStandard(masterStandardId) {
        var removeIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/icon-red.png")';
        var removeString = '<a masterStandardId="' + masterStandardId + '" href="javascript:void(0);" onclick="RemoveStandard(this);" title="Remove standard" class="with-tip"><img src="' + removeIcon + '" width="16" height="16" style="margin-right: 4px"></a>';
         return removeString;
    }


    function GetStandardNextLevel(control) {
        $('#tips').empty();
        var self = $(control);
        var masterStandardId = self.attr('masterStandardId');
        parentId = masterStandardId;// parentId is declared in _ItemListNormalView
        childId = 0;
        
        var url = '@Url.Action("GetStandardByParentStandardId", "MasterStandard")/?parentId=' + masterStandardId;
        ui.dataTableMasterStandard.fnReloadAjax(url, function() {
            $('#dataTableMasterStandard_filter input').val('');
            standardTable.fnFilter('');
        });
    }

    function GetStandardPreviousLevel(control) {
        $('#tips').empty();
        var self = $(control);
        var masterStandardId = self.attr('masterStandardId');
        childId = masterStandardId; // childId is declared in _ItemListNormalView
        parentId = 0;
        var gradeText = $("#selectGrade option:selected").text();
        var url = '@Url.Action("GetStandardByChildStandardId", "MasterStandard")/?childId=' + masterStandardId+ '&grade=' + encodeURIComponent(gradeText);;
        ui.dataTableMasterStandard.fnReloadAjax(url, function() {
            $('#dataTableMasterStandard_filter input').val('');
            standardTable.fnFilter('');
        });
    }
    function AssignStandard(control) {
        $('#tips').empty();
        var self = $(control);
        var masterStandardId = self.attr('masterStandardId');
        
        $.post('@Url.Action("AssignStandard","MasterStandard")', { qtiItemId: @ViewBag.QtiItemId,masterStandardId:masterStandardId}, function(response) {
            if (response.Success == 'Success') {
                ui.dataTableAssignedMasterStandard.fnDraw();
                LinkIt.success('#masterStandardNotInLessonNotifications', 'Master Standard Assigned');
                var standardIdList = $("#QtiItemAssignedStandardIdString").val();
                if (standardIdList == null) {
                    standardIdList = '';
                }
                standardIdList = standardIdList + ",-" + masterStandardId + "-";
                $("#QtiItemAssignedStandardIdString").val(standardIdList);
                $("#iconAdd_" + masterStandardId).hide();
                $("#iconDelete_" + masterStandardId).show();
            } else {
                //alert(response.errorMessage);
                alertMessageStandardPopUp(response.errorMessage);
            }

        });
    }
    function RemoveStandard(control) {
        $('#tips').empty();
        if (confirm("Do you want to remove this standard?")) {
            var self = $(control);
            var masterStandardId = self.attr('masterStandardId');
            
            $.post('@Url.Action("RemoveStandard","MasterStandard")', { qtiItemId: @ViewBag.QtiItemId, masterStandardId: masterStandardId }, function(response) {
                if (response.Success == 'Success') {
                    ui.dataTableAssignedMasterStandard.fnDraw();
                    LinkIt.success('#masterStandardNotInLessonNotifications', 'Master Standard Removed');
                    
                    var standardIdList = $("#QtiItemAssignedStandardIdString").val();
                    if (standardIdList == null) {
                        standardIdList = '';
                    }
                    standardIdList = standardIdList.replace(',-' + masterStandardId + '-','');
                    $("#QtiItemAssignedStandardIdString").val(standardIdList);
                    
                    $("#iconAdd_" + masterStandardId).show();
                    $("#iconDelete_" + masterStandardId).hide();
                } else {
                    //alert(response.errorMessage);
                    alertMessageStandardPopUp(response.errorMessage);
                }

            });
        }
    }
    function bindEvents() {
        
        $('button[data-dialog="close"]').die('click');

        $(document).on('click', 'button[data-dialog="close"]', function (e) {
            var self = $(e.target);
            self.closest('.dialog').dialog('close');
            $('.ui-widget-overlay').remove();
        });
        
    }
    function GetStandardNextLevelOnLoad() {
        $('#tips').empty();
        if(parentId==null || parentId <=0) {
            return;
        }
        var url = '@Url.Action("GetStandardByParentStandardId", "MasterStandard")/?parentId=' + parentId;
        ui.dataTableMasterStandard.fnReloadAjax(url);
    }

    function GetStandardPreviousLevelOnLoad() {
        $('#tips').empty();
        if(childId==null || childId <=0) {
            return;
        }
        var gradeText = $("#selectGrade option:selected").text();
        var url = '@Url.Action("GetStandardByChildStandardId", "MasterStandard")/?childId=' + childId+ '&grade=' + encodeURIComponent(gradeText);;
        ui.dataTableMasterStandard.fnReloadAjax(url);
    }
    function GetStateOnLoad() {
        var dropdownSelector = '#selectState';
        $(dropdownSelector).empty();
        
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetStateStandardWithCC","PopulateStateDistrict")',
            dataType: 'json',
            async: false,
            success: function (response) {
                if ($("#selectState option[value='Select State']").length == 0) {
                    $(dropdownSelector).append($("<option></option>")
                        .attr("value", "")
                        .text('Select State'));
                }

                $.each(response, function(index, value) {
                    if ($("#selectSubject option[value='" + value.Id + "']").length == 0) {
                        $(dropdownSelector).append($("<option></option>")
                            .attr("value", value.Id)
                            .text(value.Name));
                    }

                });
                $(dropdownSelector).val(selectStateId);
                if (selectSubjectId != null && selectSubjectId.length > 0) {
                    GetSubjectOnLoad();
                }
            },
            beforeSend: function () {
            },
            complete: function () {
            }
        });
    }
    function GetSubjectOnLoad() {
        var dropdownSelector = '#selectSubject';
        $(dropdownSelector).empty();
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetStandardSubjectByStateId","MasterStandard")',
            dataType: 'json',
            data: { stateId: selectStateId },
            async: false,
            success: function (response) {
                if (response.Success == true) {
                    
                    if($("#selectSubject option[value='Select @LabelHelper.Subject']").length == 0) {
                        $('#selectSubject').append('<option value="">Select @LabelHelper.Subject</option>');
                        
                        //$(dropdownSelector).append($("<option></option>")
                        // .attr("value","")
                        // .text('Select Subject'));  
                    }
                    
                    var data = response.Data;
                    
                    $.each(data, function(index, value) {
                        if($("#selectSubject option[value='" + value.SubjectName + "']").length == 0) {
                            var option = '<option value="' + value.SubjectName + '">' + value.SubjectName + '</option>';
                            $('#selectSubject').append(option);
                            //$(dropdownSelector).append($("<option></option>")
                            //.attr("value",value.SubjectName)
                            //.text(value.SubjectName));
                        }
                        
                    });
                    $(dropdownSelector).val(selectSubjectId);
                    if (selectGradeId != null && selectGradeId.length > 0) {
                        GetGradeOnLoad();
                    }
                }
            },
            beforeSend: function () {
            },
            complete: function () {
            }
        });
    }
    function GetGradeOnLoad() {
        var dropdownSelector = '#selectGrade';
        $(dropdownSelector).empty();
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetStandardGradeByStateAndSubject","MasterStandard")',
            dataType: 'json',
            data: { stateId: selectStateId,subject:selectSubjectId },
            async: false,
            success: function (response) {
                
                if (response.Success == true) {
                    if($("#selectGrade option[value='Select @LabelHelper.TestGrade']").length == 0) {
                        $(dropdownSelector).append($("<option></option>")
                         .attr("value","")
                         .text('Select @LabelHelper.Subject'));  
                    }
                    var data = response.Data;
                    
                    $.each(data, function(index, value) {
                        if($("#selectGrade option[value='" + value.GradeName + "']").length == 0) {
                            $(dropdownSelector).append($("<option></option>")
                            .attr("value",value.GradeName)
                            .text(value.GradeName));
                        }
                        
                    });
                    $(dropdownSelector).val(selectGradeId);
                   
        
                }
            },
            beforeSend: function () {
            },
            complete: function () {
            }
        });
    }
</script>











