@using System.Configuration
@using LinkIt.BubbleSheetPortal.Web.Helpers
@{
    ViewBag.Title = "Edit Item Set";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*@MvcHtmlString.Create(
        Bundle.Css()
            .Add(@Url.Content("~/Content/themes/TestMaker/ckeditor_mk.css"))
            .Add(@Url.Content("~/Content/themes/TestMaker/contents.css"))
            .Add(@Url.Content("~/Content/themes/base/jquery.ui.autocomplete.css"))
            .Add(@Url.Content("~/Scripts/Texttospeech/texttospeech.css"))
            .Render("/Content/themes/Constellation/css/test_maker_#.css")
    )*@
@BundleHelper.StyleQTIItemTestMakerBundle()
<script type="text/ecmascript">
    if ($.browser.msie  && parseInt($.browser.version, 10) == 9) {
        $("body").addClass("ie9");
    }
</script>


<script type="text/javascript" src="/Content/themes/TestMaker/ckeditor.js"></script>
<script type="text/javascript" src="/Content/themes/TestMaker/ckeditor_utils.js"></script>
<script type="text/javascript" src="/Content/themes/TestMaker/ckeditor_mk.js"></script>
<script type="text/javascript" src="https://s3-us-west-2.amazonaws.com/linkit-utility/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/qtiItemLoadMedia.js")"></script>

@*@MvcHtmlString.Create(
        Bundle.JavaScript()
        .Add("/Scripts/knockout-3.0.0.js")
        .Add("/Content/themes/TestMaker/mediaelement-and-player.min.js")
        .Add("~/Scripts/Texttospeech/responsivevoice.js")
        .Add("~/Scripts/Texttospeech/text-to-speech-plugins.js")
        .Render("/Content/themes/Constellation/js/test_maker_combined_#.js")
    )*@

@BundleHelper.ScriptQTIItemBundle()

@*@MvcHtmlString.Create(
    Bundle.Css()
        .Add(@Url.Content("~/Content/themes/AssessmentItem/css/popup.css"))
            .Add(@Url.Content("~/Content/themes/LinkitStyleSheet.css"))
                .Add(@Url.Content("~/Content/themes/Print/ItemSets/ItemSet.css"))
            .Render("/Content/themes/Constellation/css/assessment_item_index_combined_#.css")
     )*@

@BundleHelper.StyleQTIItemAssessmentBundle()

@*@MvcHtmlString.Create(
    Bundle.JavaScript()
                .Add("/Scripts/imagesloaded.pkgd.js")
                .Add("/Scripts/PrintTest/PrintTest.js")
            .Render("/Content/themes/Constellation/js/qtiitem_combined_#.js")
    )*@
@BundleHelper.ScriptQTIItemBundle2()

<style type="text/css">
    .img-action {
        margin-right: 4px;
        cursor: pointer;
        width: 32px;
        height: 32px;
        padding-top: 10px
    }

    .file_upload_blackboard,
    .file_upload_datafile {
        background: url(../Content/themes/AssignmentRegrader/images/upload.png) no-repeat;
        background-size: 32px 32px;
        width: 32px;
        height: 32px;
        border: 0 solid #fff;
        float: left;
        border-radius: 0;
        margin-top: 10px;
        margin-left: 5px;
        cursor: pointer;
    }

    .file_upload_blackboard,
    .file_upload_datafile {
        margin-right: 5px;
    }

        .file_upload_blackboard:hover,
        .file_upload_blackboard:focus {
            background: url(../Content/themes/AssignmentRegrader/images/upload.png) no-repeat;
            background-size: 32px 32px;
        }

        .file_upload_datafile,
        .file_upload_datafile:hover,
        .file_upload_datafile:focus {
            background: url(../Content/themes/AssignmentRegrader/images/upload_five.png) no-repeat;
            background-size: 32px 32px;
        }

    .qtiItemSelector select {
        min-width: 300px;
        max-width: 300px;
    }
    #qtiItemDataTable_wrapper .answer {font-family: "Lucida Grande", "Lucida Sans Unicode", Arial, sans-serif, dejavu_sansbook;font-size: 14px;color: #333333; }
    .drawTool {
        display: none;
    }
    #qtiItemDataTable_wrapper .normalText {font-size: 14px;}
    h1 {
        line-height: 19.8px !important;
    }
    .imageHotspotInteraction {
        border: 1px solid #ccc;
        position: relative;
    }

        .imageHotspotInteraction:hover,
        .imageHotspotInteraction:focus {
            border: 1px solid #ccc;
        }

        .imageHotspotInteraction img {
            max-width: none;
        }

        .imageHotspotInteraction .hotspot-item-type {
            cursor: default;
            pointer-events: none;
        }

    .hotspot-item-type {
        background: rgba(222, 222, 222, .5);
        color: #3c2f2f;
        border: 2px solid #ccc;
        border-radius: 4px;
        cursor: pointer;
        text-align: center;
        position: absolute;
        z-index: 5;
    }

        .hotspot-item-type:before {
            content: "";
            border: 1px solid #3c2f2f;
            display: inline-block;
            width: 80%;
            height: 80%;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            -webkit-transform: translate(-50%, -50%);
            position: absolute;
            top: 50%;
            left: 50%;
            visibility: hidden;
        }

        .hotspot-item-type[data-type="number"].checked,
        .hotspot-item-type[data-type="number"][data-correct="true"] .hotspot-item-value,
        .hotspot-item-type[data-type="number"][data-correct="false"]:not([data-point="0"]) .hotspot-item-value,
        .hotspot-item-type[data-type="letter"].checked,
        .hotspot-item-type[data-type="letter"][data-correct="true"] .hotspot-item-value,
        .hotspot-item-type[data-type="letter"][data-correct="false"]:not([data-point="0"]) .hotspot-item-value {
            font-weight: 900;
            color: #fff;
        }

            .hotspot-item-type[data-type="number"].checked:before,
            .hotspot-item-type[data-type="number"][data-correct="true"]:before,
            .hotspot-item-type[data-type="number"][data-correct="false"]:not([data-point="0"]):before,
            .hotspot-item-type[data-type="letter"].checked:before,
            .hotspot-item-type[data-type="letter"][data-correct="true"]:before,
            .hotspot-item-type[data-type="letter"][data-correct="false"]:not([data-point="0"]):before {
                background: #3c2f2f;
                border-radius: 100%;
                visibility: visible;
            }

        .hotspot-item-type[data-type="checkbox"]:before,
        .hotspot-item-type[data-type="circle"]:before {
            visibility: visible;
        }

        .hotspot-item-type[data-type="checkbox"].checked:after,
        .hotspot-item-type[data-type="checkbox"][data-correct="true"]:after,
        .hotspot-item-type[data-type="checkbox"][data-correct="false"]:not([data-point="0"]):after {
            visibility: visible;
            z-index: 10;
        }

        .hotspot-item-type[data-type="checkbox"].checked:before,
        .hotspot-item-type[data-type="checkbox"][data-correct="true"]:before,
        .hotspot-item-type[data-type="checkbox"][data-correct="false"]:not([data-point="0"]):before,
        .hotspot-item-type[data-type="circle"].checked:before,
        .hotspot-item-type[data-type="circle"][data-correct="true"]:before,
        .hotspot-item-type[data-type="circle"][data-correct="false"]:not([data-point="0"]):before {
            background: #3c2f2f;
            visibility: visible;
        }

        .hotspot-item-type[data-type="checkbox"]:after {
            content: '';
            display: inline-block;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
            -webkit-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
            position: absolute;
            top: 50%;
            left: 50%;
        }

        .hotspot-item-type[data-type="checkbox"]:after {
            border: 5px solid #fcfff4;
            border-top: none;
            border-right: none;
            width: 50%;
            height: 30%;
            margin-top: -3px;
            visibility: hidden;
            -webkit-transform: rotate(-45deg) translate(-50%, -50%);
            -ms-transform: rotate(-45deg) translate(-50%, -50%);
            transform: rotate(-45deg) translate(-50%, -50%);
            -webkit-transform-origin: 0 0;
            -ms-transform-origin: 0 0;
            transform-origin: 0 0;
        }

    .hotspot-item-value {
        position: absolute;
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        cursor: default;
        pointer-events: none;
    }

    .hotspot-item-type[data-type="circle"]:before {
        border-radius: 100%;
    }
    .hotspot-item-type[data-type="circle"] .hotspot-item-value {
        width: 100%;
    }

        .hotspot-item-type[data-type="circle"] .hotspot-item-value:before,
        .hotspot-item-type[data-type="circle"] .hotspot-item-value:after {
            content: '';
            background: #fcfff4;
            width: 50%;
            height: 5px;
            visibility: hidden;
            position: absolute;
            top: 50%;
            left: 50%;
            -webkit-transform-origin: 0 0;
            -ms-transform-origin: 0 0;
            transform-origin: 0 0;
        }

        .hotspot-item-type[data-type="circle"] .hotspot-item-value:before {
            -webkit-transform: rotate(-45deg) translate(-50%, -50%);
            -ms-transform: rotate(-45deg) translate(-50%, -50%);
            transform: rotate(-45deg) translate(-50%, -50%);
        }

        .hotspot-item-type[data-type="circle"] .hotspot-item-value:after {
            -webkit-transform: rotate(45deg) translate(-50%, -50%);
            -ms-transform: rotate(45deg) translate(-50%, -50%);
            transform: rotate(45deg) translate(-50%, -50%);
        }

    .hotspot-item-type[data-type="circle"].checked .hotspot-item-value:before,
    .hotspot-item-type[data-type="circle"].checked .hotspot-item-value:after,
    .hotspot-item-type[data-type="circle"][data-correct="true"] .hotspot-item-value:before,
    .hotspot-item-type[data-type="circle"][data-correct="true"] .hotspot-item-value:after,
    .hotspot-item-type[data-type="circle"][data-correct="false"]:not([data-point="0"]) .hotspot-item-value:before,
    .hotspot-item-type[data-type="circle"][data-correct="false"]:not([data-point="0"]) .hotspot-item-value:after {
        visibility: visible;
    }

    .numberline-preview {
        position: relative;
        display: inline-block;
    }

    .numberline-hotspot {
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        background: #c7f1d5;
        display: inline-block;
        border: 2px solid #88b088;
        width: 12px;
        height: 12px;
        position: absolute;
        border-radius: 100%;
    }

        .numberline-hotspot[data-correct="true"],
        .numberline-hotspot[data-correct="false"]:not([data-point="0"]) {
            border: 2px solid darkgreen;
            background: #6bc287 !important;
        }
    .uploadify-button {
        background-color: transparent;
        border: none;
        padding: 0;
    }

    .uploadify:hover .uploadify-button {
        background-color: transparent;
    }
    #file_upload_blackboard, #file_upload_datafile {
        float: left;
        margin: 9px 2px 0 -4px;
        height: 25px;
        padding-top: 26px;
        cursor: pointer;
        background-color: transparent;
        color: transparent;
    }
    .ie9 #file_upload_blackboard, #file_upload_datafile {
        padding-top: 0px;
    }
    .uploadify-progress {
        display: none;
    }
    .fileName {
        display: none;
    }
    .cancel {
        display: none;
    }
    .uploadify-queue-item {
        display: none;
    }
</style>

@Html.Partial("~/Views/Passage/_KeepingDistrict.cshtml", (int)ViewBag.DistrictId)
<script type='text/javascript' src='@Url.Content("~/Scripts/jquery.dataTables.rowReordering.js")'></script>
@*<script type='text/javascript' src='@Url.Content("~/Scripts/qtiItemLoadMedia.js")'></script>*@
<script type="text/javascript" src="https://s3-us-west-2.amazonaws.com/linkit-utility/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<article class="container_12">
    <section class="grid_12">
        <div class="block-border" id="divQtiItemList">
            <div class="block-content form">
                <h1>
                    @ViewBag.QtiGroupName
                </h1>
                <div class="u-clearfix">
                    <div style="float: left;padding-right: 6px">
                        <div class="toggle">
                            <img id="imgCreateNewItem" src ="/Content/themes/AssignmentRegrader/images/create-newitem.png" class="img-action"title="Create New Item">
                            <img src ="/Content/themes/AssignmentRegrader/images/add-item-library.png"  onclick="showAddNewItemFromLibraryPopup()" class="img-action" title="Add Items From Library">
                            <img id="imgUploadBlackboard" src ="/Content/themes/AssignmentRegrader/images/upload.png" class="img-action" title="Upload Blackboard 6 Files" style="display:none">
                        </div>
                    </div>
                    <input id="file_upload_blackboard" name="file_upload" type="file" style="display: none" title="Upload Blackboard 6 Files" />
                    <input id="file_upload_datafile" name="file_upload_datafile" type="file" style="display: none" title="QTI" />
                    <div style="float: left">
                        <div class="toggle">
                            <img src ="/Content/themes/AssignmentRegrader/images/answerkey.png" id="imgAnswerKeyView" onclick="loadItemListAnswerKeyView()"class="img-action" title="View Answer Key">
                            <img src ="/Content/themes/AssignmentRegrader/images/view-item.png" id="imgNormalView" onclick="loadItemListNormalView()" class="img-action" title="View Items">
                            <img src ="/Content/themes/AssignmentRegrader/images/pdf-create.png" onclick="PrintQTIItemGroup()" class="img-action" title="Create PDF">
                            <img src ="/Content/themes/AssignmentRegrader/images/create-test.png" id="imgCreateTest" onclick="PopupVirtualTestForm()" class="img-action" title="Save as Test">
                            <img src ="/Content/themes/AssignmentRegrader/images/create-test-grey.png"  id="imgCreateTestGrey" class="img-action" style="cursor: auto !important; display:none" title="Save as Test">
                        </div>
                    </div>
                </div>
                <div class="clear-25"></div>
                <div id="divActionButton">
                    <button id="btnDuplicateQtiItem" type="button" style="margin-left: -2px;margin-right: 2px;">Copy/Move Item</button>
                    <button id="btnDuplicateQtiItemNew" type="button" style="margin-left: 0px;margin-right: 2px;">Duplicate Item</button>
                    <button id="btnDeleteQtiItem" type="button" style="margin-left: 0px;margin-right: 2px;">Delete Item</button>
                    <button id="btnAddPassage" type="button" style="margin-left: 0px;margin-right: 2px;"> Add Passage</button>
                    <button id="btnAssignStandard" type="button" style="margin-left: 0px;margin-right: 2px;">Assign Standard</button>
                    <button id="btnAssignTag" type="button" style="margin-left: 0px;margin-right: 2px;"> Assign Tag</button>
                    <div class="clear-25"></div>
                </div>
                <div class="clear-10"></div>
                <div id="divUploadAnswerKey" style="display:none">
                    <div id="file_upload_div" style="text-align: left;margin-top: -20px; margin-bottom: 30px;">
                        <div style="display: inline-block; padding-left: 0px;vertical-align: top">
                            <span>Upload csv file: </span>
                            <a title="Download Sample csv file" target="_blank" href="../../Notification/DownloadAnswerKeySampleFile/?filePath=AnswerKeyView-Upload File Example.csv" style="display: block; line-height: 20px;">Download Sample csv file</a>
                        </div>
                        <div style="display: inline-block;padding-right: 10px">
                            <input id="file_upload" name="file_upload" type="file"/>
                        </div>
                    </div>
                </div>
                <div id="divQtiiTemListView" class="no-margin last-child" style="padding-top: 10px;">
                </div>
            </div>
            <div class="clear-10"></div>
            <div style="padding-left: 0px; margin-left: 0px">
                <div id="divQuickCreate" style="width: 100%; float: left; padding-top: 10px; padding-bottom: 15px; display: none">
                    <div style="float: left">
                        <p style="display: inline">Default number of choices on new items:</p>
                        <p style="display: inline">
                            <select id="selectDefaultNumberOfChoices">
                                <option value="1">1</option>
                            </select>
                        </p>
                    </div>
                    <div style="float: right">
                        <p style="display: inline">
                            Quick Create:
                        </p>
                        <p style="display: inline">
                            <input type="text" id="txtQuickCreateCorrectAnswer" style="width: 40px"/>
                        </p>
                    </div>
                </div>

                <div style="width:100%;text-align:right;margin-left:auto;margin-right:auto;">
                    <button type="button" id="btnSaveAnswerKey" onclick="saveAnswerKey()" style="display:none;margin-right:5px;margin-left: 0px">Save</button>
                    <button id="btnCancelQtiItem" type="button" class="grey" tabindex="18" style="margin-left: 0px;">Cancel</button>
                </div>
            </div>
        </div>
        <input type="hidden" id="hidTestItemMediaPath" value="@ViewBag.TestItemMediaPath" />
        <input type="hidden" id="hdGroupName" value="@ViewBag.QtiGroupName"/>
        <input type="hidden" id="hdQTIItemGroupID" value="@ViewBag.QTIItemGroupID"/>

    </section>
</article>
<div id="divCreateVirtualTest"></div>
<div id="divOnTop"></div>
<script type="text/javascript">
    //Remember selected on StateStandard Popup
    var selectStateId = 0; //used in _ListMasterStandard,_ListMasterStandardMany, _ItemListAnswerKeyView, _ItemListNormalView
    var selectSubjectId = '';
    var selectGradeId = '';
    var parentId = 0;
    var childId = 0;
    //Remember selected on DistrictTag Popup
    var selectStateId_dt = 0;
    var selectDistrictId_dt = 0;
    var selectCategoryId_dt = 0;
    var textToSearch_dt = '';

    $(function() {
        $('.write').addClass('current');
        $('#assesmenItemRewrite').addClass('current');

        //Default load Normal view for Item list
        loadItemListNormalView();
        disableActionButton(true);
        var isOpenCreateNewItem = false;

        $('#imgCreateNewItem').die('click');


        $('#imgCreateNewItem').live("click", function (e) {

            if (isOpenCreateNewItem == true) {
                return;
            }
            isOpenCreateNewItem = true;
            $.ajax(
                {
                    url: '@Url.Action("SelectQuestionType", "TestMaker")?qtiItemGroupId=@ViewBag.QtiItemGroupID',
                    cache: false
                })
                .done(function (html) {

                    $("#divOnTop").append('<div id="PopupChooseQuestionType" style="display: none;" class="dialog"></div>');
                    $("#PopupChooseQuestionType").append(html);

                    //go to Multiple Choice
                    $('#sChoice').trigger('click');
                });
        });

    });





    function loadItemListNormalView() {
        $("#imgAnswerKeyView").show();
        $('#btnSaveAnswerKey').hide();
        $('#divQuickCreate').hide();
        $("#imgNormalView").hide();
        disableActionButton(true);
        $("#divUploadAnswerKey").hide();

        $.ajax({
            type: 'GET',
            cache: false,
            url: '@Url.Action("LoadItemListNormalView")',
            data: { qtiItemGroupID: '@ViewBag.QTIItemGroupID' },
            success: function (data) {
                try {
                    $('#divQtiiTemListView').html(data);
                    loadContentNumberLineHotspot('#qtiItemDataTable');
                } catch (e) {
                    CustomAlert("There was an error happen so that Item List can not be seen right now.",true);
                }

            }
        });
    }

    function loadItemListAnswerKeyView() {
        $("#imgAnswerKeyView").hide();
        $('#btnSaveAnswerKey').show();
        $('#divQuickCreate').show();
        $('#btnSaveAnswerKey').attr('disabled', 'disabled');
        $("#imgNormalView").show();
        disableActionButton(true);
        //$("#divUploadAnswerKey").show(); Temporary hide this function according to Linkit's request

        $.ajax({
            type: 'GET',
            cache: false,
            url: '@Url.Action("LoadItemListAnswerKeyView")',
            data: { qtiItemGroupID: '@ViewBag.QTIItemGroupID' },
            success: function (data) {
                try {
                    $('#divQtiiTemListView').html(data);
                    loadContentImageHotSpot('#qtiItemDataTable');
                } catch(e) {
                    CustomAlert("There was an error happen so that AnswerKey View can not be seen right now.",true);
                }

            }
        });
    }

    function disableActionButton(yn, answerKeyYN) {
        if (yn == true) {
            $('#btnDuplicateQtiItem').attr('disabled', 'disabled');
            $('#btnDuplicateQtiItemNew').attr('disabled', 'disabled');
            $('#btnDeleteQtiItem').attr('disabled', 'disabled');
            $('#btnAddPassage').attr('disabled', 'disabled');
            $('#btnAssignStandard').attr('disabled', 'disabled');
            $('#btnAssignTag').attr('disabled', 'disabled');
        }
        else {
            $('#btnDuplicateQtiItem').removeAttr('disabled');
            $('#btnDuplicateQtiItemNew').removeAttr('disabled');
            $('#btnDeleteQtiItem').removeAttr('disabled');
            $('#btnAddPassage').removeAttr('disabled');
            $('#btnAssignStandard').removeAttr('disabled');
            $('#btnAssignTag').removeAttr('disabled');
        }
    }
</script>

<script>
    var popupVirtualTestSelector = "#PopupCreateVirtualTest";
    var isOpenSaveAsTest = false;
    function PopupVirtualTestForm() {
        if (isOpenSaveAsTest == true) {
            return;
        }
        isOpenSaveAsTest = true;
        ShowBlock($('#qtiItemDataTable'), 'Loading');
        var url = '@Url.Action("CreateVirtualTestIndex", "QTIItem")';

        $.ajax({
            url: url,
            type: 'post',
            cache: false,
            data: { qtiItemGroupID: '@ViewBag.QTIItemGroupID' }
        }).done(function (html) {
            isOpenSaveAsTest = false;
            $("#divCreateVirtualTest").append('<div id="PopupCreateVirtualTest" class="dialog"></div>');
            $(popupVirtualTestSelector).append(html);
            $('#qtiItemDataTable').unblock();
            $(popupVirtualTestSelector).dialog({
                title: "",
                open: function () {

                    //If width of popup gt window width popup auto show on the left
                    var currentPopup = $(this);
                    if (currentPopup.width() > $(window).width()) {
                        currentPopup.parent().css({ "left": "0" });
                    }

                    //Create overlay for popup
                    $("body").append('<div id="CreateVirtualTestOverlay" class="my-overlay" style="z-index: ' + ($('.ui-dialog:last').css("z-index") - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                },
                beforeclose: function () {
                    return true;
                },
                close: function () {
                    $(this).remove();
                    $("#CreateVirtualTestOverlay").remove();
                    var dataTable = $('#qtiItemDataTable').dataTable();
                    ShowBlock($('#qtiItemDataTable'), 'Loading');
                    dataTable.fnDraw();
                },
                modal: false,
                width: 990,
                resizable: false,
                dialogClass: 'dialog-create-test'
            });

        });

        $(".close").unbind("click");
        $(".close").live("click", function (e) {
            e.preventDefault();
        });
    }

    var isOpenCreatePDF = false;
    function PrintQTIItemGroup() {
        if (isOpenCreatePDF == true) {
            return;
        }
        isOpenCreatePDF = true;

        ShowBlock($('#qtiItemDataTable'), 'Loading');
        var url = '@Url.Action("PrintQTIItemGroup", "QTIItem")';

        $.ajax({
            url: url,
            type: 'post',
            cache: false,
            data: { qtiItemGroupID: '@ViewBag.QTIItemGroupID' }
        }).done(function (data) {
            $('#qtiItemDataTable').unblock();
            isOpenCreatePDF = false;

            var pdfUrl = data;

            if (pdfUrl != undefined && $.trim(pdfUrl) != '') {
                DownLoadAlert('Successfully created PDF', pdfUrl);
            } else {
                DownLoadAlert('Created PDF failed');
            }
        }).fail(function () {
            $('#qtiItemDataTable').unblock();
            isOpenCreatePDF = false;
        });
    }

    function DownLoadAlert(message, url) {
        var yesButton = '<button style="width:63px;margin-left:0px;" onclick="YesClickDownloadPDF(this);" urlDownloadPDF="' + url + '">OK</button>';

        var strHtml = '<section class="grid_5">' +
            '<div class="block-border" style="width: ' + 240 + 'px;">' +
            '<div class="block-content form" style="padding-bottom: 1em;text-align:center;"><div>' + message +
            '</div><div style="text-align:center;padding-top:20px;padding-bottom:10px;">' + yesButton + '</div></div></div></section>';
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "DownLoadAlertDialog")
            .appendTo("body")

            .dialog({
                close: function () { $(this).remove(); },
                modal: true,
                width: 300,
                maxheight: 400,
                resizable: false,
                open: function () { $(".ui-dialog-titlebar-close").hide(); }
            });
    }

    function YesClickDownloadPDF(item) {
        $("#DownLoadAlertDialog").dialog("close");
        var url = $(item).attr('urlDownloadPDF');
        if (url != undefined && $.trim(url) != '') window.open(url);
    }
    $('#btnDuplicateQtiItem').die('click');
    $('#btnDuplicateQtiItem').live("click", function (e) {
        if ($('#qtiItemDataTable').length > 0) {
            //DuplicateQTIItems(); //In _ItemListNormalView
            showCopyMoveItemPopup(); //In _ItemListNormalView
        }
        if ($('#qtiItemDataTableAnswer').length > 0) {
            DuplicateQTIItems_AnswerKeyView(); //In _ItemListAnswerKeyView.cshtml
        }
    });

    $('#btnDuplicateQtiItemNew').die('click');
    $('#btnDuplicateQtiItemNew').live("click", function (e) {
        if ($('#qtiItemDataTable').length > 0) {
            DuplicateQTIItems(); //In _ItemListNormalView
        }
        if ($('#qtiItemDataTableAnswer').length > 0) {
            DuplicateQTIItems_AnswerKeyView(); //In _ItemListAnswerKeyView.cshtml
        }
    });

    $('#btnDeleteQtiItem').die('click');
    $('#btnDeleteQtiItem').live("click", function (e) {
        if ($('#qtiItemDataTableAnswer').length == 0) {
            //Normal view
            DeleteQTIItems(); //In _ItemListNormalView
        } else {
            DeleteQTIItemsAnswerKey();// In _ItemListAnswerKeyView
        }

    });

    $('#btnAddPassage').die('click');
    $('#btnAddPassage').live("click", function (e) {
        if ($('#qtiItemDataTable').length > 0) {
            showPassagePopup();//In _ItemListNormalView
        }
        if ($('#qtiItemDataTableAnswer').length > 0) {
            showPassagePopup_AnswerKeyView(); //In _ItemListAnswerKeyView.cshtml
        }
    });

    $('#btnAssignStandard').die('click');
    $('#btnAssignStandard').live("click", function (e) {
        if ($('#qtiItemDataTable').length > 0) {
            showStandardPopup();//In _ItemListNormalView
        }
        if ($('#qtiItemDataTableAnswer').length > 0) {
            showStandardPopup_AnswerKeyView(); //In _ItemListAnswerKeyView.cshtml
        }
    });

    $('#btnAssignTag').die('click');
    $('#btnAssignTag').live("click", function (e) {
        if ($('#qtiItemDataTable').length > 0) {
            showTagPopup();//In _ItemListNormalView
        }
        if ($('#qtiItemDataTableAnswer').length > 0) {
            showTagPopup_AnswerKeyView(); //In _ItemListAnswerKeyView.cshtml
        }
    });
    function showAddNewItemFromLibraryPopup() {
        location.href = '@Url.Action("ShowAddItemsFromLibrary","ItemBank")?\qTIItemGroupID=@ViewBag.QTIItemGroupID';
        return;
        var worker = $('<div />');
        worker
            .addClass("dialog ddNewItemFromLibraryPopupCSS")
            .attr("id", "addNewItemFromLibraryPopup")
            .appendTo("body")
            .load('@Url.Action("ShowAddItemsFromLibrary","ItemBank")?\qTIItemGroupID=@ViewBag.QTIItemGroupID', function () {
                worker.dialog({
                    open: function () {
                        $('#tips').html('');
                    },
                    title: $(this).attr("Add New Item From Library"),
                    close: function () {
                        //refresh qtitem
                        $('#tips').html('');
                        ui.qtiItemDataTable.fnDraw();
                        $(this).remove();
                        $('#chkAllQtiItem').removeAttr('checked');
                        disableActionButton(true);
                    },
                    modal: false,
                    width: 980,
                    resizable: false
                });
            });

        showModalDialogBG();
    }
    $('#btnCancelQtiItem').click(function () {
        var link = '@Url.Action("Index","ItemBank")';
        link = encodeURI(link);
        window.location.href = link;
    });

    var isShowQtiItemPopup = false;

    function showEditQtiItemPopupIndex(qtiItemId, showPassage) {
        //Check if this item is existing or not
        $.ajax({
            url: '@Url.Action("CheckQtiItemExists", "ItemBank")',
            data: { qtiItemId: qtiItemId },
            type: 'get',
            cache: false
        }).done(function(response) {
            if (response.Exists == 'False') {
                alert(response.errorMessage);
                return;
            } else {
                //Existing
                //Show popup
                if (isShowQtiItemPopup == true) return;
                isShowQtiItemPopup = true;
                var worker = $('<div />');
                worker
                    .addClass("dialog EditQtiItemPopUpDialogCSS")
                    .attr("id", "editQtiItemDialog")
                    .appendTo("body")
                    .load('@Url.Action("ShowEditQtiItemItem", "ItemBank")\?qtiItemId=' + qtiItemId + '&showPassage=' + showPassage, function () {
                        worker.dialog({
                            title: $(this).attr("Standard"),
                            open: function () {
                                //a new overlay will be generated when opening an dialog
                                //set zindex of new overlay to make it cover Filter Item From Library Popup
                                AdjustQtiItemDetail();//declared in _QtiItemDetail.cshtml

                                var qtiItemHTML = $('#divQtiItemDetail').html();
                                qtiItemHTML = qtiItemHTML.replace(/<videolinkit/g, "<video").replace(/<\/videolinkit>/g, "</video>").replace(/<sourcelinkit /g, "<source ").replace(/<\/sourcelinkit>/g, "</source>");
                                $('#divQtiItemDetail').html(qtiItemHTML);
                                $('#divQtiItemDetail').find('video').trigger('play');
                                // Load content in file qtiItemLoadMedia.js
                                loadContentImageHotSpot('#divQtiItemDetail');
                                loadContentDragAndDrop('#divQtiItemDetail');
                                loadContentNumberLineHotspot('#divQtiItemDetail');
                                loadContentGlossary('#divQtiItemDetail', '#glossaryMessage');
                            },
                            close: function () {
                                $('.ui-widget-overlay:last').remove();
                                $(this).remove();
                                $('#tips').html('');
                                isShowQtiItemPopup = false;

                                // Stop text to speech
                                if (!!responsiveVoice) {
                                    responsiveVoice.cancel();
                                }
                            },
                            modal: false,
                            width: 480,
                            resizable: false
                        });
                    });
                showModalDialogBG();
            }
        }).error(function (request) {
        });

    }

    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }
    function LoadImages(containerSelector) {
        $(containerSelector).find("img").each(function () {
            var image = $(this);
            var imageUrl = image.attr("src");
            if (IsNullOrEmpty(imageUrl)) {
                imageUrl = image.attr("source");
            }

            if (IsNullOrEmpty(imageUrl)) imageUrl = '@Url.Content("~/Content/images/emptybg.png")';

            if (imageUrl.charAt(0) == '/') imageUrl = imageUrl.substring(1);

            image.attr("source", '');
            image.attr("src", imageUrl);
            if (imageUrl.toLowerCase().indexOf("http") == 0) return;
        });

        ResizeImagesBaseOnPercent('#qtiItemDataTable');
    }

    function IsNullOrEmpty(value) {
        return typeof(value) === "undefined" || value == null || $.trim(value) == '';
    }
</script>
<script type="text/javascript">
    var validFile = true;
    $(function () {
        var auth = '@(Request.Cookies[FormsAuthentication.FormsCookieName] == null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value)';
        if (window.FormData !== undefined) {
            $('#file_upload').uploadifive({
                'uploadScript': '@Url.Action("UploadAnswerKey")',
                'overrideEvents': ['onDialogClose'],
                'buttonText': 'Select File',
                'fileObjName': 'postedFile',
                'multi': false,
                'removeCompleted': true,
                'width': 100,
                'auto': true,
                'fileSizeLimit': '71680KB',
                'fileType' : 'application/vnd.ms-excel',
                'onUpload': function (file) {
                    $('#file_upload').data('uploadifive').settings.formData = getFormDataAnswerKeyUpload(auth);
                    $('#btnSaveAnswerKey').attr('disabled', 'disabled');

                    ShowBlock($('#divQtiItemList'), 'Processing');
                },
                'onUploadComplete': function (file, data) {
                    var result = $.parseJSON(data);
                    if (result == undefined) {
                        CustomAlert('An error has occured.  Please try again');
                    }
                    if (result.success == true) {
                        CustomAlert('Upload processing successfully.');
                    }
                    else {
                        CustomAlert(result.errorMessage, true);
                        $('#file_upload').uploadifive('cancel', $('.uploadifive-queue-item').first().data('file'));
                    }

                    $('#btnSaveAnswerKey').removeAttr('disabled');
                    $('#divQtiItemList').unblock();
                    //Reload
                    //ui.qtiItemDataTableAnswer.fnReloadAjax(); //fnReloadAjax will send ajax two times
                    ui.qtiItemDataTableAnswer.fnDraw();//fnDraw send only one time
                },
                'onError': function (errorType, file) {
                    $('#btnSaveAnswerKey').removeAttr('disabled');
                    $('#divQtiItemList').unblock();
                    validFile = false;
                    if (errorType == 'FORBIDDEN_FILE_TYPE') {
                        CustomAlert(errorMsg + '  Please select a csv (.csv) file.');
                    } else {
                        CustomAlert('The file ' + file.name + ' returned an error and was not added to the queue.');
                    }
                },
                'onCancel': function (file) {
                    $('#btnSaveAnswerKey').removeAttr('disabled');
                    $('#divQtiItemList').unblock();
                    CustomAlert('The file ' + file.name + ' could not be uploaded: Cancelled');
                }
            });
        }

        function getFormDataAnswerKeyUpload(auth) {
            var qtiItemGroupId = $('#hdQTIItemGroupID').val();
            return {'AUTHID': auth, 'qtiItemGroupId': qtiItemGroupId };
        }


    });

</script>
<!-- Custom alert message box -->
<script type="text/javascript">
    function CustomAlert(message, isLongMessage) {
        var yesButton = '<button style="width:63px;margin-left:0px;" onclick="YesClick(this);">OK</button>';
        var messageTextAlign = 'center';
        var messageBoxWidth = 240;
        var diaglogWidth = 300;

        if (typeof isLongMessage != "undefined" && isLongMessage == true) {
            messageTextAlign = 'left';
            messageBoxWidth = 540;
            diaglogWidth = 600;
        }
        var strHtml = '<section class="grid_5">' +
            '<div class="block-border" style="width: ' + messageBoxWidth + 'px;">' +
            '<div class="block-content form" style="padding-bottom: 1em;text-align:center;"><div style="text-align:' + messageTextAlign + ';line-height: 18px;">' + message +
            '</div><div style="text-align: center;padding-top:20px;padding-bottom:10px;">' + yesButton + '</div></div></div></section>';
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "CustomAlertDialog")
            .appendTo("body")

            .dialog({
                close: function () { $(this).remove(); },
                modal: true,
                width: diaglogWidth,
                maxheight: 400,
                resizable: false,
                open: function () { $(".ui-dialog-titlebar-close").hide(); }
            });
    }

    function YesClick(item) {
        $("#CustomAlertDialog").dialog("close");
        var url = $(item).attr('url');
        if (url != undefined && $.trim(url) != '') window.open(url);
    }
</script>
<script type="text/javascript">

    $(document).ready(function () {

    });
</script>
<script>
    $(function () {
        var auth = '@(Request.Cookies[FormsAuthentication.FormsCookieName] == null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value)';

        var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;

        function getFormData(auth) {
            return { 'AUTHID': auth, 'qtiItemGroupID': @ViewBag.QTIItemGroupID};
        }

        if (window.FormData !== undefined) {
            $('#file_upload_blackboard').uploadifive({
                'uploadScript': '@Url.Action("UploadExamview")',
                'overrideEvents': ['onDialogClose'],
                'formData': { AUTHID: auth },
                'buttonText': ' ',
                'fileObjName': 'postedFile',
                'multi': false,
                'removeCompleted': true,
                'width': 32,
                'height': 32,
                'auto': true,
                'fileSizeLimit': '71680KB',
                'fileType' : ['application/x-zip-compressed','application/zip'],
                'buttonClass': 'file_upload_blackboard',
                'onInit': function(){
                    $("#uploadifive-file_upload_blackboard-queue").hide();
                    $('#uploadifive-file_upload_blackboard').click(function() {
                        //alert( "on click to select file." );
                        validFile = true;
                    });
                },
                'onUpload': function (file) {
                    $("#uploadifive-file_upload_blackboard-queue").hide();
                    $('#file_upload_blackboard').data('uploadifive').settings.formData = getFormData(auth);
                    $('#error-messages').hide();
                    $('#error-messages').empty();
                    if (validFile == true) {
                        ShowBlock($('#divQtiItemList'), 'Uploading');
                    }

                },
                'onUploadComplete': function (file, data) {
                    $("#uploadifive-file_upload_blackboard-queue").hide();
                    $('#divQtiItemList').unblock();
                    var result = $.parseJSON(data);
                    if (result == undefined) {
                        CustomAlert('An error has occured.  Please try again');
                    }
                    if (result.success == true) {
                        $('#error-messages').hide();
                        $('#upload-block').html('');
                        if ($('#qtiItemDataTableAnswer').length > 0) {
                            ui.qtiItemDataTableAnswer.fnReloadAjax();
                        }
                        if ($('#qtiItemDataTable').length > 0) {
                            ui.qtiItemDataTable.fnReloadAjax();
                        }
                        CustomAlert(result.message);
                    }
                    else {
                        //addErrorMessages(result);
                        $('#error-messages').show();
                        $('#error-messages').html('<li>' + result.message + '</li>');
                        CustomAlert(result.message);
                        if ($('#qtiItemDataTableAnswer').length > 0) {
                            ui.qtiItemDataTableAnswer.fnReloadAjax();
                        }
                        if ($('#qtiItemDataTable').length > 0) {
                            ui.qtiItemDataTable.fnReloadAjax();
                        }
                        $('#file_upload_blackboard').uploadifive('cancel', $('.uploadifive-queue-item').first().data('file'));
                    }
                },
                'onError': function (errorType, file) {
                    $("#uploadifive-file_upload_blackboard-queue").hide();
                    $('#divQtiItemList').unblock();
                    validFile = false;
                    if (errorType == 'FORBIDDEN_FILE_TYPE') {
                        //CustomAlert(errorMsg + '  Please select a zip (.zip) file.');
                        CustomAlert('The file you are trying to upload is not a .zip file. Please try again',true);
                    } else {
                        CustomAlert('The file ' + file.name + ' returned an error and was not added to the queue.',true);
                    }
                },
                'onCancel': function (file) {
                    $('#divQtiItemList').unblock();
                    $("#uploadifive-file_upload_blackboard-queue").hide();
                }
            });
        }

        $('#file_upload_blackboard').parent().attr('title','Exam View');
        if (isFirefox) {
            $('#file_upload_blackboard').next().attr('title','Exam View');
        }

        if (window.FormData !== undefined) {
            $('#file_upload_datafile').uploadifive({
                'uploadScript': '@Url.Action("UploadDataFile")',
                'overrideEvents': ['onDialogClose'],
                'formData': { AUTHID: auth },
                'buttonText': ' ',
                'fileObjName': 'postedFile',
                'multi': false,
                'removeCompleted': true,
                'width': 32,
                'height': 32,
                'auto': true,
                'fileSizeLimit': '0',
                'fileType' : ['application/x-zip-compressed','application/zip'],
                'buttonClass': 'file_upload_datafile',
                'onInit': function(){
                    $("#uploadifive-file_upload_datafile-queue").hide();
                    $('#uploadifive-file_upload_datafile').click(function() {
                        validFile = true;
                    });
                },
                'onSelect' : function(file) {
                },
                'onUploadFile' : function(file) {
                },
                'onUpload': function (file) {
                    $("#uploadifive-file_upload_datafile-queue").hide();
                    $('#file_upload_datafile').data('uploadifive').settings.formData = getFormData(auth);
                    $('#error-messages').hide();
                    $('#error-messages').empty();
                    if (validFile==true) {
                        ShowBlock($('#divQtiItemList'), 'Uploading');
                    }

                },
                'onUploadComplete': function (file, data) {
                    ShowBlock($('#divQtiItemList'), 'Uploading');
                    $("#uploadifive-file_upload_datafile-queue").hide();
                    var result = $.parseJSON(data);
                    if (result == undefined) {
                        CustomAlert('An error has occured.  Please try again');
                    }
                    if (result.success == true) {
                        $('#error-messages').hide();
                        $('#upload-block').html('');
                        var logId = result.dataFileUploadLogId;
                        SetIntervalCheckStatus(logId);
                    }
                    else {
                        $('#divQtiItemList').unblock();
                        $('#error-messages').show();
                        $('#error-messages').html('<li>' + result.message + '</li>');
                        CustomAlert(result.message,true);
                        if ($('#qtiItemDataTableAnswer').length > 0) {
                            ui.qtiItemDataTableAnswer.fnReloadAjax();
                        }
                        if ($('#qtiItemDataTable').length > 0) {
                            ui.qtiItemDataTable.fnReloadAjax();
                        }
                        $('#file_upload_datafile').uploadifive('cancel', $('.uploadifive-queue-item').first().data('file'));
                    }
                },
                'onError': function (errorType, file) {
                    $("#uploadifive-file_upload_datafile-queue").hide();
                    $('#divQtiItemList').unblock();
                    validFile = false;
                    if (errorType == 'FORBIDDEN_FILE_TYPE') {
                        CustomAlert('The file you are trying to upload is not a .zip file. Please try again',true);
                    } else {
                        CustomAlert('The file ' + file.name + ' returned an error and was not added to the queue.',true);
                    }
                },
                'onCancel': function (file) {
                    $("#uploadifive-file_upload_datafile-queue").hide();
                }
            });
        }

        $('#file_upload_datafile').parent().attr('title', 'QTI');
        if (isFirefox) {
            $('#file_upload_datafile').next().attr('title','QTI');
        }

        function checkUploadProcessingStatus(id) {
            var response_data;
            $.ajax({
                url: '@Url.Action("CheckStatusUploadDataFile")',
                type: 'GET',
                data: { dataFileUploadLogId: id },
                async: false,
                success: function (response) {
                    response_data = response;
                }
            });
            return response_data;
        }

        function SetIntervalCheckStatus(logId)
        {
        var interval = setInterval(function () {
            var resultStatus = checkUploadProcessingStatus(logId);

            if (resultStatus.success == false) {
                clearInterval(interval);
                //CustomAlert('An error has occured.  Please try again');
                $('#divQtiItemList').unblock();
                CustomAlert(resultStatus.message);
                return;
            }
            else {
                if (resultStatus.processingStatus != undefined) {
                    clearInterval(interval);
                    $('#divQtiItemList').unblock();
                    if ($('#qtiItemDataTableAnswer').length > 0) {
                        ui.qtiItemDataTableAnswer.fnReloadAjax();
                    }
                    if ($('#qtiItemDataTable').length > 0) {
                        ui.qtiItemDataTable.fnReloadAjax();
                    }
                    CustomAlert(resultStatus.message);
                }
            }
        }, 5000);
        }
    });

</script>
