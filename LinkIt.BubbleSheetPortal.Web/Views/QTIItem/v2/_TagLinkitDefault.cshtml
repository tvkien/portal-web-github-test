
<style>
    #divLinkitDefaultTag .block-controls,
    #divLinkitDefaultTag .block-pagination,
    #divLinkitDefaultTag .block-footer {
        display: none !important;
    }

    .dataTables_empty {
        text-align: center !important;
    }

    .divButtonAdd {
        margin-top: 16px;
        display: flex;
        justify-content: space-between;
        gap: 16px;
    }

    .divButtonAdd input {
        width: 100%;
    }

    table tbody tr td:first-child .divContainerStyle {
        text-align: center;
    }


    #btnCancel {
        display: flex;
        align-items: center;
        padding: 11px 32px;
        font-weight: 900;
        cursor: pointer;
        width: fit-content;
        height: 48px;
        box-sizing: border-box;
        border: 0;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        text-decoration: none;
        color: var(--white) !important;
    }

    .plButton {
        background: var(--navyColor);
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: space-around;
    }

    #ConfirmTopicDeleteDialog,
    #ConfirmSkillDeleteDialog,
    #ConfirmOtherDeleteDialog {
        padding: 0 !important;
    }

    .ui-autocomplete {
        z-index: 2000 !important;
        max-height: 200px !important;
        overflow-x: hidden;
        overflow-y: visible;
    }

    #dataTableTopic,
    #dataTableSkill,
    #dataTableOther {
        display: block;
        max-height: 250px;
        overflow-y: auto;
        overflow-x: hidden;
    }

    #dataTableTopic tbody,
    #dataTableSkill tbody,
    #dataTableOther tbody {
        border-collapse: collapse;
        width: 100%;
        display: table;
    }

    #dataTableTopic thead,
    #dataTableSkill thead,
    #dataTableOther thead {
        width: 100%;
        position: sticky;
        top: 0;
        z-index: 12;
        border-collapse: collapse;
        display: table;
    }

    #dataTableTopic tbody tr td:first-child,
    #dataTableSkill tbody tr td:first-child,
    #dataTableOther tbody tr td:first-child {
        text-align: center !important;
        width: 92px;
    }

    #dataTableTopic thead tr th,
    #dataTableSkill thead tr th,
    #dataTableOther thead tr th {
        border-bottom: none;
    }
</style>
<section class="mb-0">   
        <div class="form LinkitDefaultTagForm">
            <p class="title-large" style="font-size: 1.125rem !important">
                @if(ViewBag.HasManyQtiItem)
                {
                    <text>
                        Shared Tags
                    </text>
                }
                else
                {
                    <text>
                        Associated Tags
                    </text>
                }
                
            </p>
            <div class="d-flex" style="gap: 16px">
                    <div id="divTopic" style="flex: 1">
                        <table id="dataTableTopic" class="datatable table">
                            <colgroup>
                                <col style="width: 92px;"/>
                            </colgroup>
                            <thead>
                                <tr>
                                    <th scope="col">Actions</th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Topics
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <div class="divButtonAdd">
                            <input type="text" id="Topic" maxlength="200" />
                            <button id="btnAddTopic" type="button" class="btn-red m-0" tabindex="3" onclick="AddTopic()">Add</button>
                        </div>
                    </div>
                    <div id="divSkill" style="flex: 1">
                        <table id="dataTableSkill" class="datatable table dataTableDefaultTagStyle">
                            <thead>
                                <tr>
                                    <th scope="col">Actions</th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Skills
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <div class="divButtonAdd">
                            <input type="text" id="Skill" maxlength="400" />
                            <button id="btnAddSkill" type="button" class="btn-red m-0" tabindex="3" onclick="AddSkill()">Add</button>
                        </div>
                    </div>
                    <div id="divOther" style="flex: 1">
                        <table id="dataTableOther" class="datatable table dataTableDefaultTagStyle">
                            <thead>
                                <tr>
                                    <th scope="col">Actions</th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Other
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <div class="divButtonAdd">
                            <input type="text" id="Other" maxlength="400" />
                            <button id="btnAddOther" type="button" class="btn-red m-0" tabindex="3" onclick="AddOther()">Add</button>
                        </div>
                    </div>
                </div>
        </div>
</section>
<script type="text/javascript">

    $(function () {
        PopulateTopic();
        PopulateSkill();
        PopulateOther();
        $("#dataTableTopic_wrapper").css("margin", "0");
        $("#dataTableSkill_wrapper").css("margin", "0");
        $("#dataTableOther_wrapper").css("margin", "0");
        bindEvents();


        $("#Topic").keyup(function () {
            if ($.trim($("#Topic").val()).length > 0) {
                $("#btnAddTopic").addClass('resource-green-button');
                $("#btnAddTopic").removeClass('grey');
            } else {
                $("#btnAddTopic").removeClass('resource-green-button');
                $("#btnAddTopic").addClass('grey');
            }
        });
        $("#Skill").keyup(function () {
            if ($.trim($("#Skill").val()).length > 0) {
                $("#btnAddSkill").addClass('resource-green-button');
                $("#btnAddSkill").removeClass('grey');
            } else {
                $("#btnAddSkill").removeClass('resource-green-button');
                $("#btnAddSkill").addClass('grey');
            }
        });
        $("#Other").keyup(function (e) {
            if ($.trim($("#Other").val()).length > 0) {
                $("#btnAddOther").addClass('resource-green-button');
                $("#btnAddOther").removeClass('grey');
            } else {
                $("#btnAddOther").removeClass('resource-green-button');
                $("#btnAddOther").addClass('grey');
            }
        });

         $("#Other").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSearchAllOthersTags", "QTIItemTag")',
                    type: "get",
                    dataType: "json",
                    data: {
                        tagSearch: encodeURIComponent(htmlEncode(request.term)),
                        qtiitemIdString: '@ViewBag.QtiItemIdString'
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 2
        });

        $("#Topic").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSearchAllTopicTags", "QTIItemTag")',
                    type: "get",
                    dataType: "json",
                    data: {
                        tagSearch: encodeURIComponent(htmlEncode(request.term)),
                        qtiitemIdString: '@ViewBag.QtiItemIdString'
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 2
        });

        $("#Skill").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetSearchAllSkillTags", "QTIItemTag")',
                    type: "get",
                    dataType: "json",
                    data: {
                        tagSearch: encodeURIComponent(htmlEncode(request.term)),
                        qtiitemIdString: '@ViewBag.QtiItemIdString'
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 2
        });
    });

    function PopulateTopic() {

        var optionsTopic = {
            bServerSide: true,
            bFilter: false, // not allow search filter
            sAjaxSource: '@Url.Action("GetMutualTopicsOfManyQtiItems", "QTIItemTag")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "qtiItemIdString", value: '@ViewBag.QtiItemIdString' }
                );

                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        //when passing parameter to searchbox then click on allpy filter, tabase does not recognize parameter, need to assign parameter to searchbox manually
                        if (item.value.length == 0 && $("input[aria-controls|='dataTableTopic']").val().length > 0) {
                            item.value = $("input[aria-controls|='dataTableTopic']").val();
                        }

                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''");
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;//only process searchbox
                    }
                    if (item.name == 'iDisplayLength') {
                        item.value = 10000;
                    }
                }
            },
            bAutoWidth: false,
            "oLanguage": {
                "sEmptyTable": "No Tag"
            },
            bPaginate: false,
            iDisplayLength: 1000,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'TopicID', bSearchable: false, bSortable: false, sWidth: "92px" },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(DisplayIconTopic(aData[0]));
                $('td:eq(1)', nRow).html($('<div/>').text(aData[1]).html());
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableTopic'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableTopic').unblock();
                $('.with-tip').tip();
            }
        };

        $("#dataTableTopic").data("options", optionsTopic);
        initializeDataTable($("#dataTableTopic"));
    }

    function DisplayIconTopic(topicId) {
        var removeIcon = '<span class="icon fa-solid fa-circle-minus icon-red"></span>';
        var title = "<p style='font-size: 12px;'>Remove</p>";
        var removeIconLink = '<a href="javascript:void(0);" title="' + title +'" class="with-tip" style="display: inline-block"'
            + 'onclick="RemoveTopicTag(' + topicId + ')"'
            + '>' + removeIcon + '</a>';
        return removeIconLink;
    }
    function RemoveTopicTag(topicId) {
        ConfirmTopicDelete("Do you want to remove this tag?", topicId);
    }

    function AddTopic() {
        var name = $("#Topic").val();
        name = $.trim(name);
        if (name.length == 0) {
            return;
        }
        if (name.length > 200) {
            alertMessageTagPopUp("Name of Topic Tag is not over 200 characters.");
            return;
        }
        $("#btnAddTopic").attr('disabled', 'disabled');

        $.post('@Url.Action("AssignTopicTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.QtiItemIdString', name: encodeURIComponent(name) }, function (response) {
            if (response.Success == 'Success') {
                ui.dataTableTopic.fnDraw();
                $("#btnAddTopic").removeAttr('disabled');
            } else {
                //alert(response.errorMessage);
                alertMessageTagPopUp(response.errorMessage);
                $("#btnAddTopic").removeAttr('disabled');
            }

        });
    }

    function PopulateSkill() {

        var optionsSkill = {
            bServerSide: true,
            bFilter: false, // not allow search filter
            sAjaxSource: '@Url.Action("GetMutualSkillsOfManyQtiItems", "QTIItemTag")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "qtiItemIdString", value: '@ViewBag.QtiItemIdString' }
                );

                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        //when passing parameter to searchbox then click on allpy filter, tabase does not recognize parameter, need to assign parameter to searchbox manually
                        if (item.value.length == 0 && $("input[aria-controls|='dataTableSkill']").val().length > 0) {
                            item.value = $("input[aria-controls|='dataTableSkill']").val();
                        }

                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''");
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;//only process searchbox
                    }
                    if (item.name == 'iDisplayLength') {
                        item.value = 10000;
                    }
                }
            },
            bAutoWidth: false,
            "oLanguage": {
                "sEmptyTable": "No Tag"
            },
            bPaginate: false,
            iDisplayLength: 1000,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'LessonOneID', bSearchable: false, bSortable: false, sWidth: "92px" },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(DisplayIconSkill(aData[0]));
                $('td:eq(1)', nRow).html($('<div/>').text(aData[1]).html());
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableSkill'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableSkill').unblock();
                $('.with-tip').tip();
            }
        };

        $("#dataTableSkill").data("options", optionsSkill);
        initializeDataTable($("#dataTableSkill"));
    }
    function DisplayIconSkill(lessonOneId) {
        var removeIcon = '<span class="icon fa-solid fa-circle-minus icon-red"></span>';
        var removeTitle = "<p style='font-size: 12px;'>Remove</p>";
        var removeIconLink = '<a href="javascript:void(0);" title="' + removeTitle + '" class="with-tip" style="display: inline-block"'
            + 'onclick="RemoveSkillTag(' + lessonOneId + ')"'
            + '>' + removeIcon + '</a>';
        return removeIconLink;
    }
    function RemoveSkillTag(lessonOneId) {
        ConfirmSkillDelete("Do you want to remove this tag?", lessonOneId);
    }
    function AddSkill() {
        var name = $("#Skill").val();
        name = $.trim(name);
        if (name.length == 0) {
            return;
        }
        if (name.length > 400) {
            alertMessageTagPopUp("Name of Skill Tag is not over 400 characters.");
            return;
        }
        $("#btnAddSkill").attr('disabled', 'disabled');
        $.post('@Url.Action("AssignSkillTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.QtiItemIdString', name: encodeURIComponent(name) }, function (response) {
            if (response.Success == 'Success') {
                ui.dataTableSkill.fnDraw();
                $("#btnAddSkill").removeAttr('disabled');
            } else {
                //alert(response.errorMessage);
                alertMessageTagPopUp(response.errorMessage);
                $("#btnAddSkill").removeAttr('disabled');
            }

        });
    }

    function PopulateOther() {

        var optionsOther = {
            bServerSide: true,
            bFilter: false, // not allow search filter
            sAjaxSource: '@Url.Action("GetMutualOthersOfManyQtiItems", "QTIItemTag")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "qtiItemIdString", value: '@ViewBag.QtiItemIdString' }
                );

                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        //when passing parameter to searchbox then click on allpy filter, tabase does not recognize parameter, need to assign parameter to searchbox manually
                        if (item.value.length == 0 && $("input[aria-controls|='dataTableOther']").val().length > 0) {
                            item.value = $("input[aria-controls|='dataTableOther']").val();
                        }

                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''");
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;//only process searchbox
                    }
                    if (item.name == 'iDisplayLength') {
                        item.value = 10000;
                    }
                }
            },
            bAutoWidth: false,
            "oLanguage": {
                "sEmptyTable": "No Tag"
            },
            bPaginate: false,
            iDisplayLength: 1000,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'LessonTwoID', bSearchable: false, bSortable: false, sWidth: "92px" },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(DisplayIconOther(aData[0]));
                $('td:eq(1)', nRow).html($('<div/>').text(aData[1]).html());
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableOther'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableOther').unblock();
                $('.with-tip').tip();
            }
        };

        $("#dataTableOther").data("options", optionsOther);
        initializeDataTable($("#dataTableOther"));
    }
    function DisplayIconOther(lessonTwoId) {
        var removeIcon = '<span class="icon fa-solid fa-circle-minus icon-red"></span>';
        var removeTitle = "<p style='font-size: 12px;'>Remove</p>";
        var removeIconLink = '<a href="javascript:void(0);" title="' + removeTitle +'" class="with-tip" style="display: inline-block"'
            + 'onclick="RemoveOtherTag(' + lessonTwoId + ')"'
            + '>' + removeIcon + '</a>';
        return removeIconLink;
    }
    function RemoveOtherTag(lessonTwoId) {
        ConfirmOtherDelete("Do you want to remove this tag?", lessonTwoId);
    }
    function AddOther() {
        var name = $("#Other").val();
        name = $.trim(name);
        if (name.length == 0) {
            return;
        }
        if (name.length > 400) {
            alertMessageTagPopUp("Name of Other Tag is not over 400 characters.");
            return;
        }
        $("#btnAddOther").attr('disabled', 'disabled');
        $.post('@Url.Action("AssignOtherTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.QtiItemIdString', name: encodeURIComponent(name) }, function (response) {
            if (response.Success == 'Success') {
                ui.dataTableOther.fnDraw();
                $("#btnAddOther").removeAttr('disabled');
            } else {
                //alert(response.errorMessage);
                alertMessageTagPopUp(response.errorMessage);
                $("#btnAddOther").removeAttr('disabled');
            }

        });
    }
    function bindEvents() {
        $('button[data-dialog="close"]').die('click');
        $(document).on('click', 'button[data-dialog="close"]', function (e) {

            var self = $(e.target);
            self.closest('.dialog').dialog('close');

        });

    }


</script>
<!-- Custom confirm popup window -->
<script type="text/javascript">
    function ConfirmTopicDelete(message, id) {
        var hbody = $("body").height() - 109;
        var strHtml = '<section class="mb-0">' +
            '<div class="block-border" style="background-color: var(--white)">' +
            '<div class="form">' +
            '<div style="text-align: center; font-weight: bold; padding: 24px;">' + message +
            '</div>' +
            '<div class="plButton">' +
            '<button id="btnCancel" type="button" name="cancel" onclick="ConfirmTopicDeleteCancelClick()">Cancel</button>' +
            '<button id="btnOk" class="btn-red" type="button" name="ok" onclick="ConfirmTopicDeleteOkClick(' + id + ')">OK</button>' +
            '</div></div></div></section>';
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "ConfirmTopicDeleteDialog")
            .appendTo("body")
            .dialog({
                open: function () {
                    $('#ConfirmTopicDeleteDialog').prev().css('top', '34px');
                },
                close: function () { $(this).remove(); },
                modal: true,
                width: 420,
                maxheight: 100,
                resizable: false
            });

        $(".ui-dialog").css("height", hbody);

    }

    function ConfirmTopicDeleteOkClick(topicId) {
        $.post('@Url.Action("RemoveTopicTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.QtiItemIdString', topicId: topicId }, function (response) {
            if (response.Success == 'Success') {
                $("#ConfirmTopicDeleteDialog").dialog("close");
                ui.dataTableTopic.fnDraw();
            } else {
                //alert(response.errorMessage);
                CustomAlert(response.errorMessage);
            }

        });
        
    }

    function ConfirmTopicDeleteCancelClick() {
        $("#ConfirmTopicDeleteDialog").dialog("close");
    }
    
    function ConfirmSkillDelete(message, id) {
        var hbody = $("body").height() - 109;
        var strHtml = '<section class="mb-0">' +
            '<div class="block-border" style="background-color: var(--white)">' +
            '<div class="form">' +
            '<div style="text-align: center; font-weight: bold; padding: 24px;">' + message +
            '</div>' +
            '<div class="plButton">' +
            '<button id="btnCancel" type="button" name="cancel" onclick="ConfirmSkillDeleteCancelClick()">Cancel</button>' +
            '<button id="btnOk" class="btn-red" type="button" name="ok" onclick="ConfirmSkillDeleteOkClick(' + id + ')">OK</button>' +
            '</div></div></div></section>';
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "ConfirmSkillDeleteDialog")
            .appendTo("body")
            .dialog({
                open: function () {
                    $('#ConfirmSkillDeleteDialog').prev().css('top', '34px');
                },
                close: function () { $(this).remove(); },
                modal: true,
                width: 420,
                maxheight: 100,
                resizable: false
            });

        $(".ui-dialog").css("height", hbody);

    }

    function ConfirmSkillDeleteOkClick(lessonOneId) {
        $.post('@Url.Action("RemoveSkillTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.QtiItemIdString', lessonOneId: lessonOneId }, function (response) {
            if (response.Success == 'Success') {
                $("#ConfirmSkillDeleteDialog").dialog("close");
                ui.dataTableSkill.fnDraw();
            } else {
                //alert(response.errorMessage);
                CustomAlert(response.errorMessage);
            }

        });

    }

    function ConfirmSkillDeleteCancelClick() {
        $("#ConfirmSkillDeleteDialog").dialog("close");
    }
    
    function ConfirmOtherDelete(message, id) {
        var hbody = $("body").height() - 109;
        var strHtml = '<section class="mb-0">' +
            '<div class="block-border" style="background-color: var(--white)">' +
            '<div class="form">' +
            '<div style="text-align: center; font-weight: bold; padding: 24px;">' + message +
            '</div>' +
            '<div class="plButton">' +
            '<button id="btnCancel" type="button" name="cancel" onclick="ConfirmOtherDeleteCancelClick()">Cancel</button>' +
            '<button id="btnOk" class="btn-red" type="button" name="ok" onclick="ConfirmOtherDeleteOkClick(' + id + ')">OK</button>' +
            '</div></div></div></section>';
        $("<div></div>")
            .html(strHtml)
            .addClass("dialog")
            .attr("id", "ConfirmOtherDeleteDialog")
            .appendTo("body")
            .dialog({
                open: function () {
                    $('#ConfirmOtherDeleteDialog').prev().css('top', '34px');
                },
                close: function () { $(this).remove(); },
                modal: true,
                width: 420,
                maxheight: 100,
                resizable: false
            });

        $(".ui-dialog").css("height", hbody);

    }

    function ConfirmOtherDeleteOkClick(lessonTwoId) {
        $.post('@Url.Action("RemoveOtherTagForManyQtiItems", "QTIItemTag")', { qtiItemIdString: '@ViewBag.QtiItemIdString', lessonTwoId: lessonTwoId }, function (response) {
            if (response.Success == 'Success') {
                $("#ConfirmOtherDeleteDialog").dialog("close");
                ui.dataTableOther.fnDraw();
            } else {
                CustomAlert(response.errorMessage);
            }

        });

    }

    function ConfirmOtherDeleteCancelClick() {
        $("#ConfirmOtherDeleteDialog").dialog("close");
    }
</script>
