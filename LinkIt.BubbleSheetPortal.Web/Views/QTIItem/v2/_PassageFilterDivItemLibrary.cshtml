<style type="text/css">
    .ui-widget-header {
        top: 3.2em;
        right: 0.5em !important;
    }

    #divPassageListDataTable .block-pagination {
        margin-left: 0 !important;
        margin-right: 0 !important;
    }
    #divPassageListDataTable .no-margin.last-child {
        margin: 0 !important;
    }
    #portal-v2-containter #divPassageListDataTable table.datatable {
        width: 100% !important;
    }

    #portal-v2-containter .ui-dialog-content > section {
        width: 100%;
        min-width: 100%;
        display: flex;
        justify-content: center;
    }

</style>

<div id="divPassageFilter" class="bubbleSheetSelector" style="margin-top:0px">
    <h2 class="header">Passage</h2>
    <div id="passageNotifications"></div>
    <div class="qtiItemSelector">
        <h2 class="p-header">Filter</h2>
        <div class="columns">
            @if (ViewBag.IsPublisher != null && ViewBag.IsPublisher)
            {
                <div class="row g-0">
                    <div class="col-10 px-0 mt-0 row g-3">
                        <div class="col-3">
                            <label>State</label>
                            <div class="block-text-name" style="width: 100% !important">
                                <select id="ddlState" data-bind='options: PassageStates, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select State", value: PassageStateId' class="w-100"></select>
                                <div class="box-select">
                                    <span class="overlay"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-3">
                            <label>@LabelHelper.DistrictLabel</label>
                            <div class="block-text-name" style="width: 100% !important">
                                <select id="ddlDistrict" data-bind='options: PassageDistricts, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select @LabelHelper.DistrictLabel", value: PassageDistrictId' class="w-100"></select>
                                <div class="box-select">
                                    <span class="overlay"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="row g-0 mt-0">
                <div class="col-10 px-0 mt-0 row g-3">
                    <div class="col-3">
                        <label>Name</label>
                        <input id="txtName" class="full-width" type="text" />
                    </div>
                    <div class="col-3">
                        <label>@LabelHelper.GradeLabel</label>
                        <div class="block-text-name" style="width: 100% !important">
                            <select id="ddlPassageGrade" data-bind='options: PassageGrades, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select @LabelHelper.GradeLabel", value: PassageGradeId' style="width: 100%"></select>
                            <div class="box-select">
                                <span class="overlay"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-3">
                        <label>@LocalizeHelper.Localized("Subject")</label>
                        <div class="block-text-name" style="width: 100% !important">
                            <select id="ddlPassageSubject" data-bind='options: PassageSubjects, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Passage @LocalizeHelper.LocalizedWithoutComment("Subject")", value: PassageSubjectText' style="width: 100%"></select>
                            <div class="box-select">
                                <span class="overlay"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row g-0 mt-0">
                <div class="col-10 px-0 mt-1 row g-3">
                    <div class="col-3">
                        <label>Passage Number</label>
                        <div class="block-text-name" style="width: 100% !important">
                            <select id="ddlPassageNumber" data-bind='options: PassageNumbers, optionsText: "Text", optionsValue: "Text", optionsCaption: "Select Passage Number", value: PassageNumberId'>
                            </select>
                            <div class="box-select">
                                <span class="overlay"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-3">
                        <label>Text Type</label>
                        <div class="block-text-name" style="width: 100% !important">
                            <select id="ddlTextType" data-bind='options: TextTypes, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Text Type", value: TextTypeId'></select>
                            <div class="box-select">
                                <span class="overlay"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-3">
                        <label>Text Sub Type</label>
                        <div class="block-text-name" style="width: 100% !important">
                            <select id="ddlTextSubType" data-bind='options: TextSubTypes, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Text Sub Type", value: TextSubTypeId'></select>
                            <div class="box-select">
                                <span class="overlay"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-3">
                        <label>Flesch Kincaid</label>
                        <div class="block-text-name" style="width: 100% !important">
                            <select id="ddlFleschKincaidIds" data-bind='options: FleschKincaidIds, optionsText: "Text", optionsValue: "Value", optionsCaption: "Select Flesch Kincaid", value: FleschKincaidId'></select>
                            <div class="box-select">
                                <span class="overlay"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-2 align-self-end ms-3">
                    <div class="d-flex flex-row justify-content-end">
                        <button id="btnClearFilterPassage" class="btn-text px-0" type="button">
                            Reset
                            <i class="fa-solid fa-arrow-rotate-right ms-1"></i>
                        </button>
                        <button data-bind="enable: ('@ViewBag.IsPublisher' === 'False' || ('@ViewBag.IsPublisher' === 'True' && PassageDistrictId))" id="setFilterPassage" class="btn-red m-0" type="submit" style="margin: 0; padding-left: 0 !important; padding-right: 0 !important">Apply</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form mt-4" id="divPassageListDataTable">
    <div class="d-flex flex-row justify-content-between">
        <h2 class="p-header mt-2">Passage/Reference List</h2>
        <button type="button" class="btn-text btn-plus-icon" style="margin-bottom: auto" id="hrefAddNewPassage" onclick="showPassageCreatePopup()">
            Add New Passage
        </button>
    </div>

    <div class="">
        <table id="passageListDataTable" class="datatable table no-margin" width="100%">
            <thead>
                <tr>
                    <th scope="col" class="black-cell">Actions</th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        Name
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        Passage Number
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        @LabelHelper.GradeLabel
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        @LocalizeHelper.Localized("Subject")
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        Text Type
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        Text Sub Type
                    </th>
                    <th scope="col">
                        <span class="column-sort">
                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                        </span>
                        Flesch Kincaid
                    </th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<div class="modal-component-footer" id="custom-footer" style="margin: 0 -24px -24px -24px">
    <div slot="footer">
        <button id="btnCloseUserClick" type="button" class="btn-red classProgramButton" data-dialog="close">Close</button>
    </div>
</div>
<input type="hidden" id="QtiItemAssignedQTIRefObjectIDString" />
<script src=@Url.Content("~/Scripts/select2.full.min.js")></script>
<script type="text/javascript">
    function KeyValuePair(data) {
        var self = this;
        self.Text = ko.observable(data.Name);
        self.Value = ko.observable(data.Id);
    }

    var vmPassage;
    var oTable;
    var viewModelPassage = function () {
        var self = this;

        //Grade
        self.PassageGradeId = ko.observable('');
        self.PassageGrades = ko.observableArray([]);

        //Subject
        self.PassageSubjectText = ko.observable('');
        self.PassageSubjects = ko.observableArray([]);

        //TextType
        self.TextTypeId = ko.observable('');
        self.TextTypes = ko.observableArray([]);

        //TextSubType
        self.TextSubTypeId = ko.observable('');
        self.TextSubTypes = ko.observableArray([]);

        //FleschKincaid
        self.FleschKincaidId = ko.observable('');
        self.FleschKincaidIds = ko.observableArray([]);

        // Passage
        self.PassageNumberId = ko.observable('');
        self.PassageNumbers = ko.observableArray([]);

        // District
        self.PassageDistrictId = ko.observable('');
        self.PassageDistricts = ko.observableArray([]);

        self.DisplayFilter = ko.computed(function () {
            self.PassageGrades([]);
            self.PassageSubjects([]);
            self.PassageNumbers([]);
            self.TextTypes([]);
            self.TextSubTypes([]);
            self.FleschKincaidIds([]);
            var districtId = '';
            if ('@ViewBag.IsPublisher' === 'True') {
                districtId = self.PassageDistrictId();
            } else {
                districtId = getDistrictIdFromURL();
            }
            $.ajax({
                url: '@Url.Action("GetFilterByCurrentUser", "PassageEditor")',
                type: 'get',
                cache: false,
                data: {
                    districtId
                }
            }).done(function (data) {
                var grades = $.map(data.Grades, function (item) {
                    return new KeyValuePair(item);
                });
                self.PassageGrades(grades);

                var subjects = $.map(data.Subjects, function (item) {
                    return new KeyValuePair(item);
                });
                self.PassageSubjects(subjects);

                var textTypes = $.map(data.TextTypes, function (item) {
                    return new KeyValuePair(item);
                });
                self.TextTypes(textTypes);

                var textSubTypes = $.map(data.TextSubTypes, function (item) {
                    return new KeyValuePair(item);
                });
                self.TextSubTypes(textSubTypes);

                var fleschKincaids = $.map(data.FleschKincaids, function (item) {
                    return new KeyValuePair(item);
                });
                self.FleschKincaidIds(fleschKincaids);

                var passageNumbers = $.map(data.PassageNumbers, function (item) {
                    return new KeyValuePair(item);
                });
                self.PassageNumbers(passageNumbers);
            });
        });

        //State
        if ('@ViewBag.IsPublisher' === 'True') {
            self.PassageStateId = ko.observable('');
            self.PassageStates = ko.observableArray([]);
            self.DisplayPassageState = ko.computed(function() {
                var url = '@Url.Action("GetStates", "PopulateStateDistrict")';
                $.ajax({
                    url: url,
                    type: 'get',
                    cache: false,
                    data: {}
                }).done(function(data) {
                    var mappedObjects = $.map(data, function(item) {
                        return new KeyValuePair(item);
                    });
                    self.PassageStates(mappedObjects);
                });
            });

            // District
            self.DisplayPassageDistrict = ko.computed(function() {
                self.PassageDistricts([]);
                if (self.PassageStateId() != undefined && self.PassageStateId() != '') {
                    var url = '@Url.Action("GetDistricts", "PopulateStateDistrict")';
                    $.ajax({
                        url: url,
                        type: 'get',
                        cache: false,
                        data: { stateId: self.PassageStateId() },
                    }).done(function (data) {
                        var mappedObjects = $.map(data, function (item) {
                            return new KeyValuePair(item);
                        });
                        self.PassageDistricts(mappedObjects);
                        if(self.PassageDistricts().length == 1){
                            self.PassageDistrictId(self.PassageDistricts()[0].Value());
                        }
                    });
                }
            });
        }
    };

    $(function () {
        vmPassage = new viewModelPassage();
        ko.cleanNode(document.getElementById("divPassageFilter"));
        ko.applyBindings(vmPassage, document.getElementById("divPassageFilter"));

        bindEvents();

        $.get('@Url.Action("GetMutualAssignedPassageIdString", "Passage")/?qtiItemIdString=@ViewBag.QtiItemIdString', function (data) {
            if (data.QtiItemAssignedPassageIdString.length > 0) {
                $("#QtiItemAssignedQTIRefObjectIDString").val(data.QtiItemAssignedPassageIdString);
            }

            $('#ddlPassageGrade').marquee();
            $('#ddlPassageSubject').marquee();
            $('#ddlTextSubType').marquee();
            $('#ddlState').marquee();
            $('#ddlDistrict').marquee();
            $('#ddlPassageNumber').marquee();
            $('#ddlTextType').marquee();
            $('#ddlFleschKincaidIds').marquee();

            LoadPassageDataTable();
            initializeDataTable($("#passageListDataTable"));
        });

        $("#setFilterPassage").on('click', function () {
            $("#passageListDataTable").dataTable().fnReloadAjax(getAjaxSource());
        });

        $("#btnClearFilterPassage").click(function () {
            $('#txtName').val('');
            $("select").prop('selectedIndex', 0);
            $('#ddlPassageGrade').marquee();
            $('#ddlPassageSubject').marquee();
            $('#ddlTextSubType').marquee();
            $('#ddlState').marquee();
            $('#ddlDistrict').marquee();
            $('#ddlPassageNumber').marquee();
            $('#ddlTextType').marquee();
            $('#ddlFleschKincaidIds').marquee();
            if (!oTable) return;
            $(oTable.fnSettings().aoData).each(function () {
                    $(this.nTr).removeClass('row_selected');
            });

        });
    });

    function bindEvents() {
        $('button[data-dialog="close"]').die('click');
        $(document).on('click', 'button[data-dialog="close"]', function (e) {

            var self = $(e.target);
            self.closest('.dialog').dialog('close');

        });

    }
    function LoadPassageDataTable() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            //bStateSave: false,
            sAjaxSource: getAjaxSource(),
            cache: false,
            sServerMethod: "POST",
            fnServerParams: function (aoData) {
            },
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'PassageId', bSearchable: true, bSortable: false, sWidth: '80px' },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true, sWidth: '170px' },
                { sType: 'int', sName: 'QTIRefObjectFileRef', bSearchable: true, bSortable: true, sWidth: '100px' },
                { sType: 'integer', sName: 'GradeOrder', bSearchable: false, bSortable: true, sWidth: '80px' },
                { sType: 'string', sName: 'Subject', bSearchable: true, bSortable: true, sWidth: '110px' },
                { sType: 'string', sName: 'TextType', bSearchable: true, bSortable: true, sWidth: '115px' },
                { sType: 'string', sName: 'TextSubType', bSearchable: true, bSortable: true, sWidth: '120px' },
                { sType: 'string', sName: 'FleschKinkaidName', bSearchable: true, bSortable: true, sWidth: '110px' },
                { sType: 'string', sName: 'Grade', bSearchable: true, bSortable: false, bVisible: false, sWidth: '0px' }
            ],
            fnPreDrawCallback: function () {
                ShowBlock($('#passageListDataTable'), "Loading");
                return true;
            },
            fnRowCallback: function (nRow, aData) {
                if (aData[1] == null || aData[1] == '') {
                    $('td:eq(1)', nRow).html('[unnamed]');
                }
                $('td:eq(0)', nRow).html(setIconVisibilityPassage(aData[0]));
                $('td:eq(3)', nRow).html(aData[8]);//display @LabelHelper.GradeLabel name on grade column, gradeorder used for sorting
                $('td:eq(1)', nRow).addClass('cursor-pointer');
                $('td:eq(1)', nRow).die('click');
                $('td:eq(1)', nRow).click(function () {
                    showPassageDetailPopupOnPassageList(aData[0], '');
                });
                $('td:eq(8)', nRow).css('display', 'none');
                return nRow;
            },
            fnDrawCallback: function () {
                $('#passageListDataTable').unblock();
                $('.with-tip').tip();
                $('.column-sort .sort-up').css('height', '20px');
                $('.column-sort .sort-down').css('height', '20px');

            },
            fnInitComplete: function () {
                tranformSearchInputDataTable('passageListDataTable_filter')
            }
        };
        $("#passageListDataTable").data("options", options);
        var oTable = $("#passageListDataTable").dataTable();
    }

    function setIconVisibilityPassage(qtiRefObjectID) {
        var addDisplayed = 'inline';
        var deleteDisplayed = 'inline';
        var qTIRefObjectIdList = $("#QtiItemAssignedQTIRefObjectIDString").val();
        if (qTIRefObjectIdList == null) {
            qTIRefObjectIdList = '';
        }
        //if (qTIRefObjectIdList.indexOf(',-' + qtiRefObjectID + '-') >= 0) {
        //    deleteDisplayed = 'inline';
        //} else {
        //    addDisplayed = 'inline';//if passage has not been assigned, display green icon,else display the red icon
        //}

        var addIcon = '<span class="icon fa-solid fa-circle-plus icon-green"></span>';
        var addString = '<a href="javascript:void(0);" id="iconAdd_' + qtiRefObjectID + '" onclick="AssignPassage(this);" title="<p style=\'font-size: 12px;\'>Assign Passage</p>" qtiRefObjectID="' + qtiRefObjectID + '" class="with-tip assignMasterStandard" style="display:' + addDisplayed + '">' + addIcon +'</a>';

        var deleteIcon = '<span class="icon fa-solid fa-circle-minus icon-red"></span>';
        var deleteString = '<a href="javascript:void(0);" id="iconDelete_' + qtiRefObjectID + '" onclick="RemovePassage(this);" title="<p style=\'font-size: 12px;\'>Remove Passage</p>" operation="1" qtiRefObjectID="' + qtiRefObjectID + '" class="with-tip actionIcon removeAssignedMasterStandard" style="display:' + deleteDisplayed + '">' + deleteIcon +'</a>';

        var viewDetailIcon = '@Url.Content("~/Content/images/icons/text_snippet.svg")';
        var viewDetailString = '<a href="javascript:void(0);" id="iconViewDetail_' + qtiRefObjectID + '" onclick="ViewPassage(' + qtiRefObjectID + ');" title="<p style=\'font-size: 12px;\'>View Passage</p>" qtiRefObjectID="' + qtiRefObjectID + '" class="with-tip "><img src="' + viewDetailIcon + '" width="16" height="16"></a>';

        var editIcon = '<span class="icon fa-solid fa-pencil icon-grey"></span>';
        var editString = '<a href="javascript:void(0);" onclick="showPassageEditForm(' + qtiRefObjectID + ')" title="<p style=\'font-size: 12px;\'>Edit Passage</p>" passageId="' + qtiRefObjectID + '" class="with-tip" style="margin-top: 3px">' + editIcon +'</a>';


        return '<div class="d-flex flex-row justify-content-around align-item-center">' + addString + deleteString + '</div>'
            + '<div class="d-flex flex-row justify-content-around align-item-center mt-3">' + viewDetailString + editString + '</div>';
    }

    function getAjaxSource() {
        var params = getFilterParams();

        var endpoint = '@Url.Action("GetPassageList","PassageEditor")/?nameSearch=' + encodeURIComponent(params.nameSearch) + '&gradeId=' + params.gradeId + '&subject=' + encodeURIComponent(params.subject) + '&textTypeId=' + params.textTypeId + '&textSubTypeId=' + params.textSubTypeId + '&fleschKincaidId=' + params.fleschKincaidId + '&passageNumber=' + params.passageNumber;

        // Only filter assigned passage for virtual test
        var isVirtualTestView = $('#virtualSectionQuestion').length > 0;
        var qtiItemIdString = isVirtualTestView && !isFiltering() ? `@ViewBag.QtiItemIdString` : '';

        if ('@ViewBag.IsPublisher' === '@true') {
            var districtIdVal = $('#ddlDistrict').val();
            if (!districtIdVal && !qtiItemIdString) {
                districtIdVal = 0;
            }
            endpoint += '&districtId=' + districtIdVal;
           
        } else {
            endpoint += generateDistrictIdParamsFromURL();
        }

        return endpoint + `&qtiItemIdString=${qtiItemIdString}`;
    }

    function isFiltering()
    {
        var params = getFilterParams();

        var checkIsFilter = !(params.nameSearch == '' && params.passageNumber == '' &&
            params.gradeId == '' && params.subject == '' && params.textTypeId == '' &&
            params.textSubTypeId == '' && params.fleschKincaidId == '');

        if ('@ViewBag.IsPublisher' === '@true') {
            checkIsFilter = !(params.statedId == '' && params.districtId == '');
        }

        return checkIsFilter;
    }

    function getFilterParams()
    {
        var nameSearch = encodeURIComponent($("#txtName").val());
        var passageNumber = $("#ddlPassageNumber").val();
        var gradeId = $("#ddlPassageGrade").val();
        var subject = '';
        if ($("#ddlPassageSubject").val() &&  $("#ddlPassageSubject").val() != '') {
            subject = $("#ddlPassageSubject option:selected").text();
        }
        var textTypeId = $("#ddlTextType").val();;
        var textSubTypeId = $("#ddlTextSubType").val();
        var fleschKincaidId = $("#ddlFleschKincaidIds").val();
        var statedId = $("#ddlState").val();
        var districtId = $("#ddlDistrict").val();
        return { nameSearch, passageNumber, gradeId, subject, textTypeId, textSubTypeId, fleschKincaidId, statedId, districtId };
    }

    var isShowPassageDetailPopupOnPassageList = false;
    function showPassageDetailPopupOnPassageList(id, data) {
        if (isShowPassageDetailPopupOnPassageList)
            return;
        isShowPassageDetailPopupOnPassageList = true;

        var worker = $('<div />');
        worker
            .addClass("dialog PassageDetailPopupOnQtiItemDetailCSS")
            .attr("id", "PassageDetailDialog")
            .appendTo("body")
            .load('@Url.Action("ShowPassageDetail", "QTIItem")\?refObjectID=' + id + '&data=' + encodeURI(data), function () {
                worker.dialog({
                    title: $(this).attr("PassageDetail"),
                    open: function () {
                        $('#divPassageDetail').find('video').trigger('play');

                        //get the index of the main (filter) popup
                        var filterZindex = parseInt($('#addPassageDialog').parent().css('z-index'));
                        //set z-index for the second overlay
                        $('.ui-widget-overlay').last().css('z-index', filterZindex + 1);
                        $('.ui-widget-overlay').last().css('height', '2000px');
                        //then set the z-index for the second popup
                        $('#PassageDetailDialog').parent().css('z-index', filterZindex + 2);

                        $('#tips').html('');

                    },
                    close: function () {
                        $('.ui-widget-overlay:last').last().remove();
                        $(this).remove();
                        $('#tips').html('');
                        isShowPassageDetailPopupOnPassageList = false;
                        if (window.playsound != null) {
                            window.playsound.pause();
                        }
                    },
                    modal: false,
                    width: 780,
                    resizable: false
                });
            });
        showModalDialogBG();
    }

    $('#btnCloseUserClickPassageDetail').die('click');
    $('#btnCloseUserClickPassageDetail').live("click", function (e) {
        $('#PassageDetailDialog').parent().dialog("close");
        if (window.playsound != null) {
            window.playsound.pause();
        }
    });

    function AssignPassage(control) {
        $('#tips').empty();
        var self = $(control);
        var qtiRefObjectID = self.attr('qtiRefObjectID');
        ShowBlock($('#divPassageListDataTable'), 'Assigning');

        $.post('@Url.Action("AssignPassageForManyQtiItems", "Passage")', { qtiItemIdString: '@ViewBag.SelectedQtiItemId', qtiRefObjectID: qtiRefObjectID }, function (response) {
            $('#divPassageListDataTable').unblock();

            if (response.Success == 'Success') {
                LinkIt.success('#passageNotifications', 'Passage Assigned');
                var assignedIddList = $("#QtiItemAssignedQTIRefObjectIDString").val();
                if (assignedIddList == null) {
                    assignedIddList = '';
                }
                assignedIddList = assignedIddList + ",-" + qtiRefObjectID + "-";
                $("#QtiItemAssignedQTIRefObjectIDString").val(assignedIddList);
                $("#iconAdd_" + qtiRefObjectID).css('visibility', 'hidden');
                $("#iconDelete_" + qtiRefObjectID).css('visibility', 'visible');

            } else {
                LinkIt.error('#passageNotifications', response.errorMessage);
            }

        });
    }


    function yesDelete(qtiRefObjectID) {
        $.post('@Url.Action("RemovePassageForManyQtiItems", "Passage")', { qtiItemIdString: '@ViewBag.SelectedQtiItemId', qtiRefObjectID: qtiRefObjectID }, function (response) {
            $('#divPassageListDataTable').unblock();
            if (response.Success == 'Success') {

                LinkIt.success('#passageNotifications', 'Passage Removed');

                var assignedIddList = $("#QtiItemAssignedQTIRefObjectIDString").val();
                if (assignedIddList == null) {
                    assignedIddList = '';
                }
                assignedIddList = assignedIddList.replace(',-' + qtiRefObjectID + '-', '');
                $("#QtiItemAssignedQTIRefObjectIDString").val(assignedIddList);

                $("#iconAdd_" + qtiRefObjectID).css('visibility', 'visible');
                $("#iconDelete_" + qtiRefObjectID).css('visibility', 'hidden');
                closeDelete();
                $("#passageListDataTable").dataTable().fnReloadAjax(getAjaxSource());

            } else {
                LinkIt.error('#passageNotifications', response.errorMessage);
            }

        });
    }

    function closeDelete() {
        $('#deleteConfirmPassage').dialog("close");
    }

    function RemovePassage(control) {
        $('#tips').empty();
        var self = $(control);
        var qtiRefObjectID = self.attr('qtiRefObjectID');

        confirmMessageV2(
            {
                message: "Do you want to remove this passage?",
                cbYesBtnFuncName: 'yesDelete(' + qtiRefObjectID + ')',
                cbCancelBtnFuncName: 'closeDelete()',
                cbCloseBtnFuncName: 'closeDelete()'
            },
            {
                dialogAttr: {
                    attr: {
                        id: 'deleteConfirmPassage'
                    }
                }
            }
        )
    }



    function ViewPassage(qtiRefObjectID) {
        showPassageDetailPopupOnPassageList(qtiRefObjectID, '');
    }
</script>
<script>
    function DeletePassage(control) {
        var self = $(control);
        if (confirm('Are you sure you want to delete this passage?')) {
            ShowBlock($('#passageListDataTable'), "Loading");
            $.ajax({
                url: '@Url.Action("Delete","PassageEditor")',
                type: 'POST',
                data: { qtiRefObjectId: self.attr('passageId') },
                success: function (response) {
                    if (response.Success == true) {
                        //$('#error-messages').hide();
                        //$('#success-message').show();
                        //Reload table
                        $("#passageListDataTable").dataTable().fnReloadAjax(getAjaxSource());

                    } else {
                        alert('An error has occured. Please try again.');
                    }
                    $('#passageListDataTable').unblock();

                },
                failure: function (response) {
                    alert(response);
                }
            });
        }
    }
    function EditPassagePopup(passageId) {
        var qtiItemGroupId = $('#hdQTIItemGroupID').val();
        var worker = $('<div />');
        worker
            .addClass("dialog PassagePopUpDialogCSS")
            .attr("id", "editPassageDialog")
            .appendTo("body")
            .load('@Url.Action("LoadEditPassageForm","PassageEditor")?id=' + passageId + '&firstTime=true&from=fromItemSetEditor' + '&qtiItemGroupId=' + qtiItemGroupId, function () {
                worker.dialog({
                    open: function () {
                        //get the index of the main (filter) popup
                        var filterZindex = parseInt($('#addPassageDialog').parent().css('z-index'));

                        //set z-index for the second overlay
                        $('.ui-widget-overlay').last().css('z-index', filterZindex + 1);
                        $('.ui-widget-overlay').last().css('height', '2000px');
                        //then set the z-index for the second popup
                        $('#editPassageDialog').parent().css('z-index', filterZindex + 2);

                        $('#tips').html('');
                        $('.ui-widget-header').css('top', '70px');
                        $('h1').css('line-height', '19.8px');
                        $('.cke_editor_passageContent_dialog').remove();//clear dialog of image upload ,video upload
                    },
                    title: $(this).attr("Standard"),
                    close: function () {

                        $('.ui-widget-overlay').last().remove();//will be remove when table display completelly
                        $(this).remove();
                        $('#tips').html('');
                    },
                    modal: false,
                    width: 984,
                    resizable: false
                });
            });
        showModalDialogBG();

    }

    $("#txtPassageNumber").keydown(function (e) {
        numberTextBox_Keydown(e);
    });
</script>
