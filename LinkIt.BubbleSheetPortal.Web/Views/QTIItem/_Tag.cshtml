<style type="text/css">
     .ui-widget-header {
         top: 70px;
         right:0px !important
     }
 </style>
<article class="container_12" style="width: 100%">
    <section class="grid_12">
        <div class="block-border">
            <div class="block-content form">
                <div id="divPassageFilter" class="bubbleSheetSelector" style="margin-top:0px">
                    <h1>Add Tag</h1>
                    <p style="height: 5px">
                        <div id="divLinkitDefaultTagNotifications"></div>
                    </p>
                    <fieldset style=" margin-top: -30px;">
                        <div class="columns">
                            <div class="colx2-left">
                                <p>
                                    <input id="radioLinkitDefaultCategories" type="radio" name="QtiItemTagCategory" checked="checked" class="QtiItemTagCategory"/>
                                    <label for="radioLinkitDefaultCategories">Linkit Default Category</label>
                                    <input id="radioDistrictCategories" type="radio" name="QtiItemTagCategory" class="QtiItemTagCategory"/>
                                    <label for="radioDistrictCategories">@LabelHelper.DistrictLabel Category</label>
                                </p>
                            </div>
                            <div class="colx2-right">
                            </div>
                        </div>
                    </fieldset>
                    <!-- Render  _TagLinkitDefault.cshtml here -->
                    <div id="divLinkitDefaultTag">
                        
                    </div>
                    <div id="divDistrictTag">
                        <fieldset style="margin-bottom: 0px">
                            <div class="columns" id="divDistrictFilter">
                                @if (ViewBag.IsPublisher || (ViewBag.IsNetworkAdmin != null && ViewBag.IsNetworkAdmin))
                                {
                                    <div class="colx2-left">
                                        <p>
                                            <label>State</label>
                                            <select id="selectState"  style="min-width: 350px; max-width: 350px"></select>
                                        </p>
                                        <p>
                                            <label>Category</label>
                                            <select id="selectCategory" style="min-width: 350px; max-width: 350px"></select>
                                        </p>
                                   
                           
                                    </div>
                                    <div class="colx2-right">
                                        <p>
                                            <label>@LabelHelper.DistrictLabel</label>
                                            <select id="selectDistrict" style="min-width: 350px; max-width: 350px" onchange="loadDistrictCategory()"></select>
                                        </p>
                                        <p>
                                            <label>Tag/Description</label>
                                            <input type="text" id="txtTextToSearch" style="min-width: 350px; max-width: 350px"/>
                                        </p>
                                    </div>
                                }
                                else
                                {
                                    <div class="colx2-left">
                                        <p>
                                            <label>Category</label>
                                            <select id="selectCategory" style="min-width: 350px; max-width: 350px"></select>
                                        </p>
                                    </div>
                                    <div class="colx2-right">
                                        <p>
                                            <label>Tag/Description</label>
                                            <input type="text" id="txtTextToSearch" style="min-width: 350px; max-width: 350px"/>
                                        </p>
                                    </div>
                                }
                            </div>
                        </fieldset>
                        <br />
                        <button id="setFilterTag" class="float-right" type="button">Apply Filters</button>
                        <button id="clearFilterTag" class="float-right grey" style="margin-right: 5px" type="button">Clear Filters</button>
                        <div class="clear"></div>
                        <div class="clear-25"></div>
                        <div style="float: left; width: 100%">
                            <div id="divTagAvailable" style="float: left; width: 48%;padding-right: 2px;">
                            </div>
                            <div id="divTagAssigned" style="float: left;width: 50%;padding-left: 2px">
                            </div>
                        </div>
                    </div>
                    <div style="clear: both"></div>
                    <div class="no-margin last-child" style="padding-left: 17px">
                        <button id="btnCloseUserClick" type="button" class="grey classProgramButton" data-dialog="close">Close</button>
                    </div>
                    
                </div>
                
            </div>

        </div>
    </section>
</article>
<input type="hidden" id="MutualTopicIdString"/>
<input type="hidden" id="MutualSkillIdString"/>
<input type="hidden" id="MutualOtherIdString"/>
<input type="hidden" id="MutualItemTagIdString"/>

<script type="text/javascript">
    $(function () {

        if($('#divLinkitDefaultTag').html().trim().length ==0)
        {
            var url = '@Url.Action("LoadTagLinkitDefaultPartialView", "QTIItem")?\qtiItemIdString=' + '@ViewBag.QtiItemIdString';
            $.ajax({
                url: url,
                cache: false
            })
                .done(function (html) {
                    $('#divLinkitDefaultTag').html(html);
                });
        }
        $('#divLinkitDefaultTag').show();
        $('#divDistrictTag').hide();
        
        //get the mutal assigned tag first
       @* $.get('@Url.Action("GetMutualAssignedLinkitDefaultTagIdString", "QTIItemTag")/?qtiItemIdString=' + '@ViewBag.QtiItemIdString', function (data) {
            $("#MutualTopicIdString").val(data.MutualTopicIdString);
            $("#MutualSkillIdString").val(data.MutualSkillIdString);
            $("#MutualOtherIdString").val(data.MutualOtherIdString);

            if ($('#radioLinkitDefaultCategories').is(':checked')) {
                LoadLinkitDefaultTag();
            }

        });*@
        
        $.get('@Url.Action("GetMutualAssignedDistrictTagIdString", "QTIItemTag")/?qtiItemIdString=' + '@ViewBag.QtiItemIdString', function (data) {

            $("#MutualItemTagIdString").val(data.MutualItemTagIdString);
            if ($('#radioDistrictCategories').is(':checked')) {
                LoadDistrictTag();

            }

        });
        
    });
    
    $('.QtiItemTagCategory').die('click');
    $('.QtiItemTagCategory').live("click", function (e) {
        if ($('#radioLinkitDefaultCategories').is(':checked')) {
            LoadLinkitDefaultTag();
        }
        if ($('#radioDistrictCategories').is(':checked')) {
            LoadDistrictTag();
        }
    });
    
    $('#setFilterTag').die('click');
    $('#setFilterTag').live("click", function (e) {
        if ($('#radioLinkitDefaultCategories').is(':checked')) {
            encryptedByteStringSearchText = '';
            var tag = $('#txtTag').val();
            tag = tag.trim();
            $.get('@Url.Action("EncryptByteString","QTIItemTag")', { str: encodeURIComponent(tag) }, function(response) {
                encryptedByteStringSearchText = response.EncryptString;
                ReloadLinkitDefaultTagAvailable(); //defined in _ListLinkitDefaultTagAvailable
            });

        }
        if ($('#radioDistrictCategories').is(':checked')) {
            ReloadDistrictTagAvailable();//defined in _ListDistrictTagAvailable
        }
    });
    
    $('#clearFilterTag').die('click');
    $('#clearFilterTag').live("click", function (e) {
        if ($('#radioLinkitDefaultCategories').is(':checked')) {
        }
        if ($('#radioDistrictCategories').is(':checked')) {
            @if (ViewBag.IsPublisher)
            {
                 <text>
                    $('#selectDistrict').val(0);
                </text>
            }
            $('#selectCategory').val(0);
            //$('#txtTextToSearch').val('');
        }
    });

    $("#selectState").die("change");
    $('#selectState').change(function() {
        if ($('#selectState').val() != 'select') {
            $('#selectDistrict').empty();
            $('#selectCategory').empty();
            var stateValue = $('#selectState').val();
            if (stateValue != '-1') {
                if ('@ViewBag.IsNetworkAdmin' == 'True') {
                    $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItems($('#selectDistrict'), districts);
                    });
                } else {
                        $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                            addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                            addSelectListItems($('#selectDistrict'), districts);
                        if (selectDistrictId_dt != null && selectDistrictId_dt > 0)
                        {
                            $('#selectDistrict').val(selectDistrictId_dt);
                            $('#selectDistrict').trigger('change');
                        }
                    });
                }
            }
        }
    });
    
    $('#selectCategory').die('change');
    $('#selectCategory').change(function() {
        $('#setFilterTag').attr('disabled', 'disabled');
        var category = $('#selectCategory').val();
        if (category != null && category != '' && category != 'select') {
            $('#setFilterTag').removeAttr('disabled');
        }
        
    });
    function loadDistrictCategory() {
        $('#selectCategory').empty();
        var districtId = $('#selectDistrict').val();
        if (districtId == 'select' || districtId=='undefined') {
            districtId = 0;
        }

        var dropdownSelector = '#selectCategory';
        $.ajax({
            url: '@Url.Action("GetAllDistrictCategory", "ItemTag")?\districtId=' + districtId,
             dataType: 'json',
             async: false,
             success: function (data) {
                 addDefaultOption($(dropdownSelector), "Category");
                 addSelectListWithDefaultValue($(dropdownSelector), data, 0);
                 if (selectCategoryId_dt != null && selectCategoryId_dt > 0) {
                     $('#selectCategory').val(selectCategoryId_dt);
                     if (textToSearch_dt != null && textToSearch_dt.length > 0) {
                         $('#txtTextToSearch').val(textToSearch_dt);
                     }
                     $('#selectCategory').trigger('change');
                     
                     $('#setFilterTag').trigger('click');
                  
                 }
             },
             beforeSend: function () {
             },
             complete: function () {

             }
         });
    }
    function LoadLinkitDefaultTag() {
        $('#divLinkitDefaultTag').show();
        $('#divDistrictTag').hide();
        $('#setFilterTag').removeAttr('disabled');
        


        @*var url = '@Url.Action("LoadListLinkitDefaultTagAvailablePartialView", "QTIItem")?\qtiItemIdString=' + '@ViewBag.QtiItemIdString';
        $.ajax({
            url: url,
            cache: false
        })
            .done(function (html) {
                $('#divTagAvailable').html(html);
            });

        //load assigned tags
        var url = '@Url.Action("LoadListLinkitDefaultTagAssignedPartialView", "QTIItem")?\qtiItemIdString=' + '@ViewBag.QtiItemIdString';
        $.ajax({
            url: url,
            cache: false
        })
            .done(function(html) {
                $('#divTagAssigned').html(html);
            });*@

    }
    
    function LoadDistrictTag() {
        var url = '@Url.Action("LoadListDistrictTagAvailablePartialView", "QTIItem")?\qtiItemIdString=' + '@ViewBag.QtiItemIdString';
        $.ajax({
            url: url,
            cache: false,
            async:  false, // Make sure that these content is loaded before other functions are called
        })
            .done(function (html) {
                $('#divTagAvailable').html(html);
            });

        //load assigned tags
        url = '@Url.Action("LoadListDistrictTagAssignedPartialView","QTIItem")?\qtiItemIdString=' + '@ViewBag.QtiItemIdString';
        $.ajax({
            url: url,
            cache: false,
            async: false, // Make sure that these content is loaded before other functions are called
        })
            .done(function (html) {
                $('#divTagAssigned').html(html);
            });

        $('#divLinkitDefaultTag').hide();
        $('#divDistrictTag').show();
        $('#setFilterTag').attr('disabled', 'disabled');
        @if (ViewBag.IsPublisher)
        {
            <text>
            //load state for publisher
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                AddSelectListItems($('#selectState'), states, 'Select State');
                if (selectStateId_dt != null && selectStateId_dt > 0) {
                    $('#selectState').val(selectStateId_dt);
                    $('#selectState').trigger('change');
                }
            });
            </text>
        }
        else if (ViewBag.IsNetworkAdmin)
        {
            <text>
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                AddSelectListItems($('#selectState'), states, 'Select State');
                $('#selectState').val(@ViewBag.StateId);
                $('#selectState').trigger('change');
            });

            </text>
        }
        else
        {
             <text>
            loadDistrictCategory();
            </text>
        }
        
        
    }
</script>
<script type="text/javascript">

    function AddSelectListItems(selectList, results, defaultValue) {
        if (results.length == 0) {
            return;
        }
        selectList.append($("<option></option>").attr("value", "-1").text(defaultValue));
        $.each(results, function (i, value) {
            selectList
                .append($("<option></option>")
                    .attr("value", value.Id)
                    .text(value.Name));
        });

    }

</script>   
