@model LinkIt.BubbleSheetPortal.Web.ViewModels.SATReport.SATReportMasterViewModel
@using System.Drawing
@using DevExpress.Web.Mvc.UI
@using DevExpress.XtraCharts
<style>
    .blockTable {
        padding: 20px 0px;
    }

    .blockTable .leftCol {
        float: left;
        width: 400px;
        padding-right: 50px;
    }

    .blockTable .rightCol {
        float: left;
        width: 400px;
    }

    .summary_table {
        border-collapse: collapse;
    }

    .summary_table td, .summary_table th {
        border: 1px solid black !important;
    }
</style>
@{
    var model = Model.SATSummaryScoreViewModel;
}
<div class="blockTable">
    <div class="leftCol">
        <div class="boxtitle">
            Score summary
        </div>
        <table class="datatable table summary_table" style="width: 420px">
            <thead>
                <tr>
                    <th class="utility"></th>
                    <th class="utility">Baseline</th>
                    <th class="utility">Current</th>
                    <th class="utility">Best</th>
                    <th class="utility">Improvement</th>
                </tr>
            </thead>
            <tbody>
                @if (model.SummaryScores != null)
                {
                    for (int i = 0; i < model.SummaryScores.Count; i++)
                    {
                        var item = model.SummaryScores[i];
                        string style = "";
                        style = "font-weight:bold; font-style:italic;";
                        var subjectName = item.Subject == "Composite" ? "Total" : item.Subject;
                        <tr>
                            <td class="utility" style="@style">@subjectName</td>
                            <td class="utility" style="text-align: right;">@item.BaselineString</td>
                            <td class="utility" style="text-align: right;">@item.CurrentString</td>
                            <td class="utility" style="text-align: right;">@item.BestString</td>
                            <td class="utility" style="text-align: right;">@item.ImprovementString</td>
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>
    <div class="rightCol">
        @if (model.ShowChart)
        {
            //var min = (double)model.CompositeScores.Select(x => x.Score).Min(x => x);
            //var max = (double)model.CompositeScores.Select(x => x.Score).Max(x => x);
            //var gridSpacing = Convert.ToDouble(Math.Round((max - min)/10));
            //if (gridSpacing == 0)
            //{
            //    gridSpacing = Math.Round(max / 10) == 0 ? 10 : Convert.ToDouble((Math.Round(max / 10)));
            //}
            var sectionName = model.SummaryScores[0].Subject;
            if (sectionName == "Composite")
            {
                sectionName = "Total";
            }
            @Html.DevExpress().Chart(settings =>
                                             {
                                                 settings.Name = sectionName + DateTime.Now.Ticks.ToString();
                                                 settings.Titles.Add(new ChartTitle()
                                                                         {
                                                                             Font = new Font("Tahoma", 16),
                                                                             Text = sectionName
                                                                         });
                                                 settings.Width = 400;
                                                 settings.Height = 320;
                                                 settings.Legend.Visible = false;

                                                 var series = new Series("Score",
                                                                         DevExpress.XtraCharts.ViewType.Line);
                                                 series.ArgumentDataMember = "DateString";
                                                 series.ValueDataMembers[0] = "Score";
                                                 ((LineSeriesView)series.View).LineStyle.DashStyle = DashStyle.Dash;
                                                 settings.Series.Add(series);
                                                 var diagram = (XYDiagram)settings.Diagram;
                                                 diagram.AxisY.Title.Text = "";
                                                 diagram.AxisY.Title.Visible = true;
                                                 //diagram.AxisY.WholeRange.MaxValue = max;
                                                 //diagram.AxisY.WholeRange.MinValue = min + gridSpacing > max ? min : min + gridSpacing;
                                                 //diagram.AxisY.NumericScaleOptions.GridSpacing = gridSpacing;
                                                 diagram.AxisY.NumericScaleOptions.AutoGrid = true;
                                                 diagram.AxisX.Label.Angle = -45;
                                                 diagram.Margins.Bottom = 60;
                                             }).Bind(model.SectionScores[0].SectionScores).GetHtml()


        }
    </div>
</div>
<div style="clear: both; height: 20px;"></div>

@for (int i = 1; i < model.SectionScores.Count; i++ )
{
    //var min = (double)model.SectionScores[i].SectionScores.Select(x => x.Score).Min(x => x);
    //var max = (double)model.SectionScores[i].SectionScores.Select(x => x.Score).Max(x => x);
    //var gridSpacing = Convert.ToDouble(Math.Round((max - min) / 10));
    //if (gridSpacing == 0)
    //{
    //    gridSpacing = Math.Round(max / 10) == 0 ? 10 : Convert.ToDouble((Math.Round(max / 10)));
    //}
    var sectionName = model.SummaryScores[i].Subject;
    if (sectionName == "Composite")
    {
        sectionName = "Total";
    }
    <div class="blockTable">
        @if (i%2 == 1)
        {
            <div class="leftCol">
                @Html.DevExpress().Chart(settings =>
                                             {
                                                 settings.Name = "english" + DateTime.Now.Ticks.ToString();
                                                 settings.Titles.Add(new ChartTitle()
                                                                         {
                                                                             Font = new Font("Tahoma", 16),
                                                                             Text = sectionName
                                                                         });
                                                 settings.Width = 400;
                                                 settings.Height = 320;
                                                 settings.Legend.Visible = false;

                                                 var series = new Series("Score",
                                                                         DevExpress.XtraCharts.ViewType.Line);
                                                 series.ArgumentDataMember = "DateString";
                                                 series.ValueDataMembers[0] = "Score";
                                                 ((LineSeriesView) series.View).LineStyle.DashStyle = DashStyle.Dash;
                                                 settings.Series.Add(series);
                                                 var diagram = (XYDiagram) settings.Diagram;
                                                 diagram.AxisY.Title.Text = "";
                                                 diagram.AxisY.Title.Visible = true;
                                                 //diagram.AxisY.WholeRange.MaxValue = max;
                                                 //diagram.AxisY.WholeRange.MinValue = min + gridSpacing > max ? min : min + gridSpacing;
                                                 //diagram.AxisY.NumericScaleOptions.GridSpacing = gridSpacing;
                                                 diagram.AxisY.NumericScaleOptions.AutoGrid = true;
                                                 diagram.AxisX.Label.Angle = -45;
                                                 diagram.Margins.Bottom = 60;
                                             }).Bind(model.SectionScores[i].SectionScores).GetHtml()
            </div>
        }
        
        @if (i < model.SectionScores.Count-1)
        {
            i++;
            sectionName = model.SummaryScores[i].Subject;
            if (sectionName == "Composite")
            {
                sectionName = "Total";
            }
            //min = (double)model.SectionScores[i].SectionScores.Select(x => x.Score).Min(x => x);
            //max = (double)model.SectionScores[i].SectionScores.Select(x => x.Score).Max(x => x);
            //gridSpacing = Convert.ToDouble(Math.Round((max - min) / 10));
            //if (gridSpacing == 0)
            //{
            //    gridSpacing = Math.Round(max / 10) == 0 ? 10 : Convert.ToDouble(max / 10);
            //}
            <div class="rightCol">
                @Html.DevExpress().Chart(settings =>
                                             {
                                                 settings.Name = "math" + DateTime.Now.Ticks.ToString();
                                                 settings.Titles.Add(new ChartTitle()
                                                                         {
                                                                             Font = new Font("Tahoma", 16),
                                                                             Text = sectionName
                                                                         });
                                                 settings.Width = 400;
                                                 settings.Height = 320;
                                                 settings.Legend.Visible = false;

                                                 var series = new Series("Score",
                                                                         DevExpress.XtraCharts.ViewType.Line);
                                                 series.ArgumentDataMember = "DateString";
                                                 series.ValueDataMembers[0] = "Score";
                                                 ((LineSeriesView) series.View).LineStyle.DashStyle = DashStyle.Dash;
                                                 settings.Series.Add(series);
                                                 var diagram = (XYDiagram) settings.Diagram;
                                                 diagram.AxisY.Title.Text = "";
                                                 diagram.AxisY.Title.Visible = true;
                                                 //diagram.AxisY.WholeRange.MaxValue = max;
                                                 //diagram.AxisY.WholeRange.MinValue = min + gridSpacing > max ? min : min + gridSpacing;
                                                 //diagram.AxisY.NumericScaleOptions.GridSpacing = gridSpacing;
                                                 diagram.AxisY.NumericScaleOptions.AutoGrid = true;
                                                 diagram.AxisX.Label.Angle = -45;
                                                 diagram.Margins.Bottom = 60;
                                             }).Bind(model.SectionScores[i].SectionScores).GetHtml()
            </div>
        }                
    </div>
    <div style="clear: both; height: 20px;"></div>
}

<div class="page-breaker"></div>