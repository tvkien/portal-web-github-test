@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Common
@using LinkIt.BubbleSheetPortal.Models
@model LinkIt.BubbleSheetPortal.Web.ViewModels.HomeViewModel


@{
    var vS3URL = HelperExtensions.GetS3CSSURL();
    ViewBag.Title = "Home Page";
    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }
    }
}

@*<link href="../../Content/css/nivo-slider.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/css/v2/homePage.css" rel="stylesheet" type="text/css" />*@

@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleHomeIndexBundle()

@section jQuery {
    @BundleHelper.jQueryUpgrade()
}

<article class="container_12" id="homePageV2">
    <div v-show="appReady" id="homePageV2Layout" class="row g-4 non-slide" v-bind:class="widgetSize" style="zoom: .9">
        @if (Model.DistrictSlideList.Count > 0)
        {
            <div id="novoSliderHome" class="col-12" v-bind:class="slideSize">
                <div class="slider-wrapper theme-default w-100" style="overflow: hidden">
                    <div id="custom-slider" class="nivoSlider w-100">
                        @foreach (var districtSlide in Model.DistrictSlideList)
                        {
                            if (string.IsNullOrEmpty(districtSlide.LinkTo))
                            {
                                <img crossorigin="anonymous" src='@districtSlide.ImageName' width="100%" alt="" />
                            }
                            else
                            {
                                if (districtSlide.NewTabOpen)
                                {
                                    <a href="@districtSlide.LinkTo" target="blank"><img crossorigin="anonymous" src="@districtSlide.ImageName" width="100%" alt="" /></a>
                                }
                                else
                                {
                                    <a href="@districtSlide.LinkTo" data-col="@districtSlide.SlideOrder"><img crossorigin="anonymous" src="@districtSlide.ImageName" width="100%" alt="" /></a>
                                }

                            }
                        }
                    </div>
                </div>
            </div>
        }

        <template v-if="postList.length">
            <div v-if="pageItem" class="blog-item col-12 col-md-4" id="" v-for="(pageIndex, pageItem) in postList" :key="pageIndex">
                <home-post-component v-if="pageItem" v-bind:title="pageItem.Title" :items="pageItem.Items" />
            </div>
        </template>

    </div>
</article>

<div id="homePost" style="display: none">
    <div class="layout-post box-shadow">
        <div class="home-post-header">
            {{ title }}
        </div>
        <section class="home-post-section">
            <div class="home-post-item d-flex flex-row align-items-start justify-content-start" v-for="(index, item) in items" :key="index">
                <div v-if="item.IconType == 'Image'" class="box-image"
                     :style="{
                                        height: '55px',
                                        'min-width': '50px',
                                        'background-image': 'url(' + item.Icon + ')',

                              }">

                </div>
                <div v-if="item.IconType == 'Date'" class="pe-3">
                    <div class="announcementMonth">{{item.IconMonth}}</div>
                    <div class="mt-1 announcementDay">{{item.IconDay}}</div>
                </div>
                <div>
                    <label class="title" v-on:click="handleClickLink(item)">
                        {{ item.Title }}
                    </label>
                    <div class="description">{{ item.Description }}</div>
                </div>
            </div>
        </section>
    </div>
</div>

<script src="../../Scripts/jquery.nivo.slider.pack.js" type="text/javascript"></script>

<script type="text/javascript">
    function confirmPopupGetListJson() {
        $("#popupErrorGetListJson").dialog('close')
    }
    var customCategoryType = 'HomePage';
    var homePostComponent = Vue.component('HomePostComponent', {
        template: $("#homePost").html(),
        props: {
            title: {
                type: String,
                default: ''
            },
            items: {
                type: Array,
                default: function () {
                    return []
                }
            }
        },
        methods: {
            handleClickLink(item) {
                if (item.OpenNewTab) {
                    window.open(item.URL, '_blank')
                } else {
                    window.location.href = item.URL
                }
            }
        }
    });


    var homePageVueApp = new Vue({
        el: '#homePageV2',
        component: {
            homePostComponent
        },
        data: {
            appReady: false,
            postListReady: false,
            page: [],
            postList: [],
            settingsPage: {},
            slideSize: '',
            widgetSize: '',
            responsive: false,
            widthReponsive: 1400
        },
        created: function () {

        },
        watch: {
            postListReady: function () {
                this.handleHeightPost()
            }
        },
        ready: function () {
            this.responsive = $(window).width() < this.widthReponsive;

            if ('@Model.ShowWidgets' === '@true') {
                this.getPageDetail();
            }

            this.appReady = true;
        },
        methods: {
            getUrlConfigWithRole() {
                var nameUrlConfig = '@Model.RoleUrlConfig';

                return {
                    pods: 'portal_home_page/' + nameUrlConfig + '/',
                    settings: 'portal_home_page/' + nameUrlConfig + '/settings.json',
                }
            },
            getPageDetail: function (responsive) {
                var rootUrl = '@vS3URL';
                var sefl = this;
                var settingsPage = {};
                var urlConfig = sefl.getUrlConfigWithRole();

                this.getSettingsPage(rootUrl + urlConfig.settings).then(function (data) {
                    var defaultSettings = {
                        "Slideshow": {
                            "WidgetSize": 2
                        },
                        "PostList": {
                            "Horizontal": false,
                            "ItemNameList": []
                        }
                    }

                    settingsPage = Object.assign(defaultSettings, data);
                    sefl.checkSettingsLayout(settingsPage);
                    sefl.getPostList(settingsPage);
                })
            },
            getPostList: function (data) {
                var rootUrl = '@vS3URL';
                var sefl = this;
                var urlConfig = sefl.getUrlConfigWithRole();
                var dataReady = new Array(10).fill(false);
                var postList = new Array(10).fill(null);
                var itemNameList = data.PostList.ItemNameList;

                if (!Array.isArray(itemNameList) || itemNameList.length === 0) {
                    return;
                }

                itemNameList.map((value, index) => {
                    sefl.getDataPostList(rootUrl + urlConfig.pods + value).then(function (data) {
                        postList[index] = data;
                        dataReady[index] = true;
                        sefl.checkAllPodReady(dataReady, postList)
                    })
                })
            },
            checkSettingsLayout(settingsPage) {
                var slideSizeData = Number(settingsPage.Slideshow.WidgetSize);
                slideSizeData = 'col-lg-' + (slideSizeData * 4).toString();
                this.slideSize = slideSizeData;
                this.widgetSize = 'widget-size-' + (settingsPage.Slideshow.WidgetSize).toString();
            },
            checkAllPodReady(dataReady, postList) {
                var allReady = dataReady.every(function (item) {
                    return item
                });
                if (allReady) {
                    this.postList = postList;
                    this.postListReady = true;
                }
            },
            getDataPostList(url) {
                var sefl = this
                return new Promise(function (resolve, reject) {
                    $.ajax({
                        url,
                        type: 'GET',
                        dataType: 'json',
                        cache: false
                    }).success(function (data) {
                        var newItem = Object.assign({}, data);
                        newItem.Items = newItem.Items.map(function (el) {
                            if (el.IconType == 'Date') {
                                return sefl.transformAnnouncement(el)
                            }
                            return el
                        })
                        resolve(newItem)
                    }).fail(function () {
                        resolve(null);
                    })
                })
            },
            getSettingsPage(url) {
                var sefl = this
                return new Promise(function (resolve, reject) {
                    $.ajax({
                        url,
                        type: 'GET',
                        dataType: 'json',
                        cache: false
                    }).success(function (data) {
                        var newSettings = Object.assign({}, data);
                        resolve(newSettings)
                    }).fail(function () {
                        resolve(null);
                    })
                })
            },
            transformAnnouncement(item) {
                const time = moment(item.Icon, 'YYYYMMDD');
                return Object.assign(item, { IconMonth: time.format('MMM'), IconDay: time.date() })
            },
            handleClickLink(item) {
                if (item.OpenNewTab) {
                    window.open(item.URL, '_blank')
                } else {
                    window.location.href = item.URL
                }
            },
            handleHeightPost() {
                var slideEl = $(".slider-wrapper");
                if (slideEl.length === 0) return;
                var slideHeight = slideEl.outerHeight() || 400;

                var blogItem = $(".blog-item");

                if (blogItem.length === 0) return;
                $.each(blogItem, function (index, element) {
                    var _this = $(this);
                    var postHeaderEl = _this.find('.home-post-header');

                    if (!postHeaderEl) return;

                    var postHeaderHeight = postHeaderEl.outerHeight() || 55;

                    _this.get(0).style.setProperty("--postHeader-height", postHeaderHeight + 'px');
                })

                document.documentElement.style.setProperty('--contentPost-height', slideHeight + 'px');
            }
        }
    });
    $(function () {
        $('.home').addClass('current');
    });
    $(window).load(function () {
        @if (Model.DistrictSlideList.Count > 0) {
            <text>
                novoSliderHome();
            </text>
        }
    });

    function novoSliderHome() {
        var imgFound = 'no-slide-image-found.png';
        var imgSlideElement = $('#custom-slider > img').attr('src');
        if (imgSlideElement.indexOf(imgFound) != -1) {
            $('#novoSliderHome').remove();
        } else {
            //transforImageBase64()
            $('#custom-slider').nivoSlider({
                effect: 'fade',
                slices: 15,
                boxCols: 8,
                boxRows: 4,
                animSpeed: 500,
                pauseTime: 7000,
                startSlide: 0,
                keyboardNav: true,
                pauseOnHover: true,
                controlNav: true,
                directionNav: false,
                afterLoad: function () {
                    @if (Model.DistrictSlideList.Count < 2) {
                        <text>
                            $('.slider-wrapper').addClass('slider-wrapper-one');
                            $('#novoSliderHome').addClass('slider-home-one');
                        </text>
                    }
                    $("#custom-slider").addClass('nivoSlider-loaded');
                }
            });
            adjustNivoSliderDivSize('custom-slider');
            @if(Model.DistrictSlideList.Count > 1)
            {
                <text>
                    setTimeout(function () {
                        $('#portal-v2-containter .theme-default .nivo-controlNav a').text('');
                        $('#portal-v2-containter .theme-default .nivo-controlNav a').css('text-indent', 'unset');
                    }, 2000)
                </text>
            }
            if ($('#homePageV2Layout').hasClass('non-slide')) {
                $('#homePageV2Layout').removeClass('non-slide');
            }
        }
    }

    function blogItemNonSlice() {
        var blogItemCount = $('.blog-item');
        if (blogItemCount.length > 3) {
            if ($('#homePageV2Layout').hasClass('non-slide')) {
                $('#homePageV2Layout').removeClass('non-slide');
            }
        }
    }

    function transforImageBase64() {
        $('#custom-slider img').each(function (index, el) {
            if (el) {
                var w = $("#custom-slider").width();
                var h = $("#custom-slider").height() || 367;
                var base64 = imageToDataUri(el, w, h);
                if (base64) {
                    this.dataURL = this.src;
                    this.src = base64;
                }
            }
        })
    }

    function imageToDataUri(img, width, height) {

        var imageH = img.height;
        var imageW = img.width;

        if (imageH > height && imageW > width) return null;


        var canvas = document.createElement('canvas'),
            ctx = canvas.getContext('2d');
        canvas.width = width;
        canvas.height = height;
        ctx.drawImage(img, 0, 0, width, height);
        return canvas.toDataURL();
    }

    function adjustNivoSliderDivSize(divName) {
        var defaultWidth = '100%';//this value is gotten from the standard image of portal
        var defaultHeight = 359;
        $('#' + divName).height(defaultHeight);
        $('#' + divName).width(defaultWidth);
        var reset = false;
        $('#' + divName + ' img').each(function (index, value) {
            if (value != null) {

                var img = $(value);
                var src = img.attr('src');
                if (src != null) {
                    if (src.indexOf('no-slide-image-found.png') < 0) {
                        if (!reset) {//only the first image
                            var tmpImg = new Image();
                            tmpImg.onload = function () {
                                defaultWidth = '100%';
                                defaultHeight = this.height;
                                $('#' + divName).height(defaultHeight);
                                $('#' + divName).width(defaultWidth);
                            };
                            tmpImg.src = src;
                            tmpImg.width = '100%';
                            reset = true;
                        }
                    }
                }
            }
        });
    }




</script>
