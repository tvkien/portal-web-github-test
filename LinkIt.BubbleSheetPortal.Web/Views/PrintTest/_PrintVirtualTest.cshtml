@model LinkIt.BubbleSheetPortal.Web.ViewModels.PrintTestRequest
<div>

    <span style="color:red">
        @ViewBag.ErrorMessage
    </span>

</div>

<section class="grid_10">
    <div id="divconfigGenerateTest" class="block-border" style="z-index: 1003;">
        <div class="block-content form" style="z-index: 1003;">
            <div id="tabGenerateTest" style="width: 100%; margin-bottom: 10px;">
                <button id="btnPDFTest" type="button" style="width: 50%; float: left; margin-left: 0;"
                        onclick="ShowHideAnswerKey(false)" class="active_tab">
                    Test
                </button>
                <button id="btnPDFAnswerKey" type="button" style="width: 23%; float: left; margin-left: 0;"
                        onclick="ShowHideAnswerKey(true)" class="deactive_tab">
                    Answer Key
                </button>

            </div>
            <div class="clear"></div>
            <div id="divPDFTest" style="border-width: 1px; width: 100%; margin-top: 10px;">
                <div style="border-width: 1px; margin-bottom: 5px; float: left; width: 49%;">
                    <fieldset class="grey-bg">
                        <legend>Columns</legend>
                        <div class="columns">
                            <div class="colx2-left-popup">
                                <p>
                                    <label>
                                        <input id="idSingleColumn" name="Column" type="radio" />
                                        Single Column
                                    </label>

                                </p>
                            </div>
                            <div class="colx2-right-popup">
                                <p>
                                    <label>
                                        <input id="idTowColumns" name="Column" type="radio" checked="checked" />
                                        Two Columns
                                    </label>
                                </p>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg">
                        <div class="columns">
                            <div class="colx2-left-popup">
                                <p>
                                    Options
                                </p>
                            </div>
                            <div class="colx2-right-popup">
                                <p>
                                    <label>
                                        <input type="checkbox" id="idIncludeCoverPage" checked="checked" />
                                        Include Cover Page
                                    </label>

                                </p>
                                <p>
                                    <label>
                                        <input type="checkbox" id="idShowSelectionHeading" />
                                        Show Section headings
                                    </label>

                                </p>
                                <p>
                                    <label>
                                        <input type="checkbox" id="idShowBorderAroundQuestion" checked="checked" />
                                        Show Border Around  Questions
                                    </label>
                                </p>
                                <p>
                                    <label>
                                        <input type="checkbox" id="idShadeReference" checked="checked" />
                                        Shade reference Background
                                    </label>
                                </p>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset id="fsTestInfo" class="grey-bg">
                        <div class="columns">
                            <div>
                                <div class="colx2-left-popup popupLineheight print_left">Test Title</div>
                                <div class="colx2-right-popup">
                                    @Html.TextBoxFor(o => o.TestTitle)
                                    @Html.HiddenFor(o => o.VirtualTestID)
                                </div>
                            </div>
                            <div class="clear clear-10"></div>
                            <div>
                                <div class="colx2-left-popup popupLineheight print_left">Test Instructions</div>
                                <div class="colx2-right-popup">
                                    @Html.TextArea("PrintTestInstructions", Model.TestInstructions, new { id = "PrintTestInstructions", cols = 40, rows = 10 })
                                </div>
                            </div>
                            <div class="clear clear-10"></div>
                            <div>
                                <div class="colx2-left-popup popupLineheight print_left">Teacher's Name</div>
                                <div class="colx2-right-popup">
                                    <input id="idTeacherName" type="text" />
                                </div>
                            </div>
                            <div class="clear clear-10"></div>
                            <div>
                                <div class="colx2-left-popup popupLineheight print_left">Class Name</div>
                                <div class="colx2-right-popup">
                                    <input id="idClassName" type="text" />
                                </div>
                            </div>
                            <div class="clear clear-10"></div>
                        </div>
                    </fieldset>

                </div>
                <div style="border-width: 1px; float: right; width: 49%">
                    <fieldset class="grey-bg">
                        <legend>Question Prefix: </legend>
                        <div class="columns">
                            <div class="colx2-left-popup">
                                <p>
                                    <input id="idQuestionPrefix" type="text" value="Question" />
                                </p>
                            </div>
                            <div class="colx2-right-popup popupLineheight">
                                <p>
                                    <span id="idSpanPrefix">Question #</span>
                                </p>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg">
                        <div class="columns">
                            <div class="colx2-left-popup">
                                <p>
                                    Open Ended Items:
                                </p>
                            </div>
                            <div class="colx2-right-popup">

                                <p>
                                    <label>
                                        <input id="idAnswerOn" type="checkbox" />
                                        Answer on Separate Sheet
                                    </label>

                                    Number of Lines:
                                    <select id="idSelectLines">
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                        <option value="3">3</option>
                                        <option value="4">4</option>
                                        <option value="5">5</option>
                                        <option value="6">6</option>
                                        <option value="7">7</option>
                                        <option value="8">8</option>
                                        <option value="9">9</option>
                                        <option value="10">10</option>
                                        <option value="11">11</option>
                                        <option value="12">12</option>
                                    </select>
                                </p>
                                <p>
                                    <label>
                                        <input id="idShowLine" type="checkbox" />
                                        Show Line
                                    </label>

                                </p>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg">
                        <div class="columns">
                            <div class="colx2-left-popup">
                                <p>
                                    Answer Label Format:
                                </p>
                            </div>
                            <div class="colx2-right-popup">
                                <p>
                                    <label>
                                        <input type="radio" id="idUppercaseAlpha" name="AnserLable" checked="checked" />
                                        Uppercase Alpha (A,B,C,D)
                                    </label>

                                </p>
                                <p>
                                    <label>
                                        <input type="radio" id="idNumberic" name="AnserLable" />
                                        Numeric (1,2,3,4)
                                    </label>
                                </p>

                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg ">
                        <div class="columns">
                            <div class="colx2-left-popup">
                                <p>
                                    Page Numbering:
                                </p>
                            </div>
                            <div class="colx2-right-popup">
                                <p>
                                    <label>
                                        <input type="checkbox" id="idcbIncludePageNumber" checked="checked" />
                                        Include page Numbers
                                    </label>

                                </p>
                                <p>
                                    <label>
                                        <input type="checkbox" id="idStartCounting" checked="checked" />
                                        Start Counting On Cover
                                    </label>

                                </p>

                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            <div class="clear"></div>
            <div id="divPDFAnserKey" style="display: none; width: 100%; margin-top: 10px; margin-bottom: 10px;">
                <fieldset class="grey-bg">
                    <div class="columns">
                        <div class="colx2-left-popup">
                            <p>
                                Options
                            </p>
                        </div>
                        <div class="colx2-right-popup">
                            <p>
                                <label>
                                    <input type="checkbox" id="idIncludeStandards" />
                                    Include Standards
                                </label>

                            </p>
                            <p>
                                <label>
                                    <input type="checkbox" id="idIncludeTags" />
                                    Include Tags
                                </label>

                            </p>
                            <p>
                                <label>
                                    <input type="checkbox" id="idIncludeRationale" />
                                    Include Teacher Rationale
                                </label>

                            </p>
                            <p>
                                <label>
                                    <input type="checkbox" id="idIncludeGuidance" />
                                    Include Student Guidance
                                </label>
                            </p>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="clear"></div>
            <div style="float: left; margin-top: 10px;">
                @if (!string.IsNullOrEmpty(Model.RubricKey))
                {
                    <button id="btnGenericRubric" type="button" style="float: left; margin-left: 0;"
                            onclick="GenerecRubric('@Model.RubricLink');" class="active_tab">
                        Rubric
                    </button>
                    @*<a id="aGenericRubric" style="width: 23%; float: left; margin-left: 0; text-align: center;"
                        class="LinkitStypeButton big-button" href="@Model.RubricLink" >Rubric</a>*@
                }
            </div>
            <div style="float: right; margin-top: 10px;">
                <button id="btnCreatePDFGray" disabled="disabled" style="display: none;">Create PDF</button>
                <button id="btnCreatePDF" type="submit" onclick="createPDF(event)">Create PDF</button>
                <!-- function createPDF is define in parent page PrintTest/Index.cshtml to make sure only one function will be called when user click on this button (no use jquery live)-->
                <button id="btnCloseCreatePDF" type="submit">Close</button>
                <input type="hidden" id="hdfPDFType" value="test" />
                @Html.Hidden("hdfPrintAnswerKeyURL", Model.PrintAnswerKeyURL)
                @Html.Hidden("hdfPrintTestURL", Model.PrintTestURL)
                @Html.Hidden("hdfIsLockedbank", Model.IsLockbank)

                @Html.Hidden("hdfCanPrintQuestion", Model.CanPrintQuestion)
                @Html.Hidden("hdfCanPrintAnswerKey", Model.CanPrintAnswerKey)
            </div>
            <div class="clear"></div>
        </div>
    </div>
</section>
<div id="popupConfirm111" style="display: none;">
    <section style='z-index: 2004'>
        <div class='block-border' style='z-index: 2004'>
            <div class='block-content' style='z-index: 1004'>
                <h1>Create PDF</h1>
                <p style='z-index: 1004; text-align: center'>
                    Successfully created PDF.
                </p>
                <br />
                <p style='z-index: 2004; text-align: center'>
                    <a id='aGeneratePDFSuccess' style='z-index: 2004; text-align: center' href='#' target='_blank' class='LinkitStypeButton big-button' onclick="return CloseDownloadPopup();">OK </a>
                </p>
            </div>
        </div>
    </section>

</div>
<div id="popupConfirm1111" style="display: none;">
    <section style='z-index: 2004'>
        <div class='block-border' style='z-index: 2004'>
            <div class='block-content' style='z-index: 1004'>
                <h1>Create PDF</h1>
                <p style='z-index: 1004; text-align: center'>
                    Error happened. Please try again.
                </p>
                <br />
                <p style='z-index: 2004; text-align: center'><a id='aGeneratePDFFail' style='z-index: 2004; text-align: center' href='#' target='_blank' class='LinkitStypeButton big-button' onclick="return CloseDownloadPopupFail();">OK </a></p>
            </div>
        </div>
    </section>

</div>
<style type="text/css">
    .grid_10 {
        width: 965px !important;
        z-index: 1003 !important;
    }

    .grey-bg {
        z-index: 1003 !important;
    }

    .block-content div, .block-content p {
        z-index: 1003 !important;
    }

    .popupLineheight p {
        line-height: 3em;
    }

    #fsTestInfo .colx2-left-popup {
        width: 32% !important;
    }

    #fsTestInfo .colx2-right-popup {
        width: 68% !important;
    }
</style>

<script>

    $(function () {

        $('#idSelectLines').val(8);

        //if ($('#hdfIsLockedbank').val() == '1' || $('#hdfIsLockedbank').val() == 'True') {
        //    $('#btnPDFAnswerKey').hide();
        //} else {
        //    $('#btnPDFAnswerKey').show();
        //}
        if ($('#hdfCanPrintQuestion').val() == '1' || $('#hdfCanPrintQuestion').val() == 'True') {
            $('#btnPDFTest').show();
        } else {
            $('#btnPDFTest').hide();
        }

        if ($('#hdfCanPrintAnswerKey').val() == '1' || $('#hdfCanPrintAnswerKey').val() == 'True') {
            $('#btnPDFAnswerKey').show();
        } else {
            $('#btnPDFAnswerKey').hide();
        }

        //Use JS adjust width of tab
        var bntTab = $("#tabGenerateTest button"),
            totalButton = 0;
        bntTab.each(function () {
            if ($(this).css("display") != "none") {
                totalButton += 1;
            }
        });
        if (totalButton != 0) {
            widthBnt = 100 / totalButton;
            bntTab.css({ "width": widthBnt + "%" });
        }

        if ('@ViewBag.HasRightToAccess' == 'False') {
            alert('Has no right to access.');
            $('#btnPDFAnswerKey').hide();
            $('#btnCreatePDF').hide();
        }

        if ('@ViewBag.HasRightToAccess' == 'False') {
            CustomAlert('Has no right to access.');
            $('#btnPDFAnswerKey').hide();
            $('#btnCreatePDF').hide();
        }
    });

    $("#btnCloseCreatePDF").live("click", function (e) {
        e.preventDefault();
        $(".dialog").dialog("close");
    });

    $('#idQuestionPrefix').keyup(function () {
        var v = "'" + $(this).val() + " #.'";
        $('#idSpanPrefix').html(v);
    });

    $('#idAnswerOn').change(function () {
        if ($('#idAnswerOn:checked').val() == 'on') {
            $('#idSelectLines').prop('disabled', true);
            $('#idShowLine').prop('disabled', true);
        } else {
            $('#idSelectLines').prop('disabled', false);
            $('#idShowLine').prop('disabled', false);
        }
    });

    function ShowHideAnswerKey(isAnswerKey) {

        if (isAnswerKey) {
            $('#divPDFTest').hide();
            $('#divPDFAnserKey').show();
            $('#hdfPDFType').val('anwserkey');

            $('#btnPDFTest').removeAttr("class");
            $('#btnPDFAnswerKey').removeAttr("class");

            $('#btnPDFAnswerKey').addClass("active_tab");
            $('#btnPDFTest').addClass("deactive_tab");
            if ($('#hdfIsLockedbank').val() == '1' || $('#hdfIsLockedbank').val() == 'True') {
                $('#btnCreatePDF').hide();
                $('#btnCreatePDFGray').show();
            } else {
                $('#btnCreatePDF').show();
                $('#btnCreatePDFGray').hide();
            }
        } else {
            $('#divPDFTest').show();
            $('#divPDFAnserKey').hide();
            $('#hdfPDFType').val('test');

            $('#btnPDFTest').removeAttr("class");
            $('#btnPDFAnswerKey').removeAttr("class");

            $('#btnPDFTest').addClass("active_tab");
            $('#btnPDFAnswerKey').addClass("deactive_tab");
            //alway show Create PDF
            $('#btnCreatePDF').show();
            $('#btnCreatePDFGray').hide();
        }
    }

    function GenerecRubric(rubricLink) {
        window.location = rubricLink;
    }
</script>

<script>
    var dialog;
    function createPDF(e) {
        e.preventDefault();

        ShowBlock($('#divconfigGenerateTest'), "Creating PDF");
        //alert("Call Print Test Function! " );
        var vColumns = 'single';
        if ($('#idTowColumns:checked').val() == 'on') {
            vColumns = 'double';
        }
        var vIncludePageNumbers = 0;
        if ($('#idcbIncludePageNumber:checked').val() == 'on') {
            vIncludePageNumbers = 1;
        }
        var vStartCountingOnCover = 0;
        if ($('#idStartCounting:checked').val() == 'on') {
            vStartCountingOnCover = 1;
        }
        var vIncludeCoverPage = 0;
        if ($('#idIncludeCoverPage:checked').val() == 'on') {
            vIncludeCoverPage = 1;
        }

        var vShowSectionHeadings = 0;
        if ($('#idShowSelectionHeading:checked').val() == 'on') {
            vShowSectionHeadings = 1;
        }
        var vShowQuestionBorders = 0;
        if ($('#idShowBorderAroundQuestion:checked').val() == 'on') {
            vShowQuestionBorders = 1;
        }
        var vDrawReferenceBackground = 0;
        if ($('#idShadeReference:checked').val() == 'on') {
            vDrawReferenceBackground = 1;
        }
        var vExtendedTextAreaAnswerOnSeparateSheet = 0;
        if ($('#idAnswerOn:checked').val() == 'on') {
            vExtendedTextAreaAnswerOnSeparateSheet = 1;
        }
        var vExtendedTextAreaShowLines = 0;
        if ($('#idShowLine:checked').val() == 'on') {
            vExtendedTextAreaShowLines = 1;
        }

        var vAnswerLabelFormat = 'LA';
        if ($('#idNumberic:checked').val() == 'on') {
            vAnswerLabelFormat = 'LN';
        }
        var vIncludeStandards = 0;
        if ($('#idIncludeStandards:checked').val() == 'on') {
            vIncludeStandards = 1;
        }
        var vIncludeTags = 0;
        if ($('#idIncludeTags:checked').val() == 'on') {
            vIncludeTags = 1;
        }
        var vIncludeRationale = 'False';
        if ($('#idIncludeRationale:checked').val() == 'on') {
            vIncludeRationale = 'True';
        }

        var vIncludeGuidance = 'False';
        if ($('#idIncludeGuidance:checked').val() == 'on') {
            vIncludeGuidance = 'True';
        }

        //"http://portal.linkitdev.com/Content/FlashModules/ModuleLaunch/proc/linkit.php/printVirtualTestAnswerKey";
        //"http://portal.linkitdev.com/Content/FlashModules/ModuleLaunch/proc/linkit.php/printVirtualTest";
        var vURLPrintTest = '@Url.Action("PrintVirtualTestAnswerKey", "PrintTest")';//$('#hdfPrintAnswerKeyURL').val();
        var vPrintType = $('#hdfPDFType').val();
        if (vPrintType == 'test') {
            vURLPrintTest = '@Url.Action("PrintVirtualTest", "PrintTest")'; //$('#hdfPrintTestURL').val();
        }

        var testDataPost =
        {
            StartCountingOnCover: vStartCountingOnCover,
            TestTitle: $('#TestTitle').val(),
            TeacherName: $('#idTeacherName').val(),
            IncludePageNumbers: vIncludePageNumbers,
            IncludeCoverPage: vIncludeCoverPage,
            Columns: vColumns,
            AnswerLabelFormat: vAnswerLabelFormat,
            IncludeStandards: vIncludeStandards,
            ShowQuestionBorders: vShowQuestionBorders,
            TestInstructions: CKEDITOR.instances["PrintTestInstructions"].getData(),
            ExtendedTextAreaShowLines: vExtendedTextAreaShowLines,
            IncludeTags: vIncludeTags,
            IncludeRationale: vIncludeRationale,
            IncludeGuidance: vIncludeGuidance,
            VirtualTestID: $('#VirtualTestID').val(),
            Instruction: '',
            ClassName: $('#idClassName').val(),
            DrawReferenceBackground: vDrawReferenceBackground,
            ExtendedTextAreaAnswerOnSeparateSheet: vExtendedTextAreaAnswerOnSeparateSheet,
            ShowSectionHeadings: vShowSectionHeadings,
            PrintingType: 1,
            QuestionPrefix: $('#idQuestionPrefix').val(),
            ExtendedTextAreaNumberOfLines: $('#idSelectLines').val()
        };

        PrintVirtualTest(vURLPrintTest, testDataPost);
    }

    function PrintVirtualTest(url, options) {
        $.ajax({
            type: 'POST',
            url: url,
            data: options,
            success: function (response) {
                if (response.Success != undefined && response.Success == false) {
                    dialog = $("#popupConfirm1111")
                   .dialog({
                       title: $(this).attr("data-dialog-title"),
                       close: function () {
                       },
                       modal: true,
                       width: 330,
                       resizable: false
                   })
                   .load(this.href, function () {
                   });
                }
                else {
                    var pdfUrl = response;

                    $("#aGeneratePDFSuccess").attr('pdfUrl', pdfUrl);

                    dialog = $("#popupConfirm111")
                        .dialog({
                            title: $(this).attr("data-dialog-title"),
                            close: function () {
                            },
                            modal: true,
                            width: 330,
                            resizable: false
                        })
                        .load(this.href, function () {
                        });
                }

                $('#divconfigGenerateTest').unblock();
            },
            error: function () {
                $('#divconfigGenerateTest').unblock();
                alert("Error: " + response);
            }
        });
    }

    function CloseDownloadPopup() {
        var milliseconds = new Date().getTime();
        var pdfUrl = $("#aGeneratePDFSuccess").attr('pdfUrl');
        if (pdfUrl != null && pdfUrl != '') {
            var url = pdfUrl + '&t=' + milliseconds;
            window.open(url);
        }

        $("#popupConfirm111").dialog("close");
        return false;
    }

    function CloseDownloadPopupFail() { 
        $("#popupConfirm1111").dialog("close");
        return false;
    }

</script>
<script type="text/javascript">
    sessionStorage.setItem('basicSciencePaletteSymbol', unescapeHtml('@ViewBag.BasicSciencePaletteSymbol'));
    $(function () {
        CKEDITOR.replace('PrintTestInstructions', {
            extraPlugins: 'mathjax,sharedspace,multiplechoice,mathfraction,indent,dialog,contextmenu,liststyle',
            qtiSchemeID: 1,
            height: 150,
            toolbar: [
                ['JustifyLeft', 'JustifyCenter', 'JustifyRight', '-', 'NumberedList'], ['Bold', 'Italic', 'Underline'], ['Sameline'], ['FontSize', 'Subscript', 'Superscript', '-', 'RemoveFormat'],
                ['Link', 'Unlink', 'Table', 'SpecialChar', 'Indent', 'Outdent', 'ImageUpload']
            ],
            extraAllowedContent: 'span[stylename]; span(smallText,normalText,largeText,veryLargeText);'
        }
        );
    });

</script>