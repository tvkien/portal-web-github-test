@model LinkIt.BubbleSheetPortal.Web.ViewModels.PrintTestRequest
<div>

    <span style="color:red">
        @ViewBag.ErrorMessage
    </span>

</div>

<div class="d-flex flex-column">
    <section class="mb-0" class="grid_10">
        <div id="divconfigGenerateTest" class="" style="z-index: 1003;">
            <div class="form" style="z-index: 1003;">
                <div class="title-heading-popup mb-4">
                    <p class="title-large mb-0">
                        Print Test
                    </p>
                    <a id="closeBtn" href="#closeBtn" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a>
                </div>
                <ul class="nav-v2 nav nav-pills mb-4" id="tabGenerateTest">
                    <li style="margin-right: 16px" class="TestTab-list-item nav-item active mr-3" onclick="ShowHideAnswerKey(false)" data-tab="tab-item-test">
                        <a href="javascript:void(0)" class="nav-link">Test</a>
                    </li>
                    <li style="margin-right: 16px" class="AnswerKeyTab-list-item nav-item p-0 mr-3" onclick="ShowHideAnswerKey(true)" data-tab="tab-item-answer-key">
                        <a href="javascript:void(0)" class="nav-link"> Answer Key</a>
                    </li>
                </ul>

                <div id="divPDFTest">
                    <fieldset class="grey-bg p-0 mt-3 mb-4" style="width: 100%">
                        <p class="title-large" style="font-size: 18px !important">Columns</p>
                        <div class="d-flex" style="gap: 16px">
                            <div>
                                <input id="idSingleColumn" name="Column" type="radio" />
                                Single Column
                            </div>
                            <div>
                                <input id="idTowColumns" name="Column" type="radio" checked="checked" />
                                Two Columns
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg p-0 mb-4">
                        <p class="title-large" style="font-size: 18px !important">
                            Options
                        </p>
                        <div class="d-flex" style="gap: 16px">
                            <div>
                                <input type="checkbox" id="idIncludeCoverPage" checked="checked" />
                                Include Cover Page
                            </div>
                            <div>
                                <input type="checkbox" id="idShowSelectionHeading" />
                                Show Section Headings
                            </div>
                            <div>
                                <input type="checkbox" id="idShowBorderAroundQuestion" checked="checked" />
                                Show Border Around Questions
                            </div>
                        </div>
                        <div class="mt-3">
                            <input type="checkbox" id="idShadeReference" checked="checked" />
                            Shade Reference Background
                        </div>
                    </fieldset>
                    <fieldset id="fsTestInfo" class="grey-bg p-0 mb-4">
                        <div>
                            <div>
                                <div class="mb-2" style="font-size: 14px !important">Test Title</div>
                                <div>
                                    @Html.TextBoxFor(o => o.TestTitle)
                                    @Html.HiddenFor(o => o.VirtualTestID)
                                </div>
                            </div>

                            <div class="mt-3">
                                <div class="mb-2" style="font-size: 14px !important">Test Instructions</div>
                                <div>
                                    @Html.TextArea("PrintTestInstructions", Model.TestInstructions, new { id = "PrintTestInstructions", cols = 40, rows = 10 })
                                </div>
                            </div>

                            <div class="mt-3">
                                <div class="mb-2" style="font-size: 14px !important">Teacher's Name</div>
                                <div>
                                    <input id="idTeacherName" type="text" />
                                </div>
                            </div>

                            <div class="mt-3">
                                <div class="mb-2" style="font-size: 14px !important">Class Name</div>
                                <div>
                                    <input id="idClassName" type="text" />
                                </div>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg p-0 mb-4">
                        <p class="title-large" style="font-size: 18px !important;">Question Prefix: </p>
                        <div style="display: flex; gap: 20px; align-items: center">
                            <input id="idQuestionPrefix" type="text" value="Question" />
                            <span id="idSpanPrefix">Question #</span>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg p-0 mb-4">
                        <div class="d-flex flex-column">
                            <p class="title-large" style="font-size: 18px !important;">
                                Open Ended Items:
                            </p>
                            <div style="display: flex; align-items: center; gap: 24px">
                                <div>
                                    <input id="idAnswerOn" type="checkbox" />
                                    Answer on Separate Sheet
                                </div>
                                <div>
                                    <input id="idShowLine" type="checkbox" />
                                    Show Line
                                </div>
                            </div>
                            <div class="d-flex flex-column" style="margin-top: 16px;">
                                <p class="mb-2" style="font-size: 14px !important">Number of Lines:</p>
                                <select class="select-dropdown" id="idSelectLines" style="width: 15%">
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>
                                    <option value="11">11</option>
                                    <option value="12">12</option>
                                </select>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg p-0 mb-4">
                        <div class="d-flex flex-column">
                            <p class="title-large" style="font-size: 18px !important;">
                                Answer Label Format:
                            </p>
                            <div style="display: flex; align-items: center; gap: 24px">
                                <div>
                                    <input type="radio" id="idUppercaseAlpha" name="AnserLable" checked="checked" />
                                    Uppercase Alpha (A,B,C,D)
                                </div>
                                <div>
                                    <input type="radio" id="idNumberic" name="AnserLable" />
                                    Numeric (1,2,3,4)
                                </div>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="grey-bg p-0">
                        <div class="d-flex flex-column">
                            <p class="title-large" style="font-size: 18px !important;">
                                Page Numbering:
                            </p>
                            <div style="display: flex; align-items: center; gap: 24px">
                                <div>
                                    <input type="checkbox" id="idcbIncludePageNumber" checked="checked" />
                                    Include Page Numbers
                                </div>
                                <div>
                                    <input type="checkbox" id="idStartCounting" checked="checked" />
                                    Start Counting On Cover
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div id="divPDFAnserKey" style="display: none; width: 100%;">
                    <fieldset class="grey-bg p-0 mt-4 d-inline">
                        <p class="title-large mb-3" style="font-size: 18px !important">
                            Options
                        </p>
                        <div class="d-flex flex-row" style="gap: 24px;">
                            <div>
                                <input type="checkbox" id="idIncludeStandards" />
                                Include Standards
                            </div>
                            <div>
                                <input type="checkbox" id="idIncludeTags" />
                                Include Tags
                            </div>
                            <div>
                                <input type="checkbox" id="idIncludeRationale" />
                                Include Teacher Rationale
                            </div>
                            <div>
                                <input type="checkbox" id="idIncludeGuidance" />
                                Include Student Guidance
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div class="mt-4">
                    @if (!string.IsNullOrEmpty(Model.RubricKey))
                    {
                        <button id="btnGenericRubric" type="button" onclick="GenerecRubric('@Model.RubricLink');" class="btn-blue">
                            Rubric
                        </button>
                    }
                </div>
            </div>
        </div>
    </section>
    <div class="btn-wrapper-print-popup">
        <button id="btnCloseCreatePDF" type="submit" class="btn-cancel">Close</button>
        <button id="btnCreatePDFGray" disabled="disabled" style="display: none;" class="btn-red">Create PDF</button>
        <button id="btnCreatePDF" type="submit" onclick="createPDF(event)" class="btn-red">Create PDF</button>
        <!-- function createPDF is define in parent page PrintTest/Index.cshtml to make sure only one function will be called when user click on this button (no use jquery live)-->
        <input type="hidden" id="hdfPDFType" value="test" />
        @Html.Hidden("hdfPrintAnswerKeyURL", Model.PrintAnswerKeyURL)
        @Html.Hidden("hdfPrintTestURL", Model.PrintTestURL)
        @Html.Hidden("hdfIsLockedbank", Model.IsLockbank)

        @Html.Hidden("hdfCanPrintQuestion", Model.CanPrintQuestion)
        @Html.Hidden("hdfCanPrintAnswerKey", Model.CanPrintAnswerKey)
    </div>
</div>
<div id="popupConfirm111" style="display: none;">
    <section class="mb-0" style='z-index: 2004'>
        <div class='block-border p-4'>
            <div style='z-index: 1004'>
                <p style='z-index: 1004; text-align: center; font-weight: 700;'>
                    Successfully created PDF.
                </p>
            </div>
        </div>
    </section>
    <div class="btn-wrapper-print-popup" style='z-index: 2004;'>
        <button id='aGeneratePDFSuccess' class='btn-red' onclick="return CloseDownloadPopup();">OK </button>
    </div>
</div>
<div id="popupConfirm1111" style="display: none;">
    <section class="mb-0" style='z-index: 2004'>
        <div class='block-border p-4'>
            <div style='z-index: 1004'>
                <p style='z-index: 1004; text-align: center; font-weight: 700'>
                    Error happened. Please try again.
                </p>
            </div>
        </div>
    </section>
    <div class="btn-wrapper-print-popup" style='z-index: 2004;'>
        <button id='aGeneratePDFFail' class='btn-red' onclick="return CloseDownloadPopup();">OK </button>
    </div>
</div>
<style type="text/css">
    .select-dropdown:disabled {
        background-color: var(--disabledColorBg) !important;
        box-shadow: none !important;
        cursor: auto !important;
    }

    .title-heading-popup {
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: relative;
    }

    #closeBtn {
        top: 0 !important;
        right: 0 !important;
    }

        #closeBtn::after {
            right: 0 !important;
        }

    .grid_10 {
        z-index: 1003 !important;
    }

    .nav-v2 .nav-item.active .nav-link {
        color: var(--red);
    }

    .nav-v2 .nav-item.active {
        font-weight: bold;
        border-bottom: 2px solid var(--red);
    }

    .nav-link {
        padding: 0 0 16px 0;
    }

        .nav-link:hover {
            color: black;
        }

    .grey-bg {
        z-index: 1003 !important;
    }

    .block-content div, .block-content p {
        z-index: 1003 !important;
    }

    #fsTestInfo input,
    #idQuestionPrefix {
        width: 60% !important;
    }

    #PrintVirtualTestPanel {
        padding: 0;
    }

        #PrintVirtualTestPanel section {
            margin: 0;
            padding: 24px;
        }

    .btn-wrapper-print-popup {
        background: var(--navyColor);
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: space-around;
    }

    .btn-cancel {
        display: flex;
        align-items: center;
        padding: 11px 32px;
        font-weight: 900;
        cursor: pointer;
        width: fit-content;
        height: 48px;
        box-sizing: border-box;
        border: 0;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        text-decoration: none;
        color: var(--white) !important;
    }

    .ui-dialog[aria-labelledby="ui-dialog-title-PrintVirtualTestPanel"] {
        width: 820px !important;
        background-color: var(--white) !important;
        padding: 0 !important;
    }

        .ui-dialog[aria-labelledby="ui-dialog-title-PrintVirtualTestPanel"] .ui-dialog-titlebar,
        .ui-dialog[aria-labelledby="ui-dialog-title-popupConfirm111"] .ui-dialog-titlebar,
        .ui-dialog[aria-labelledby="ui-dialog-title-popupConfirm1111"] .ui-dialog-titlebar {
            display: none;
        }

    .ui-dialog[aria-labelledby="ui-dialog-title-popupConfirm111"],
    .ui-dialog[aria-labelledby="ui-dialog-title-popupConfirm1111"] {
        padding: 0;
        background-color: var(--white) !important;
    }

    .ui-dialog .ui-dialog-content {
        padding: 0 !important;
    }

    #popupConfirm111,
    #popupConfirm1111 {
        min-height: unset !important;
    }
</style>

<script>

    $(function () {

        $('#idSelectLines').val(8);

        //if ($('#hdfIsLockedbank').val() == '1' || $('#hdfIsLockedbank').val() == 'True') {
        //    $('#btnPDFAnswerKey').hide();
        //} else {
        //    $('#btnPDFAnswerKey').show();
        //}
        if ($('#hdfCanPrintQuestion').val() == '1' || $('#hdfCanPrintQuestion').val() == 'True') {
            $('#btnPDFTest').show();
        } else {
            $('#btnPDFTest').hide();
        }

        if ($('#hdfCanPrintAnswerKey').val() == '1' || $('#hdfCanPrintAnswerKey').val() == 'True') {
            $('#btnPDFAnswerKey').show();
        } else {
            $('#btnPDFAnswerKey').hide();
        }

        //Use JS adjust width of tab
        var bntTab = $("#tabGenerateTest button"),
            totalButton = 0;
        bntTab.each(function () {
            if ($(this).css("display") != "none") {
                totalButton += 1;
            }
        });
        if (totalButton != 0) {
            widthBnt = 100 / totalButton;
            bntTab.css({ "width": widthBnt + "%" });
        }

        if ('@ViewBag.HasRightToAccess' == 'False') {
            alert('Has no right to access.');
            $('#btnPDFAnswerKey').hide();
            $('#btnCreatePDF').hide();
        }

        if ('@ViewBag.HasRightToAccess' == 'False') {
            CustomAlert('Has no right to access.');
            $('#btnPDFAnswerKey').hide();
            $('#btnCreatePDF').hide();
        }
    });

    $("#btnCloseCreatePDF").live("click", function (e) {
        e.preventDefault();
        $(".dialog").dialog("close");
    });

    $('#idQuestionPrefix').keyup(function () {
        var v = "'" + $(this).val() + " #.'";
        $('#idSpanPrefix').html(v);
    });

    $('#idAnswerOn').change(function () {
        if ($('#idAnswerOn:checked').val() == 'on') {
            $('#idShowLine').prop('disabled', true);
            $(".select-dropdown").attr("disabled", "disabled");
        } else {
            $(".select-dropdown").removeAttr("disabled");
            $('#idShowLine').prop('disabled', false);
        }
    });

    function ShowHideAnswerKey(isAnswerKey) {
        var activeTab = $('#tabGenerateTest').find('.active');
        activeTab.removeClass('active');

        if (activeTab.data('tab') == 'tab-item-test') {
            $('.AnswerKeyTab-list-item').addClass('active')
        }

        if (activeTab.data('tab') == 'tab-item-answer-key') {
            $('.TestTab-list-item').addClass('active')
        }

        if (isAnswerKey) {
            $('#divPDFTest').hide();
            $('#divPDFAnserKey').show();
            $('#hdfPDFType').val('anwserkey');

            $('#btnPDFTest').removeAttr("class");
            $('#btnPDFAnswerKey').removeAttr("class");

            $('#btnPDFAnswerKey').addClass("active_tab");
            $('#btnPDFTest').addClass("deactive_tab");
            if ($('#hdfIsLockedbank').val() == '1' || $('#hdfIsLockedbank').val() == 'True') {
                $('#btnCreatePDF').hide();
                $('#btnCreatePDFGray').show();
            } else {
                $('#btnCreatePDF').show();
                $('#btnCreatePDFGray').hide();
            }
        } else {
            $('#divPDFTest').show();
            $('#divPDFAnserKey').hide();
            $('#hdfPDFType').val('test');

            $('#btnPDFTest').removeAttr("class");
            $('#btnPDFAnswerKey').removeAttr("class");

            $('#btnPDFTest').addClass("active_tab");
            $('#btnPDFAnswerKey').addClass("deactive_tab");
            //alway show Create PDF
            $('#btnCreatePDF').show();
            $('#btnCreatePDFGray').hide();
        }
    }

    function GenerecRubric(rubricLink) {
        window.location = rubricLink;
    }

    $('#closeBtn').live('click', function () {
        $('.my-overlay').remove();
        $('#PrintVirtualTestPanel').remove();
    });
</script>

<script>
    var dialog;
    function createPDF(e) {
        e.preventDefault();

        ShowBlock($('#divconfigGenerateTest'), "Creating PDF");
        //alert("Call Print Test Function! " );
        var vColumns = 'single';
        if ($('#idTowColumns:checked').val() == 'on') {
            vColumns = 'double';
        }
        var vIncludePageNumbers = 0;
        if ($('#idcbIncludePageNumber:checked').val() == 'on') {
            vIncludePageNumbers = 1;
        }
        var vStartCountingOnCover = 0;
        if ($('#idStartCounting:checked').val() == 'on') {
            vStartCountingOnCover = 1;
        }
        var vIncludeCoverPage = 0;
        if ($('#idIncludeCoverPage:checked').val() == 'on') {
            vIncludeCoverPage = 1;
        }

        var vShowSectionHeadings = 0;
        if ($('#idShowSelectionHeading:checked').val() == 'on') {
            vShowSectionHeadings = 1;
        }
        var vShowQuestionBorders = 0;
        if ($('#idShowBorderAroundQuestion:checked').val() == 'on') {
            vShowQuestionBorders = 1;
        }
        var vDrawReferenceBackground = 0;
        if ($('#idShadeReference:checked').val() == 'on') {
            vDrawReferenceBackground = 1;
        }
        var vExtendedTextAreaAnswerOnSeparateSheet = 0;
        if ($('#idAnswerOn:checked').val() == 'on') {
            vExtendedTextAreaAnswerOnSeparateSheet = 1;
        }
        var vExtendedTextAreaShowLines = 0;
        if ($('#idShowLine:checked').val() == 'on') {
            vExtendedTextAreaShowLines = 1;
        }

        var vAnswerLabelFormat = 'LA';
        if ($('#idNumberic:checked').val() == 'on') {
            vAnswerLabelFormat = 'LN';
        }
        var vIncludeStandards = 0;
        if ($('#idIncludeStandards:checked').val() == 'on') {
            vIncludeStandards = 1;
        }
        var vIncludeTags = 0;
        if ($('#idIncludeTags:checked').val() == 'on') {
            vIncludeTags = 1;
        }
        var vIncludeRationale = 'False';
        if ($('#idIncludeRationale:checked').val() == 'on') {
            vIncludeRationale = 'True';
        }

        var vIncludeGuidance = 'False';
        if ($('#idIncludeGuidance:checked').val() == 'on') {
            vIncludeGuidance = 'True';
        }

        //"http://portal.linkitdev.com/Content/FlashModules/ModuleLaunch/proc/linkit.php/printVirtualTestAnswerKey";
        //"http://portal.linkitdev.com/Content/FlashModules/ModuleLaunch/proc/linkit.php/printVirtualTest";
        var vURLPrintTest = '@Url.Action("PrintVirtualTestAnswerKey", "PrintTest")';//$('#hdfPrintAnswerKeyURL').val();
        var vPrintType = $('#hdfPDFType').val();
        if (vPrintType == 'test') {
            vURLPrintTest = '@Url.Action("PrintVirtualTest", "PrintTest")'; //$('#hdfPrintTestURL').val();
        }

        var testDataPost =
        {
            StartCountingOnCover: vStartCountingOnCover,
            TestTitle: $('#TestTitle').val(),
            TeacherName: $('#idTeacherName').val(),
            IncludePageNumbers: vIncludePageNumbers,
            IncludeCoverPage: vIncludeCoverPage,
            Columns: vColumns,
            AnswerLabelFormat: vAnswerLabelFormat,
            IncludeStandards: vIncludeStandards,
            ShowQuestionBorders: vShowQuestionBorders,
            TestInstructions: CKEDITOR.instances["PrintTestInstructions"].getData(),
            ExtendedTextAreaShowLines: vExtendedTextAreaShowLines,
            IncludeTags: vIncludeTags,
            IncludeRationale: vIncludeRationale,
            IncludeGuidance: vIncludeGuidance,
            VirtualTestID: $('#VirtualTestID').val(),
            Instruction: '',
            ClassName: $('#idClassName').val(),
            DrawReferenceBackground: vDrawReferenceBackground,
            ExtendedTextAreaAnswerOnSeparateSheet: vExtendedTextAreaAnswerOnSeparateSheet,
            ShowSectionHeadings: vShowSectionHeadings,
            PrintingType: 1,
            QuestionPrefix: $('#idQuestionPrefix').val(),
            ExtendedTextAreaNumberOfLines: $('#idSelectLines').val()
        };

        PrintVirtualTest(vURLPrintTest, testDataPost);
    }

    function PrintVirtualTest(url, options) {
        $.ajax({
            type: 'POST',
            url: url,
            data: options,
            success: function (response) {
                if (response.Success != undefined && response.Success == false) {
                    dialog = $("#popupConfirm1111")
                   .dialog({
                       title: $(this).attr("data-dialog-title"),
                       close: function () {
                       },
                       modal: true,
                       width: 330,
                       resizable: false,
                       hideOnClose: true
                   })
                   .load(this.href, function () {
                   });
                }
                else {
                    var pdfUrl = response;

                    $("#aGeneratePDFSuccess").attr('pdfUrl', pdfUrl);

                    dialog = $("#popupConfirm111")
                        .dialog({
                            title: $(this).attr("data-dialog-title"),
                            close: function () {
                            },
                            modal: true,
                            width: 330,
                            resizable: false,
                            hideOnClose: true
                        })
                        .load(this.href, function () {
                        });
                }

                $('#divconfigGenerateTest').unblock();
            },
            error: function () {
                $('#divconfigGenerateTest').unblock();
                alert("Error: " + response);
            }
        });
    }

    function CloseDownloadPopup() {
        var milliseconds = new Date().getTime();
        var pdfUrl = $("#aGeneratePDFSuccess").attr('pdfUrl');
        if (pdfUrl != null && pdfUrl != '') {
            var url = pdfUrl + '&t=' + milliseconds;
            window.open(url);
        }

        $("#popupConfirm111").dialog("close");
        return false;
    }

    function CloseDownloadPopupFail() {
        $("#popupConfirm1111").dialog("close");
        return false;
    }

</script>
<script type="text/javascript">
    sessionStorage.setItem('basicSciencePaletteSymbol', unescapeHtml('@ViewBag.BasicSciencePaletteSymbol'));
    $(function () {
        CKEDITOR.replace('PrintTestInstructions', {
            extraPlugins: 'mathjax,sharedspace,multiplechoice,mathfraction,indent,dialog,contextmenu,liststyle',
            qtiSchemeID: 1,
            height: 150,
            toolbar: [
                ['JustifyLeft', 'JustifyCenter', 'JustifyRight', '-', 'NumberedList'], ['Bold', 'Italic', 'Underline'], ['Sameline'], ['FontSize', 'Subscript', 'Superscript', '-', 'RemoveFormat'],
                ['Link', 'Unlink', 'Table', 'SpecialChar', 'Indent', 'Outdent', 'ImageUpload']
            ],
            extraAllowedContent: 'span[stylename]; span(smallText,normalText,largeText,veryLargeText);'
        }
        );
    });

</script>
