@model LinkIt.BubbleSheetPortal.Web.ViewModels.SGO.SGOAddNewStudentsCustomViewModel

<style>

    #portal-v2-containter #AddStudentDataTable_wrapper table tbody td:first-child {
        text-align: center;
    }

    #portal-v2-containter #AddStudentDataTable_wrapper table .last-col-style,
    #portal-v2-containter #AddStudentDataTable_wrapper table .first-col-style,
    #portal-v2-containter #AddStudentDataTable_wrapper table .school-col-style,
    #portal-v2-containter #AddStudentDataTable_wrapper table .race-col-style {
        word-break: break-word;
    }

    @@media (min-width: 1600px) {
        #portal-v2-containter #AddStudentDataTable_wrapper table .checkbox-col-style {
            width: 78px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .last-col-style {
            width: 156px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .first-col-style {
            width: 164px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .local-col-style {
            width: 141px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .state-col-style {
            width: 131px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .school-col-style {
            width: 198px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .grade-col-style {
            width: 89px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .race-col-style {
            width: 123px !important;
        }
        #portal-v2-containter #AddStudentDataTable_wrapper table .gender-col-style {
            width: 94px !important;
        }
    }


</style>

<article class="container_12">
    <section class="grid_12">
        <div class="block-border" id="divAddNewStudentsFilter">
            <div id="filter-students-v2" class="block-content form bubbleSheetSelector">
                <p class="title-large mb-4">Add New Students</p>
                <p class="title-medium mb-4">Filter</p>
                <div class="row mt-3">
                    <div class="col">
                        @if (Model.IsPublisherOrNetworkAdmin)
                        {
                            <div class="row g-3">
                                <div class="col state-district">
                                    <label>State</label>
                                    <div class="block-text-name">
                                        <select id="selectState"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col state-district">
                                    <label>@LabelHelper.DistrictLabel</label>
                                    <div class="block-text-name">
                                        <select id="selectDistrict"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row g-3 mt-1">
                            <div class="col">
                                <label>School</label>
                                <div class="block-text-name">
                                    <select id="selectSchool" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>@LabelHelper.Term</label>
                                <div class="block-text-name">
                                    <select id="selectTerm" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>Teacher</label>
                                <div class="block-text-name">
                                    <select id="selectTeacher" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>Class</label>
                                <div class="block-text-name">
                                    <select id="selectClass" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row g-3 mt-1">
                            <div class="col">
                                <label>First Name</label>
                                <input type="text" id="selectFirstName" class="full-width" />
                            </div>
                            <div class="col">
                                <label>Last Name</label>
                                <input type="text" id="selectLastName" class="full-width" />
                            </div>
                            <div class="col">
                                <label>Local ID</label>
                                <input type="text" id="selectLocalId" class="full-width" />
                            </div>
                            <div class="col">
                                <label>State ID</label>
                                <input type="text" id="selectStateId" class="full-width" />
                            </div>
                        </div>
                        <div class="row g-3 mt-1">
                            <div class="col">
                                <label>Admin School</label>
                                <div class="block-text-name">
                                    <select id="selectAdminSchool" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>@LabelHelper.StudentGrade</label>
                                <div class="block-text-name">
                                    <select id="selectGrade" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>@LabelHelper.StudentRace</label>
                                <div class="block-text-name">
                                    <select id="selectRace" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col">
                                <label>Gender</label>
                                <select id="selectGender" class="full-width">
                                    <option value="">Select Gender</option>
                                    <option value="25">Male</option>
                                    <option value="24">Female</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row g-0 col align-self-end action" style="max-width: 250px">
                        <button id="clearFilter" class="btn-clear-filter grey" type="button">
                            Reset <i class="fa-solid fa-arrow-rotate-right ms-1"></i>
                        </button>
                        <button id="filterSheets" class="u-m-l-10 btn-apply-filter" type="button" disabled="disabled">Apply</button>
                    </div>
                </div>
                <div class="divider"></div>
                <div>
                    <p class="title-medium float-left" style="margin-top: 10px">Students</p>
                    <div id="divNotifications"></div>
                    <div class="no-margin last-child">
                        <table id="AddStudentDataTable" class="datatable table no-margin" width="100%">
                            <thead>
                                <tr>
                                    <th scope="col" style="text-align: center;" class="col-check">
                                        <input type="checkbox" id="chkAllTest" />
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Last Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        First Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Local ID
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        State ID
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Admin School
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.StudentGrade
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Race
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Gender
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Status
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        CanAccess
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td style="height: 60px;"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="modal-component-footer mx-n4 px-4">
                    <div slot="footer">
                        <button id="btnCloseAddStudentDataTable" type="button" onclick="CloseAddStudentToSGO();">Close</button>
                        <button id="btnAddStudentDataTable" type="button" class="btn-red" onclick="AddStudentToSGO();">Add</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>
<script>

    $(function () {
        InitData();

        setTimeout(function () {
            var marqueeList = ['#selectDistrict', '#selectSchool', '#selectState', '#selectTerm', '#selectTeacher', '#selectClass', '#selectAdminSchool', '#selectGrade', '#selectRace', '#selectGender'];
            marqueeSelect(marqueeList);
        }, 1000);

        portalV2SkinCheckBox();

    });

    function InitData() {
        if ('@Model.IsPublisherOrNetworkAdmin' == 'True') {
            populateStatesOnPopup();
        } else {
            populateSchools();
            populateGrades();
            populateRaces();

            InitSchool();
        }

        $('#selectState').change(function () {
            $('#selectDistrict').empty();
            $('#selectSchool').empty();
            $('#selectTeacher').empty();
            $('#selectTerm').empty();
            $('#selectClass').empty();
            if ($(this).val() != 'select') {
                populateDistrictsOnPopup();
            }
            else {
                $('#selectDistrictOnPopup').empty();
            }
        });
        $('#selectDistrict').change(function () {
            $('#selectSchool').empty();
            $('#selectTeacher')
            $('#selectTerm').empty();
            $('#selectClass').empty();
            if ($(this).val() != 'select') {
                populateSchools();
                populateGrades();
                populateRaces();
                populateSchoolsByDistrict();
            }
            else {
                $('#selectSchoolOnPopup').empty();
            }
        });

        $('#filterSheets').click(function () {
            ReloadStudentDataTable();
        });

        InitLoadStudent();
    }

    function marqueeSelect(listItem) {
        if (!$.isArray(listItem) || $(listItem).length === 0) return;
        listItem.forEach(function (item) {
            var widthSelected = $(item).outerWidth();
            return $(item).marquee({ widthSelected });
        })
    }

    function populateStatesOnPopup() {
        var stateSelect = $('#selectState');
        stateSelect.empty();
        if ('@Model.IsPublisher' == 'True') {
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (response) {
                addDefaultOption(stateSelect, "State");
                addSelectListItems(stateSelect, response);
            });
        }
        if ('@Model.IsNetworkAdmin' == 'True') {
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (response) {
                addDefaultOption(stateSelect, "State");
                addSelectListItems(stateSelect, response);
            });
        }
    }

    function populateDistrictsOnPopup() {
        var districtSelect = $('#selectDistrict');
        districtSelect.empty();

        var selectedStateId = $('#selectState').val();
        if ('@Model.IsPublisher' == 'True') {
            $.get('@Url.Action("GetDistricts","PopulateStateDistrict")', { stateId: selectedStateId }, function (response) {
                addDefaultOptionDefaultValue(districtSelect, "@LabelHelper.DistrictLabel", "");
                addSelectListItems(districtSelect, response);
            });
        }
        if ('@Model.IsNetworkAdmin' == 'True') {
            $.get('@Url.Action("GetDistrictsForNetworkAdmin","PopulateStateDistrict")', { stateId: selectedStateId }, function (response) {
                addDefaultOptionDefaultValue(districtSelect, "@LabelHelper.DistrictLabel", "");
                addSelectListItems(districtSelect, response);
            });
        }

    }

    function populateSchools() {
        $('#selectAdminSchool').empty();
        if ($('#selectDistrict').length) {
            var districtValue = $('#selectDistrict').val();
            if (districtValue != 'select') {
                $.get('@Url.Action("GetAdminSchoolsByDistrict", "StudentLookup")', { districtId: districtValue }, function (schools) {
                    addDefaultOptionDefaultValue($('#selectAdminSchool'), "Admin School", "");
                    addSelectListItems($('#selectAdminSchool'), schools);
                });
            }
        } else {
            $.get('@Url.Action("GetAdminSchoolsByDistrict", "StudentLookup")', function (schools) {
                addDefaultOptionDefaultValue($('#selectAdminSchool'), "Admin School", "");
                addSelectListItems($('#selectAdminSchool'), schools);
            });
        }
    }

    function populateGrades() {
        $('#selectGrade').empty();
        var districtId = "-1";
        if ($('#selectDistrict').length) {
            var districtValue = $('#selectDistrict').val();
            if (districtValue != 'select') {
                districtId = districtValue;
            }
        }

        $.get('@Url.Action("GetGradesByDistrict", "PopulateTest")', { districtId: districtId }, function (grades) {
            addDefaultOptionDefaultValue($('#selectGrade'), "@LabelHelper.StudentGrade", "");
            addSelectListItems($('#selectGrade'), grades);
        });
    }

    function populateRaces() {
        $('#selectRace').empty();
        if ($('#selectDistrict').length) {
            var districtValue = $('#selectDistrict').val();
            if (districtValue != 'select') {
                $.get('@Url.Action("GetRacesByDistrict", "StudentLookup")', { districtId: districtValue }, function (races) {
                    addDefaultOptionDefaultValue($('#selectRace'), "@LabelHelper.StudentRace", "");
                    addSelectListItems($('#selectRace'), races);
                });
            }
        } else {
            $.get('@Url.Action("GetRacesByDistrict", "StudentLookup")', function (races) {
                addDefaultOptionDefaultValue($('#selectRace'), "@LabelHelper.StudentRace", "");
                addSelectListItems($('#selectRace'), races);
            });
        }
    }

    var studentResultDataTable = [];
    function InitLoadStudent() {
        var options = {
            bServerSide: true,
            sServerMethod: "GET",
            bDestroy: true,
            bProcessing: false,
            sAjaxSource: '@Url.Action("GetStudentResult", "SGOManage")',
            fnServerParams: function (aoData) {
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }
                aoData.push(
                    { name: "districtId", value: $('#selectDistrict').val() },
                    { name: "LastName", value: $('#selectLastName').val() },
                    { name: "FirstName", value: $('#selectFirstName').val() },
                    { name: "Code", value: $('#selectLocalId').val() },
                    { name: "StateCode", value: $('#selectStateId').val() },
                    { name: "SchoolId", value: $('#selectAdminSchool').val() },
                    { name: "GradeId", value: $('#selectGrade').val() },
                    { name: "RaceName", value: $('#selectRace').val() == null ? '' : $('#selectRace').val() },
                    { name: "GenderId", value: $('#selectGender').val() },
                    { name: "SGOId", value: '@Model.SGOID' },
                    { name: "ClassId", value: $('#selectClass').val() }
                );
            },
            iDisplayLength: 10,
            aoColumns: [
                { sType: 'int', sName: 'StudentId', bSearchable: false, bSortable: false, sClass: 'checkbox-col-style' },
                { sType: 'string', sName: 'LastName', bSearchable: true, bSortable: true, sClass: 'last-col-style' },
                { sType: 'string', sName: 'FirstName', bSearchable: true, bSortable: true, sClass: 'first-col-style' },
                { sType: 'string', sName: 'Code', bSearchable: true, bSortable: true, sClass: 'local-col-style' },
                { sType: 'string', sName: 'StateCode', bSearchable: false, bSortable: true, sClass: 'state-col-style' },
                { sType: 'string', sName: 'SchoolName', bSearchable: false, bSortable: true, sClass: 'school-col-style' },
                { sType: 'string', sName: 'GradeName', bSearchable: false, bSortable: true, sClass: 'grade-col-style' },
                { sType: 'string', sName: 'RaceName', bSearchable: false, bSortable: true, sClass: 'race-col-style' },
                { sType: 'string', sName: 'GenderCode', bSearchable: false, bSortable: true, sClass: 'gender-col-style' },
                { sType: 'int', sName: 'Status', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'bool', sName: 'CanAccess', bSearchable: false, bSortable: true, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                //save data
                var student = studentResultDataTable.filter(function (dt) {
                    return dt[0] === aData[0];
                });
                if(student.length === 0){
                    studentResultDataTable.push(aData);
                }
                var checkBox = '<input type="checkbox" class="rcode" onchange = "rcode_onchange(this)" value="' + aData[0] + '" classId="' + $('#selectClass').val() + '"></input>';
                $('td:eq(0)', nRow).html(checkBox);
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#AddStudentDataTable'), 'Loading');
                return true;
            },
            fnDrawCallback: function () {
                newstudentsModel.resetSelectedNewStudent();
                $('#AddStudentDataTable').unblock();
                $('.with-tip').tip();
                portalV2SkinCheckBox();
                return true;
            },
            fnInitComplete: function () {
                tranformSearchInputDataTable('AddStudentDataTable_filter');
                portalV2SkinCheckBox();
                portalV2AddPluginSelect();
            }
        };

        $('#AddStudentDataTable').data("options", options);
        initializeDataTable($("#AddStudentDataTable"));
    }

    function ReloadStudentDataTable() {
        var dataTable = $('#AddStudentDataTable').dataTable();
        dataTable.fnDraw();
    }

    var allSelectedIds = [];
    function AddStudentToSGO() {
        var selectedIds = [];

        $("#AddStudentDataTable :not(#chkAllTest):checked").each(function () {
            var vStudentIdAndClassId = $(this).val() + ';' + $(this).attr('classId');
            selectedIds.push(vStudentIdAndClassId);
            allSelectedIds.push($(this).val());
        });

        ShowBlock($('#AddStudentDataTable'), 'Loading');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddStudentsToSGO", "SGOManage")',
            data: { 'SGOID': '@Model.SGOID', 'StudentIDs': selectedIds },
            dataType: 'json',
            traditional: true,
            success: function (data) {
                @if (Model.SGOStatusID != 1)
                {
                    <text>LogAddStudent(selectedIds);</text>
                }
                ReloadStudentDataTable();
            },
            error: function () {
                $('#AddStudentDataTable').unblock();
            }
        });
    }

    function CloseAddStudentToSGO() {
        if (allSelectedIds.length > 0) {
            var studentsToAppend = [];
            $.each(allSelectedIds, function (i, studentId) {
                var student = studentResultDataTable.filter(function (data) {
                    return data[0] == studentId;
                });
                if (student.length > 0)
                {
                    var studentName = student[0][1] + ', ' + student[0][2];
                    var studentInfo = { studentid: student[0][0], studentName: studentName, type: student[0][9] }
                    studentsToAppend.push(studentInfo);
                }
            });
            AppendStudentToGroupTable(studentsToAppend);
        }
        $("#PopupSGOAddEditBand").dialog("close");

    };

    function LogAddStudent(studentIDs) {
        var auditDetail = $('<students></students>');
        $.each(studentIDs, function (idx, studentID) {
            var studentNode = $('<studentid></studentid>');
            studentNode.text(studentID);
            auditDetail.append(studentNode);
        });

        var actionDetail = '<students>' + auditDetail.html() + '</students>';
        $.ajax({
            type: 'Post',
            url: '@Url.Action("AddAuditTrail", "SGOAuditTrail")',
            data: { SGOID: '@Model.SGOID', SGOActionTypeID: '1', ActionDetail: actionDetail },
            success: function () { }
        });
    }

    //------------------------------------------------------------
    function InitSchool() {
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', function (schools) {
            fillDataSchools(schools);
        });
    }

    function fillDataSchools(schools) {
        addDefaultOption($('#selectSchool'), "School");
        addSelectListItems($('#selectSchool'), schools);
    }

    $('#selectSchool').change(function () {
        $('#selectTeacher').empty();
        $('#selectTerm').empty();
        $('#selectClass').empty();
        if ($('#selectSchool').val() !== 'select') {
            populateTeachers();
        }
    });

    function populateTeachers() {
        $('#selectTeacher').empty();
        var schoolValue = $('#selectSchool').val();
        if (schoolValue !== 'select') {
            $.get('@Url.Action("GetTeachers", "PopulateSchoolTeacher")', { schoolId: schoolValue, hasTermOnly: 'True' }, function (teachers) {
                addDefaultOption($('#selectTeacher'), "Teacher");
                addSelectListWithDefaultValue($('#selectTeacher'), teachers, 'select', function (item) {
                    return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
                });
            });
        }
    }

    $('#selectTeacher').change(function () {
        $('#selectTerm').empty();
        $('#selectClass').empty();
        populateTermsByTeacherAndSchool();

    });

    function populateTermsByTeacherAndSchool() {
        $('#selectTerm').empty();
        var teacherValue = $('#selectTeacher').val();
        var schoolValue = $('#selectSchool').val();
        if (teacherValue !== 'select') {
            $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: teacherValue, schoolId: schoolValue }, function (terms) {
                addDefaultOption($('#selectTerm'), "@LabelHelper.Terms");
                addSelectListItems($('#selectTerm'), terms);
            });
        }
    }

    function fillDataTerms(terms) {
        addDefaultOption($('#selectTerm'), "@LabelHelper.Terms");
        addSelectListItems($('#selectTerm'), terms);
    }

    $('#selectTerm').change(function () {
        populateClasses();
    });

    function populateClasses() {
        $('#selectClass').empty();
        var termValue = $('#selectTerm').val();
        var teacherValue = $('#selectTeacher').val();
        if (termValue !== 'select' && teacherValue !== 'select') {
            $.get('@Url.Action("GetClasses", "PopulateStudent")', { termId: termValue, userId: teacherValue }, function (classes) {
                addDefaultOption($('#selectClass'), "Class");
                addSelectListItems($('#selectClass'), classes);
            });
        }
    }

    $('#selectClass').change(function () {
        var $btnFilter = $('#filterSheets');
        var classValue = $('#selectTeacher').val();
        if (classValue !== 'select') {
            $btnFilter.prop('disabled', false);
        } else {
            $btnFilter.prop('disabled', true);
        }
    });

    function populateSchoolsByDistrict() {
        $('#selectSchool').empty();
        $('#selectTeacher')
        $('#selectTerm').empty();
        $('#selectClass').empty();
        var districtValue = $('#selectDistrict').val();
        if (districtValue == null || districtValue === 'select' || districtValue <= 0) {
            return;
        }
        if (districtValue != 'select') {
            $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function (schools) {
                fillDataSchools(schools);
            });
        }
    }

    $('#clearFilter').click(function () {

        $('.col').find('input:text').val('');
        var animationText = $('.overlay.animation-text');

        if ('@Model.IsPublisherOrNetworkAdmin' == 'True') {
            $("#selectState").val(-1);
            $('#selectDistrict').empty();
            $('#selectSchool').empty();
        }
        else {
            $('#selectSchool').val(-1);
        }
        $('#selectTerm').empty();
        $('#selectTeacher').empty();
        $('#selectClass').empty();
        $('#selectAdminSchool').empty();
        $('#selectGrade').empty();
        $('#selectRace').empty();
        $('#selectGender').empty();

        if (animationText.length > 0) {
            animationText.empty();
            var parentAnimationText = animationText.parent('.box-select');
            if (parentAnimationText.length > 0) {
                $(parentAnimationText).each(function (index) {
                    if (!$(this).hasClass('short-text')) {
                        $(this).addClass('short-text')
                    }
                })
            }
        }

    });
    var newstudentsModel = new Vue({
        el: '#divAddNewStudentsFilter',
        data: {},
        computed: {},
        methods: {
            updateSelectedNewStudent: function () {
                $("input.rcode:checked").each(function (index, elem) {
                    $(elem).closest('tr').addClass("row-selected");
                });

                $("input.rcode:not(:checked)").each(function (index, elem) {
                    $(elem).closest('tr').removeClass("row-selected");
                });
            },
            resetSelectedNewStudent: function () {
                $('#chkAllTest').prop("checked", false);
            }
        }
    });

    $('#chkAllTest').click(function () {      
        $("input.rcode").each(function (index, elem) {
            $(elem).prop("checked", $('#chkAllTest').is(':checked'));
            setCheckBoxClassV2Skin($('#chkAllTest').is(':checked'), elem)
        });
        newstudentsModel.updateSelectedNewStudent();
    });

    function rcode_onchange(t) {
        var isAllSelected = true;
        newstudentsModel.updateSelectedNewStudent();
        $("input.rcode").each(function (index, elem) {
            if (!$(elem).is(':checked')) {
                isAllSelected = false;
            }
        });
        if (isAllSelected) {
            $('#chkAllTest').prop("checked", isAllSelected);
            return;
        }
        $('#chkAllTest').removeAttr('checked').removeClass('input-checked-v2');
    };


</script>
