@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Models
@model LinkIt.BubbleSheetPortal.Web.ViewModels.SGO.SGOHomeViewModel

@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleSGOManageIndexBundleV2()
@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.ScriptSGOManageIndexBundle()

@{
    ViewBag.Title = HelperExtensions.FormatPageTitle(ContaintUtil.Reporting, "SGO Manager");

    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }
    }
}

@section jQuery {
    @BundleHelper.jQueryUpgrade()
}

<style>

    #portal-v2-containter #dataTableSet_wrapper table .action-col-style {
        text-align: center;
    }

    #portal-v2-containter #dataTableSet_wrapper table .name-col-style,
    #portal-v2-containter #dataTableSet_wrapper table .teacher-col-style,
    #portal-v2-containter #dataTableSet_wrapper table .school-col-style,
    #portal-v2-containter #dataTableSet_wrapper table .grade-col-style,
    #portal-v2-containter #dataTableSet_wrapper table .course-col-style,
    #portal-v2-containter #dataTableSet_wrapper table .approver-col-style {
        word-break: break-word;
    }

    @@media (max-width: 1440px) and (min-width: 1200px) {

        #portal-v2-containter #dataTableSet_wrapper table .action-col-style {
            width: 83px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .name-col-style {
            width: 78px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .version-col-style {
            width: 53px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .teacher-col-style {
            width: 100px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .school-col-style {
            width: 90px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .grade-col-style {
            width: 85px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .course-col-style {
            width: 92px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .total-col-style {
            width: 97px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .startDate-col-style {
            width: 103px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .createdDate-col-style {
            width: 97px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .effective-col-style {
            width: 129px !important;
            word-break: break-word;
        }

        #portal-v2-containter #dataTableSet_wrapper table .effectiveDate-col-style {
            width: 104px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .approver-col-style {
            width: 107px !important;
        }
    }

    @@media (max-width: 1599px) and (min-width: 1441px) {
        #portal-v2-containter #dataTableSet_wrapper table .action-col-style {
            width: 88px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .name-col-style {
            width: 87px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .version-col-style {
            width: 53px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .teacher-col-style {
            width: 112px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .school-col-style {
            width: 105px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .grade-col-style {
            width: 118px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .course-col-style {
            width: 126px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .total-col-style {
            width: 97px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .startDate-col-style {
            width: 103px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .createdDate-col-style {
            width: 96px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .effective-col-style {
            width: 133px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .effectiveDate-col-style {
            width: 104px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .approver-col-style {
            width: 108px !important;
        }
    }

    @@media (min-width: 1600px) {
        #portal-v2-containter #dataTableSet_wrapper table .action-col-style {
            width: 82px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .name-col-style {
            width: 110px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .version-col-style {
            width: 53px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .teacher-col-style {
            width: 100px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .school-col-style {
            width: 150px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .grade-col-style {
            width: 150px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .course-col-style {
            width: 190px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .total-col-style {
            width: 97px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .startDate-col-style {
            width: 103px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .createdDate-col-style {
            width: 96px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .effective-col-style {
            width: 129px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .effectiveDate-col-style {
            width: 126px !important;
        }

        #portal-v2-containter #dataTableSet_wrapper table .approver-col-style {
            width: 108px !important;
        }
    }

    .ui-widget-header .ui-state-hover {
        background: transparent !important;
    }

    .ui-dialog[aria-labelledby="ui-dialog-title-confirmMessDialogCreateNewSGO"] section {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 250px;
    }

    .ui-dialog[aria-labelledby="ui-dialog-title-CustomAlertDialog"] {
        width: auto !important;
        padding: 0 !important;
    }

        .ui-dialog[aria-labelledby="ui-dialog-title-CustomAlertDialog"] .ui-dialog-titlebar {
            display: none;
        }

        .ui-dialog[aria-labelledby="ui-dialog-title-CustomAlertDialog"] section {
            width: 450px !important;
        }

    #CustomAlertDialog {
        padding: 0 !important;
    }

        #CustomAlertDialog section {
            margin-bottom: 0 !important;
        }

        #CustomAlertDialog .block-border {
            width: 100% !important;
        }

        #CustomAlertDialog .block-content {
            padding: 24px !important;
        }
</style>

@if (Model.IsPublisher || Model.IsNetworkAdmin)
{
    <article class="container_12" style="padding-bottom: 0px;">
        <section class="grid_12 sgo-selector box-shadow">
            <div class="block-border">
                <div class="block-content form">
                    <div class="row g-3">
                        <div class="col-3">
                            <label>State</label>
                            <select id="selectState"></select>
                        </div>
                        <div class="col-3">
                            <label>@LabelHelper.DistrictLabel</label>
                            <div class="block-text-name w-100">
                                <select id="selectDistrict" class="w-100"></select>
                                <div class="box-select">
                                    <span class="overlay"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </article>
}
else
{
    <input id="idhdfDistrictId" type="hidden" value="@Model.CurrentDistrictId" />
    <input id="idhdfSchoolId" type="hidden" value="@Model.CurrentSchoolId" />
}

<article class="container_12" style="padding-bottom: 0px;">
    <section class="grid_12">
        <div class="block-border" id="sgoFilters">
            <div class="block-content form">
                <h1>SGO Filter</h1>
                <div>
                    <div class="row g-3" style="margin-bottom:24px">
                        @if (Model.IsPublisher || Model.IsNetworkAdmin || Model.IsDistrictAdmin)
                        {
                            <div class="col-3">
                                <label>School</label>
                                <div class="block-text-name w-100">
                                    <select id="selectSchool" class="w-100"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-3">
                                <label>Teacher</label>
                                <div class="block-text-name w-100">
                                    <select id="selectTeacher" class="w-100"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        }
                        else if (Model.IsSchoolAdmin)
                        {
                            <div class="col-3">
                                <label>Teacher</label>
                                <div class="block-text-name w-100">
                                    <select id="selectTeacher" class="w-100"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (Model.IsPublisher || Model.IsNetworkAdmin || Model.IsDistrictAdmin || Model.IsSchoolAdmin)
                        {
                            <div class="col-3">
                                <label>Reviewer</label>
                                <div class="block-text-name w-100">
                                    <select id="selectReviewer" class="w-100"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @if (Model.IsPublisher || Model.IsNetworkAdmin || Model.IsDistrictAdmin || Model.IsSchoolAdmin)
                    {
                        <fieldset class="field-set-block no-padding" style="margin-bottom:24px">
                            <label class="fieldset-label">Instruction Period</label>
                            <div class="row g-3">
                                <div class="col-3">
                                    <label>From</label>
                                    <input type="text" class="datepicker" name="instructionPeriodFrom" id="instructionPeriodFrom" readonly="readonly" />
                                </div>
                                <div class="col-3">
                                    <label>To</label>
                                    <input type="text" class="datepicker" name="instructionPeriodTo" id="instructionPeriodTo" readonly="readonly" />
                                </div>
                            </div>
                        </fieldset>
                    }
                    <fieldset class="field-set-block no-padding" style="margin-bottom:24px">
                        <label class="fieldset-label">Archived Status</label>
                        <div class="d-flex mb-2 group-checkboxs">
                            <div class="me-4">
                                <div class="d-flex">
                                    <input class="d-block me-2" type="checkbox" id="chArchivedStatusActive" checked="checked">
                                    <span>Active</span>
                                </div>
                            </div>
                            <div>
                                <div class="d-flex">
                                    <input class="d-block me-2" type="checkbox" id="chArchivedStatusArchived">
                                    <span>Archived</span>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                    <fieldset class="field-set-block no-padding">
                        <label class="fieldset-label">Effective Status</label>
                        <div class="row" style="margin-bottom: 12px;">
                            <div class="col-2 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusCanlled" value="5">
                                <span>Cancelled</span>
                            </div>
                            <div class="col-2 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusDraft" value="1">
                                <span>Draft</span>
                            </div>
                            <div class="col-3 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusPreparationSubmittedForApproval" value="2">
                                <span>Preparation Submitted for Approval</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-2 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusPreparationDenied" value="4">
                                <span>Preparation Denied</span>
                            </div>
                            <div class="col-2 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusPreparationApproved" value="3">
                                <span>Preparation Approved</span>
                            </div>
                            <div class="col-3 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusEvaluationSubmittedForApproval" value="6">
                                <span>Evaluation Submitted for Approval</span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-2 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusSGODenied" value="8">
                                <span>SGO Denied</span>
                            </div>
                            <div class="col-2 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusSGOApproved" value="7">
                                <span>SGO Approved</span>
                            </div>
                            <div class="col-3 d-flex align-items-center">
                                <input class="d-block me-2" type="checkbox" name="chSgoFilterStatus" id="chSgoStatusTeacherAcknowledged" value="9">
                                <span>Teacher Acknowledged</span>
                            </div>
                            <div class="col-5 d-flex">
                                <div class="align-self-end ms-auto">
                                    <div class="d-flex flex-row justify-content-end ">
                                        <button id="btnFilterReset" class="btn-text px-0 me-1" type="button">
                                            Reset
                                            <i class="fa-solid fa-arrow-rotate-right ms-1"></i>
                                        </button>
                                        <button id="btnFilterSubmit" class="btn-red" type="submit">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </section>
</article>

<article class="container_12">
    <section class="grid_12">
        <div class="block-border">
            <div class="block-content form" id="divOnTop">
                <div class="d-flex flex-row justify-content-between">
                    <h1>SGO Home</h1>
                    <div>
                        @if (Model.IsDistrictAdmin || Model.IsSchoolAdmin)
                        {
                            <a id="btnExtractTeacherData" title="Extract Teacher Data" href="javascript:void(0)" class="btn btn-secondary-link" clickable="@Model.HasFinalAdministrativeSignoffSGO.ToString().ToLower()">
                                Extract Teacher Data
                            </a>
                        }
                        <button id="createSGOBtn" class="btn btn-plus-icon btn-text" style="margin-bottom: auto">
                            Add new SGO
                        </button>
                    </div>
                </div>
                <div style="float: left; margin-top: 15px" class="d-flex align-items-center ps-0">
                    <span><b>Direction:</b> Create a new SGO or select an existing SGO from the list below</span>
                </div>
                <div class="last-child">
                    <table id="dataTableSet" class="datatable table no-margin" width="100%">
                        <thead>
                            <tr>
                                <th scope="col" class="col-action">Actions</th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        SGO Name
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        V.
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Teacher
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        School
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.TestGrade
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Course
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Number of Students
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Interval of Instruction
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Created Date
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Effective Status
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Effective Status Date
                                    </div>
                                </th>
                                <th scope="col">
                                    <div class="content-vertical-align-center">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Reviewer
                                    </div>
                                </th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</article>

@section scripts {
    <script type="text/javascript">

        var oTableItemSet;
        var keepCurrentPageItemSet = 0;
        var displayStartItemSet = 0;

        var defaultDateFrom = '';
        var defaultDateTo = '';

        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: jqueryDatePickerFormat(),
                beforeShow: function (input) {
                    $(input).css({
                        "position": "relative",
                        "z-index": '2000'
                    });
                }
            });
            $('#selectDistrict').marquee();
            $('#selectSchool').marquee();
            $('#selectTeacher').marquee();
            $('#selectReviewer').marquee();

        });

        $(function () {
            @if (!Model.IsPublisher && !Model.IsNetworkAdmin)
            {
                <text>
                    getDefaultInstructionPeriod();
                </text>
            }

            populateSGOFilterStatus();
            callInitDataTable();

            @if (Model.IsPublisher)
            {
                <text>
                $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                    populateStates(states);
                });
                </text>
            }
            else if (Model.IsNetworkAdmin)
            {
                <text>
                $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
                    populateStates(states);
                });
                </text>
            }
            else if(Model.IsDistrictAdmin)
            {
                <text>
                populateSchools();
                populateReviewers();
                </text>
            }
            else if(Model.IsSchoolAdmin)
            {
                <text>
                populateTeachers();
                populateReviewers();
                </text>
            }else
            {
                <text>
                populateReviewers();
                </text>
            }

        });

        function callInitDataTable() {
            setTimeout(function () {
                if ($.active == 0) { // Just call init datatables function when there is no active ajax request
                    initDataTables()
                } else {
                    callInitDataTable();
                }
            }, 500);
        }

        function initDataTables() {
            var options = {
                bServerSide: true,
                bAutoWidth: false,
                sAjaxSource: getAjaxSource(),
                iDisplayLength: 25,
                aaSorting: [[9, "desc"]],
                aoColumns: [
                    { sType: 'integer', sName: 'ID', bSearchable: false, bSortable: false, sClass: 'action-col-style' },
                    { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true, sClass: 'name-col-style' },
                    { sType: 'integer', sName: 'Version', bSearchable: true, bSortable: true, sClass: 'version-col-style' },
                    { sType: 'string', sName: 'Teacher', bSearchable: true, bSortable: true, sClass: 'teacher-col-style' },
                    { sType: 'string', sName: 'School', bSearchable: true, bSortable: true, sClass: 'school-col-style' },
                    { sType: 'string', sName: 'GradeIDs', bSearchable: true, bSortable: true, sClass: 'grade-col-style' },
                    { sType: 'string', sName: 'Course', bSearchable: true, bSortable: true, sClass: 'course-col-style' },
                    { sType: 'integer', sName: 'TotalStudent', bSearchable: true, bSortable: true, sClass: 'total-col-style' },
                    { sType: 'string', sName: 'StartDate', bSearchable: true, bSortable: true, sClass: 'startDate-col-style' },
                    { sType: 'string', sName: 'CreatedDate', bSearchable: true, bSortable: true, sClass: 'createdDate-col-style' },
                    { sType: 'string', sName: 'EffectiveStatus', bSearchable: true, bSortable: true, sClass: 'effective-col-style' },
                    { sType: 'string', sName: 'EffectiveStatusDate', bSearchable: true, bSortable: true, sClass: 'effectiveDate-col-style' },
                    { sType: 'string', sName: 'ApproverName', bSearchable: true, bSortable: true, sClass: 'approver-col-style' },
                    { sType: 'bool', sName: 'IsArchived', bSearchable: false, bSortable: false, bVisible: false },
                    { sType: 'bool', sName: 'IsOwner', bSearchable: false, bSortable: false, bVisible: false },
                    { sType: 'bool', sName: 'NotEdit', bSearchable: false, bSortable: false, bVisible: false }
                ],
                fnRowCallback: function (nRow, aData) {
                    $('td:eq(0)', nRow).html(setIconVisibilitySGO(aData[0], aData[13], aData[10], aData[12], aData[14], aData[15]));
                },
                fnPreDrawCallback: function () {
                    ShowBlock($('#dataTableSet'), "Loading");
                    return true;
                },
                fnDrawCallback: function () {
                    $('#dataTableSet').unblock();
                    $('.with-tip').tip();

                    var dataTable = $('#dataTableSet').dataTable();
                    dataTable.fnSetFilteringDelay(500);
                },
                fnInitComplete: function () {
                    tranformSearchInputDataTable('dataTableSet_filter');
                }
            };

            $("#dataTableSet").data("options", options);
        }

        function getAjaxSource() {
            var url = '@Url.Action("GetSGOInstance")/?stateId=' + GetStateId() + '&districtId=' + GetDistrictId() + '&isArchivedStatusActive=' + $('#chArchivedStatusActive').is(':checked')
                + '&isArchivedStatusArchived=' + $('#chArchivedStatusArchived').is(':checked')
                + '&sGOStatusIds=' + getSelectedSgoFilterStatus();

            @if (Model.IsPublisher || Model.IsNetworkAdmin || Model.IsDistrictAdmin || Model.IsSchoolAdmin) {
                <text>
                    url += '&schoolId=' + $('#selectSchool').val()
                        + '&teacherId=' + $('#selectTeacher').val()
                        + '&reviewerId=' + $('#selectReviewer').val()
                        + '&instructionPeriodFrom=' + $('#instructionPeriodFrom').val()
                        + '&instructionPeriodTo=' + $('#instructionPeriodTo').val();
                </text>
            }

            return url;
        }

        function setIconVisibilitySGO(sgoId, isArchived, sgoStatus, approverName, isOwner, isNotEdit) {
            var str = '';
            var editString = '';
            var archiveString = '';
            var unarchiveString = '';
            var print = '';
            var printNew = '';
            var reviewerString = '';
            var auditUrl = '';
            var auditString = '';
            if (isNotEdit == 'True') {
                if (sgoStatus != 'Draft') { // Do not allow non-owner user to review draft SGO
                    editString = '<a href="#" title="Review" class="with-tip Icon icon-sgo-main disabled"><i class="custom-icon fa-solid fa fa-pencil-square icon-grey"></i></a>';
                }
                archiveString = '<a href="#" title="Archive" class="with-tip Icon icon-sgo-main disabled"><i class="custom-icon fa-solid fa-eye-slash icon-grey"></i></a>';
                unarchiveString = '<a href="#" title="Unarchive"  class="with-tip Icon icon-sgo-main disabled"><i class="custom-icon fa-solid fa-eye icon-grey"></i></a>';
                print = '<a href="#" title="Print PDF" class="with-tip Icon icon-sgo-main disabled"><i class="custom-icon fa-solid fa-print icon-grey"></i></a>';
                reviewerString = '<a href="#" title="Change Reviewer" class="with-tip Icon icon-sgo-main disabled"><i class="custom-icon fa-solid fa-user icon-grey"></i></a>';
                if (isArchived == "True") {
                    str = editString + unarchiveString;
                } else {
                    str = editString + archiveString;
                }
                str = str + print;
                if (approverName != '') {
                    str = str + reviewerString;
                }

                var countIcon = (str.match(/icon-sgo-main/g) || []).length;
                if (countIcon % 2 == 0) {
                    auditString = '<a href="#" title="Display Audit Trail" class="with-tip Icon icon-sgo-main icon-sgo-left disabled"><i class="custom-icon fa-solid fa-search icon-grey"></i></a>';
                } else {
                    auditString = '<a href="#" title="Display Audit Trail" class="with-tip Icon icon-sgo-main disabled"><i class="custom-icon fa-solid fa-search icon-grey"></i></a>';
                }

                str += auditString;

            } else {
                if (isOwner == 'False') {
                    if (sgoStatus != 'Draft') { // Do not allow non-owner user to review draft SGO
                        editString = '<a href="javascript:void(0)" id="editSGO" title="Review" SGOID="' + sgoId + '" class="with-tip Icon icon-sgo-main"><i class="custom-icon fa-solid fa fa-pencil-square icon-grey"></i></a>';
                    }
                } else {
                    editString = '<a href="javascript:void(0)" id="editSGO" title="Edit" SGOID="' + sgoId + '" class="with-tip Icon icon-sgo-main"><i class="custom-icon fa-solid fa-pencil icon-grey"></i></a>';
                }

                archiveString = '<a href="javascript:void(0)" title="Archive" operation="1" SGOID="' + sgoId + '" class="archiveSGO with-tip Icon icon-sgo-main"><i class="custom-icon fa-solid fa-eye-slash icon-grey"></i></a>';
                unarchiveString = '<a href="javascript:void(0)" title="Unarchive" operation="0" SGOID="' + sgoId + '" class="unarchiveSGO with-tip Icon icon-sgo-main"><i class="custom-icon fa-solid fa-eye icon-grey"></i></a>';
                printNew = '<div onclick="sgoPrintConfirm(' + sgoId + ')" title="Print PDF" class="with-tip Icon icon-sgo-main"><i class="custom-icon fa-solid fa-print icon-grey"></i></div>';

                reviewerString = '<a href="javascript:void(0)" title="Change Reviewer" SGOID="' + sgoId + '" class="ChangeReviewer with-tip Icon icon-sgo-main"><i class="custom-icon fa-solid fa-user icon-grey"></i></a>';
                auditUrl = '@Url.Action("Index", "SGOAuditTrail")/index/' + sgoId;
                if (isArchived == "True") {
                    str = editString + unarchiveString;
                } else {
                    str = editString + archiveString;
                }
                str = str + printNew;
                if (approverName != '') {
                    str = str + reviewerString;
                }

                var countIcon = (str.match(/icon-sgo-main/g) || []).length;
                if (countIcon % 2 == 0) {
                    auditString = '<a href="' + auditUrl + '" title="Display Audit Trail" class="with-tip Icon icon-sgo-main icon-sgo-left jsAudittrail"><i class="custom-icon fa-solid fa-search icon-grey"></i></a>';
                } else {
                    auditString = '<a href="' + auditUrl + '" title="Display Audit Trail" class="with-tip Icon icon-sgo-main jsAudittrail"><i class="custom-icon fa-solid fa-search icon-grey"></i></a>';
                }

                str += auditString;
            }
            return str;
        }

        function populateSGOFilterStatus() {
            var selectedStatus = '@Model.SgoFilter.SGOStatusIds';
            $.each(selectedStatus.split(','), function (index, value) {
                $('input[name="chSgoFilterStatus"][value="' + value + '"]').prop("checked", true)
            });
        }

        function getSelectedSgoFilterStatus() {
            return $('input[name="chSgoFilterStatus"]:checked').map(function () {
                return this.value;
            }).get().join(",");
        }



        @if (Model.IsPublisher || Model.IsNetworkAdmin)
        {
            <text>
            $('#selectState').change(function () {
                populateDistricts();
            });
            $('#selectDistrict').change(function () {
                populateSchools();
                populateReviewers();
                getDefaultInstructionPeriod();
            });

            </text>
        }

        var isDistrictAdmin = '@Model.IsDistrictAdmin'.toLowerCase() == 'true';
        var isSchoolAdmin = '@Model.IsSchoolAdmin'.toLowerCase() == 'true';
        var isPublisher = '@Model.IsPublisher'.toLowerCase() == 'true';
        var isNetworkAdmin = '@Model.IsNetworkAdmin'.toLowerCase() == 'true';

        $('#selectSchool').change(function () {
            populateTeachers();
        });

        $('#btnFilterSubmit').click(function () {
            setupFilters();
        });

        $('#btnFilterReset').click(function () {
            // Check all checkboxes
            $('input[name="chSgoFilterStatus"]').each(function (index, element) {
                $(element).attr('checked', true);
            })

            if (isDistrictAdmin || isSchoolAdmin) {
                $('#chSgoStatusDraft').removeAttr('checked').removeClass('input-checked-v2');
                $('#selectReviewer').val(selectedReviewerID);
            }
            else {
                $('#selectReviewer').val('');
            }

            if (isSchoolAdmin) {
                $('#selectTeacher').val('select');
            }
            else {
                $("#selectTeacher option").remove();
                $('#selectSchool').val('select');
            }

            $('#instructionPeriodFrom').val(defaultDateFrom);
            $('#instructionPeriodTo').val(defaultDateTo);

            $('#chArchivedStatusArchived').removeAttr('checked').removeClass('input-checked-v2');
            $('#chArchivedStatusActive').attr('checked', true);
        })

        function populateStates(states) {
            addDefaultOption($('#selectState'), "State");
            addSelectListItemsWithSelectedValue($('#selectState'), states, '@Model.SgoFilter.StateId');
        }

        function populateDistricts() {
            $('#selectDistrict').empty();
            var stateValue = $('#selectState').val();
            if (stateValue != 'select') {
                if ('@Model.IsPublisher' === 'True') {
                    $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItemsWithSelectedValue($('#selectDistrict'), districts, '@Model.SgoFilter.DistrictId');
                    });
                }
                if ('@Model.IsNetworkAdmin' === 'True') {
                    $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItemsWithSelectedValue($('#selectDistrict'), districts, '@Model.SgoFilter.DistrictId');
                    });
                }
            }
        }

        function populateSchools() {
            $('#selectSchool').empty();
            var districtValue = GetDistrictId();
            if (districtValue != 'select') {
                $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function (schools) {
                    addDefaultOption($('#selectSchool'), "School");
                    addSelectListItemsWithSelectedValueIgnoreAutoSelectSingleOption($('#selectSchool'), schools, '@Model.SgoFilter.SchoolId');
                });
            }
        }

        var selectedReviewerID;
        function populateReviewers() {
            $('#selectReviewer').empty();
            var districtValue = GetDistrictId();
            if (districtValue != 'select') {
                $.get('@Url.Action("GetReviewers", "SGOManage")', { districtId: districtValue }, function (data) {
                    addDefaultOption($('#selectReviewer'), "Reviewer");
                    selectedReviewerID = '@Model.SgoFilter.ReviewerId';
                    addSelectListItemsWithSelectedValueIgnoreAutoSelectSingleOption($('#selectReviewer'), data, '@Model.SgoFilter.ReviewerId');
                });
            }
        }

        function populateTeachers() {
            $('#selectTeacher').empty();
            var schoolValue = GetSchoolId();
            if (schoolValue != 'select' && schoolValue > '0') {
                $.get('@Url.Action("GetTeachersForSGO", "PopulateSchoolTeacher")', { schoolId: schoolValue, hasTermOnly: 'True' }, function (teachers) {
                    addDefaultOption($('#selectTeacher'), "Teacher");
                    addSelectListWithDefaultValue($('#selectTeacher'), teachers, 'select', function (item) {
                        return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
                    });
                });
            }
        }

        function setupFilters() {
            var dataTable = $('#dataTableSet').dataTable();
            dataTable.fnSettings().sAjaxSource = getAjaxSource();
            dataTable.fnDraw();
        }

        function GetDistrictId() {
            if ($('#idhdfDistrictId').length > 0 && $('#idhdfDistrictId').val() > 0) {
                return $('#idhdfDistrictId').val();
            } else {
                if ($('#selectDistrict').val() > 0)
                    return $('#selectDistrict').val();
                else
                    return 0;
            }
        }

        function GetSchoolId() {
            if ($('#idhdfSchoolId').length > 0 && $('#idhdfSchoolId').val() > 0) {
                return $('#idhdfSchoolId').val();
            } else {
                if ($('#selectSchool').val() > 0)
                    return $('#selectSchool').val();
                else
                    return 0;
            }
        }

        function GetStateId() {
            if ($('#selectState').length > 0 && $('#selectState').val() > 0) {
                return $('#selectState').val();
            }

            return 0;
        }

        $('#createSGOBtn').live('click', function () {
            AddEditSGO(0);
        });

        $('#editSGO').live('click', function () {
            var sgoId = $(this).attr('SGOID');
            AddEditSGO(sgoId);
        });

        function AddEditSGO(id) {
            var url = '@Url.Action("LoadCreateSGO", "SGOManage")?id=' + id;
            $('#createSGOBtn').prop('disabled', true);
            $.ajax(
                {
                    url: url,
                    cache: false
                })
                .done(function (html) {
                    $("#divOnTop").append('<div id="PopupCreateNewSGO" class="dialog"></div>');
                    $("#PopupCreateNewSGO").append(html);
                    $('#PopupCreateNewSGO').dialog({
                        title: "",
                        open: function () {
                            $(this).parents('.ui-dialog').find('.ui-dialog-titlebar-close').remove();
                            //Create overlay for popup
                            $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                            $('#PopupCreateNewSGO').closest('.ui-dialog').css('top', '0');
                            $("html, body").scrollTop($("#dvCreateSGO").offset().top);
                        },
                        beforeclose: function () {
                            //TODO if you want do anything after close popup.
                            return true;
                        },
                        close: function () {
                            $('#PopupCreateNewSGO').remove();
                            $("body .my-overlay").remove();
                        },
                        modal: false,
                        width: 555,
                        resizable: false
                    });
                }).complete(function() {
                    $('#createSGOBtn').prop('disabled', false);
                });

            $(".close").unbind("click");
            $(".close").live("click", function (e) {
                e.preventDefault();
            });
        }

        function createSGO() {
            $('#idhdfIsUpdate').val('1');
            if (ValidSGOStartAndEndDate()) {
                SaveSGO($('#idhdfIsUpdate').val());
            }
        }

        function SaveSGO(isContinue) {
            if ($('#idhdfSGOID').val() != '0') {
                ShowBlock($('#idAddEditSGOFunction'), "Updating");
            } else {
                ShowBlock($('#idAddEditSGOFunction'), "Creating");
            }
            var vSGOId = $('#idhdfSGOID').val();
            var vName = htmlEncode($('#idSGOinputName').val());
            var vStartDate = $('#idSGOStartDate').val();
            var vEndDate = $('#idSGOEndDate').val();
            var assosiatedSchoolId = $('#selectAssociatedSchool').val();

            var vGrade = [];
            $('#idPopulateGrade input:checked').each(function () {
                vGrade.push($(this).attr('key'));
            });
            var vGradeIds = vGrade.join(',');

            var isUnstructuredSgo = $('#IsUnstructuredSgo').is(":checked");

            if (isUnstructuredSgo && (assosiatedSchoolId == '' || assosiatedSchoolId == 'select')) {
                CustomAlert('Please select Associated School.');
                return;
            }

            $.post('@Url.Action("CreateSGOByName", "SGOManage")', { ListGradeIds: vGradeIds, SGOId: vSGOId, StrName: vName, StrStartDate: vStartDate, StrEndDate: vEndDate, IsUnstructuredSgo: isUnstructuredSgo, assosiatedSchoolId: assosiatedSchoolId }, function (response) {

                if (response.Success == true) {
                    if (isContinue == '1') {
                        var url = "/SGOManage/StudentPopulation/" + response.sgoId;
                        if (isUnstructuredSgo) {
                            url = "/SGOScoringPlanTarget/Index?sgoId=" + response.sgoId;
                        }
                        window.location.href = url;
                    } else {
                        $("#dataTableSet").dataTable().fnReloadAjax();
                    }
                    $('#idAddEditSGOFunction').unblock();
                    $("#PopupCreateNewSGO").dialog("close");
                } else {
                    $('#idAddEditSGOFunction').unblock();
                    var alertMessage = '<div class="text-left">Create SOG Error, Please try again.</div>';
                    if (response.ErrorMessage != '') {
                        alertMessage = '<div class="text-left">' + response.ErrorMessage + '</div>';
                    }
                    showConfirmMess(alertMessage);
                }
            });
        }

        function htmlEncode(value) {
            //create a in-memory div, set it's inner text(which jQuery automatically encodes)
            //then grab the encoded contents back out.  The div never exists on the page.
            return $('<div/>').text(value).html();
        }

        function cancelCreateSGO() {
            $("#PopupCreateNewSGO").dialog("close");
        }

        function SaveAndReturn() {
            $('#idhdfIsUpdate').val('0');
            if (ValidSGOStartAndEndDate()) {
                SaveSGO($('#idhdfIsUpdate').val());
            }
        }

        function ValidSGOStartAndEndDate() {
            var strSGOName = $('#idSGOinputName').val();
            strSGOName = strSGOName.trim();
            var vMessage = '';
            if (strSGOName == '') {
                vMessage += '<li>Name is required</li>';
            }

            var vStartDate = new Date($('#idSGOStartDate').val());

            var vEndDate = new Date($('#idSGOEndDate').val());

            if (vStartDate.toString() != 'Invalid Date' && vEndDate.toString() != 'Invalid Date' && vStartDate > vEndDate) {
                vMessage += '<li>Start Date cannot be greater than End Date</li>';
            }

            if (vMessage.length > 0) {
                $('#error-messages').html(vMessage);
                $('#error-messages').show();
                $("html, body").scrollTop($("#dvCreateSGO").offset().top);
                return false;
            }

            //Validation Grdar
            var vGrade = [];
            $('#idPopulateGrade input:checked').each(function () {
                vGrade.push($(this).attr('key'));
            });
            if (vGrade.length == 0) {
                CustomAlert('You must first select a @string.Format("{0}(s)",LabelHelper.TestGrade).');
                return false;
            }

            return true;
        }

        function showConfirmMess(msg) {
            confirmMessageV2(
                {
                    message: msg,
                    cbYesBtnFuncName: 'confirmYes()',
                },
                {
                    dialogAttr: {
                        attr: {
                            id: 'confirmMessDialogCreateNewSGO'
                        }
                    }
                }
            )
        }

        function confirmYes() {
            $('#confirmMessDialogCreateNewSGO').dialog("close")
        }

        function confirmArchiveDialog(message, yesFn, closeFn) {
            var params = { message };

            if (yesFn) {
                params.cbYesBtnFuncName = yesFn;
            } else {
                params.cbYesBtnFuncName = 'cancelArchiveDialog()';
            }

            if (!closeFn) {
                params.cbCancelBtnFuncName = 'cancelArchiveDialog()'
            }
            confirmMessageV2(
                params,
                {
                    dialogAttr: {
                        attr: {
                            id: 'confirmArchiveDialog'
                        }
                    }
                }
            )
        }

        function cancelArchiveDialog() {
            $("#confirmArchiveDialog").dialog("close");
        }

        $('#dataTableSet').on('click', '.archiveSGO', function () {
            $('.with-tip').hideTip();
            var sgoId = $(this).attr('SGOID');
            var confirmMessage = "Are you sure you want to archive this SGO and hide it from the default view? (You can always unarchive it later.)";
            confirmArchiveDialog(confirmMessage, `processArchiveSGO(${sgoId})`);
        });

        $('#dataTableSet').on('click', '.unarchiveSGO', function () {
            $('.with-tip').hideTip();
            var sgoId = $(this).attr('SGOID');
            var confirmMessage = "Are you sure you want to unarchive this SGO?";
            confirmArchiveDialog(confirmMessage, `processArchiveSGO(${sgoId})`);
        });

        function processArchiveSGO(sgoId) {
            $.post('@Url.Action("ArchiveSGO", "SGOManage")', { sgoId: sgoId }, function (response) {
                if (response.Success == true) {
                    $('#dataTableSet').dataTable().fnDraw();
                } else {
                    var alertMessage = '<div class="text-left">Archive SOG Error, Please try again.</div>';
                    showConfirmMess(alertMessage);
                }
            });
            cancelArchiveDialog();
        }

        //SGO Print Function /////////////////////////////////////////////////
        function sgoPrintConfirm(sgoId) {
            var url = '@Url.Action("LoadPrintConfirm", "SGOManage")?sgoId=' + sgoId;
            $.ajax({ url: url, cache: false })
                .done(function (html) {
                    $("#divOnTop").append('<div id="idPopupSGOPrintConfirm" class="dialog"></div>');
                    $("#idPopupSGOPrintConfirm").append(html);
                    $('#idPopupSGOPrintConfirm').dialog({
                        title: "",
                        open: function () {
                            $(this).parents('.ui-dialog').find('.ui-dialog-titlebar-close').remove();
                            //Create overlay for popup
                            $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                        },
                        beforeclose: function () {
                            //TODO if you want do anything after close popup.
                            return true;
                        },
                        close: function () {
                            $('#idPopupSGOPrintConfirm').remove();
                            $("body .my-overlay").remove();
                        },
                        modal: false,
                        width: 390,
                        resizable: false
                    });
                });
        }

        function closeSGOPrintPopup() {
            $("#idPopupSGOPrintConfirm").dialog("close");
        }

        function printreportSGO(sgoId, sgoName, userId) {
            $('#idbtSGOSentToPrinter').disableBt();
            $('#idbtnSGOSavePDFFile').disableBt();
            ShowBlock($('#idPopupSGOPrintConfirm'), "Generating PDF");
            $('.blockUI.blockOverlay').css("background-color", "transparent");
            $('.blockUI.blockMsg.blockElement').css("top", "37px");

            var reportFileName = "SGO_" + sgoName + '_' + userId + '_' + (new Date()).getTime() + "_.pdf";
            var data = {
                SgoId: sgoId,
                ReportFileName: reportFileName,
                TimezoneOffset: new Date().getTimezoneOffset()
            };
            $.ajax({
                url: '@Url.Action("Generate", "SGOReport")',
                traditional: true,
                type: 'POST',
                data: data,
                success: function (response) {
                    //TODO: Somethings
                },
                failure: function (response) {
                    CustomAlert(response);
                },
                timeout: 300000
            });
            getSGOReportS3File(reportFileName);
        }

        function getSGOReportS3File(checkUrl) {
            $.ajax({
                url: '@Url.Action("GetSGOReportS3File", "SGOReport")',
                type: 'POST',
                data: { fileName: checkUrl },
                success: function (response) {
                    if (response.Result != true) {
                        setTimeout(function () {
                            getSGOReportS3File(checkUrl);
                        }, 3000);
                    } else {
                        $('#idlinkSGOFilePrint').attr('href', response.Url);
                        $('#idlinkSGOFilePrint').show();
                        $('#idPopupSGOPrintConfirm').unblock();
                    }
                }
            });
        }

        //Change Reviewer /////////////////////////////////////////////////
        $('.ChangeReviewer').live('click', function () {
            var sgoId = $(this).attr('SGOID');
            var url = '@Url.Action("ChangeReviewer", "SGOManage")?sgoId=' + sgoId;
            $.ajax({ url: url, cache: false })
                .done(function (html) {
                    $("#divOnTop").append('<div id="PopupChangeReviewer" class="dialog"></div>');
                    $("#PopupChangeReviewer").append(html);
                    $('#PopupChangeReviewer').dialog({
                        title: "",
                        open: function () {
                            $(this).parents('.ui-dialog').find('.ui-dialog-titlebar-close').remove();
                            //Create overlay for popup
                            $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                        },
                        beforeclose: function () {
                            //TODO if you want do anything after close popup.
                            return true;
                        },
                        close: function () {
                            $('#PopupChangeReviewer').remove();
                            $("body .my-overlay").remove();
                        },
                        modal: false,
                        width: 555,
                        resizable: false
                    });
                });
        });

        function ChangeReviewer(sgoId) {
            ShowBlock($('#SubmitForReviewSection'), "Saving");
            var data = { SGOID: sgoId, DistrictAdminID: $('#DistrictAdminID').val() };
            var url = '@Url.Action("ChangeReviewerPost", "SGOManage")';
            $.ajax({
                type: 'post',
                url: url,
                data: data,
                datatype: 'json'
            }).success(function (data) {
                if (data.Status === 'success') {
                    $('#success-message').show();
                    setTimeout(function () {
                        CancelSubmitForReview();
                        $('#dataTableSet').dataTable().fnDraw();
                    }, 3000);
                } else if (data.Status === 'fail') {
                    $('#error-messages').text(data.Error);
                    $('#error-messages').show();
                }
            }).always(function () {
                $('#SubmitForReviewSection').unblock();
            });
        }

        function CancelSubmitForReview() {
            $("#PopupChangeReviewer").dialog("close");
        }

        function CancelChangeReviewer() {
            $("#PopupChangeReviewer").dialog("close");
        }

        $('#btnExtractTeacherData').live('click', function () {
            var self = $(this);
            var clickable = self.attr('clickable') === 'true';
            if (clickable) {
                var url = '@Url.Action("ExportTeacherData")/?stateId=' + GetStateId() + '&districtId=' + GetDistrictId() + '&isArchivedStatusActive=' + $('#chArchivedStatusActive').is(':checked')
                + '&isArchivedStatusArchived=' + $('#chArchivedStatusArchived').is(':checked')
                + '&sGOStatusIds=' + getSelectedSgoFilterStatus();
                url += '&schoolId=' + $('#selectSchool').val()
                    + '&teacherId=' + $('#selectTeacher').val()
                    + '&reviewerId=' + $('#selectReviewer').val()
                    + '&instructionPeriodFrom=' + $('#instructionPeriodFrom').val()
                    + '&instructionPeriodTo=' + $('#instructionPeriodTo').val();

                window.location.href = url;
            } else {
                showConfirmMess('There is no signed off SGO');
            }
        });

        function getDefaultInstructionPeriod() {
            var districtValue = GetDistrictId();
            if (districtValue > 0) {
                $.get('@Url.Action("GetDefaultInstructionPeriod", "SGOManage")', { districtID: districtValue }, function (result) {
                    defaultDateFrom = result.dateFrom;
                    defaultDateTo = result.dateTo;
                    $('#instructionPeriodFrom').val(result.dateFrom);
                    $('#instructionPeriodTo').val(result.dateTo);
                });
            }
        }

    </script>
}
