@model LinkIt.BubbleSheetPortal.Web.ViewModels.LearningLibrarySearchViewModel
@{
    ViewBag.Title = "Resource Admin";
}
<style type="text/css">
	html{overflow-x: auto;}
    .plButton
    {
        text-align: center;
        position: relative;
        top: 47px;
    }

    #btnOk
    {
        width: 79px;
        margin-right: 10px;
    }
</style>
<style type="text/css">
    .positionAdd
    {
        position: relative;
        right: -6px;
        top: 26px;
    }

    button
    {
        margin-left: 30px;
    }

    .ui-widget-header
    {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog
    {
        background: transparent;
        border: 0;
        /*top: 100px !important;*/
        height: auto !important;
    }

    .ui-dialog .ui-dialog-titlebar-close
    {
        position: absolute;
        right: 7px;
        top: -8px;
    }

    .ui-widget-header .ui-icon
    {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon
    {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick
    {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover
    {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close
    {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay
    {
        background: #2b2b2d !important;
    }

    #studentContent
    {
        position: relative;
    }
    .img-center
    {
        text-align: center !important;
    }

</style>
<style type="text/css">
    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
        top: 100px !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        position: absolute;
        right: 7px;
        top: -8px;
    }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay {
        background: #2b2b2d !important;
    }

    .table thead td {
        color: #000 !important;
        text-shadow: 0 0px;
    }

    .ui-widget-header {
        position: relative;
        z-index: 9999;
    }

    .ui-widget-content {
        z-index: 1002;
    }

    #divListLockbankdl2 .block-footer {
        margin-top: 0px !important;
    }

    .uploadify-button {
        background-image: url("/Content/themes/Constellation/images/icons/fugue/icon-plus.png");
        text-indent: -9999px;
    }

    .uploadify-button,
    .uploadify:hover,
    .uploadify-button:hover {
        background-color: transparent !important;
        border: 0px solid white !important;
    }
    .uploadify:hover .uploadify-button {
        background-image: url("/Content/themes/Constellation/images/icons/fugue/icon-plus.png");
        background-color: white;
        background-position: center bottom;
    }

    #divListLockbankdl1 .bubbleSheetSelector select {
        min-width: 50px !important;
        width: 70px;
    }
</style>
<script type="text/javascript">
    function AddSelectListItems(selectList, results, defaultValue) {
        if (results == null) {
            return;
        }
        if (results.length == 0) {
            return;
        }
        selectList.append($("<option></option>").attr("value", "-1").text(defaultValue));
        $.each(results, function (i, value) {
            selectList
                .append($("<option></option>")
                    .attr("value", value.Id)
                    .text(value.Name));
        });

    }

    $(function () {

        $('#filterSheets').unbind('click');
        $('#filterSheets').click(function () {
            $('#hdReceiveParameters').val('');//clear keywords parameter whenever user click on Apply Filter button
            SetupFilters();
        });

        $('#clearFilter').unbind('click');
        $('#clearFilter').click(function () {
            $('input[type=text]').each(function (index) {
                $(this).val('');
            });

            var dataTable = $('#lessonDataTableAdmin').dataTable();
            var settings = dataTable.fnSettings();
            settings.oPreviousSearch.sSearch = '';//TuanVo: clear current search text that user input in Search Box
            fnResetAllFilters(settings);

            $('#selectType').get(0).selectedIndex = 0;
            $('#selectSubject').get(0).selectedIndex = 0;

            //Reload database
            SetupFilters();
        });

    });

    function SetupFilters() {
        //alert('SetupFilters Admin');
        SetupFiltersLesson();
    }


    function fnResetAllFilters(oSettings) {
        for (var iCol = 0; iCol < oSettings.aoPreSearchCols.length; iCol++) {
            oSettings.aoPreSearchCols[iCol].sSearch = '';

        }
    }



</script>
<article class="container_12">
    <section class="grid_12">
        <div class="block-border" id="selectFilters">
            <div id="divFilterLessons" class="block-content form bubbleSheetSelector">
                <h1>Filter Learning Resources

                </h1>
                <fieldset>
                    <div class="columns">
                        <div class="colx2-left">
                            <div class="mb-3">
                                <label>@LabelHelper.GradeLabel</label>
                                <input type="text" id="selectGrade" class="full-width with-tip"/>
                            </div>
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>Content Provider</label>

                                <div class="block-text-name ">
                                    <select id="selectProvider" class="full-width" ></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="colx2-right">
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>@LabelHelper.Subject</label>

                                <div class="block-text-name ">
                                    <select id="selectSubject" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>Type</label>

                                <div class="block-text-name ">
                                    <select id="selectType" class="full-width"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <button id="filterSheets" class="float-right" type="button">Apply Filters</button>
                <button id="clearFilter" class="float-right grey" type="button" style="margin-right: 5px;">Clear Filter</button>
                <div class="clear"></div>

            </div>
        </div>
        <br />
        <br />
        <div class="block-border" id="divLessons">
            <div class="block-content form">
                <h1>Learning Resources
                       <a href="javascript:void(0)" onclick="redirectToResourcePage(0)">
                        <img src="@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png")" />
                        Add New Resource
                    </a>
                    <div class="clearfix"></div>
                </h1>
                <p style="height: 11px"></p>
                <div id="divTestStudentAssignments" class="no-margin last-child">
                    <table id="lessonDataTableAdmin" class="datatable table no-margin" width="100%">
                        <thead>
                            <tr>
                                <th scope="col" class="black-cell"><span class="loading"></span></th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Subject
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    @LabelHelper.GradeLabel
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Resource Name
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Type
                                </th>
                                <th scope="col" >
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Content Provider
                                </th>
                                <th scope="col" style="display: none"></th><!--Lesson.ProviderThumbnail-->
                                <th scope="col" style="display: none"></th><!--Lesson.LessonPath-->
                                <th scope="col" style="display: none"></th><!--Lesson.GuidePath-->
                                <th scope="col" style="display: none"></th><!--Lesson.Keywords-->
                                <th scope="col" style="display: none"></th><!--Lesson.StandardGUIDString-->
                                <th scope="col" style="display: none"></th><!--Lesson.StandardDescriptionString-->
                                <th scope="col" style="display: none"></th><!--Lesson.StandardSubjectString-->
                                <th scope="col" style="display: none"></th><!--Lesson.StandardNumberString-->


                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td style="height: 60px;"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div id="dialogManualGrading"></div>
        <input type="hidden" id="hdGUID"/>
        <input type="hidden" id="hdParameterPageLoad"/>
        <input type="hidden" id="hdKeyWords"/>
        <input type="hidden" id="hdSearchType"/>
        <input type="hidden" id="hdGradeSearch" name="hdGradeSearch"/>
    </section>
</article>

<script type="text/javascript">
    $(function () {
        $('#selectProvider').marquee();
        $('#selectSubject').marquee();
        $('#selectType').marquee();
        $('.lessons').addClass('current');
        $('#resourceAdminTab').addClass('current');

        if ('@Model.HasParameter' == 'True') {
            innitDropdownListDistrict(@Model.ContentProviderIdParameter);
        }
        else {
            innitDropdownListDistrict(@Model.CurrentUserDistrictId);
        }
        if ('@Model.IsPublisher' != 'True' && '@Model.IsNetworkAdmin' != 'True') {//non-publisher,non-networkadmin
            $("#selectProvider").prop("disabled", true);
        }

        $.get('@Url.Action("GetLessonContentTypes","LearningLibrarySearch")', function (data) {
            AddSelectListItems($('#selectType'), data, 'All');
            if ('@Model.HasParameter' == 'True') {
                $('#selectType').val(@Model.ResourceTypeIdParameter);
            }
            //put ajax here to maket sure the synchornous
            $.get('@Url.Action("GetLessonSubjects","LearningLibrarySearch")', function (data) {
                AddSelectListItems($('#selectSubject'), data, 'All');
                if ('@Model.HasParameter' == 'True') {
                    $('#selectSubject').val(@Model.SubjectIdParameter);
                }
                LoadLessonsToTable();

            });
        });

        $.ajaxSetup({ cache: false });

    });

    $(document).ready(function () {
        if ('@Model.HasParameter' == 'True') {
            $('#divLessons').show();
            $('#selectGrade').val('@Model.GradeParameter');
            $('#selectGrade').val($('#selectGrade').html('@Model.GradeParameter').text());
            $("#hdGradeSearch").val(encodeURIComponent($('#selectGrade').val()));
        }

        $('#hdParameterPageLoad').val('Y');//set this hidden field value to 'Y' tell us know that this is the first time search by receiving parameter, after that its value will be reset to empty

        var gradeToolTip = 'To specify grades, use the formats:' + '<br>' +
            'Range: 8-12' + '<br>' +
            'Specific grades: 5,7,8' + '<br>' +
            'Where 9-12 is the actual grade*: “9-12”*' + '<br>' +
            'Combination: 5,7,8,9-12,”9-12”';

        $("#selectGrade").attr("title", '<p style="text-transform: none !important;text-align:left;font-size: 11px !important;">' + gradeToolTip + '</p>');

    });

    function redirectToResourcePage(lessonId) {
        //Need to pass search criteria to server
        var gradeSearch = $("#selectGrade").val();
        gradeSearch = encodeURIComponent(gradeSearch);//if gradeSearch contents html tag like <a, <p> will issues error when posting to server, need to encode and then decode in server

        var contentProviderIdSearch = $("#selectProvider").val();
        var subjectIdSearch = $("#selectSubject").val();
        var resourceTypeIdSearch = $("#selectType").val();
        var filterSearch = $("#lessonDataTableAdmin_filter input:first").val();
        filterSearch = encodeURIComponent(filterSearch);

        if (contentProviderIdSearch == null || contentProviderIdSearch == 'select' || contentProviderIdSearch == '') {
            contentProviderIdSearch = '0';
        }
        if (subjectIdSearch == null || subjectIdSearch == 'select' || subjectIdSearch == '') {
            subjectIdSearch = '0';
        }
        if (resourceTypeIdSearch == null || resourceTypeIdSearch == 'select' || resourceTypeIdSearch == '') {
            resourceTypeIdSearch = '0';
        }
        //alert('ggg2: ' + gradeSearch);
        //alert('fff2: ' + filterSearch);
        var link = '@Url.Action("Resource")';
        link += '/?id=' + lessonId + '&gradeSearch=' + gradeSearch + '&contentProviderIdSearch=' + contentProviderIdSearch + '&subjectIdSearch=' + subjectIdSearch + '&resourceTypeIdSearch=' + resourceTypeIdSearch + '&filterSearch=' + filterSearch;
        link = encodeURI(link);
        //alert('iii1: '+ link);
        window.location.href = link;
    }

    function innitDropdownListDistrict(selectedDistrictID) {
        var dropdownSelector = '#selectProvider';
        //alert('ddddd:' + selectedDistrictID);
        $.ajax({
            url: '@Url.Action("GetProviders")',
            dataType: 'json',
            async: false,
            success: function (districts) {
                if (districts.length == 0) {//No provider available for selecting
                    //add one item with id = 0 to indicate LearningLibrarySearchController.GetLessons filter with contentProviderId = 0 -> no result
                    $(dropdownSelector).html('<option value="0">No Results Found</option>');
                } else {

                    addDefaultProviderOption($(dropdownSelector), "All");
                    //reset Select All -> All
                    addSelectListWithDefaultValue($(dropdownSelector), districts, selectedDistrictID);
                }

            },
            beforeSend: function () {
            },
            complete: function () {
            }
        });
    }
    function LoadLessonsToTable() {

        var options = {
            bServerSide: true,
            bDestroy: true,
            bProcessing: false,
            sAjaxSource: '@Url.Action("GetLessons","LearningLibrarySearch")',
            cache: false,
            sServerMethod: "POST",
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "grade", value: $('#hdGradeSearch').val() },
                    { name: "subjectId", value: $('#selectSubject').val() },
                    { name: "contentProviderId", value: $('#selectProvider').val() },
                    { name: "typeId", value: $('#selectType').val() },
                    { name: "resourceAdminSearch", value: 'true' }

                );
                //TuanVo: When page load, set the sSearch as Keywords parameter to let dataTable search
                if ($('#hdParameterPageLoad').val().length > 0) {
                    var item = null;
                    for (var i = 0; i < aoData.length; i++) {
                        item = aoData[i];
                        if (item.name == 'sSearch') {
                            $("#hdKeyWords").val('@Model.KeywordsParameter');
                            item.value = $("#hdKeyWords").html('@Model.KeywordsParameter').text();
                            //alert('iii3:' + item.value);
                            do {
                                item.value = item.value.replace('""', '"');
                            } while (item.value.indexOf('""') >= 0)

                            if (item.value == '"') {
                                item.value = item.value.replace('"', "''");
                            } else {
                                item.value = encodeURIComponent(item.value);
                            }
                            //alert('iii4:' + item.value);
                            break;
                        }
                    }
                } else {
                    var item = null;
                    for (var i = 0; i < aoData.length; i++) {
                        item = aoData[i];
                        if (item.name == 'sSearch') {
                            //when passing parameter to searchbox then click on allpy filter, tabase does not recognize parameter, need to assign parameter to searchbox manually
                            if (item.value.length == 0 && $("input[aria-controls|='lessonDataTableAdmin']").val().length > 0) {
                                item.value = $("input[aria-controls|='lessonDataTableAdmin']").val();
                            }

                            do {
                                item.value = item.value.replace('""', '"');
                            } while (item.value.indexOf('""') >= 0)

                            if (item.value == '"') {
                                item.value = item.value.replace('"', "''");
                            } else {
                                item.value = encodeURIComponent(item.value);
                            }
                            break; //only process searchbox
                        }
                    }
                }
            },
            iDisplayLength: 25,
            aaSorting: [[1, "asc"], [2, "asc"], [3, "asc"], [4, "asc"], [5, "asc"]],
            oLanguage: { "sEmptyTable": "No results found" },
            aoColumns: [
                { sType: 'int', sName: 'LessonId', bSearchable: true, bSortable: false, bVisible: true, sWidth: '55px' },
                { sType: 'string', sName: 'SubjectName', bSearchable: true, bSortable: true, bVisible: true, sWidth: '120px' },
                { sType: 'string', sName: 'GradeOrderString', bSearchable: true, bSortable: true, bVisible: true, sWidth: '80px', sClass: 'wordwrap' },
                { sType: 'string', sName: 'LessonName', bSearchable: true, bSortable: true, bVisible: true, sWidth: '400px' },
                { sType: 'string', sName: 'LessonType', bSearchable: true, bSortable: true, bVisible: true, sWidth: '100px' },
                { sType: 'string', sName: 'Provider', bSearchable: true, bSortable: true, bVisible: true, sWidth: '150px' },
                { sType: 'string', sName: 'ProviderThumbnail', bSearchable: false, bSortable: false, bVisible: false, sWidth: '120px' },
                { sType: 'string', sName: 'LessonPath', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'GuidePath', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'Keywords', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'StandardGUIDString', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'StandardDescriptionString', bSearchable: false, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'StandardSubjectString', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'StandardNumberString', bSearchable: true, bSortable: false, bVisible: false },
                { sType: 'string', sName: 'Grade', bSearchable: false, bSortable: false, bVisible: false }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).parent().addClass('tableRow');
                $('td:eq(0)', nRow).html(SetIconVisibilityLesson(aData[0], aData[7], aData[8], aData[3]));//TuanVo
                $('td:eq(2)', nRow).html(AdjustGrade(aData[14]));
                $('td:eq(5)', nRow).html(SetIconContentProvider($('td:eq(5)', nRow), aData[5], aData[6]));
                $('td:eq(3)', nRow).html($('<div/>').text(aData[3]).html());//encode html
                $('td:eq(4)', nRow).html($('<div/>').text(aData[4]).html());//encode html

                return nRow;
            },
            fnPreDrawCallback: function () {
                $('#filterSheets').attr("disabled", "disabled");
                ShowBlock($('#lessonDataTableAdmin'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#divLessons').unblock();
                $('#filterSheets').removeAttr("disabled");
                $('#lessonDataTableAdmin').unblock();

                var searchBoxToolTip = "Words separated by a space will be treated as separate search criteria. " + '<br>' +
                    "For example, the search argument 'economics linkit' will yield results " + '<br>' +
                    "with either 'economics' or 'linkit' in subject, @LabelHelper.GradeLabel, name, type, or " + '<br>' +
                    "keywords associated with the resource.";

                $("input[aria-controls|='lessonDataTableAdmin']").attr("title", '<p style="text-transform: none !important;text-align:left;font-size: 11px !important;">' + searchBoxToolTip + '</p>');
                $("input[aria-controls|='lessonDataTableAdmin']").addClass('with-tip');
                $('.with-tip').tip();

                //After the first loading data from database, display the keyword parameter on Search box and set search box value (set to settings.oPreviousSearch.sSearch)
                if ($('#hdParameterPageLoad').val().length > 0) {
                    //settings.oPreviousSearch.sSearch = '@Model.KeywordsParameter';
                    $("input[aria-controls|='lessonDataTableAdmin']").val('@Model.KeywordsParameter');//set value for the search box
                    $("input[aria-controls|='lessonDataTableAdmin']").val($("input[aria-controls|='lessonDataTableAdmin']").html('@Model.KeywordsParameter').text());//set value for the search box

                    $('#hdParameterPageLoad').val('');// reset empty for this value to make sure that this code block can be run only one time when page load ( the first time)
                }

                var dataTable = $('#lessonDataTableAdmin').dataTable();
                dataTable.fnSetFilteringDelay(500);//TuanVo: delay searching when user type in search box to save time of query

                return true;

            },
            fnInitComplete: function () {

            }
        };
        $("#lessonDataTableAdmin").data("options", options);

    }
    function displayClassDetailTooltip(e, data) {
        $(e).attr('title', '<p style="text-align:left;">' + data.split('|').join('<br />') + '</p>');
    }

    function SetIconVisibilityLesson(lessonId, lessonPath, guidePath, lessonName) {
        var iconString = "";
        lessonName = $('<div/>').text(lessonName).html();//encode html

        var editIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        //var editString = '<a href="/LearningLibraryAdmin/Resource/' + lessonId + '" title="Edit" class="with-tip"><img src="' + editIcon + '" width="16" height="16" style="margin-right: 4px"></a>';
        var editString = '<a href="javascript:void(0)" onclick="redirectToResourcePage(' + lessonId + ')" title="Edit" class="with-tip"><img src="' + editIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        var deleteIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
        var deleteString = '<a href="javascript:void(0)" title="Delete" operation="1" lessonId="' + lessonId + '" lessonName="' + lessonName + '" class="with-tip deleteResource actionIcon"><img src="' + deleteIcon + '" width="16" height="16"></a>';

        iconString = editString + deleteString + iconString;

        return iconString;
    }

    $('#lessonDataTableAdmin').on('click', '.deleteResource', function () {

        var self = $(this);
        var lessonId = self.attr('lessonId');
        var lessonName = self.attr('lessonName');
        //lessonName = $('<div/>').text(lessonName).html();//encode html

        if (confirm('Do you want to delete this resource ' + '"' + lessonName + '"' + ' ?')) {
            var data = self.closest('.dialog');

            self.hide();

            $.post('@Url.Action("DeleteResource")', { lessonId: lessonId }, function (response) {
                    if (response.Success == 'success') {
                        ui.lessonDataTableAdmin.fnDraw();

                    } else {
                        alert(response.errorMessage);
                    }
                });
            }
     });


    function SetIconContentProvider(td,providerName, providerThumbnail) {
            if (providerName == null) {
            providerName = '';
        }
        providerName = $('<div/>').text(providerName).html();//encode html
        if (providerThumbnail == null) {
            providerThumbnail = '';
        }
        var providerContent =  providerName ;
        //In the content provider field, display the logo (if it is available) or the name of the content provider (if no logo is available)
        if (providerThumbnail.length > 0) {
            var url = providerThumbnail;
            providerContent = '<img src ="' + url + '" height="30"  style="margin-top: -5px; margin-bottom: -5px; margin-left: 0px; margin-right: 0px">';
            td.addClass('img-center');
        }


        return providerContent;
    }

    function addDefaultProviderOption(selectList, objectText) {
        selectList.empty();
        selectList
            .append($("<option></option>")
                .attr("value", "select")
                .text(objectText));
    }

    function AdjustGrade(grade) {
        if (grade == null)
            return '';
        var s = grade;
        var newGrade = '';
        var defaultSplitLength = 15;
        var pos = 0;
        do {
            if (s.length > defaultSplitLength) {
                pos = defaultSplitLength;
                //find the first ',' before the character index of defaultSplitLength
                for (var i = defaultSplitLength; i--; i >= 0) {
                    if (s[i] == ',') {
                        pos = i;
                        break;
                    }
                }
                newGrade += s.substring(0, pos + 1);
                s = s.substring(pos + 1, s.length);
                if (s.length > 0) {
                    newGrade += "<br>";
                }
                if (s.length < defaultSplitLength) {
                    newGrade += s;
                }

            } else {
                newGrade += s;
            }

        } while (s.length > defaultSplitLength)

        return newGrade;
    }

</script>

<script type="text/javascript">
    function SetupFiltersLesson() {

        $('#divLessons').show();
        ShowBlock($('#divLessons'), 'Loading');

        //encode grade
        $("#hdGradeSearch").val(encodeURIComponent($('#selectGrade').val()));

        var dataTable = $('#lessonDataTableAdmin').dataTable();
        var settings = dataTable.fnSettings();
        fnResetAllFilters(settings);
        dataTable.fnDraw();
        dataTable.fnSetFilteringDelay(500);//TuanVo: delay searching when user type in search box to save time of query
    }


</script>
