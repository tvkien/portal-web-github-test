<style type="text/css">
    .grid_10 {
        margin-left: 0px;
        margin-right: 0px;
        width: 834px !important;
    }

    tr.even.row_selected td {
        background-color: var(--blue7) !important;
    }

    tr.odd.row_selected td {
        background-color: var(--blue7) !important;
    }

    #dataTableAvailableGrades_wrapper {
        padding: 1.5rem;
        padding-top: 0
    }

    .my-dropdown-container {
        display: flex;
        align-items: flex-end;
        gap: 18px;
        margin-bottom: 1.5rem
    }

        .my-dropdown-container div {
            width: 33%;
        }

    #dataTableMasterStandards_wrapper, #dataTableAssignedMasterStandards_wrapper {
        margin: 0;
    }

    .ui-dialog-titlebar-close {
        right: 2rem !important;
        top: 1.625rem !important;
    }

    #dataTableMasterStandards_wrapper table tbody td:nth-child(2):not(:empty) {
        text-align: center !important;
    }

    .myTableContainer {
        max-height: 400px;
        overflow: auto;
        border: 1px solid var(--borderColor);
    }

        .myTableContainer .table {
            border-collapse: separate !important
        }

        .myTableContainer table th {
            position: sticky;
            z-index: 2;
            top: 0;
            /*box-shadow: inset 0 0.5px 0 var(--borderColor);*/
            border-top: none !important;
            border-right: none !important;
        }

        .myTableContainer table tbody td {
            border-top: none !important;
            border-right: none !important;
        }
        .myTableContainer table tbody tr:last-child td {
  /*          border-bottom: none !important;
            box-shadow: inset 0 -0.5px 0 var(--borderColor)*/
        }

        .myTableContainer table .delete-border-left-table {
            border-left: none !important;
        }
    .subTitle {
        font-weight: 700 !important;
        font-size: 16px !important;
        line-height: 32px !important;
        color: var(--navyColor) !important;
    }
</style>
<section>
    <div class="block-border">
        <div class="block-content form" style="padding:1.5rem">
            <h1 style="font-size: 1.375rem; padding: 0;">
                Assign Master Standard For Lesson
            </h1>
            <p style="height: 5px">
                <div id="masterStandardNotInLessonNotifications"></div>

            </p>
            <div>
                <div>
                    <fieldset>
                        <div class="columns">
                            <div class="colx2-left">

                                <div class="my-dropdown-container">
                                    <div id="states" class="block-content-dropdown-marquee">
                                        <div class="block-text-name" style="width:100%">
                                            <select id="selectState" onchange="ddlStateChange()"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="block-content-dropdown-marquee">
                                        <div class="block-text-name" style="width:100%">
                                            <select id="selectSubject1" onchange="ddlSubjectChange()"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="block-content-dropdown-marquee">
                                        <div class="block-text-name" style="width:100%">
                                            <select id="selectGrade" onchange="ddlGradeChange()"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <label class="subTitle" style="position: absolute; margin-top: 1rem">State Standards</label>
                                <div>
                                    <table id="dataTableMasterStandards" class="datatable table no-margin" style="height:100%; width: 100%">
                                        <thead>
                                            <tr>
                                                <th scope="col" style="width: 15px"></th>
                                                <th scope="col">Actions</th>
                                                <th scope="col">
                                                    <span class="column-sort">
                                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                    </span>
                                                    Number
                                                </th>
                                                <th scope="col">
                                                    <span class="column-sort">
                                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                    </span>
                                                    Description
                                                </th>
                                                <th scope="col"  style="width: 15px"></th><!--CountChildren-->
                                                <th scope="col"></th><!--ParentGUID-->
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="colx2-right">
                                <div style="width: 100%; margin-top: auto;">
                                    <label class="subTitle" style="position:absolute; margin-top:1rem" id="lblAssociatedStandards">Associated Standards</label>
                                    <div>
                                        <table id="dataTableAssignedMasterStandards" class="datatable table no-margin" width="100%">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Actions</th>
                                                    <th scope="col">
                                                        <span class="column-sort">
                                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                        </span>
                                                        Number
                                                    </th>
                                                    <th scope="col">
                                                        <span class="column-sort">
                                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                        </span>
                                                        Description
                                                    </th>
                                                    <th scope="col">
                                                        <span class="column-sort">
                                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                        </span>
                                                        State
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>

            </div>
            <input type="hidden" id="hiddenCurrentParentGUID" />
            <input type="hidden" id="hiddenChildParentView" />

        </div>

    </div>
    <div style=" background: var(--navyColor); height: 70px; display: flex; align-items: center; justify-content: center;">
        <button id="btnCloseUserClick" type="button" class="btn-accept" data-dialog="close">Close</button>
        <input type="hidden" id="SelectedParentMasterStandardGUID" />
    </div>
</section>

<script type="text/javascript">
    var oTable;
    $(function () {
        PopulateStandards();
        PopulateAssignedStandards();
        setTimeout(function () {
            $('#selectState').marquee();
            $('#selectSubject1').marquee();
            $('#selectGrade').marquee();
        },500)

        //innitDropdownListGrade();
        $("#hiddenCurrentParentGUID").val('');
        $("#hiddenChildParentView").val('viewchild');

        function bindEvents() {
            $(document).on('click', 'button[data-dialog="close"]', function (e) {


                var self = $(e.target);
                self.closest('.dialog').dialog('close');
            });

        }

        bindEvents();
    });

    function PopulateStandards() {

        var options = {
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetMasterStandard")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "lessonId", value: 0 },
                    { name: "state", value: $("#selectState").val() },
                    { name: "subject", value: $("#selectSubject1 option:selected").text() },
                    { name: "grade", value: $("#selectGrade").val() },
                    { name: "childParentView", value: $("#hiddenChildParentView").val() },
                    { name: "parentGUID", value: $("#hiddenCurrentParentGUID").val() }
                );

                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        //when passing parameter to searchbox then click on allpy filter, tabase does not recognize parameter, need to assign parameter to searchbox manually
                        if (item.value.length == 0 && $("input[aria-controls|='dataTableMasterStandards']").val().length > 0) {
                            item.value = $("input[aria-controls|='dataTableMasterStandards']").val();
                        }

                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''");
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;//only process searchbox
                    }
                }
            },
            bAutoWidth: false,
            iDisplayLength: 25,
            //sScrollY: "400px",
            //bScrollCollapse: true,
            aaSorting: [[2, "asc"]],
            aoColumns: [
                { sType: 'string', sName: 'GUID', bSearchable: false, bSortable: false, bVisible: true },
                { sType: 'integer', sName: 'MasterStandardId', bSearchable: false, bSortable: false, bVisible: true, sWidth: '80px', sClass: 'col-action' },
                { sType: 'string', sName: 'Number', bSearchable: true, bSortable: true, sWidth: '100px' },
                { sType: 'string', sName: 'Description', bSearchable: true, bSortable: true },
                { sType: 'integer', sName: 'CountChildren', bSearchable: false, bSortable: false, bVisible: true, sWidth: '36pxpx'  },
                { sType: 'string', sName: 'ParentGUID', bSearchable: false, bSortable: false, bVisible: false }
            ],

            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconViewParentStandards(aData[1], aData[5]));
                $('td:eq(1)', nRow).html(setIconVisibilityNotMatch(aData[1]));
                $('td:eq(4)', nRow).html(setIconViewChildStandards(aData[1], aData[0], aData[4]));
                if (aData[0] == null || aData[0] == '') {
                    $('td:eq(4)', nRow).html('');
                } else {
                    $('td:eq(4)', nRow).html(setIconViewChildStandards(aData[1], aData[0], aData[4]));
                }
                $('td:eq(1)', nRow).parent().attr('id', aData[4]);//Add attribute Id for each tr as GUID

                return nRow;
            },
            fnPreDrawCallback: function (oSettings) {
                ShowBlock($('#dataTableMasterStandards'), "Loading");
                return true;
            },
            fnDrawCallback: function (oSettings) {
                $('#dataTableMasterStandards').unblock();
                $('.with-tip').tip();
                $('#dataTableMasterStandards_wrapper .block - controls').css('marginTop', '100px');
                var dataTable = oTable.fnGetData()
                modifyColumnViewTable(dataTable)
                modifyFirstColumnTable('dataTableMasterStandards')
                modifyHeightTableAssignedMasterStandards()
            },
            fnInitComplete: function () {
                innitDropdownListState(@ViewBag.StateId);
                tranformSearchInputDataTable('dataTableMasterStandards_filter')
                $('#dataTableMasterStandards').wrap('<div class="myTableContainer"></div>');
            }
        };

        $("#dataTableMasterStandards").data("options", options);
        initializeDataTable($("#dataTableMasterStandards"));
        oTable = $('#dataTableMasterStandards').dataTable();
    }

    function setIconVisibilityNotMatch(id) {
        var addDisplayed = 'none';
        var deleteDisplayed = 'none';
        var standardIdList = $("#AssignedStandardIdString").val();
        if (standardIdList == null) {
            standardIdList = '';
        }

        if (standardIdList.indexOf(',-'+id + '-') >= 0) {
            deleteDisplayed = 'inline';
        } else {
            addDisplayed = 'inline';//if standard has not been assigned, display green icon,else display the red icon
        }


        var addIcon = '<i class="icon fa-solid fa-circle-plus icon-green";></i>';
        var addString = '<a id="iconAdd_' + id + '" href="javascript:void(0)" title="Assign Standard" masterStandardId="' + id + '" class="with-tip assignMasterStandard" style="display:' + addDisplayed  + '">' + addIcon + '</a>';

        var deleteIcon = '<i class="icon fa-solid fa-circle-minus icon-red";></i>';
        var deleteString = '<a id="iconDelete_' + id + '" href="javascript:void(0)" title="Remove" operation="1" masterStandardId="' + id + '" class="with-tip removeAssignedMasterStandard" style="display:' + deleteDisplayed  + '">' + deleteIcon + '</a>';


        var result = '';
        result = addString + deleteString;
        return result;

    }

    function setIconViewChildStandards(id, guid, countChildren) {

        if (countChildren > 0) {
            var viewChildrenIcon = '<i class="icon fa-solid fa-circle-chevron-right icon-grey"></i>';
            return '<a href="javascript:void(0)" title="View Child Standards" masterStandardId="' + id + '" class="with-tip" onclick="loadStandard(' + "'" + guid + "','viewchild')"  + '">' + viewChildrenIcon + '</a>';
        } else {
            return '';

        }

    }
    function setIconViewParentStandards(id, parentGuid) {
        if (parentGuid == null) {
            parentGuid = '';
        }
        if (parentGuid.length >= 36) {
            //var addIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/viewparentstandard.png")';
            var addIcon = '<i class="icon fa-solid fa-circle-chevron-left icon-grey"></i>';
            return '<a href="javascript:void(0)" title="View Parent Standards" masterStandardId="' + id + '" class="with-tip" onclick="loadStandard(' + "'" + parentGuid + "','viewparent')" + '">'  + addIcon  + '</a>';
        } else {
            return '';
        }
    }
    function resetFilterChildStandard(guid) {
        guid = guid.replace("'", "");
        //call child datatable to query database
        //call table to query database and redisplay
        $("#SelectedParentMasterStandardGUID").val(guid);//get id from tr element
        var dataTable = $('#dataTableAssignedMasterStandards').dataTable();
        dataTable.fnDraw();//fnDraw will automatically get value from SelectedParentMasterStandardGUID to query (see PopulateChildStandard)
    }
    function loadStandard(parentGuid,view) {
        $("#hiddenChildParentView").val(view);
        //alert(parentGuid);
        //alert(view);
        parentGuid = parentGuid.replace("'", "");
        $("#hiddenCurrentParentGUID").val(parentGuid);
        ui.dataTableMasterStandards.fnDraw();
    }

    function PopulateAssignedStandards() {

        var optionsStudentNotInClass = {
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetAssignedMasterStandardsByState")',
            fnServerParams: function (aoData) {
                aoData.push(
                    { name: "lessonId", value: 0 },
                    { name: "standardIdString", value: $("#AssignedStandardIdString").val() },
                    { name: "stateId", value: $("#selectState").val() }
                );

                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        //when passing parameter to searchbox then click on allpy filter, tabase does not recognize parameter, need to assign parameter to searchbox manually
                        if (item.value.length == 0 && $("input[aria-controls|='dataTableAssignedMasterStandards']").val().length > 0) {
                            item.value = $("input[aria-controls|='dataTableAssignedMasterStandards']").val();
                        }

                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''");
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;//only process searchbox
                    }
                }
            },
            bAutoWidth: false,
            iDisplayLength: 25,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'MasterStandardId', bSearchable: false, bSortable: false, sWidth: '36px', sClass: 'col-action' },
                { sType: 'string', sName: 'Number', bSearchable: true, bSortable: true ,sWidth:'100px'},
                { sType: 'string', sName: 'Description', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'State', bSearchable: false, bSortable: false, bVisible: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconVisibilityNotMatch(aData[0]));
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableAssignedMasterStandards'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableAssignedMasterStandards').unblock();
                $('.with-tip').tip();
                $('#dataTableAssignedMasterStandards_wrapper .block - controls').css('marginTop', '100px');
                modifyFirstColumnTable('dataTableAssignedMasterStandards')
                modifyHeightTableAssignedMasterStandards()
            },
            fnInitComplete: function () {
                tranformSearchInputDataTable('dataTableAssignedMasterStandards_filter')
                $('#dataTableAssignedMasterStandards').wrap('<div class="myTableContainer"></div>');
            }
        };

        $("#dataTableAssignedMasterStandards").data("options", optionsStudentNotInClass);
        initializeDataTable($("#dataTableAssignedMasterStandards"));

        $('.control-next').css('margin-right', '0px');

        $('#dataTableMasterStandards .assignMasterStandard').die("click");
        $('#dataTableMasterStandards').on('click', '.assignMasterStandard', function () {
            //if (confirm("Do you want to assign this master standard to this lesson?"))
            {
                var self = $(this);

                var masterStandardId = self.attr('masterStandardId');

                self.hide();

                var standardIdList = $("#AssignedStandardIdString").val();//AssignedGradeIdString is declared in AddResource.cshtml
                if (standardIdList == null) {
                    standardIdList = '';
                }
                standardIdList = standardIdList + ",-" + masterStandardId + "-";
                $("#AssignedStandardIdString").val(standardIdList);
                LinkIt.success('#masterStandardNotInLessonNotifications', 'Master standard assigned');
                ui.dataTableAssignedMasterStandards.fnDraw();
                PopulateAssignedMasterStandards(standardIdList);

                $("#iconAdd_" + masterStandardId).hide();
                $("#iconDelete_" + masterStandardId).show();

            }
        });

        $('#dataTableAssignedMasterStandards .removeAssignedMasterStandard').die("click");
        $('#dataTableAssignedMasterStandards').on('click', '.removeAssignedMasterStandard', function () {
            //if (confirm("Do you want to remove this master standard from this lesson?")) {
                var self = $(this);

                var masterStandardId = self.attr('masterStandardId');

                self.hide();
                $("#iconAdd_" + masterStandardId).show();
                $("#iconDelete_" + masterStandardId).hide();
                LinkIt.success('#masterStandardNotInLessonNotifications', 'Master standard removed');


                var standardIdList = $("#AssignedStandardIdString").val();//AssignedGradeIdString is declared in AddResource.cshtml
                if (standardIdList == null) {
                    standardIdList = '';
                }
                standardIdList = standardIdList.replace(',-' + masterStandardId + '-','');
                $("#AssignedStandardIdString").val(standardIdList);
                ui.dataTableAssignedMasterStandards.fnDraw();
                ui.dataTableMasterStandards.fnDraw();
            PopulateAssignedMasterStandards(standardIdList);

            //}
        });

        $('#dataTableMasterStandards .removeAssignedMasterStandard').die("click");
        $('#dataTableMasterStandards').on('click', '.removeAssignedMasterStandard', function () {
            //if (confirm("Do you want to remove this master standard from this lesson?")) {
            var self = $(this);

            var masterStandardId = self.attr('masterStandardId');

            self.hide();
            $("#iconAdd_" + masterStandardId).show();
            $("#iconDelete_" + masterStandardId).hide();
            LinkIt.success('#masterStandardNotInLessonNotifications', 'Master Standard Removed');


            var standardIdList = $("#AssignedStandardIdString").val();//AssignedGradeIdString is declared in AddResource.cshtml
            if (standardIdList == null) {
                standardIdList = '';
            }
            standardIdList = standardIdList.replace(',-' + masterStandardId + '-', '');
            $("#AssignedStandardIdString").val(standardIdList);
            ui.dataTableMasterStandards.fnDraw();
            ui.dataTableAssignedMasterStandards.fnDraw();
            PopulateAssignedMasterStandards(standardIdList);

            //}
        });
    }
    function innitDropdownListState(stateId) {
        var dropdownSelector = '#selectState';

        $.ajax({
            url: '@Url.Action("GetStates")',
            dataType: 'json',
            async: false,
            success: function (data) {
                addDefaultProviderOption($(dropdownSelector), "Select State");
                //reset Select All -> All
                addSelectListWithDefaultValue($(dropdownSelector), data, stateId);

            },
            beforeSend: function () {
            },
            complete: function () {
                $.get('@Url.Action("GetStateCode")\?stateId=' + $(dropdownSelector).val(), function (data1) {
                    if (data1.StateCd.length > 0) {
                        $("#lblAssociatedStandards").text('Associated Standards (For ' + data1.StateCd + ' )');
                    }
                });
            }
        });
    }
    function innitDropdownListSubject(stateId) {
        var dropdownSelector = '#selectSubject1';

        $.ajax({
            data: { stateId: stateId},
            url: '@Url.Action("GetSubjectMasterStandardState")',
            dataType: 'json',
            async: false,
            success: function (data) {
                //addDefaultProviderOption($(dropdownSelector), "Select Subject");
                addSelectListWithDefaultValue($(dropdownSelector), data, 0);
            },
            beforeSend: function () {
            },
            complete: function () {
            }
        });
    }
    function innitDropdownListGrade() {
        var dropdownSelector = '#selectGrade';
        var subject = $("#selectSubject1 option:selected").text();
        $.ajax({
            url: '@Url.Action("GetStateSubjectGradeByStateAndSubject")\?stateId=' +$("#selectState").val()+ '&subject=' + encodeURI(subject),
            dataType: 'json',
            async: false,
            success: function (data) {
                addDefaultProviderOption($(dropdownSelector), "Select @LabelHelper.TestGrade");
                addSelectListWithDefaultValue($(dropdownSelector), data, 0);
            },
            beforeSend: function () {
            },
            complete: function () {
            }
        });
    }
    function addDefaultProviderOption(selectList, objectText) {
        selectList.empty();
        selectList
            .append($("<option></option>")
                .attr("value", "select")
                .text(objectText));
    }
    function ddlStateChange() {
        //ShowBlock($('#addMasterStandardDialog'), "Loading");
        var dropdownSelector = '#selectState';
        var selectedValue = $(dropdownSelector).val();
        $('#selectSubject1').empty();
        $("#lblAssociatedStandards").text('Associated Standards');
        if (selectedValue != 'select') {
            innitDropdownListSubject(selectedValue);
            $.get('@Url.Action("GetStateCode")\?stateId=' + selectedValue, function (data) {
                if (data.StateCd.length > 0) {
                    $("#lblAssociatedStandards").text('Associated Standards (for ' + data.StateCd + ' )');
                }
            });
        }
        ui.dataTableAssignedMasterStandards.fnDraw();
        //empty dropdownlist grade
        $("#selectGrade").attr("disabled", true);
        $("#selectGrade").empty();

    }
    function ddlSubjectChange() {
         //ShowBlock($('#addMasterStandardDialog'), "Loading");
        $("#selectGrade").empty();
        $("#selectGrade").attr("disabled", true);
        if ($("#selectSubject1").val() != 'select' && $("#selectSubject1").val() != '0' && $("#selectSubject1").val() != 'Select @LabelHelper.Subject') {
            //call grade change to filter
            if ($("#selectGrade").val() != 'select' && $("#selectGrade").val() != '0') {
                //enable dropdownlist grade
                $("#selectGrade").attr("disabled", false);
                $("#selectGrade").empty();

                innitDropdownListGrade();
            }
        }
    }
    function ddlGradeChange() {

        if($("#selectState").val()=='select'||$("#selectState").val()=='0') {
            alertMessageAvaiStandard("Please select a State");
            return;
        }
        if($("#selectSubject1").val()=='select'||$("#selectSubject1").val()=='0') {
            alertMessageAvaiStandard("Please select a @LabelHelper.Subject");
            return;
        }

        if($("#selectGrade").val()!='select' && $("#selectGrade").val()!='0') {
            //call table to query database and redisplay
            $("#hiddenCurrentParentGUID").val('');
            $("#hiddenChildParentView").val('viewchild');
            var dataTable = $('#dataTableMasterStandards').dataTable();
            dataTable.fnDraw();
            $("#SelectedParentMasterStandardGUID").val('');
            //clear child
            //dataTable = $('#dataTableAssignedMasterStandards').dataTable();

            //dataTable.fnDraw();
        }

    }
    function modifyColumnViewTable(dataTable) {
        var columnDataViewParentDom = $('#dataTableMasterStandards_wrapper table thead tr th:first-child, #dataTableMasterStandards_wrapper table tbody tr td:first-child:not(".dataTables_empty")')
        var columnDataViewChildDom = $('#dataTableMasterStandards_wrapper table thead tr th:last-child, #dataTableMasterStandards_wrapper table tbody tr td:last-child:not(".dataTables_empty")')
        if (dataTable.length) {
            var columnDataViewParent = [];
            var columnDataViewChild = 0;
            for (var i = 0, len = dataTable.length; i < len; i++) {
                columnDataViewParent.push(dataTable[i][5]);
                columnDataViewChild += dataTable[i][4]
            }
            if (columnDataViewParent.join('').length === 0) {
                columnDataViewParentDom.hide()
            } else {
                columnDataViewParentDom.show()
            }
            if (columnDataViewChild === 0) {
                columnDataViewChildDom.hide()
            } else {
                columnDataViewChildDom.show()
            }
        } else {
            columnDataViewParentDom.hide()
            columnDataViewChildDom.hide()
        }
    }
    //Because use  border-collapse: separate so need to trick border of column. Morever, the table is dynamic column so this script to draw correctly
    function modifyFirstColumnTable(id) {
        $('#' + id + ' thead th').removeClass("delete-border-left-table");
        $('#' + id + ' thead td').removeClass("delete-border-left-table");
        //Update Header: first column
        $('#' + id + ' thead th:visible:first').each(function () {
            $(this).addClass('delete-border-left-table')
        })
        //Update Tbody: first column
        $('#' + id + ' tbody tr').each(function () {
            $(this).find('td:visible:first').addClass('delete-border-left-table');
        });
    }
    function modifyHeightTableAssignedMasterStandards() {
        $('.myTableContainer .dataTables_empty').each(function () {
            $(this).css('height', 'auto')
        });
        var heightHeaderTable = $('.myTableContainer thead').first().height()
        var heightTableMasterStandards = $('#dataTableMasterStandards').height()
        if (heightTableMasterStandards > 400) {
            $('.myTableContainer').css('min-height', '400px');
            $('.myTableContainer .dataTables_empty').css('height', 400 - heightHeaderTable - 2 + 'px');
        } else {
            var heightTableAssignedMasterStandards = $('#dataTableAssignedMasterStandards').height();
            var minHeightTable = heightTableMasterStandards > heightTableAssignedMasterStandards ? heightTableMasterStandards : heightTableAssignedMasterStandards
            $('.myTableContainer').each(function () {
                $(this).css('min-height', minHeightTable + 'px')
            });
            setTimeout(function () {
                $('.myTableContainer .dataTables_empty').each(function () {
                    $(this).css('height', minHeightTable - heightHeaderTable - 2 + 'px')
                });
            },300)
        }
    }

</script>
