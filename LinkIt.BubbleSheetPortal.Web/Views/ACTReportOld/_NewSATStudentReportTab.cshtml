@model LinkIt.BubbleSheetPortal.Web.ViewModels.ACTReport.ACTReportViewModel
<script src="@Url.Content("~/Scripts/TagIt/js/tag-it.js")" type="text/javascript"></script>
<link  href="@Url.Content("~/Scripts/TagIt/css/jquery.tagit.css")" rel="stylesheet" type="text/css"/>
<link  href="@Url.Content("~/Scripts/TagIt/css/tagit.ui-zendesk.css")" rel="stylesheet" type="text/css"/>

@*<link href="@Url.Content("~/Content/css/sgohome.css")" rel="stylesheet" type="text/css" />*@
@LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.StyleSGOHomeBundle()

<fieldset id="dateRangeContentSAT" class="grey-bg coolfieldset">
    <input type="hidden" id="enableDateRangeSAT" value="false"/>
    <input type="hidden" id="VirtualTestIdsForAllTestSAT" value="false"/>
    <legend id="dateRangeContentLegendSAT">Select Test Date Range</legend>
    <div class="columns">
        <div class="colx2-left">
            <p>
                <label>From Date</label>
                <span class="sgo-datetime" style="display: inline-block">
                    <input name="resultDateFromSAT" style="font-size: 1.083em; padding: 0.385em; width: 235px;" readonly="readonly" id="resultDateFromSAT"/>
                    <span class="icon-sgo-calendar"></span>
                </span>
            </p>
        </div>
        <div class="colx2-right">
            <p>
                <label>To Date</label>
                <span class="sgo-datetime" style="display: inline-block">
                    <input name="resultDateToSAT" style="font-size: 1.083em; padding: 0.385em; width: 235px;" readonly="readonly" id="resultDateToSAT"/>
                    <span class="icon-sgo-calendar"></span>
                </span>
            </p>
        </div>
    </div>
</fieldset>
<p>
    <input type="checkbox" id="chkLimitTestTakingClassSAT" />
    <label for="chkLimitTestTakingClass">Limit to test-taking classes</label>
</p>
@if (Model.IsPublisher || Model.IsNetworkAdmin)
{
    <fieldset id="publisherContentSAT" class="grey-bg">
        <legend>Select State/@LabelHelper.DistrictLabel</legend>
        <div class="columns">
            <div class="colx2-left">
                <p>
                    <label>State</label>
                    <select id="selectStateSAT"></select>
                </p>
            </div>
            <div class="colx2-right">
                <p>
                    <label>@LabelHelper.DistrictLabel</label>
                    <select id="selectDistrictSAT"></select>
                </p>
            </div>
        </div>
    </fieldset>
}
<fieldset class="grey-bg">
    <legend>Select Test</legend>
    <div class="columns">
        <div class="wraptag" style="max-width: 686px; padding-bottom: 15px;">
            <ul id="selectedTestListSAT" class="tagit ui-widget ui-widget-content ui-corner-all" style="display: none;"></ul>
        </div>
        <div class="colx2-left">            
            <p>
                <label>@LabelHelper.GradeLabel</label>
                <select id="selectGradeSAT"></select>
            </p>
            <p>
                <label>@LabelHelper.Subject</label>
                <select id="selectSubjectSAT"></select>
            </p>
        </div>
        <div class="colx2-right">            
            <p>
                <label>Bank</label>
                <select id="selectBankSAT"></select>
            </p>
            <p>
                <label>Test</label>
                <select id="selectTestSAT"></select>
            </p>
            <p>
                <button class="float-left" id="btnPublishTestSAT" type="button" style="margin-left: 0px;display:none" disabled="disabled">Publish students</button>
            </p>
        </div>
    </div>
</fieldset>
<div class="clear"></div>
<fieldset class="grey-bg">
    <legend>Select Students</legend>
    <div id="divSingleClass" class="columns">
        <div class="colx2-left">
            <p>
                <label>School</label>
                <select id="selectSchoolSAT"></select>
            </p>
            <p>
                <label>Teacher</label>
                <select id="selectTeacherSAT"></select>
            </p>
        </div>
        <div class="colx2-right">            
            <p>
                <label>
                    @LabelHelper.Term
                </label>
                <select id="selectTermSAT"></select>
            </p>
            <p>
                <label>Class</label>
                <select id="selectClassSAT"></select>
            </p>
        </div>
    </div>
    <div id="studentContentSAT" style="display: none">
        <div class="tabs-content" style="margin-bottom: 10px;">
            <div class="columns" id="studentsListSAT">
                <ul id="studentsSAT" class="generate-student-list generate-student-list-custom with-icon icon-user student-col"></ul>
            </div>
            <div class="clear"></div>
        </div>
        <div>
            <button type="button" name="select-all" onclick="selectAllStudentsSAT()">Select All</button>
            <button type="button" name="select-none" onclick="selectNoStudentsSAT()">Select None</button>
            <button type="button" name="invert-select" onclick="invertSelectedStudentsSAT()">Invert Selection</button>
        </div>
    </div>
    <div id="divMultiClassSAT" style="display: none;">
    </div>
</fieldset>
<div class="clear"></div>

<fieldset class="grey-bg" id="fsReportContentOption">
    <legend>Report Content Options</legend>
    <div class="columns">
        <div class="colx2-left">
            <p>
                <label>Options</label>
                <select id="selectReportContentOption">
                    <option value="1">Include scores only</option>
                    <option value="2">Include scores and essays</option>
                    <option value="3">Include essays only</option>
                </select>
            </p>
        </div>
        <div class="colx2-right">
        </div>
    </div>
</fieldset>

@if (Model.IncludeStateInformation)
{
    <fieldset class="grey-bg" id="ksReportContentOption">
        <legend>Report Content Options</legend>
        <div class="columns">
            <div class="colx2-left">
                <p>
                    <label>Include State Information</label>
                    <select id="selectStateInformation">
                    </select>
                </p>
            </div>
            <div class="colx2-right">
            </div>
        </div>
    </fieldset>
}


<button class="float-right" id="btnSubmitSAT" type="button">Generate</button>
<div class="clear"></div>

<script type="text/javascript">
    var selectedTagsDictSAT = {};
    $.ajaxSetup({ cache: false });
    function beforeTagItAdded() {
        var tagId = $('#selectTestSAT').val();
        if (tagId != undefined && tagId != 'select') {
            // Clear "All tests" tag when adding 1st item
            if (countSelectedTagsSAT() == 0) {
                $('#selectedTestListSAT .tagit-choice').hide();
            }

            selectedTagsDictSAT[$('#selectTestSAT option:selected').text()] = tagId; //remember Id of selected tag
        }
    }
    $(function () {
        @{ 
            var CONTROLLER = "SATReportV2";
        }
        $('#dateRangeContentSAT').coolfieldset({ collapsed: true });

        $('#dateRangeContentLegendSAT').toggle(
            function () { showdateRangeContentSAT(); },
            function () { hidedateRangeContentSAT(); }
        );

        function showdateRangeContentSAT() {
            $('#enableDateRangeSAT').val('true');
            $('#selectedTestListSAT').show();

            clearSelectTestTabSAT();
            clearSelectStudentTabSAT();
            populateGradesSAT();
        }

        function hidedateRangeContentSAT() {
            $('#enableDateRangeSAT').val('false');
            $('#selectedTestListSAT').hide();

            clearSelectTestTabSAT();
            clearSelectStudentTabSAT();
            populateGradesSAT();
        }


        $("#selectedTestListSAT").tagit({
            beforeTagAdded: function (event, ui) {

            },
            beforeTagRemoved: function (event, ui) {
                console.log('beforeTagRemoved');
                //clear the selected tag out of memory
                delete selectedTagsDictSAT[ui.tagLabel];

                updateSelectedTestsSAT();
                clearSelectStudentTabSAT();
                populateTestsSAT();
            }
        });
        $('#selectedTestListSAT').find('.ui-autocomplete-input').attr('readonly', true); // Disallow to type into selected test tagit

        $('input[name="resultDateFromSAT"]').datepicker({
            dateFormat: jqueryDatePickerFormat(),
            beforeShow: function(input, inst) {
                $('#ui-datepicker-div').addClass('datepicker-sgo');
            }
        }).datepicker('setDate', '@Model.ResultDateFrom');

        $('input[name="resultDateToSAT"]').datepicker({
            dateFormat: jqueryDatePickerFormat(),
            beforeShow: function(input, inst) {
                $('#ui-datepicker-div').addClass('datepicker-sgo');
            }
        }).datepicker('setDate', '@Model.ResultDateTo');

        @if (Model.IsPublisher)
        {
            <text>
        $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
            populateStatesSAT(states);
        });

        </text>
        }
        else if (Model.IsNetworkAdmin)
        {
            <text>
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                populateStatesSAT(states);
            });
            </text>
        }
        else
        {
            <text>
                populateGradesSAT();
            </text>
        }

        $('#resultDateFromSAT').change(function () {
            reloadContentWhenChangingResultDateSAT();
        });

        $('#resultDateToSAT').change(function () {
            reloadContentWhenChangingResultDateSAT();
        });

        function reloadContentWhenChangingResultDateSAT() {
            clearSelectTestTabSAT();
            clearSelectStudentTabSAT();
            populateGradesSAT();
        }

        $('#selectStateSAT').change(function () {
            $('#selectDistrictSAT').empty();
            clearSelectTestTabSAT();
            clearSelectStudentTabSAT();

            if ($('#selectStateSAT').val() != 'select') {
                populateDistrictsSAT();
            }
        });

        $('#selectDistrictSAT').change(function () {
            clearSelectTestTabSAT();
            clearSelectStudentTabSAT();

            populateGradesSAT();
        });

        $('#selectGradeSAT').change(function () {
            $('#selectSubjectSAT').empty();
            $('#selectBankSAT').empty();
            $('#selectTestSAT').empty();

            updateSelectedTestsSAT();
            clearSelectStudentTabSAT();

            populateSubjectsSAT();
        });

        $('#selectSubjectSAT').change(function () {
            $('#selectBankSAT').empty();
            $('#selectTestSAT').empty();

            updateSelectedTestsSAT();
            clearSelectStudentTabSAT();
            populateBanksSAT();
        });

        $('#selectBankSAT').change(function () {
            $('#selectTestSAT').empty();

            updateSelectedTestsSAT();
            clearSelectStudentTabSAT();
            populateTestsSAT();
        });

        $('#selectTestSAT').change(function () {
            clearSelectStudentTabSAT();

            if ($('#enableDateRangeSAT').val() == 'true') {
                var testId = $('#selectTestSAT').val();
                if (testId != 'select' && testId != '') {
                    beforeTagItAdded();
                    $("#selectedTestListSAT").tagit("createTag", $('#selectTestSAT option:selected').text());
                    $('#selectTestSAT option:selected').remove();
                }
            }

            if (getSelectedTagsSAT() != '') {

                var virtualTestIdString = getSelectedTagsSAT();
                var vSelectDistrict = $('#selectDistrictSAT').val();
                var resultDateFrom = getResultDateFromSAT();
                var resultDateTo = getResultDateToSAT();
                var isGetAllClass = getIsGetAllClassSAT();

                $.get('@Url.Action("MultipleTestGetSchools", "PopulateReporting")', { virtualTestIdString: virtualTestIdString, districtId: vSelectDistrict, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: isGetAllClass }, function (schools) {
                    if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                        populateSchoolsSAT(schools);
                    }
                });
            }
        });

        $('#btnPublishTestSAT').click(function () {
            if (getSelectedTagsSAT() == '') {
                //CustomAlert('No test is selected.');
                return;
            }

            clearSelectStudentTabSAT();

            var virtualTestIdString = getSelectedTagsSAT();
            var vSelectDistrict = $('#selectDistrictSAT').val();
            var resultDateFrom = getResultDateFromSAT();
            var resultDateTo = getResultDateToSAT();

            $.get('@Url.Action("MultipleTestGetSchools", "PopulateReporting")', { virtualTestIdString: virtualTestIdString, districtId: vSelectDistrict, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo }, function (schools) {
                    populateSchoolsSAT(schools);
                });
        });

        $('#selectSchoolSAT').change(function () {
            $('#selectTeacherSAT').empty();
            $('#selectTermSAT').empty();
            $('#selectClassSAT').empty();
            $('#studentContentSAT').hide();
            if ($('#selectSchoolSAT').val() != 'select') {
                populateTeachersSAT();
            }
        });

        $('#selectTeacherSAT').change(function () {
            $('#selectClassSAT').empty();
            $('#selectTermSAT').empty();
            $('#studentContentSAT').hide();
            $('#studentsSAT').html('');

            if ($('#selectTeacherSAT').val() != 'select') {
                populateTermsSAT();
            }
        });

        $('#selectTermSAT').change(function () {
            populateClassesSAT();
        });

        $('#selectClassSAT').change(function () {
            populateStudentsSAT();
        });

        $('#btnSubmitSAT').click(function (e) {

            if (getSelectedTagsSAT() == '0') {
                CustomAlert('No test is selected.');
                return;
            }

            if (getIsGetAllClassSAT()) {
                var classValue = $('#selectClassSAT').val();
                var isClassSelected = classValue != 'select' && classValue != '' && classValue != null;

                if (!isClassSelected) {
                    CustomAlert('Please select a class to generate report.');
                    return;
                }
            }

            //clear error message
            $("#error-messages").html('');
            $("#error-messages").hide();


            //ShowBlock($('#ACTPageContent'), "Generating reports");

            $('#btnSubmitSAT').disableBt();
            ShowBlock($('#dataTable'), 'Generating reports');


            var studentsIdSelected = [];

            $(".student-item[isSelected=yes]").each(function () {
                studentsIdSelected.push($(this).attr('studentId'));
            });

            var timezoneOffset = new Date().getTimezoneOffset();
            var reportFileName = "SAT_" + (new Date()).toString("MM-dd-HH-mm") + "_" + getRandomString();
            var reportingUrl = '@Url.Action("CheckGenerateNewSATRequest", CONTROLLER)';
            var isGetAllClass = getIsGetAllClassSAT();

            var data = {
                StrTestIdList: getSelectedTagsSAT,
                DistrictId: $('#selectDistrictSAT').val(),
                SchoolId: $('#selectSchoolSAT').val(),
                TeacherId: $('#selectTeacherSAT').val(),
                DistrictTermId: $('#selectTermSAT').val(),
                ClassId: $('#selectClassSAT').val(),
                ResultDateFrom: getResultDateFromSAT(),
                ResultDateTo: getResultDateToSAT(),
                StudentIdList: studentsIdSelected,
                TimezoneOffset: timezoneOffset,
                ActReportFileName: reportFileName,
                ReportContentOption: $('#selectReportContentOption').val(),
                StateInformationId: $('#selectStateInformation').val(),
                isGetAllClass: isGetAllClass
            };

            $.ajax({
                url: reportingUrl,
                traditional: true,
                type: 'POST',
                data: data,
                success: function (response) {
                    if (response.Result == true) {
                        $('#error-messages').hide();

                        $.ajax({
                            url: '@Url.Action("StoreSpecializedReportJobSession","AccessSession")/?specializedReportJobId=' + response.SpecializedReportJobId,
                            traditional: true,
                            type: 'POST',
                            data: data,
                            success: function (response) {
                                startLoadingSpecializedReportJob(); // PopulateReporting/_SpecializedReportDownload.cshtml
                            }
                        });

                        reportingUrl = '@Url.Action("GenerateNewSAT", CONTROLLER)';
                        var isGetAllClass = getIsGetAllClassSAT();

                        data = {
                            StrTestIdList: getSelectedTagsSAT,
                            DistrictId: $('#selectDistrictSAT').val(),
                            SchoolId: $('#selectSchoolSAT').val(),
                            TeacherId: $('#selectTeacherSAT').val(),
                            DistrictTermId: $('#selectTermSAT').val(),
                            ClassId: $('#selectClassSAT').val(),
                            ResultDateFrom: getResultDateFromSAT(),
                            ResultDateTo: getResultDateToSAT(),
                            StudentIdList: studentsIdSelected,
                            TimezoneOffset: timezoneOffset,
                            ActReportFileName: reportFileName,
                            ReportContentOption: $('#selectReportContentOption').val(),
                            StateInformationId: $('#selectStateInformation').val(),
                            SpecializedReportJobId: response.SpecializedReportJobId,
                            isGetAllClass: isGetAllClass
                        };

                        $.ajax({
                            url: reportingUrl,
                            traditional: true,
                            type: 'POST',
                            data: data,
                            success: function () {
                            }
                        });
                    } else {
                        CustomAlert('Your submitted test result of ' + response.SubmittedTestResult + ' is greater than maximum allowed of ' + response.MaxTestResult + '. Please update your filter and submit again.' ,true);
                        $('#ACTPageContent').unblock();
                        $('#btnSubmitSAT').enableBt();
                    }
                },
                failure: function (response) {
                    $('#ACTPageContent').unblock();
                    $('#btnSubmitSAT').enableBt();
                },
                timeout: 300000
            });
        });
    });

    function getRandomString() {
        return Math.random().toString(36).substring(2, 14);
    }

    function populateDistrictsSAT() {
        $('#selectDistrictSAT').empty();
        var stateValue = $('#selectStateSAT').val();
        if (stateValue != 'select') {
            @if (Model.IsPublisher)
            {
                <text>
            $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                addDefaultOption($('#selectDistrictSAT'), "@LabelHelper.DistrictLabel");
                addSelectListItems($('#selectDistrictSAT'), districts);
            });
            </text>
            }
            else if (Model.IsNetworkAdmin)
            {
                <text>
            $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                addDefaultOption($('#selectDistrictSAT'), "@LabelHelper.DistrictLabel");
                addSelectListItems($('#selectDistrictSAT'), districts);
            });
             </text>
            }

        }
    }

    function populateGradesSAT() {
        $('#selectGradeSAT').empty();
        $('#selectSubjectSAT').empty();
        $('#selectBankSAT').empty();
        $('#selectTestSAT').empty();

        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();

        var districtValue = "-1";
        if ($('#selectDistrictSAT').length > 0) {
            districtValue = $('#selectDistrictSAT').val();
        }

        if (districtValue != 'select' && districtValue != null) {
            $.get('@Url.Action("GetGrades", "PopulateReporting")', { districtId: districtValue, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: getIsGetAllClassSAT() }, function (grades) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    addDefaultOption($('#selectGradeSAT'), "@LabelHelper.TestGrade");
                    addSelectListItems($('#selectGradeSAT'), grades);

                    getAndAssignAllTestListSAT();
                }
            });
        }
    }

    function populateSubjectsSAT() {
        resetSubjectsSAT();
        var gradeValue = $('#selectGradeSAT').val();
        var districtValue = 0;
        if ($('#selectDistrictSAT').length && $('#selectDistrictSAT').val() != null && $('#selectDistrictSAT').val() != 'select') {
            districtValue = $('#selectDistrictSAT').val();
        }
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();;

        if (gradeValue != 'select') {
            $.get('@Url.Action("GetSubjects", "PopulateReporting")', { gradeId: gradeValue, districtId: districtValue, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: getIsGetAllClassSAT() }, function (subjects) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    addDefaultOption($('#selectSubjectSAT'), "@LabelHelper.Subject");
                    addSelectListItems($('#selectSubjectSAT'), subjects);

                    getAndAssignAllTestListSAT();
                }
            });
        }
    }

    function populateBanksSAT() {
        resetBanksSAT();
        var subjectValue = $('#selectSubjectSAT').val();
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();
        var districtValue = 0;
        if ($('#selectDistrictSAT').length && $('#selectDistrictSAT').val() != null && $('#selectDistrictSAT').val() != 'select') {
            districtValue = $('#selectDistrictSAT').val();
        }
        if (subjectValue != 'select') {
            $.get('@Url.Action("GetBanks", "PopulateReporting")', { subjectIds: subjectValue, districtId: districtValue, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: getIsGetAllClassSAT() }, function (banks) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    addDefaultOption($('#selectBankSAT'), "Bank");
                    addSelectListItems($('#selectBankSAT'), banks);

                    getAndAssignAllTestListSAT();
                }
            });
        }
    }

    // Load and assign all test list to use when query school, teacher, term, class and submit test all All test is selected
    function getAndAssignAllTestListSAT() {
        if ($('#enableDateRangeSAT').val() == 'true') {
            var districtValue = 0;
            if ($('#selectDistrictSAT').length && $('#selectDistrictSAT').val() != null && $('#selectDistrictSAT').val() != 'select') {
                districtValue = $('#selectDistrictSAT').val();
            }

            var gradeValue = $('#selectGradeSAT').val();
            var subjectValue = $('#selectSubjectSAT').val();
            var bankValue = $('#selectBankSAT').val();
            var resultDateFrom = getResultDateFromSAT();
            var resultDateTo = getResultDateToSAT();

            $.get('@Url.Action("MultipleTestGetTests", "PopulateReporting")', { gradeId: gradeValue, subjectId: subjectValue, bankId: bankValue, districtId: districtValue, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: getIsGetAllClassSAT() }, function (tests) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    var values = [];

                    for (var i = 0; i < tests.length; i++) {
                        values.push(tests[i].Id);
                    }

                    $('#VirtualTestIdsForAllTestSAT').val(values.join(','));
                    $('#selectTestSAT').trigger('change'); // call to reload school
                }
            });
        }
    }


    function populateTestsSAT() {
        $('#selectTestSAT').empty();
        var bankValue = $('#selectBankSAT').val();
        if (bankValue != null && bankValue != 'select') {
            var districtValue = 0;
            if ($('#selectDistrictSAT').length && $('#selectDistrictSAT').val() != null && $('#selectDistrictSAT').val() != 'select') {
                districtValue = $('#selectDistrictSAT').val();
            }
            var resultDateFrom = getResultDateFromSAT();
            var resultDateTo = getResultDateToSAT();

            $.get('@Url.Action("MultipleTestGetTests", "PopulateReporting")', { bankId: bankValue, districtId: districtValue, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: getIsGetAllClassSAT() }, function (tests) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    // Remove selected tests out of return list
                    for (var i = tests.length - 1; i >= 0; i--) {
                        if (selectedTagsDictSAT[tests[i].Name] != undefined) {
                            tests.splice(i, 1);
                        }
                    }

                    addDefaultOption($('#selectTestSAT'), "Test");
                    addSelectListWithDefaultValue($('#selectTestSAT'), tests);

                    if (countSelectedTagsSAT() == 0)
                        $('#selectedTestListSAT').tagit('createTag', 'All tests');
                    enableDisablePublishStudentButtonSAT();
                    $('#selectTestSAT').trigger('change');
                }
            });
        }
    }

    function populateSchoolsSAT(schools) {
        $('#selectSchoolSAT').empty();
        addDefaultOption($('#selectSchoolSAT'), "School");
        addSelectListItems($('#selectSchoolSAT'), schools);
    }

    function populateTeachersSAT() {
        $('#selectTeacherSAT').empty();
        var districtValue = $('#selectDistrictSAT').val();
        var schoolValue = $('#selectSchoolSAT').val();
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();
        var isGetAllClass = getIsGetAllClassSAT();

        if (schoolValue != 'select') {
            $.get('@Url.Action("MultipleTestGetTeachers", "PopulateReporting")', { districtId: districtValue, schoolId: schoolValue, virtualtestIdString: getSelectedTagsSAT(), virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: isGetAllClass }, function (teachers) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    addDefaultOption($('#selectTeacherSAT'), "Teacher");
                    addSelectListWithDefaultValue($('#selectTeacherSAT'), teachers, 'select', function(item) {
                        return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
                    });
                }
            });
        }
    }

    //if check this checkbox, get all classes, fill to class dropdown, and empty other dropdowns
    $("#chkLimitTestTakingClassSAT")
        .change(function () {
            clearSelectTestTabSAT();
            clearSelectStudentTabSAT();
            populateGradesSAT();
        });

    function populateClassesSAT() {
        $('#selectClassSAT').empty();
        $('#studentsSAT').html('');
        var districtValue = $('#selectDistrictSAT').val();
        var schoolValue = $('#selectSchoolSAT').val();
        var termValue = $('#selectTermSAT').val();
        var teacherValue = $('#selectTeacherSAT').val();
        var virtualTestIdString = getSelectedTagsSAT();
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();
        var isGetAllClass = getIsGetAllClassSAT();

        if (termValue != 'select') {
            $.get('@Url.Action("MultipleTestGetClasses", "PopulateReporting")', { districtId: districtValue, schoolId: schoolValue, termId: termValue, userId: teacherValue, virtualTestIdString: virtualTestIdString, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: isGetAllClass }, function (classes) {
                if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                    addDefaultOption($('#selectClassSAT'), "Class");
                    addSelectListItems($('#selectClassSAT'), classes);
                }
            });
        }
    }

    function populateAllClassesSAT() {
        $('#selectClassSAT').empty();
        $('#studentsSAT').html('');
        var districtValue = $('#selectDistrictSAT').val();
        var virtualTestIdString = getSelectedTagsSAT();
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();

        $.get('@Url.Action("MultipleTestGetAllClasses", "PopulateReporting")', { districtId: districtValue, virtualTestIdString: virtualTestIdString, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo }, function (classes) {
            if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                addDefaultOption($('#selectClassSAT'), "Class");
                addSelectListItems($('#selectClassSAT'), classes);
            }
        });
    }

    function populateStudentsSAT() {
        var classValue = $('#selectClassSAT').val();
        var virtualTestIdString = getSelectedTagsSAT();
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();
        var isGetAllClass = getIsGetAllClassSAT();

        if (classValue != 'select') {
            $('#studentContentSAT').show();
            $.get('@Url.Action("MultipleTestSATGetStudents", CONTROLLER)', { classId: classValue, virtualTestIdString: virtualTestIdString, resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: isGetAllClass }, function (students) {
                $('#studentsSAT').html('');
                addStudentsToListSAT($('#studentsSAT'), students);
                selectAllStudentsSAT();
            });
        } else {
            $('#studentContentSAT').hide();
        }
    }

    function populateStatesSAT(states) {
        addDefaultOption($('#selectStateSAT'), "State");
        addSelectListItems($('#selectStateSAT'), states);
    }

    function populateStateInformation(states) {
        addDefaultOption($('#selectStateInformation'), "State");
        addSelectListItems($('#selectStateInformation'), states);
    }

    function addStudentsToListSAT(el, students) {
        var $el = $(el);
        var studentHtml = [];

        for (var i = 0, len = students.length; i < len; i++) {
            var student = students[i];
            studentHtml.push('<li studentId="' + student.StudentId + '" class="student-item"><a href="javascript:void(0)">' + student.FullName + '</a></li>');
        }

        $el.html(studentHtml.join(''));
    }

    function resetSubjectsSAT() {
        $('#selectSubjectSAT').empty();
        resetBanksSAT();
    }

    function resetBanksSAT() {
        $('#selectBankSAT').empty();
        $('#selectTestSAT').empty();
    }

    function selectAllStudentsSAT() {
        $('.student-col').children().attr('isselected', "yes");
        $('.student-col').children().css('background-color', "#82CAFA");
    }

    function selectNoStudentsSAT() {
        $('.student-col').children().attr('isselected', "no");
        $('.student-col').children().css('background-color', "#f2f2f2");
    }

    function invertSelectedStudentsSAT() {
        $('.generate-student-list li').each(function () {
            if ($(this).attr('isselected') == "yes") {
                $(this).attr('isselected', "no");
                $(this).css('background-color', "#f2f2f2");
            } else {
                $(this).attr('isselected', "yes");
                $(this).css('background-color', "#82CAFA");
            }
        });
    }

    function populateTermsSAT() {
        $('#selectTermSAT').empty();

        var districtValue = $('#selectDistrictSAT').val();
        var schoolValue = $('#selectSchoolSAT').val();
        var teacherValue = $('#selectTeacherSAT').val();
        var virtualTestIdString = getSelectedTagsSAT();
        var resultDateFrom = getResultDateFromSAT();
        var resultDateTo = getResultDateToSAT();
        var isGetAllClass = getIsGetAllClassSAT();

        $.get('@Url.Action("MultipleTestGetTerms", "PopulateReporting")', { districtId: districtValue, virtualTestIdString: virtualTestIdString, userId: teacherValue, schoolId: schoolValue, virtualTestSubTypeId: getVirtualTestSubTypeId(), resultDateFrom: resultDateFrom, resultDateTo: resultDateTo, isGetAllClass: isGetAllClass }, function (terms) {
            if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
                addDefaultOption($('#selectTermSAT'), "@LabelHelper.Term");
                addSelectListItems($('#selectTermSAT'), terms);
            }
        });

    }

    function getSelectedTagsSAT() {
        var virtualTestIds = '0';

        if ($('#selectDistrictSAT').val() != 'select') { // Check incase ajax returns after user unselect district dropdown
            if ($('#enableDateRangeSAT').val() == 'true') {
                var x = '';
                for (var key in selectedTagsDictSAT) {
                    x += selectedTagsDictSAT[key] + ',';
                }

                if (x.length > 0)
                    virtualTestIds = x.substring(0, x.length - 1); // return list of selected tests
                else {
                    var values = [];
                    $('#selectTestSAT  option').each(function() {
                        if ($(this).attr('value') != 'select')
                            values.push($(this).attr('value'));
                    });

                    if (values.length > 0) {
                        virtualTestIds = values.join(','); // return list of virtual test in test dropdown when bank is selected
                    } else {
                        virtualTestIds = $('#VirtualTestIdsForAllTestSAT').val(); // return list of virtual test when all test is selected
                    }
                }
            } else {
                virtualTestIds = $('#selectTestSAT').val();
            }

            if (virtualTestIds == 'select' || virtualTestIds == '' || virtualTestIds == null || virtualTestIds == 'null')
                return '0';
        }

        return virtualTestIds;
    }

    function getResultDateFromSAT() {
        if ($('#enableDateRangeSAT').val() == 'true') {
            return $('#resultDateFromSAT').val();
        }
        return '';
    }

    function getResultDateToSAT() {
        if ($('#enableDateRangeSAT').val() == 'true') {
            return $('#resultDateToSAT').val();
        }
        return '';
    }

    function getIsGetAllClassSAT() {
        var isGetAllClass = !$("#chkLimitTestTakingClassSAT").is(':checked');
        return isGetAllClass;
    }


    function countSelectedTagsSAT() {
        try {
            var count = 0;
            for (var key in selectedTagsDictSAT) {
                count++;
            }

            return count;
        }
        catch (err) {
            return 0;
        }

    }

    function resetSelectedTestsSAT() {
        selectedTagsDictSAT = {};
        $('#selectedTestListSAT .tagit-choice').hide();
        $('#btnPublishTestSAT').attr('disabled', 'disabled');
    }

    // Clear or Add "All tests" tag based on selected tests data. is called inside "Select Test" box
    function updateSelectedTestsSAT() {
        if ($('#enableDateRangeSAT').val() == 'true') {
            // Add "All tests" tag when tag list is empty
            if (countSelectedTagsSAT() == 0) {
                beforeTagItAdded();
                $('#selectedTestListSAT').tagit('createTag', 'All tests');
            }

            enableDisablePublishStudentButtonSAT();
        }
    }

    function enableDisablePublishStudentButtonSAT() {
        if (getSelectedTagsSAT() == '') {
            $('#btnPublishTestSAT').attr('disabled', 'disabled');
        } else {
            $('#btnPublishTestSAT').enableBt();
        }
    }

    function clearSelectStudentTabSAT() {
        $("#selectSchoolSAT").find('option').removeAttr("selected");
        $('#selectSchoolSAT').empty();

        $("#selectTeacherSAT").find('option').removeAttr("selected");
        $('#selectTeacherSAT').empty();

        $("#selectTermSAT").find('option').removeAttr("selected");
        $('#selectTermSAT').empty();

        $("#selectClassSAT").find('option').removeAttr("selected");
        $('#selectClassSAT').empty();

        $('#studentContentSAT').hide();
        $('#studentsSAT').html('');
    }

    function clearSelectTestTabSAT() {
        $("#selectGradeSAT").find('option').removeAttr("selected");
        $('#selectGradeSAT').empty();

        $("#selectSubjectSAT").find('option').removeAttr("selected");
        $('#selectSubjectSAT').empty();

        $("#selectBankSAT").find('option').removeAttr("selected");
        $('#selectBankSAT').empty();

        $("#selectTestSAT").find('option').removeAttr("selected");
        $('#selectTestSAT').empty();
        resetSelectedTestsSAT();
    }
</script>
