@using LinkIt.BubbleSheetPortal.Common.Enum
@using LinkIt.BubbleSheetPortal.Web.Helpers
@model LinkIt.BubbleSheetPortal.Web.ViewModels.ACTReport.ACTReportMasterViewModel
<div>
    @{
        var sections = Model.SectionTagViewModels.Take(5).ToList();
        var useNewACT = Model.VirtualTestSubTypeId == (int) VirtualTestSubType.NewACT || Model.UseNewACTStudentFormat;
        var tableCssClass = Model.ShowTableBorder ? "datatable table utility-table datatable-border" : "datatable table utility-table";
    }
    @for (int sectionIndex = 0; sectionIndex < sections.Count; sectionIndex++)
    {
        var sectionTag = sections[sectionIndex];

        if (sectionIndex < 4)
        {
        <div class="boxtitle">
            <span>@sectionTag.SectionName</span>
        </div>
            
            foreach (var tagCategory in sectionTag.TagCategoryReportViewModels)
            {
                if (string.IsNullOrEmpty(tagCategory.TagCategoryName))
                {
                    continue;
                }                
                if (tagCategory.IsTechniqueCategory && tagCategory.IsShowTechnicalCategory)
                {
        <table class="@tableCssClass">
                        <thead>
                            <tr>
                                <th class="utility" width="254px">
                                    @tagCategory.TagCategoryName
                                </th>
                                <th class="utility" width="60px">Incorrect</th>
                                <th class="utility" width="60px">Blank</th>
                                <th class="utility">Incorrectly Answered</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var singleTag in tagCategory.SingleTagReportViewModels)
                            {
                                <tr>
                                    <td class="utility">
                                        @singleTag.TagName
                                    </td>
                                    <td class="utility" style="text-align: right;">
                                        @singleTag.IncorrectAnswer
                                    </td>
                                    <td class="utility" style="text-align: right;">
                                        @singleTag.BlankAnswer
                                    </td>
                                    <td class="utility">
                                        @string.Join(", ", singleTag.ListAnswerInTag.Where(x => x.PointsEarned != x.PointsPossible && x.WasAnswered).Select(x => x.QuestionOrder.ToString() /* + x.CorrectAnswer + ":" + x.AnswerLetter*/))
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else if (Model.TagTableUseAlternativeStyle)
                {
                    <table class="@tableCssClass">
                        <thead>
                            <tr>
                                <th class="utility" width="254px">
                                    @tagCategory.TagCategoryName
                                </th>
                                <th class="utility" width="60px">Total</th>
                                <th class="utility" width="60px">Correct</th>
                                <th class="utility" width="60px">Incorrect</th>
                                <th class="utility" width="60px">Blank</th>
                                <th class="utility">Incorrectly Answered or Skipped</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var singleTag in tagCategory.SingleTagReportViewModels)
                            {
                                <tr>
                                    <td class="utility">
                                        @singleTag.TagName
                                    </td>
                                    <td class="utility" style="text-align: right;">
                                        @singleTag.TotalAnswer
                                    </td>
                                    <td class="utility" style="text-align: right;">
                                        @singleTag.CorrectAnswer
                                    </td>
                                    <td class="utility" style="text-align: right;">
                                        @singleTag.IncorrectAnswer
                                    </td>
                                    <td class="utility" style="text-align: right;">
                                        @singleTag.BlankAnswer
                                    </td>
                                    <td class="utility">
                                        @string.Join(", ", singleTag.ListAnswerInTag.Where(x => (x.PointsEarned != x.PointsPossible && x.WasAnswered) || !x.WasAnswered).Select(x => x.QuestionOrder.ToString() /* + x.CorrectAnswer + ":" + x.AnswerLetter*/))
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    if (!tagCategory.IsTechniqueCategory)
                    {
        <table class="@tableCssClass">
            <thead>
                <tr>
                    <th class="utility" width="412">
                        @tagCategory.TagCategoryName
                    </th>
                    <th class="utility" width="60px">Total</th>
                    <th class="utility" width="60px">Correct</th>
                    <th class="utility" width="60px">Incorrect</th>
                    <th class="utility" width="60px">Blank</th>
                    <th class="utility" width="60px">Percent</th>
                    <th class="utility" width="120px">Historical Avg %</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var singleTag in tagCategory.SingleTagReportViewModels)
                {
                    string boldClass = "";
                    if (Model.BoldZeroPercentScore && singleTag.Percent == 0)
                    {
                        boldClass = "style=\"font-weight: bold;\"";
                    }
                    <tr @Html.Raw(boldClass)>
                        <td class="utility">
                            @singleTag.TagName
                        </td>
                        <td class="utility" style="text-align: right;">
                            @singleTag.TotalAnswer
                        </td>
                        <td class="utility" style="text-align: right;">
                            @singleTag.CorrectAnswer
                        </td>
                        <td class="utility" style="text-align: right;">
                            @singleTag.IncorrectAnswer
                        </td>
                        <td class="utility" style="text-align: right;">
                            @singleTag.BlankAnswer
                        </td>
                        <td class="utility" style="text-align: right;">
                            @string.Format("{0}%", singleTag.Percent)
                        </td>
                        <td class="utility" style="text-align: right;">
                            @string.Format("{0}%", singleTag.HistoricalAverage)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
                    }
                }
            }

            //render answers
            const int answerColumnNumber = 20;
            int index = 1;
            var listAnswer = sectionTag.AnswerSectionViewModels.ToList();
            var tableWidth = 0;
            var strWidth = string.Empty;
            while (listAnswer.Any())
            {
                if (listAnswer.Count < answerColumnNumber)
                {
                    tableWidth = (42 * listAnswer.Count) + (listAnswer.Count) + 56;
                    strWidth = string.Format("style=width:{0}px", tableWidth);
                }
        <table class='datatable table qa
                   @if (listAnswer.Count >= answerColumnNumber)
                   {
                       @: utility-table
                   } '
                    @if (listAnswer.Count < answerColumnNumber)
                    {
                        <text> @strWidth
                        </text>
                    }>
            <thead>
                <tr>
                    <th class="utility" style="width: 56px">Q#</th>
                    @for (int i = 0; i < answerColumnNumber; i++)
                    {
                        if (i < listAnswer.Count)
                        {
                        <th class="utility" style="width: 42px">@string.Format("{0}", i + index)</th>
                        }
                    }
                </tr>
            </thead>
            <tbody>
                <tr class="question-detail-answer">
                    <td>Ans</td>
                    @for (int i = 0; i < answerColumnNumber; i++)
                    {
                        if (i < listAnswer.Count)
                        {
                        <td>@listAnswer[i].CorrectAnswer</td>
                        }
                    }
                </tr>
                <tr>
                    <td>Mark</td>
                    @for (int i = 0; i < answerColumnNumber; i++)
                    {
                        if (i < listAnswer.Count)
                        {
                        <td>
                            @if (listAnswer[i].IsCorrected)
                            {
                                @:+
                                        }
                            else
                            {
                                if (listAnswer[i].IsBlank)
                                {
                                @:-
                                            }
                                else
                                {
                                @listAnswer[i].AnswerLetter
                                }
                            }
                        </td>
                        }
                    }

                    @if (answerColumnNumber < listAnswer.Count)
                    {
                        listAnswer.RemoveRange(0, answerColumnNumber);
                        index = answerColumnNumber + index;
                    }
                    else
                    {
                        listAnswer.RemoveRange(0, listAnswer.Count);
                    }
                </tr>
            </tbody>
        </table>
            }
        }
        @*
        else if (sectionIndex == 4)
        {            
            if (Model.ReportContentOption == Util.ACTSATReportContentOption_ScoreAndEssay)
            {
                //wirting
                foreach (var essayFile in Model.BubbleSheetFileSubViewModels)
                {
                    if (essayFile.PageType == Util.BubbleSheetFileEssayPageType)
                    {
                        <img src="@essayFile.ImageUrl" width="960" />
                    }
                }
            }
        }
        *@

        @*always break on first section*@
        if (sectionIndex == 0 && !useNewACT)
        {
            <text><div class="page-breaker"></div></text>
        }
    
       
    }
</div>
