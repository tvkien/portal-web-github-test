<template id="tab-record-audio-template">
    <div class="record-audio-container">
        <div class="audio-recorder">
            <div class="audio-recorder__timer">
                {{ recordTime | timerFormat }}
            </div>
            <div class="flex-grow-1"></div>
            <div class="audio-recorder__actions">
                <button :class="{
                        'btn-action': true,
                        'btn-action--recording': status === recordStatus.recording
                    }"
                        @@click="handleRecordClick"
                        :disabled="status === recordStatus.staring">
                    <img v-if="status === recordStatus.recording" src="@Url.Content("~/Content/images/icons/stop-white.svg")" />
                    <img v-else src="@Url.Content("~/Content/images/icons/mic-white.svg")" />
                </button>
            </div>
        </div>
    </div>
</template>

<script>
    var tabRecordAudio = {
        template: document.getElementById('tab-record-audio-template').innerHTML,
        mixins: [attachmentsMixin, recordMixin],
        data: function () {
            return {
                recorderInstance: new RecordAudio(),
            }
        },
        methods: {
            getFileName: function () {
                return 'Student Recording (audio).wav';
            }
        },
        beforeDestroy: function () {
            this.recorderInstance.stopBothVideoAndAudio(this.mediaStream);
        }
    };
</script>

<style>
    .record-audio-container .audio-recorder {
        width: 400px;
        display: flex;
        align-items: center;
        border-radius: 0.25rem;
        padding: 0.5rem;
        margin: auto;
        margin-top: 1rem;
        border: 1px solid #d1d1d1;
    }
</style>
