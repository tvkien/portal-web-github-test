@model LinkIt.BubbleSheetPortal.Web.ViewModels.ACTReport.ACTReportMasterViewModel
@using System.Drawing
@using DevExpress.Web.Mvc.UI
@using DevExpress.XtraCharts
@using LinkIt.BubbleSheetPortal.Web.Helpers
<style>
    .blockTable {
        padding: 20px 0px;
    }

        .blockTable .leftCol {
            float: left;
            width: 400px;
            padding-right: 50px;
        }

        .blockTable .rightCol {
            float: left;
            width: 400px;
        }
</style>
@{
    var model = Model.ACTSummaryScoreViewModel;
}

<div class="page-breaker"></div>

<div class="blockTable">
    <div class="leftCol">
        <div class="boxtitle">
            Score summary
        </div>
        <table class="datatable table" style="width: 420px">
            <thead>
                <tr>
                    <th class="utility"></th>
                    <th class="utility">Baseline</th>
                    <th class="utility">Current</th>
                    <th class="utility">Best</th>
                    <th class="utility">Improvement</th>
                </tr>
            </thead>
            <tbody>
                @if (model.SummaryScores != null)
                {
                    for (int i = 0; i < model.SummaryScores.Count; i++)
                    {
                        var item = model.SummaryScores[i];
                        string style = "";
                        style = "font-weight:bold; font-style:italic;";
                        <tr>
                            <td class="utility" style="@style">@item.Subject</td>
                            <td class="utility" style="text-align: right;">@item.BaselineString</td>
                            <td class="utility" style="text-align: right;">@item.CurrentString</td>
                            <td class="utility" style="text-align: right;">@item.BestString</td>
                            <td class="utility" style="text-align: right;">@item.ImprovementString</td>
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>
    <div class="rightCol">
        @if (model.ShowChart)
        {

            @Html.DevExpress().Chart(settings =>
       {
           settings.Name = "composite" + DateTime.Now.Ticks.ToString();
           settings.Titles.Add(new ChartTitle()
           {
               Font = new Font("Tahoma", 16),
               Text = "Composite"
           });
           settings.Width = 400;
           settings.Height = 320;
           settings.Legend.Visible = false;

           var series = new Series("Score",
                                   DevExpress.XtraCharts.ViewType.Line);
           series.ArgumentDataMember = "DateString";
           series.ValueDataMembers[0] = "Score";
           ((LineSeriesView)series.View).LineStyle.DashStyle = DashStyle.Dash;
           settings.Series.Add(series);
           var diagram = (XYDiagram)settings.Diagram;
           diagram.AxisY.Title.Text = "";
           diagram.AxisY.Title.Visible = true;
           diagram.AxisY.WholeRange.MaxValue = 32.8;
           diagram.AxisY.NumericScaleOptions.GridSpacing = 6;
           diagram.AxisX.Label.Angle = -45;
           diagram.Margins.Bottom = 60;
       }).Bind(model.CompositeScores).GetHtml()


        }
    </div>
</div>
<div style="clear: both; height: 20px;"></div>

<div class="blockTable">
    <div class="leftCol">
        @Html.DevExpress().Chart(settings =>
   {
       settings.Name = "english" + DateTime.Now.Ticks.ToString();
       settings.Titles.Add(new ChartTitle()
       {
           Font = new Font("Tahoma", 16),
           Text = "English"
       });
       settings.Width = 400;
       settings.Height = 320;
       settings.Legend.Visible = false;

       var series = new Series("Score",
                               DevExpress.XtraCharts.ViewType.Line);
       series.ArgumentDataMember = "DateString";
       series.ValueDataMembers[0] = "Score";
       ((LineSeriesView)series.View).LineStyle.DashStyle = DashStyle.Dash;
       settings.Series.Add(series);
       var diagram = (XYDiagram)settings.Diagram;
       diagram.AxisY.Title.Text = "";
       diagram.AxisY.Title.Visible = true;
       diagram.AxisY.WholeRange.MaxValue = 32.8;
       diagram.AxisY.NumericScaleOptions.GridSpacing = 6;
       diagram.AxisX.Label.Angle = -45;
       diagram.Margins.Bottom = 60;
   }).Bind(model.EnglishScores).GetHtml()
    </div>
    <div class="rightCol">
        @Html.DevExpress().Chart(settings =>
   {
       settings.Name = "math" + DateTime.Now.Ticks.ToString();
       settings.Titles.Add(new ChartTitle()
       {
           Font = new Font("Tahoma", 16),
           Text = "Math"
       });
       settings.Width = 400;
       settings.Height = 320;
       settings.Legend.Visible = false;

       var series = new Series("Score",
                               DevExpress.XtraCharts.ViewType.Line);
       series.ArgumentDataMember = "DateString";
       series.ValueDataMembers[0] = "Score";
       ((LineSeriesView)series.View).LineStyle.DashStyle = DashStyle.Dash;
       settings.Series.Add(series);
       var diagram = (XYDiagram)settings.Diagram;
       diagram.AxisY.Title.Text = "";
       diagram.AxisY.Title.Visible = true;
       diagram.AxisY.WholeRange.MaxValue = 32.8;
       diagram.AxisY.NumericScaleOptions.GridSpacing = 6;
       diagram.AxisX.Label.Angle = -45;
       diagram.Margins.Bottom = 60;
   }).Bind(model.MathScores).GetHtml()
    </div>
</div>
<div style="clear: both; height: 20px;"></div>
<div class="blockTable">
    <div class="leftCol">
        @Html.DevExpress().Chart(settings =>
   {
       settings.Name = "reading" + DateTime.Now.Ticks.ToString();
       settings.Titles.Add(new ChartTitle()
       {
           Font = new Font("Tahoma", 16),
           Text = "Reading"
       });
       settings.Width = 400;
       settings.Height = 320;
       settings.Legend.Visible = false;

       var series = new Series("Score",
           DevExpress.XtraCharts.ViewType.Line);
       series.ArgumentDataMember = "DateString";
       series.ValueDataMembers[0] = "Score";
       ((LineSeriesView)series.View).LineStyle.DashStyle = DashStyle.Dash;
       settings.Series.Add(series);
       var diagram = (XYDiagram)settings.Diagram;
       diagram.AxisY.Title.Text = "";
       diagram.AxisY.Title.Visible = true;
       diagram.AxisY.WholeRange.MaxValue = 32.8;
       diagram.AxisY.NumericScaleOptions.GridSpacing = 6;
       diagram.AxisX.Label.Angle = -45;
       diagram.Margins.Bottom = 60;
   }).Bind(model.ReadingScores).GetHtml()
    </div>
    <div class="rightCol">
        @Html.DevExpress().Chart(settings =>
   {
       settings.Name = "science" + DateTime.Now.Ticks.ToString();
       settings.Titles.Add(new ChartTitle()
       {
           Font = new Font("Tahoma", 16),
           Text = "Science"
       });
       settings.Width = 400;
       settings.Height = 320;
       settings.Legend.Visible = false;

       var series = new Series("Score",
           DevExpress.XtraCharts.ViewType.Line);
       series.ArgumentDataMember = "DateString";
       series.ValueDataMembers[0] = "Score";
       ((LineSeriesView)series.View).LineStyle.DashStyle = DashStyle.Dash;
       settings.Series.Add(series);
       var diagram = (XYDiagram)settings.Diagram;
       diagram.AxisY.Title.Text = "";
       diagram.AxisY.Title.Visible = true;
       diagram.AxisY.WholeRange.MaxValue = 32.8;
       diagram.AxisY.NumericScaleOptions.GridSpacing = 6;
       diagram.AxisX.Label.Angle = -45;
       diagram.Margins.Bottom = 60;
   }).Bind(model.ScienceScores).GetHtml()
    </div>
</div>
<div style="clear: both;"></div>
@*<div class="page-breaker"></div>
    }*@