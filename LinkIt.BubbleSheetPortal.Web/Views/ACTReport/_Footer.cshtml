@model LinkIt.BubbleSheetPortal.Web.ViewModels.ACTReport.FooterData
<!DOCTYPE html>
<html>
    @*<head>
        <script>
            function subst() {
                var vars = {};
                var x = window.location.search.substring(1).split('&');
                for (var i in x) { var z = x[i].split('=', 2); vars[z[0]] = unescape(z[1]); }
                var x = ['frompage', 'topage', 'page', 'webpage', 'section', 'subsection', 'subsubsection'];
                for (var i in x) {
                    var y = document.getElementsByClassName(x[i]);
                    for (var j = 0; j < y.length; ++j) y[j].textContent = vars[x[i]];
                }        

                var studentName = '@Model.RightLine1';
                var listStudent = studentName.split("|");

                var studentCode = '@Model.RightLine2';
                var listStudentCode = studentCode.split("|");

                var leftLine2 = '@Model.LeftLine2';
                var listPageNumber = leftLine2.split("|");

                var span = document.getElementsByClassName("studentName")[0];
                var page = document.getElementsByClassName("page")[0];

                var totalPageForThisStudent = listStudentCode[page.textContent - 1];
                var currentPageNumber = listPageNumber[page.textContent - 1];

                //var index = Math.floor((page.textContent - 1) / totalPageForThisStudent);
                //var pageIndex = Math.floor((page.textContent - 1) % totalPageForThisStudent);

                span.textContent = listStudent[page.textContent - 1];
                page.textContent = currentPageNumber;

                var totalPage = document.getElementsByClassName("topage")[0];
                totalPage.textContent = totalPageForThisStudent;
            }
        </script>
    </head>*@
    
    <head>
        <script>
            var escaped_one_to_xml_special_map = {
                '&amp;': '&',
                '&quot;': '"',
                '&lt;': '<',
                '&gt;': '>'
            };
            function decodeXml(string) {
                return string.replace(/(&quot;|&lt;|&gt;|&amp;)/g,
                    function (str, item) {
                        return escaped_one_to_xml_special_map[item];
                    });
            };
            function getCookieByKey(name) {
                var parts = document.cookie.split(name + "=");
                if (parts == null) {
                    return '';
                } else if (parts.length == 2) {
                    return parts.pop().split(";").shift();
                } else {
                    return '';
                }
            };
            function insertHeaderPageInfos() {
                var pageInfoValues = {};
                var x = document.location.search.substring(1).split('&');
                for (var i in x) {
                    var z = x[i].split('=', 2);
                    pageInfoValues[z[0]] = decodeXml(decodeURIComponent(z[1]));
                }
                var pageInfoIDs = ['frompage', 'topage', 'page', 'webpage', 'section', 'subsection', 'subsubsection', 'title', 'doctitle'];

                for (var i in pageInfoIDs) {
                    var elements = document.getElementsByClassName(pageInfoIDs[i]);
                    for (var j = 0; j < elements.length; ++j)
                    //elements[j].textContent = pageInfoValues[pageInfoIDs[i]];
                        if (decodeURIComponent(getCookieByKey('h1')) != pageInfoValues['section']) {
                            //document.getElementById("contentDiv").style.display = 'none';
                            document.cookie = 'h1=' + encodeURIComponent(pageInfoValues['section']);
                        }
                }
            };
            function subst() {

                

                // Split up the GET parameters
                var params = {};
                var gets = document.location.search.substring(1).split('&');
                for (var g = 0; g < gets.length; ++g) {
                    // Split into name and value
                    var tmp = gets[g].split('=', 2);
                    var name = tmp[0];
                    var value = unescape(tmp[1]);
                    params[name] = value;
                    // Find any element with a class that matches that name and inject the value
                    var els = document.getElementsByClassName(name);
                    for (var e = 0; e < els.length; ++e) {
                        els[e].textContent = value;
                    }
                }
                // If this is page one, skip the header
                //if (params['page'] == 1) {
                //    var el = document.getElementById("header");
                //    if (el) {
                //        el.parentNode.removeChild(el);
                //    }
                //}                
            }
        </script>

</head>
    
    

    <body style="padding-bottom: 0px; font-family: Verdana; font-size: 8pt;border:0px solid black;" onload="subst()">
    <table style="width: 100%">
        <tr>
            <td style="text-align:left">
                @Html.Raw(Model.LeftLine1)
            </td>
            <td style="text-align:right">
                @*@Html.Raw(Model.RightLine1)*@
                @*<span class="studentName"></span>*@
                <span class="section"></span>
            </td>
        </tr>
        <tr>
            <td style="text-align:left">
                @*@Html.Raw(Model.LeftLine2)*@
                @*<span class="section"></span>*@
            </td>
            <td style="text-align:right">
                Page <span class="page"></span> of <span class="topage"></span>
            </td>
        </tr>
    </table>
</body>
</html>
