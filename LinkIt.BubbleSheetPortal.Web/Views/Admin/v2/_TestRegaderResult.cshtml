@model LinkIt.BubbleSheetPortal.Web.ViewModels.DisplayTestResultFilterViewModel
<section class="m-0">
    <div class="block-content form">
        <h1 id="btnShowTestResultExported" class="off">
            Regrade Tests
        </h1>

        <div id="wrapper-btnRegradeSelectedResults" style="display: none;">
            <button id="btnRegradeSelectedResults" onclick="SubmitSelected(null);" class="off btn-blue me-3 d-block" disabled>
                Regrade Selected Results
            </button>
        </div>

        <div id="wrapper-table-regrader">
            <table id="dataTable" class="datatable table" width="100%">
                <thead>
                    <tr>
                        <th scope="col" style="width: 50px; text-align: center;">
                            <input class="m-0" type="checkbox" id="chkAllTestResult" />
                        </th>
                        <th scope="col">
                            <span class="column-sort"><a href="javascript:void(0)" title="Sort Up" class="sort-up"></a><a href="javascript:void(0)" title="Sort Down" class="sort-down"></a></span>
                            Test
                        </th>
                        <th scope="col" style="width: 140px;">
                            <span class="column-sort"><a href="javascript:void(0)" title="Sort Up" class="sort-up"></a><a href="javascript:void(0)" title="Sort Down" class="sort-down"></a></span>
                            Result Date
                        </th>
                        <th scope="col">
                            <span class="column-sort"><a href="javascript:void(0)" title="Sort Up" class="sort-up"></a><a href="javascript:void(0)" title="Sort Down" class="sort-down"></a></span>
                            School
                        </th>

                        <th scope="col" style="min-width: 100px;">
                            <span class="column-sort"><a href="javascript:void(0)" title="Sort Up" class="sort-up"></a><a href="javascript:void(0)" title="Sort Down" class="sort-down"></a></span>
                            Teacher
                        </th>
                        <th scope="col">
                            <span class="column-sort"><a href="javascript:void(0)" title="Sort Up" class="sort-up"></a><a href="javascript:void(0)" title="Sort Down" class="sort-down"></a></span>
                            Class
                        </th>
                        <th scope="col">
                            <span class="column-sort"><a href="javascript:void(0)" title="Sort Up" class="sort-up"></a><a href="javascript:void(0)" title="Sort Down" class="sort-down"></a></span>
                            Student
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="height: 60px;"></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</section>

<style type="text/css">
    .ui-dialog {
        padding: 0;
        border: 0;
    }

    .ui-dialog .dialog {
        padding: 0;
        min-height: auto !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        position: absolute;
        right: 7px;
        top: -8px;
    }

    .ui-dialog[aria-labelledby=ui-dialog-title-messageDialog].dialogCustom .ui-dialog-titlebar {
        display: none;
    }

    #portal-v2-containter #dataTable input[type=checkbox]:not(.form-check-input) {
        margin: 0;
    }

    #portal-v2-containter .block-footer {
        display: none;
    }
</style>
<script type="text/javascript">
    $(function () {
        var vIsRegrader = IsRegraderView();
        var options = {
            bDestroy: true,
            bServerSide: true,
            sAjaxSource: '@Url.Action("GetTestResultToView")',
              fnServerParams: function (aoData) {
                aoData.push(
                    { name: "districtId", value: '@Model.DistrictId' },
                    { name: "virtualTestId", value: '@Model.VirtualTestId' },
                    { name: "classId", value: '@Model.ClassId' },
                    { name: "studentName", value: '@Model.StudentName' },
                    { name: "schoolId", value: '@Model.SchoolId' },
                    { name: "teacherName", value: '@Model.TeacherName' },
                    { name: "termId", value: '@Model.TermrId' },
                    { name: "timePeriod", value: '@Model.TimePeriod' },
                    { name: "isRegrader", value: vIsRegrader }
                );
            },
            bAutoWidth: false,
            iDisplayLength: 50,
            aLengthMenu: [50, 100, 500, 1000],
            aaSorting: [[1, "asc"]],
            oLanguage: { "sEmptyTable": "Match Not Found", "sSearch": "" },
            aoColumns: [
                { sType: 'int', sName: 'ID', bSearchable: false, bSortable: false },
                { sType: 'string', sName: 'TestNameCustom', bSearchable: true, bSortable: true },
                { sType: 'datetime', sName: 'ResultDate', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'SchoolName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'TeacherCustom', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'ClassNameCustom', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'StudentCustom', bSearchable: true, bSortable: true }
            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setCheckBox(aData[0]));
                var row = displayDateWithFormatJsonDate(aData[2], "");
                $('td:eq(2)', nRow).text(row);
                $('td:eq(0)', nRow).addClass('text-center');
                return nRow;
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTable'), "Loading");

                if ($("#wrapper-btnRegradeSelectedResults").length) {
                    $("#wrapper-btnRegradeSelectedResults").prependTo($("#wrapper-table-regrader .data-table-action"));
                    $("#wrapper-btnRegradeSelectedResults").css("display", "inline-flex");
                }

                var elSearchLabel = $('#dataTable_filter');
                var elSearchInput = elSearchLabel.find('input');
                elSearchInput.attr('style', 'padding-left: 32px !important; position: relative;');
                elSearchLabel.addClass('data-search');
                elSearchLabel.find('label').css("margin", 0);

                return true;
            },
            fnDrawCallback: function () {
                $('#dataTable').unblock();
                $('.with-tip').tip();
                ReloadTestResult();
                return true;
            }
        };

        function setCheckBox(testResultId) {
            var checkboxString = '<div style="text-align: center;">' +
                '<input style="text-align: center;" type="checkbox" name="chkTestResult" value="' + testResultId + '" /> </div>';
            return checkboxString;
        }

        $("#dataTable").data("options", options);
        initializeDataTable($("#dataTable"));
    });

    $('#chkAllTestResult').live("click", function (e) {
        if (this.checked) {
            $('INPUT[name="chkTestResult"][type=checkbox]').attr('checked', 'checked');
            setDisabledButtons(false);
        }
        else {
            $('INPUT[name="chkTestResult"][type=checkbox]').removeAttr('checked');
            setDisabledButtons(true);
        }
    });

    function setDisabledButtons(isDisabled) {
        if (isDisabled) {
            //$('#btnRegradeSelectedResults').attr('disabled', 'disabled');
            $('#btnRegradeSelectedResults').disableBt();
        }
        else {
            //$('#btnRegradeSelectedResults').removeAttr('disabled');
            $('#btnRegradeSelectedResults').enableBt();
        }
    }

    $('INPUT[name="chkTestResult"][type=checkbox]').live("click", function (e) {
        if (this.checked) {
            var checkboxes = $('INPUT[name="chkTestResult"][type=checkbox]');
            var checkall = true;
            for (var i = 0; i < checkboxes.length; i++) {
                if (!(checkboxes[i]).checked) {
                    $('#chkAllTestResult').removeAttr('checked');
                    checkall = false;
                    break;
                }
            }
            if (checkall) {
                $('#chkAllTestResult').attr('checked', 'checked');
            }
            setDisabledButtons(false);
        }
        else {
            $('#chkAllTestResult').removeAttr('checked');
            $('#chkAllTestResult').removeClass('input-checked-v2');
            var checkedboxes = $('INPUT[name="chkTestResult"][type=checkbox]:checked');
            if (checkedboxes.length > 0) {
                setDisabledButtons(false);
            }
            else {
                setDisabledButtons(true);
            }
        }
    });

    function GetTestResultSelected() {
        var testResultIds = '';
        $('INPUT[name="chkTestResult"][type=checkbox]:checked').each(function (i, e) {
            testResultIds += $(e).val() + ',';
        });
        return testResultIds.substr(0, testResultIds.length - 1);
    }

    function SubmitSelected(e) {
        var testResultIds = '';
        var confirmAlert = '';
        testResultIds = GetTestResultSelected();
        //        confirmAlert = "Are you sure you want to remove test results?";
        //        if (confirm(confirmAlert)) {
        //            ProcessTestResult(testResultIds);
        //        }
        LoadGradeTestMessage(testResultIds);
    }

    function LoadGradeTestMessage(testResultIds) {
        
        var total = testResultIds.toString().split(',');
        var tmp = $('#hdTestRegraderForm').val(),
            hbody = $("body").height() - 109;
        var tmpMessage1 = ') result?';
        if (total.length > 1)
            tmpMessage1 = ') results?';
        var message = 'You are about to permanently delete student test results. <br />' +
            ' This action cannot be undone (i.e., online and bubble sheet student responses will be permanently removed; only bubble sheets can be rescanned).<br /><br />' +
            'If you need assistance determining whether to remove test results, please contact us at <a href="mailto:technology@linkit.com">technology@linkit.com</a> .<br /><br />' +
            'Are you sure you want to remove (' + total.length + tmpMessage1;
        //alert("Test: " + tmp);
        var strHtml = '<section class="m-0">' +
                        '<div class="block-content form p-4">' +
                        '<p class="styleMessage text-center fw-bold" style="margin-bottom:0px;">' + message +
                        '</p>' +
                        '</div>' +
                        '<div class="modal-component-footer">' +
                        '<div slot="footer">' +
                        '<button id="btnCancel" type="button" name="cancel">Cancel</button>' +
                        '<button id="btnOk" type="button" ListTestResultIDs="' + testResultIds + '" name="ok">OK</button>' +
                        '</div>' +
                        '</div></div></section>';
        if (tmp == 'REGRADER') {
            var tmpMessage2 = ') test result?';
            if (total.length > 1)
                tmpMessage2 = ') test results?';
            message = 'Are you sure you want to regrade the (' + total.length + tmpMessage2;
            strHtml = '<section class="m-0">' +
                        '<div class="block-content form p-4">' +
                        '<p class="styleMessage text-center fw-bold" style="margin-bottom:0px;">' + message +
                        '</p>' +
                        '</div>' +
                        '<div class="modal-component-footer">' +
                        '<div slot="footer">' +
                        '<button id="btnCancel" type="button" name="cancel">Cancel</button>' +
                        '<button id="btnOk" type="button" ListTestResultIDs="' + testResultIds + '" name="ok">OK</button>' +
                        '</div>' +
                        '</div></div></section>';
        }

        $("<div></div>")
                    .html(strHtml)
                    .addClass("dialog")
                    .attr("id", "messageDialog")
                    .appendTo("body")
                    .dialog({
                        close: function () { $(this).remove(); },
                        modal: true,
                        width: 500,
                        maxheight: 400,
                        resizable: false,
                        dialogClass: 'dialogCustom'
                    });


    }

    function ReloadTestResult() {
        $('#chkAllTestResult').attr('checked', false);
        $('#chkAllTestResult').removeClass('input-checked-v2');
        setDisabledButtons(true);
    }

    function IsRegraderView() {
        if ($('#hdTestRegraderForm').val() == 'REGRADER') {
            //alert("Regrader View");
            return true;
        }
        return false;
    }
</script>
