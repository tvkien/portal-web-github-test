@model LinkIt.BubbleSheetPortal.Web.ViewModels.UserImpersonationViewModel

<div class="columns">
    <fieldset>
        <legend>Select Role</legend>
        <div class="columns">
            <div class="colx2-left">
                <p>
                    <label>Role</label>
                    <span class="relative">
                        @Html.DropDownListFor(x => x.RoleId, Model.AvailableRoles, new { id = "selectAvailableRoles", @class = "full-width" })
                    </span>
                </p>
            </div>
        </div>
    </fieldset>
    <fieldset id="locationFieldset" style="display: none">
        <legend>Select Location</legend>
        <div class="columns">
            <div class="colx2-left">
                <div class="mb-3" id="states">
                    <label>Select State</label>
                    <span class="relative">
                        @Html.DropDownListFor(x => x.StateId, Model.AvailableStates, new {id = "selectState", @class = "full-width"})
                    </span>
                </div>
            </div>
            <div class="colx2-right">
                <div class="mb-3 block-content-dropdown-marquee" id="districts">
                    <label>Select @LabelHelper.DistrictLabel</label>
                    <div class="block-text-name relative">
                        @Html.DropDownListFor(x => x.DistrictId, Model.AvailableDistricts, new {id = "selectDistrict", @class = "full-width"})
                        <div class="box-select">
                            <span class="overlay"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    <!--For SchoolAdmin or Teacher-->
    <fieldset id="SchoolFieldset" style="display: none">
        <legend>Select School</legend>
        <div class="columns">
            <div class="colx2-left">
                <div class="mb-3 block-content-dropdown-marquee" id="states">
                    <label>Select School</label>
                    <div class="block-text-name relative">
                        @Html.DropDownListFor(x => x.SchoolID, Model.SchoolDistricts, new { id = "selectSchool", @class = "full-width" })
                        <div class="box-select">
                            <span class="overlay"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset id="userFieldSet" style="display: none">
        <legend>Select User</legend>
        <div class="columns">
            <div class="colx2-left">
                <div class="mb-3 block-content-dropdown-marquee">
                    <div class="block-text-name relative">
                        <select id="selectUser" name="UserName" class="full-width"></select>
                        <div class="box-select">
                            <span class="overlay"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
     <fieldset id="districtMemberFieldSet" style="display: none">
        <legend>Select @LabelHelper.DistrictLabel Member</legend>
         <div class="columns">

                             <div class="colx2-left">
                                 <div class="mb -3">
                                     <label>State</label>
                                      @Html.DropDownListFor(x => x.MemberStateId, Model.AvailableMemberStates, new { id = "selectStateMember", @class = "full-width" })
                                 </div>


                             </div>
                             <div class="colx2-right">

                                 <div class="mb-3 block-content-dropdown-marquee">
                                     <label>@LabelHelper.DistrictLabel</label>

                                    <div class="block-text-name relative">
                                        @Html.DropDownListFor(x => x.MemberDistrictId, Model.AvailableMemberDistricts, new { id = "selectDistrictMember", @class = "full-width" })
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                 </div>
                             </div>
                         </div>
    </fieldset>
</div>
<button id="btnSubmit" type="submit" name="Save">Submit</button>

<script type="text/javascript">
    $(function () {
        $('#selectDistrict').marquee({widthSelected: 248});
        $('#selectSchool').marquee({widthSelected: 248});
        $('#selectUser').marquee({widthSelected: 248});
        $('#selectDistrictMember').marquee({widthSelected: 248});

        $('#selectAvailableRoles').change(function () {
            clearSelectBoxes();
            $('#SchoolFieldset').hide();
            var rolesValue = $(this).val();
            if (rolesValue != 'select') {
                $('#locationFieldset').show();
                $('#schools').show();
                switch (rolesValue) {
                case '3':
                    $('#selectSchool').empty();
                    $('#schools').hide();
                    break;
                    case '2':
                        $('#SchoolFieldset').show();
                        break;
                    case '8':
                        $('#SchoolFieldset').show();
                        break;
                }
                populateStates();
            }
            if ($('#selectAvailableRoles').val() != 27) {
                $('#districtMemberFieldSet').hide();
            }
        });

        $('#selectState').change(function () {
            if ($(this).val() != 'select') {
                populateDistricts($('#selectDistrict'));
            }
            else {
                $('#selectDistrict').empty();
                $('#selectSchool').empty();
            }
        });

        $('#selectDistrict').change(function () {
            $('#selectSchool').empty();
            if ($(this).val() != 'select') {
                var rolesValue = $('#selectAvailableRoles').val();
                if (rolesValue == '2' || rolesValue == '8') {
                    //Teacher or School Admin
                    $('#SchoolFieldset').show();
                    //Show list of schools of District
                    populateSchool($('#selectDistrict').val());
                } else {
                    $('#userFieldSet').show();
                    populateDistrictUser($('#selectDistrict').val());
                }

                //Show district member in dspdistrict if Role is NetworkAdmin
                $('#selectStateMember').empty();
                $('#selectDistrictMember').empty();
                if ($('#selectAvailableRoles').val() == 27) {
                    $('#districtMemberFieldSet').show();
                    $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")\?organizationDistrictId=' + $('#selectDistrict').val(), function (states) {
                        //AddSelectListItems($('#selectStateMember'), states, 'Select State');
                        addDefaultOption($('#selectStateMember'), "State");
                        addSelectListItems($('#selectStateMember'), states);
                    });

                } else {
                    $('#districtMemberFieldSet').hide();
                }

            }
            else {
                $('#userFieldSet').hide();
                $('#selectUser').empty();
                $('#districtMemberFieldSet').hide();
                $('#SchoolFieldset').hide();
            }
        });
    });

    function clearSelectBoxes() {
        $('#selectState').empty();
        $('#selectDistrict').empty();
        $('#selectUser').empty();
        $('#selectSchool').empty();

    }

    function populateStates() {
        var stateSelect = $('#selectState');
        stateSelect.empty();
        $.get('@Url.Action("GetStatesImpersonate", "Admin")', function (response) {
            addDefaultOption(stateSelect, "State");
            addSelectListItems(stateSelect, response);
        });
    }

    function populateDistricts(districtSelect) {
        districtSelect.empty();
        $('#selectSchool').empty();
        var stateValue = $('#selectState').val();
        $.get('@Url.Action("GetDistrictsImpersonate", "Admin")', { stateId: stateValue }, function (response) {
            addDefaultOption(districtSelect, "@LabelHelper.DistrictLabel");
            addSelectListItems(districtSelect, response);
        });
    }
</script>
<script type="text/javascript">
    $("#selectStateMember").die("change");
    $('#selectStateMember').change(function () {
        if ($('#selectStateMember').val() != 'select') {
            $('#selectDistrictMember').empty();
            var stateValue = $('#selectStateMember').val();
            var orginaztionDistrictId = $('#selectDistrict').val();
            if (stateValue != 'select') {
                $.get('@Url.Action("GetMemberDistricts", "PopulateStateDistrict")\?organizationDistrictId=' + orginaztionDistrictId + '&stateId='+ stateValue, { stateId: stateValue }, function (districts) {
                    //AddSelectListItems($('#selectDistrictMember'), districts, 'Select @LabelHelper.DistrictLabel');
                    addDefaultOption($('#selectDistrictMember'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrictMember'), districts);
                });
            }
        }
    });

    function AddSelectListItems(selectList, results, defaultValue) {
        if (results.length == 0) {
            return;
        }
        selectList.append($("<option></option>").attr("value", "-1").text(defaultValue));
        $.each(results, function(i, value) {
            selectList
                .append($("<option></option>")
                    .attr("value", value.Id)
                    .text(value.Name));
        });

    }

    function populateSchool(districtId) {
        var url = '@Url.Action("GetSchools", "Admin")';
        $.ajax({
            url: url,
            data: { districtId: districtId },
            dataType: 'json',
            async: false,
            success: function(schools) {
                addDefaultOption($('#selectSchool'), "School");
                addSelectListWithDefaultValue($('#selectSchool'), schools, null);
                $('#selectSchool').change();

            },
            beforeSend: function() {
            },
            complete: function() {
            }
        });
    }

    function populateDistrictUser(districtId) {
        $.get('@Url.Action("GetUsersByDistrictAndRole", "Admin")', { districtId: districtId, roleId: $('#selectAvailableRoles').val() }, function (users) {

            $('#userFieldSet').show();
            $('#selectUser').empty();
            addSelectListWithDefaultValue($('#selectUser'), users.Data, 'select', function(item) {
                return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
            });
        });
    }
    function populateSchoolUser(schoolId) {
        $('#selectUser').empty();

        $.get('@Url.Action("GetUsersInSchool", "Admin")', { schoolId: schoolId, roleId: $('#selectAvailableRoles').val() }, function (users) {

            $('#userFieldSet').show();
            addSelectListWithDefaultValue($('#selectUser'), users.Data, 'select', function (item) {
                return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
            });
        });
    }

    $("#selectSchool").die("change");
    $('#selectSchool').change(function () {
        //refresh user list
        $('#selectUser').empty();
        if ($('#selectSchool').val() != 'select') {
            populateSchoolUser($('#selectSchool').val());
        }
    });

</script>
