<style type="text/css">
     tr.even.row_selected td {
         background-color: #82CAFA !important;
     }

     tr.odd.row_selected td {
         background-color: #82CAFA !important;
     }
     #dataTableTestBank td {
         word-wrap: break-word;
         /*word-break: break-all;*/ /* Not apply for whole table, just apply for long word in each td*/
     }

    /* No data available in table */
     .dataTableTestBankStyle .dataTables_empty div {
         width: 364px !important;
     }
    .dataTableTestBankStyle tr td {
        padding-left: 0px;
        padding-right: 0px;
    }
    .dataTableTestBankStyle{
        width: 370px !important;
        height: 392px !important;
    }
    .dataTableTestBankStyle td img {
        padding-left: 3px;
        padding-right: 3px;
    }
    .dataTableTestBankStyle thead,
    .dataTableTestBankStyle tbody{display: block;}
    .dataTableTestBankStyle tbody {
        height: 362px;
        overflow: auto;
        overflow-x: hidden;
    }
    .dataTableTestBankStyle tbody td {
        /*word-break: break-all;*/
        word-wrap: break-word;
    }
    /* Padding content inside div */
    .dataTableTestBankStyle tbody tr td div {
        padding-left: 3px !important;
        padding-right: 3px !important;
    }
    .dataTableTestBankStyle tbody td:nth-of-type(1) div {
        width: 156px;
    }
    .dataTableTestBankStyle tbody td:nth-of-type(2) div
    {
        width: 117px;
    }
    .dataTableTestBankStyle tbody td:nth-of-type(3) div
    {
        width: 62px;
    }

    .dataTableTestBankStyle thead th:nth-of-type(1) {
        width: 171px !important;
    }
    .dataTableTestBankStyle thead th:nth-of-type(2) {
        width: 117px !important;
    }
    .dataTableTestBankStyle thead th:nth-of-type(3) {
        width: 72px !important;
    }
    /*********** Has scroll bar ***********/
    .scrolldataTableTestBankStyle tbody td:nth-of-type(3) div
    {
        width: 72px !important;
    }
    .scrolldataTableTestBankStyle thead th:nth-of-type(3) {
        width: 62px !important;
    }
    /*********** No scroll bar ***********/
    .noscrolldataTableTestBankStyle tbody td:nth-of-type(1) div
    {
        width: 161px ;
    }
    .noscrolldataTableTestBankStyle tbody td:nth-of-type(3) div
    {
        width: 72px !important;
    }
    .noscrolldataTableTestBankStyle thead th:nth-of-type(3) {
        width: 63px !important;
    }

    /*IE9*/
    #dataTableTestBank tbody tr {
         height: 100% !important;/* Fix for IE9 */
    }
    .scrolldataTableTestBankStyleIE9,.noscrolldataTableTestBankStyleIE9 {
        height: auto !important;
    }
    .scrolldataTableTestBankStyleIE9 tbody td:nth-of-type(1) div {
        width: 157px !important;
    }
    .scrolldataTableTestBankStyleIE9 tbody td:nth-of-type(2) div {
        width: 116px !important;
    }
    .scrolldataTableTestBankStyleIE9 tbody td:nth-of-type(3) div {
        width: 90px !important;
    }
    #divdataTableTestBank {
        height: 367px !important;
        margin-top: -20px !important;
    }
    #divShowArchived {
        margin-left: 230px;
        width: 120px;
    }
    #divShowArchived p {
        display: inline;
        color: #808080;
        font-weight: bold;
        margin-bottom: 0.5em;
    }
    #divShowArchived input {
        display: inline;
    }
</style>
<script src="@Url.Content("~/Scripts/constants.js")" type="text/javascript"></script>
<article class="container_12" style="width: 100%">
    <section class="grid_12" style="width: 93%">
        <div class="block-border" style="width: 100%">
            <div class="block-content form" id="divOnTop">
                <h1>
                    Test Banks
                    <a href="javascript:void(0)" class="CreateNewTestBank">
                        <img src="@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png")" />
                        Add New Test Bank
                    </a>
                    <div class="clearfix"></div>
                </h1>
                @if (ViewBag.IsNetworkAdmin)
                {
                    <div class="columns">
                        <div class="colx2-left">
                            <p>
                                <label>State</label>
                                <select id="selectState" class="full-width"></select>
                            </p>
                        </div>
                        <div class="colx2-right">
                            <p>
                                <label>@LabelHelper.DistrictLabel</label>
                                <select id="selectDistrict" class="full-width"></select>
                            </p>
                        </div>
                    </div>
                }
                @if (ViewBag.AbleToViewHideTeacherBanks)
                {
                    <div class="columns">
                        <div class="colx2-left">
                            <p>
                                <input type="checkbox" id="ckbHideTeacherBanks" checked="checked"><!-- Hide banks created by teachers-->
                                <label>Hide banks created by teachers</label>
                            </p>
                        </div>
                        <div class="colx2-right">
                            <p>
                                <input type="checkbox" id="ckbHideOtherPeopleBanks"><!-- Hide banks created by other people-->
                                <label>Hide banks created by other people</label>
                            </p>
                        </div>
                    </div>
                }
                <div class="columns">
                    <div class="colx2-left">
                        <p>
                            <input type="checkbox" id="ckbHideBankOnlyForm" checked="checked">
                            <label>Hide banks with only forms</label>
                        </p>
                    </div>
                </div>
                    <p style="height: 5px"></p>
                    <div id="divShowArchived">
                        <p class="showArchived">Show archived</p>
                        <input type="checkbox" name="chkShowArchived" id="chkShowArchived">
                    </div>
                    <div class="no-margin last-child">
                        <table id="dataTableTestBank" class="datatable table no-margin dataTableTestBankStyle">
                            <thead>
                                <tr>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Name
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.Subject
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.GradeLabel
                                    </th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody style="cursor: pointer"></tbody>
                        </table>
                    </div>
                </div>
        </div>
    </section>
</article>
<input type="hidden" id="selectedbanktestid" />
<script type="text/javascript">
    var oTableTestBank;
    var testBankId = 0;

    $(function () {
        if ('@ViewBag.IsNetworkAdmin' === 'True') {
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                addDefaultOption($('#selectState'), "State");
                addSelectListItems($('#selectState'), states);
                $('#selectState').val(@ViewBag.StateId);
                $('#selectState').trigger('change');
            });

            $('#selectState').change(function () {
                populateDistricts();
            });

            $('#selectDistrict').change(function () {
                if ($('#selectDistrict').val() != 'select') {
                    oTableTestBank.fnDraw();
                }
            });
        }

        // Create new test bank
        $('.CreateNewTestBank').on('click', function () {
            var url = '@Url.Action("LoadCreateTestBank", "ManageTest")';
            $.ajax(
                {
                    url: url,
                    cache: false
                })
                .done(function (html) {
                    $("#divOnTop").append('<div id="PopupCreateTestBank" class="dialog"></div>');
                    $("#PopupCreateTestBank").append(html);
                    $('#PopupCreateTestBank').dialog({
                        title: "",
                        open: function () {
                            //Create overlay for popup
                            $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                        },
                        beforeclose: function () {
                            //TODO if you want do anything after close popup.
                            return true;
                        },
                        close: function () {
                            $('#dataTableTestBank').dataTable().fnDraw(false);
                            $('#PopupCreateTestBank').remove();
                            $("body .my-overlay").remove();
                        },
                        modal: false,
                        width: 500,
                        resizable: false
                    });

                });

            $(".close").unbind("click");
            $(".close").live("click", function (e) {
                e.preventDefault();
            });
        });

        // Load virtual test
        $('#dataTableTestBank tbody').on('click', function (event) {
            var target = event.target;
            var targetId = target.id;
            var targetTagName = target.tagName;
            var targetParent = target.parentNode;
            var targetParentId = targetParent.id;
            var targetParentTagName = targetParent.tagName;
            var isTarget = targetTagName.toUpperCase() == 'TD' && targetId != null && targetId.length > 0;
            var isTargetParent = targetParentTagName.toUpperCase() == 'TD' && targetParentId != null && targetParentId.length > 0;
            var urlLoadPropertiesVirtualTest = '@Url.Action("LoadPropertiesVirtualTest","ManageTest")?virtualTestId=';

            $(oTableTestBank.fnSettings().aoData).each(function () {
                $(this.nTr).removeClass('row_selected');
            });

            if (isTarget) {
                $(targetParent).addClass('row_selected');
                testBankId = targetId;
                $("#SelectedTestBankId").val(testBankId);
                oTableVirtualTest.fnReloadAjax('@Url.Action("LoadVirtualTests")?bankId=' + testBankId);
                LoadBankProperty(testBankId);
            }

            // now there is always a div inside td
            // event.target is now div not td
            if (isTargetParent) {
                $(targetParent.parentNode).addClass('row_selected');
                testBankId = targetParentId;
                $("#SelectedTestBankId").val(testBankId);
                oTableVirtualTest.fnReloadAjax('@Url.Action("LoadVirtualTests")?bankId=' + testBankId);
                LoadBankProperty(testBankId);
            }
        });

        var optionsTestBank = {
            bServerSide: true,
            bDestroy: true,
            bStateSave: false,
            sAjaxSource: getAjaxSource(),
            fnServerParams: function (aoData) {
                var isShowArchived = $('#chkShowArchived').is(':checked');
                var isHideTeacherBanks = $('#ckbHideTeacherBanks').is(':checked');
                var isHideOtherPeopleBanks = $('#ckbHideOtherPeopleBanks').is(':checked');
                var isHideBankOnlyForm = $('#ckbHideBankOnlyForm').is(':checked');

                aoData.push(
                    { name: 'showArchived', value: isShowArchived },
                    { name: 'hideTeacherBanks', value: isHideTeacherBanks },
                    { name: 'hideOtherPeopleBanks', value: isHideOtherPeopleBanks },
                    {name: 'moduleCode', value: RestrictionModule.MANAGE },
                    { name: 'hideBankOnlyForm', value: isHideBankOnlyForm }
                );

                if ('@ViewBag.IsNetworkAdmin' === 'True') {
                    var stateIdVal = $('#selectState').val();
                    var districtIdVal = $('#selectDistrict').val();
                    if (districtIdVal != null && districtIdVal != 'select') {
                        aoData.push(
                            { name: 'stateId', value: stateIdVal },
                            { name: 'districtId', value: districtIdVal }
                        );
                    }
                }

                //TuanVo:encode text in filter searchbox
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }
            },
            bAutoWidth: false,
            iDisplayLength: 100,
            aaSorting: [[0, "asc"]],
            aoColumns: [
                { sType: 'string', sName: 'BankName', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'Subject', bSearchable: true, bSortable: true },
                { sType: 'integer', sName: 'GradeOrder', bSearchable: true, bSortable: true },
                { sType: 'integer', sName: 'BankID', bSearchable: false, bSortable: false, sWidth: "0px", bVisible: false },
                { sType: 'string', sName: 'Grade', bSearchable: true, bSortable: true, sWidth: "0px", bVisible: false },
                { sType: 'string', sName: 'Archived', bSearchable: false, bSortable: false, sWidth: "0px", bVisible: false }

            ],
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).attr('id', aData[3]);
                $('td:eq(1)', nRow).attr('id', aData[3]);
                $('td:eq(2)', nRow).attr('id', aData[3]);
                $('td:eq(2)', nRow).html(aData[4]);
                // Add word-break: break-all; to td which has long BankName ,such as NewBankDemo_123_456_789_1011
                addWordBreakToTableCell($('td:eq(0)', nRow), 20, aData[0]);
                addWordBreakToTableCell($('td:eq(1)', nRow), 13, aData[0]);
                $('td:eq(2)', nRow).html(setIconVisibility(aData[4],aData[3], aData[5]));
            },
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableTestBank'), "Loading");
                return true;
            },
            fnDrawCallback: function () {
                $('#dataTableTestBank').unblock();
                $('.with-tip').tip();
                formatTableForAddingVertialScrollBar('dataTableTestBank', 'scrolldataTableTestBankStyle', 'noscrolldataTableTestBankStyle',
                    'scrolldataTableTestBankStyleIE9', 'noscrolldataTableTestBankStyleIE9');

                if ($("input[name='inputTestType']:checked").val() == 'selectTestBank') {
                    $('#btnCreateTest').disableBt();
                }
            }
        };

        var $dataTableTestBank = $('#dataTableTestBank');
        $dataTableTestBank.data('options', optionsTestBank);
        oTableTestBank = $dataTableTestBank.dataTable();

        $('#ckbHideTeacherBanks').on('change', function () {
            oTableTestBank.fnDraw();
        });

        $('#ckbHideOtherPeopleBanks').on('change', function () {
            oTableTestBank.fnDraw();
        });

        $('#chkShowArchived').on('change', function () {
            oTableTestBank.fnDraw();
        });
        $('#ckbHideBankOnlyForm').on('change', function () {
            oTableTestBank.fnDraw();
        });
    });

    function getAjaxSource() {
        if ('@ViewBag.IsNetworkAdmin' === 'True') {
            return '@Url.Action("LoadTestBanksForNetworkAdmin")';
        }

        return '@Url.Action("LoadTestBanks")';
    }

    function populateDistricts() {
        $('#selectDistrict').empty();
        var stateValue = $('#selectState').val();
        if (stateValue != 'select') {
            $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                addSelectListItems($('#selectDistrict'), districts);
            });
        } else {
            oTableTestBank.fnDraw();
        }
    }

    function createTestBank() {
        if ($('#selectState').length > 0) {
            var stateId = $('#selectState').val();
            if (stateId == null || stateId == 'select' || stateId <= 0) {
                $('#error-messages').html('<li> Please select State. </li>');
                $('#error-messages').show();
                $('#success-message').hide();
                return;
            }
        }
        var gradeId = $('#selectGrade').val();
        if (gradeId == null || gradeId == 'select' || gradeId <= 0) {
            $('#error-messages').html('<li> Please select @LabelHelper.TestGrade. </li>');
            $('#error-messages').show();
            $('#success-message').hide();
            return;
        }

        var vSubjectId = $('#selectSubject').val();
        if (vSubjectId == null || vSubjectId == 'select' || vSubjectId <= 0) {
            $('#error-messages').html('<li> Please select @LabelHelper.Subject. </li>');
            $('#error-messages').show();
            $('#success-message').hide();
            return;
        }

        var vTestBankName = $('#inputTestBankName').val();
        if (vSubjectId == '-1' || vTestBankName.trim() == '') {
            $('#error-messages').html('<li> Please enter the Bank Name. </li>');
            $('#error-messages').show();
            $('#success-message').hide();
            return;
        }
        ShowBlock($('#dvCreateTestBank'), "Create Bank");
        $.post('@Url.Action("CreateTestBank", "ManageTest")', { subjectId: vSubjectId, strTestName: vTestBankName }, function (response) {
            if (response.Success == true) {
                $('#success-message').show();
                $('#error-messages').hide();
                setTimeout(function () {
                    $(".dialog").dialog("close");
                },
                    3000);
            } else {
                $('#error-messages').html('<li> ' + response.Error + ' </li>');
                $('#error-messages').show();
                $('#success-message').hide();
            }
            $('#dvCreateTestBank').unblock();
        });
    }

    function cancelCreateTestBank() {
        $(".dialog").dialog("close");
    }

    function LoadGradeByStateID(selecterGrade, stateId, gradeId, subjectId, selecterSubject) {
        $.get('@Url.Action("GetGradesByStateId", "PopulateTest")', { stateId: stateId }, function (grades) {
            AddSelectListItems(selecterGrade, grades, 'Select @LabelHelper.TestGrade');
            selecterGrade.val(gradeId);

            LoadSubjectByGradeId(selecterSubject, stateId, gradeId, subjectId);
        });
    }

    function LoadSubjectByGradeId(selecter, stateId, gradeId, subjectId) {
        $.get('@Url.Action("GetSubjectByStateIdAndGradeId", "PopulateTest")', { stateId: stateId, gradeId: gradeId }, function (subjects) {
            AddSelectListItems(selecter, subjects, 'Select @LabelHelper.Subject');
            selecter.val(subjectId);
        });
    }

    function SaveTestBankProperty(vbankId) {
        var vTestBankName = $('#TestBankName').val();
        var vSubjectId = $('#selectSubjectTestBank').val();
        if (vTestBankName.trim() != '' && vSubjectId != '-1') {
            $.post('@Url.Action("UpdateTestBank", "ManageTest")', { strTestBankName: vTestBankName, subjectId: vSubjectId, bankId: vbankId }, function () {
                $('#dataTableTestBank').dataTable().fnDraw(false);
            });
        }
    }

    function DeleteTestBank(vBankId) {
        var vTestName = $('#TestBankName').val();
        var url = '@Url.Action("LoadConfirmDeleteBank", "ManageTest")';
        $.ajax(
            {
                url: url,
                cache: false,
                data: { bankId: vBankId, bankName: vTestName }
            })
            .done(function (html) {
                $("#divOnTop").append('<div id="PopupConfirmDeleteBank" class="dialog"></div>');
                $("#PopupConfirmDeleteBank").append(html);
                $('#PopupConfirmDeleteBank').dialog({
                    title: "",
                    open: function () {
                        //Create overlay for popup
                        $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                    },
                    beforeclose: function () {
                        //TODO if you want do anything after close popup.
                        return true;
                    },
                    close: function () {
                        $('#PopupConfirmDeleteBank').remove();
                        $("body .my-overlay").remove();
                    },
                    modal: false,
                    width: 400,
                    resizable: false
                });

            });

        $(".close").unbind("click");
        $(".close").live("click", function (e) {
            e.preventDefault();
        });
    }

    function DeleteTestBankByID(vbankId) {
        $.post('@Url.Action("DeleteTestBank", "ManageTest")', { bankId: vbankId }, function () {
            $('#dataTableTestBank').dataTable().fnDraw(false);
            $('#dataTableVirtualTest').dataTable().fnDraw(false);
            $('#divTestBankProperties').html('');
            $(".dialog").dialog("close");
        });
    }

    function LoadBankProperty(bankId) {
        ShowBlock($('#divTestBankProperties'), 'Loading');
        $('#divTestBankProperties').load('@Url.Action("LoadPropertiesTestBank","ManageTest")?bankId=' + bankId, function () {
            $('#divVirtualTestProperties').html('');
            $('#divTestBankProperties').focus();
            $('#divTestBankProperties').unblock();
        });

    }

    function refreshTestBankList() {
        $("#dataTableTestBank").dataTable().fnReloadAjax(getAjaxSource());
    }

    function setIconVisibility(grade,bankId, archived) {
        var checkboxString = '';
        if (archived == 'True') {
            checkboxString = grade + '<input type="checkbox" style="display:none" class="BankArchived" name="chkBankArchived" id="' + bankId + '" checked />';
        } else {
            checkboxString = grade + '<input type="checkbox" style="display:none" class="BankArchived" name="chkBankArchived" id="' + bankId + '" />';
        }
        return checkboxString;
    }
</script>
