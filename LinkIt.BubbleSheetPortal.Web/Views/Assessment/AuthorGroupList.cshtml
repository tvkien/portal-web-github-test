@model LinkIt.BubbleSheetPortal.Web.ViewModels.AuthorGroup.AuthorGroupListViewModel
@{
    ViewBag.Title = "Manage Author Groups";
}

<style>
    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
    }

     .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }
</style>


<article class="container_12">
    <section class="grid_12">
        <div id="generateContent" class="block-border">
            <div class="block-content form bubbleSheetSelector">
                <h1>Filter Author Groups
                </h1>
                <ul style="display: none" id="error-messages" class="message error"></ul>
                @if (Model.IsPublisher|| Model.IsNetworkAdmin)
                {
                    <text>
                        <fieldset id="publisherContent" class="grey-bg">
                            <div class="columns">
                                <div class="colx2-left">
                                    <div class="mb-3 block-content-dropdown-marquee">
                                        <label>State</label>
                                        <div class="block-text-name">
                                            <select id="selectState"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mb-3 block-content-dropdown-marquee">
                                        <label>School</label>
                                        <div class="block-text-name">
                                            <select id="selectSchool"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="colx2-right">
                                    <div class="mb-3 block-content-dropdown-marquee">
                                        <label>@LabelHelper.DistrictLabel</label>

                                        <div class="block-text-name">
                                           <select id="selectDistrict"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </text>
                }
                @if (Model.IsDistrictAdmin || Model.IsSchoolAdmin || Model.IsTeacher)
                {
                    <text>
                        <fieldset id="publisherContent" class="grey-bg">
                            <div class="columns">
                                <div class="colx2-left">
                                    <div class="mb-3 block-content-dropdown-marquee">
                                        <label>School</label>
                                        <div class="block-text-name">
                                            <select id="selectSchool"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </text>
                }
                <div class="clear"></div>
            </div>
        </div>
        <div class="clear-25"></div>
        <div class="block-border" id="reviewList">
            <div class="block-content form">
                <h1>Author Groups
                    <a id="addNewAuthorGroup" href="@Url.Action("AddAuthorGroup")">
                        <img src="/Content/themes/Constellation/images/icons/fugue/plus-circle-blue.png">
                        Create Author Group
                    </a>
                </h1>
                <p style="height: 5px"></p>
                <div class="no-margin last-child">
                    <table id="dataTable" class="datatable table no-margin" width="100%">
                        <thead>
                            <tr>
                                <th scope="col" class="black-cell"><span class="loading"></span></th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Name of Author Group
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Users in the Group
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Schools in the Group
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    @LabelHelper.DistrictLabels in the Group
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    UserId
                                </th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
</article>
<div id="divOnTop"></div>

<script type="text/javascript">

    //declare global variables
    var districtId = 0;
    var stateId = 0;
    var schoolId = 0;
    $(function () {
        $('.write').addClass('current');
        $('#manageAuthorGroup').addClass('current');
        $('#selectDistrict').marquee();
        $('#selectSchool').marquee();
        $('#selectState').marquee();

        @if (Model.IsPublisher||Model.IsNetworkAdmin)
        {
            <text>
        LoadDataTables();
        </text>
        if(@Model.IsNetworkAdmin)
        {
            <text>
        $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
            populateStates(states);
        });


            </text>
        }
        else{

            <text>
        $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
            populateStates(states);

        });

            </text>
        }


            <text>
        $('#selectState').change(function () {
            $('#selectDistrict').empty();
            $('#selectSchool').empty();
            if ($('#selectState').val() != 'select') {
                populateDistricts();
                assignStateDistrictSchool($('#selectState').val(), 0, 0);
                LoadDataTables();
                $("#dataTable").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        $('#selectDistrict').change(function () {
            $('#selectSchool').empty();
            if ($('#selectDistrict').val() != 'select') {
                populateSchoolsByDistrict();
                assignStateDistrictSchool($('#selectState').val(), $('#selectDistrict').val(), 0);
                $("#dataTable").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        $('#selectSchool').change(function () {
            if ($('#selectSchool').val() != 'select') {
                assignStateDistrictSchool($('#selectState').val(), $('#selectDistrict').val(), $('#selectSchool').val());
                $("#dataTable").dataTable().fnReloadAjax(getAjaxSource());
            }
        });

            </text>
        }
        @if (Model.IsDistrictAdmin)
        {
<text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        LoadDataTables();
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtId }, function (schools) {
            populateSchools(schools);
        });
        $('#selectSchool').change(function () {
            if ($('#selectSchool').val() != 'select') {
                assignStateDistrictSchool(stateId, districtId, $('#selectSchool').val());
                $("#dataTable").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        </text>
        }
        @if (Model.IsSchoolAdmin || Model.IsTeacher)
        {
<text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        LoadDataTables();
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { }, function (schools) {
            populateSchools(schools);
        });
        $('#selectSchool').change(function () {
            if ($('#selectSchool').val() != 'select') {
                assignStateDistrictSchool(stateId, districtId, $('#selectSchool').val());
                $("#dataTable").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        </text>
        }
    });

    function assignStateDistrictSchool(selectedState, selectedDistrict, selectedSchool) {
        stateId = selectedState;
        districtId = selectedDistrict;
        schoolId = selectedSchool;
    }

    function populateStates(states) {
        addDefaultOption($('#selectState'), "State");
        addSelectListItems($('#selectState'), states);
    }

    function populateDistricts() {
        $('#selectDistrict').empty();
        var stateValue = $('#selectState').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
        }
    }

    function populateSchoolsByDistrict() {
        $('#selectSchool').empty();
        var districtValue = $('#selectDistrict').val();
        if (districtValue != 'select') {
            $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function(schools) {
                populateSchools(schools);
            });
        }
    }

    function populateSchools(schools) {
        addDefaultOption($('#selectSchool'), "School");
        addSelectListItems($('#selectSchool'), schools);
    }

    function LoadDataTables() {
        var isPublisher = '@Model.IsPublisher' == 'True';
        var options = {
            bServerSide: true,
            bDestroy: true,
            //bStateSave: false,
            sAjaxSource: getAjaxSource(),
            fnServerParams: function(aoData) {
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }
            },
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'AuthorGroupId', bSearchable: false, bSortable: false, sWidth: '50px' },
                { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true },
                { sType: 'string', sName: 'UserList', bSearchable: true, bSortable: true, sWidth: '160px' },
                { sType: 'string', sName: 'SchoolList', bSearchable: true, bSortable: true, sWidth: '160px' },
                { sType: 'string', sName: 'DistrictList', bSearchable: true, bSortable: true, sWidth: '160px', bVisible: ('@Model.IsPublisher' == 'True' || '@Model.IsNetworkAdmin' == 'True') },
                { sType: 'string', sName: 'UserId', bSearchable: true, bSortable: true, bVisible: false }
            ],
            fnPreDrawCallback: function() {
                ShowBlock($('#dataTable'), "Loading");
                return true;
            },
            fnRowCallback: function(nRow, aData) {
                $('td:eq(0)', nRow).html(setIconVisibilityAuthorGroupList_Author(aData[0], aData[1], aData[5]));
                $('td:eq(2)', nRow).html(setIconVisibilityAuthorGroupList_User(aData[0], aData[1]));
                $('td:eq(3)', nRow).html(setIconVisibilityAuthorGroupList_School(aData[0], aData[1]));
                $('td:eq(4)', nRow).html(setIconVisibilityAuthorGroupList_District(aData[0], aData[1]));
                return nRow;
            },
            fnDrawCallback: function() {
                $('#dataTable').unblock();
                $('.with-tip').tip();
            }
        };

        $("#dataTable").data("options", options);
        //initializeDataTable($("#dataTable"));
    }

    function getAjaxSource() {
        return '@Url.Action("GetAuthorGroupListHasAccessTo")/?stateId=' + stateId + '&districtId=' + districtId + '&schoolId=' + schoolId;
    }

    function setIconVisibilityAuthorGroupList_Author(authorGroupId, authorGroupName, createdUserId) {
        var editGroupIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editGroupString = '<a href="javascript:void(0)" title="Rename Author Group" authorGroupId="' + authorGroupId + '" class="with-tip EditAuthorGroup"><img src="' + editGroupIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        var removeAuthorGroupIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
        var removeAuthorGroupString = '<a authorGroupId="' + authorGroupId + '" authorGroupName="' + encodeURI(authorGroupName) + '" href="javascript:void(0);" onclick="RemoveAuthorGroup(this);" title="delete author group" class="with-tip"><img src="' + removeAuthorGroupIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        @*if ('@Model.IsTeacher' == 'True' && '@Model.CurrentUserId' != createdUserId) {
            return "";
        }*@

        return editGroupString + removeAuthorGroupString;
    }

    function setIconVisibilityAuthorGroupList_User(authorGroupId, authorGroupName) {
        var editUserIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editUserString = '<a authorGroupId="' + authorGroupId + '" authorGroupName="' + encodeURIComponent(authorGroupName) + '" href="javascript:void(0)" onclick="displayManageAuthorGroupUserForm(this)" title="manage users" class="with-tip"><img src="' + editUserIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        return editUserString;
    }

    function setIconVisibilityAuthorGroupList_School(authorGroupId, authorGroupName) {
        var editSchoolIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editSchoolString = '<a authorGroupId="' + authorGroupId + '" authorGroupName="' + encodeURIComponent(authorGroupName) + '" href="javascript:void(0)" onclick="displayManageAuthorGroupSchoolForm(this)" title="manage schools" class="with-tip"><img src="' + editSchoolIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        return editSchoolString;
    }

    function setIconVisibilityAuthorGroupList_District(authorGroupId, authorGroupName) {
        var editDistrictIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/pencil.png")';
        var editDistrictString = '<a authorGroupId="' + authorGroupId + '" authorGroupName="' + encodeURIComponent(authorGroupName) + '" href="javascript:void(0)" onclick="displayManageAuthorGroupDistrictForm(this)" title="manage districts" class="with-tip"><img src="' + editDistrictIcon + '" width="16" height="16" style="margin-right: 4px"></a>';

        return editDistrictString;
    }

    function RemoveAuthorGroup(control) {
        var self = $(control);
        var authorGroupId = self.attr('authorGroupId');
        if (confirm('Are you sure you want to remove this author group?')) {
            $.post('@Url.Action("DeleteAuthorGroup")', { authorGroupId: authorGroupId }, function (response) {
                if (response == true) {
                    $("#dataTable").dataTable().fnDraw();
                } else {
                    alert('You do not have permission to remove this author group.');
                }
            });
        }
    }

    function displayTitle(td) {
        var content = td.html();
        var tooltip = '';
        if (content == null) {
            content = '';
        }
        if (content.length > 0) {
            tooltip = content.replace(/\, /g, '<br>');// add line break for each item
            if (content.length > 50) {
                content = content.substring(0, 50);
                content = content + ' ...';

                td.html(content);
                td.addClass('with-tip');
                td.attr("title", tooltip);
            }
        }

    }

    $('.EditAuthorGroup').live('click', function () {
        var authorGroupId = $(this).attr('authorGroupId');
        LoadEditAuthorGroup(authorGroupId);
    });

    function LoadEditAuthorGroup(authorGroupId) {
        var url = '@Url.Action("EditAuthorGroupOnTop", "Assessment")?authorGroupId=' + authorGroupId;
        $.ajax(
            {
                url: url,
                cache: false
            })
            .done(function (html) {
                $("#divOnTop").append('<div id="PopupEditAuthorGroup" class="dialog"></div>');
                $("#PopupEditAuthorGroup").append(html);
                $('#PopupEditAuthorGroup').dialog({
                    title: "",
                    open: function () {
                        //Create overlay for popup
                        $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
                    },
                    beforeclose: function () {
                        //TODO if you want do anything after close popup.
                        return true;
                    },
                    close: function () {
                        ui.dataTable.fnDraw(false);
                        $('#PopupEditAuthorGroup').remove();
                        $("body .my-overlay").remove();
                    },
                    modal: false,
                    width: 500,
                    resizable: false
                });

            });

        $(".close").unbind("click");
        $(".close").live("click", function (e) {
            e.preventDefault();
        });
    }

    function saveAuthorGroup() {
        var authorGroupId = $('#Id').val();
        var vName = $('#Name').val();
        if (vName.trim() != '') {
            $('#btnSaveAuthorGroup').attr('disabled', true);
            $.ajax({
                url: '@Url.Action("UpdateAuthorGroupOnTop")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ Id: authorGroupId, Name: vName }),
                success: function (response) {
                    if (response == true) {
                        $('#success-message-author-group').show();
                        setTimeout(function() {
                            $(".dialog").dialog("close");
                        }, 2000);
                    } else {
                        addErrors($('#error-messages-author-group'), response);
                        $('#btnSaveAuthorGroup').removeAttr('disabled');
                    }
                }
            });
        }
        else {
            var errorMessage = { ErrorList: [{ ErrorMessage: 'Please input Author Group Name' }] };
            addErrors($('#error-messages-author-group'), errorMessage);
        }
    }

    function displayManageAuthorGroupUserForm(control) {
        var self = $(control);
        var authorGroupId = self.attr('authorGroupId');
        var worker = $('<div />');

        worker
            .addClass("dialog")
            .attr("id", "AssignParentForm")
            .appendTo("body")
        .load('@Url.Action("ManageAuthorGroupUser")/?authorGroupId=' + authorGroupId, function () {
            worker.dialog({
                title: $(this).attr("Manage Users in the Group"),
                close: function () {
                    $('.ui-widget-overlay').remove();
                    $(this).remove();
                },
                modal: false,
                width: 750,
                resizable: false,
                position: ['top', 20]
            });
        });

        showModalDialogBG();
    }

    function displayManageAuthorGroupSchoolForm(control) {
        var self = $(control);
        var authorGroupId = self.attr('authorGroupId');
        var worker = $('<div />');

        worker
            .addClass("dialog")
            .attr("id", "AssignParentForm")
            .appendTo("body")
        .load('@Url.Action("ManageAuthorGroupSchool")/?authorGroupId=' + authorGroupId, function () {
            worker.dialog({
                title: $(this).attr("Manage Schools in the Group"),
                close: function () {
                    $('.ui-widget-overlay').remove();
                    $(this).remove();
                },
                modal: false,
                width: 750,
                resizable: false,
                position: ['top', 20]
            });
        });

        showModalDialogBG();
    }

    function displayManageAuthorGroupDistrictForm(control) {
        var self = $(control);
        var authorGroupId = self.attr('authorGroupId');
        var worker = $('<div />');

        worker
            .addClass("dialog")
            .attr("id", "AssignParentForm")
            .appendTo("body")
        .load('@Url.Action("ManageAuthorGroupDistrict")/?authorGroupId=' + authorGroupId, function () {
            worker.dialog({
                title: $(this).attr("Manage @LabelHelper.DistrictLabels in the Group"),
                close: function () {
                    $('.ui-widget-overlay').remove();
                    $(this).remove();
                },
                modal: false,
                width: 750,
                resizable: false,
                position: ['top', 20]
            });
        });

        showModalDialogBG();
    }

    function showModalDialogBG() {
        var win = $('body');
        $('body').prepend('<div class="ui-widget-overlay" style="width: ' + win.width() + 'px; height: ' + win.height() + 'px; z-index: 1001;"></div>');
    }
</script>
