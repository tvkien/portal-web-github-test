@model LinkIt.BubbleSheetPortal.Web.ViewModels.AuthorGroup.AddAuthorGroupUserSchoolDistrictViewModel
<link href="@Url.Content("~/Content/themes/base/jquery.ui.dialog.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/css/dialog-draggable.css")" rel="stylesheet" type="text/css" />

<style>
    #reviewList .no-margin {
        margin-left: 0 !important;
        margin-right: 0 !important
    }

    #reviewList .no-margin .last-child {
        margin-bottom: 0 !important;
    }

    .btn-container {
        background: var(--navyColor);
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: space-around;
    }

    #dataTableAddUser tbody tr .actions-col {
        text-align: center !important;
    }

    #dataTableAddUser tbody tr .dataTables_empty {
        text-align: center !important;
    }

    #confirmAddAuthorGroupUserDialog .red-btn:hover {
        background-color: var(--red2) !important;
    }

    .title-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 24px;
        position: relative;
    }

    #closeBtn {
        top: 0 !important;
        right: 0 !important;
    }

    .ui-dialog {
        height: auto !important;
    }

    #PopupAddAuthorGroup section {
        margin: 0;
    }

    #PopupAddAuthorGroup .block-footer {
        display: none !important;
    }
</style>

<article class="container_12">
    <section class="grid_9">
        <div class="block-border">
            <div class="form">
                <div class="block-content ">
                    <div class="title-container">
                        <p class="mb-0 title-large">Add User to Author Group</p>
                        <a id="closeBtn" href="#closeBtn" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a>
                    </div>
                    <div id="studentNotInClassNotifications"></div>
                    <div id="generateContent" class="form mb-4">
                        <div class="bubbleSheetSelector">
                            <ul style="display: none" id="error-messages" class="message error"></ul>
                            <fieldset id="publisherContent" class="grey-bg px-0 py-0">
                                <div class="row">
                                    @if (Model.IsPublisher || Model.IsNetworkAdmin)
                                    {
                                        <div class="col-6">
                                            <label>State</label>
                                            <select id="selectStatePopup"></select>
                                        </div>
                                    }
                                    @if (Model.IsPublisher || Model.IsNetworkAdmin)
                                    {
                                        <div class="col-6">
                                            <label>@LabelHelper.DistrictLabel</label>
                                            <select id="selectDistrictPopup"></select>
                                        </div>
                                    } 
                                </div>
                                <div class="row">
                                    <div class="col-6" style="margin-top: 16px;">
                                        <label>School</label>
                                        <select id="selectSchoolPopup"></select>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                    <div class="form" id="reviewList">
                        <div>
                            <p class="title-large" style="font-size: 18px !important; visibility: hidden" id="labelSelectUser">Select User to Add</p>
                            <div class="no-margin last-child">
                                <table id="dataTableAddUser" class="datatable table no-margin" width="100%">
                                    <colgroup>
                                        <col style="width: 5%" />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th scope="col" style="width: 15px">Actions</th>
                                            <th scope="col">
                                                <span class="column-sort">
                                                    <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                </span>
                                                First Name
                                            </th>
                                            <th scope="col">
                                                <span class="column-sort">
                                                    <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                </span>
                                                Last Name
                                            </th>
                                            <th scope="col">
                                                <span class="column-sort">
                                                    <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                </span>
                                                User Name
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="btn-container">
                    <button id="btnCancel" onclick="closeAddAuthorGroupUser()" type="button" class="btn-red">Close</button>
                </div>
            </div>
        </div>
    </section>
</article>

<script type="text/javascript">
    //declare global variables
    var districtId = 0;
    var stateId = 0;
    var schoolId = 0;

    $(function () {
        @if (Model.IsPublisher||Model.IsNetworkAdmin)
        {
            <text>
        LoadDataTableAddUser();
        if ('@Model.IsPublisher' === 'True') {
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
        }

        if ('@Model.IsNetworkAdmin' === 'True') {
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
        }

                $('#selectStatePopup').change(function () {
                    $('#selectDistrictPopup').empty();
                    $('#selectSchoolPopup').empty();
                    if ($('#selectStatePopup').val() != 'select') {
                        populateDistricts();
                        LoadDataTableAddUser();
                        assignStateDistrictSchool($('#selectStatePopup').val(), 0, 0);
                        $("#dataTableAddUser").dataTable().fnReloadAjax(getAjaxSourceForAuthorGroupUser());
                    }
                });
                $('#selectDistrictPopup').change(function () {
                    $('#selectSchoolPopup').empty();
                    if ($('#selectDistrictPopup').val() != 'select') {
                        populateSchoolsByDistrict();
                        assignStateDistrictSchool($('#selectStatePopup').val(), $('#selectDistrictPopup').val(), 0);
                        $("#dataTableAddUser").dataTable().fnReloadAjax(getAjaxSourceForAuthorGroupUser());
                    }
                });

        </text>
        }

        @if (Model.IsDistrictAdmin)
        {
            <text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        LoadDataTableAddUser();
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtId }, function (schools) {
                    populateSchools(schools);
                });
            </text>
        }

        @if (Model.IsSchoolAdmin || Model.IsTeacher)
        {
            <text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        LoadDataTableAddUser();
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { }, function (schools) {
            populateSchools(schools);
        });
            </text>
        }

        $('#selectSchoolPopup').change(function () {
            if ($('#selectSchoolPopup').val() != 'select') {
                assignStateDistrictSchool(stateId, districtId, $('#selectSchoolPopup').val());
                $("#dataTableAddUser").dataTable().fnReloadAjax(getAjaxSourceForAuthorGroupUser());
            }
        });
    });

    function assignStateDistrictSchool(selectedState, selectedDistrict, selectedSchool) {
        stateId = selectedState;
        districtId = selectedDistrict;
        schoolId = selectedSchool;
    }

    function populateStates(states) {
        addDefaultOption($('#selectStatePopup'), "State");
        addSelectListItems($('#selectStatePopup'), states);
    }

    function populateDistricts() {
        $('#selectDistrictPopup').empty();
        var stateValue = $('#selectStatePopup').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrictPopup'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrictPopup'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                    addDefaultOption($('#selectDistrictPopup'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrictPopup'), districts);
                });
            }
        }
}

function populateSchoolsByDistrict() {
    $('#selectSchoolPopup').empty();
    var districtValue = $('#selectDistrictPopup').val();
    if (districtValue != 'select') {
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function (schools) {
            populateSchools(schools);
        });
    }
}

function populateSchools(schools) {
    addDefaultOption($('#selectSchoolPopup'), "School");
    addSelectListItems($('#selectSchoolPopup'), schools);
}

function LoadDataTableAddUser() {
    var options = {
        bServerSide: true,
        bDestroy: true,
        sAjaxSource: getAjaxSourceForAuthorGroupUser(),
        fnServerParams: function (aoData) {
            var item = null;
            for (var i = 0; i < aoData.length; i++) {
                item = aoData[i];
                if (item.name == 'sSearch') {
                    do {
                        item.value = item.value.replace('""', '"');
                    } while (item.value.indexOf('""') >= 0)

                    if (item.value == '"') {
                        item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                    } else {
                        item.value = encodeURIComponent(item.value);
                    }
                    break;
                }
            }

        },
        bStateSave: false,
        bAutoWidth: false,
        iDisplayLength: 10,
        aaSorting: [[1, "asc"]],
        aoColumns: [
            { sType: 'integer', sName: 'UserId', bSearchable: false, bSortable: false, sClass: 'actions-col' },
            { sType: 'string', sName: 'FirstName', bSearchable: true, bSortable: true, sWidth: '200px' },
            { sType: 'string', sName: 'LastName', bSearchable: true, bSortable: true, sWidth: '200px' },
            { sType: 'string', sName: 'UserName', bSearchable: true, bSortable: true, sWidth: '200px' }
        ],
        fnPreDrawCallback: function () {
            ShowBlock($('#dataTableAddUser'), "Loading");
            return true;
        },
        fnRowCallback: function (nRow, aData) {
            $('td:eq(0)', nRow).html(setIconVisibilityAddUser(aData[0]));
            return nRow;
        },
        fnDrawCallback: function () {
            $('#dataTableAddUser').unblock();
            $('.with-tip').tip();
        },
        fnInitComplete: function () {
            var elSearchLabel = $('#dataTableAddUser_filter label');
            var elSearchInput = elSearchLabel.find('input');

            elSearchInput.css({ paddingLeft: '35px', position: 'relative' });
            elSearchInput.get(0).style.setProperty('padding-left', '32px', 'important');

            elSearchLabel.replaceWith(elSearchInput);
            $('#dataTableAddUser_filter').addClass('data-search');

            var elLabel = $('#labelSelectUser');
            elLabel.css({ position: 'absolute', marginTop: '14px', visibility: 'visible', left: '24px' });
            $('#dataTableAddUser .block-custom-header').prepend(elLabel);

        }
    };

    $("#dataTableAddUser").data("options", options);
    initializeDataTable($("#dataTableAddUser"));
}

function getAjaxSourceForAuthorGroupUser() {
    return '@Url.Action("GetUserList")?stateId=' + stateId + '&districtId=' + districtId + '&schoolId=' + schoolId + '&authorGroupId=@Model.AuthorGroupId';
    }

    function setIconVisibilityAddUser(userId) {
        var addIcon = '<span class="fa-solid fa-circle-plus icon-green"></span>';
        return '<a href="javascript:void(0)" title="Add User to Group" userId="' + userId + '" authorGroupId="' + '@Model.AuthorGroupId' + '" class="with-tip" onclick="AddUserToGroup(this);" style="display: inline-block !important">' + addIcon + '</a>';
    }

    function AddUserToGroup(control) {
        var self = $(control);
        var userId = self.attr('userId');
        var authorGroupId = self.attr('authorGroupId');
        addAuthorGroupUserDialog("Do you want to add this user to this author group?", userId, authorGroupId)
    }



    function addAuthorGroupUserDialog(message, userId, authorGroupId) {
        confirmMessageV2(
            {
                message: message,
                cbYesBtnFuncName: 'HandleAddUserOKClick(' + userId + ',' + authorGroupId + ')',
                cbCancelBtnFuncName: 'HandleAddUserCancelClick()'
            },
            {
                dialogAttr: {
                    attr: {
                        id: 'confirmAddAuthorGroupUserDialog'
                    }
                }
            }
        )
    }

    function HandleAddUserOKClick(userId, authorGroupId) {
         $.post('@Url.Action("AddUserToAuthorGroup")', { userId: userId, authorGroupId: authorGroupId }, function (response) {
            if (response == true) {
                ui.dataTableAddUser.fnDraw();
                LinkIt.success('#studentNotInClassNotifications', 'User added');
                $("#confirmAddAuthorGroupUserDialog").dialog("close");
            } else {
                if (response.ErrorList) {
                    CustomAlert(response.ErrorList[0].ErrorMessage);
                } else {
                    CustomAlert('Error. User does not exist.');
                }
            }
        });
    }

    function HandleAddUserCancelClick() {
        $("#confirmAddAuthorGroupUserDialog").dialog("close");
    }

    $('#closeBtn').live('click', function () {
        $('.ui-widget-overlay').remove();
        $('#AssignParentForm').remove();
        $('.my-overlay').remove();
        $('#PopupAddAuthorGroup').remove();
    });
</script>
