@model LinkIt.BubbleSheetPortal.Web.ViewModels.AuthorGroup.AddAuthorGroupUserSchoolDistrictViewModel
<link href="@Url.Content("~/Content/themes/base/jquery.ui.dialog.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/css/dialog-draggable.css")" rel="stylesheet" type="text/css" />
<style>
    #reviewList .no-margin {
        margin-left: 0 !important;
        margin-right: 0 !important
    }

        #reviewList .no-margin .last-child {
            margin-bottom: 0 !important;
        }

    .btn-container {
        background: var(--navyColor);
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: space-around;
    }

    #dataTableAddDistrict tbody tr .actions-col {
        text-align: center !important;
    }

    #dataTableAddDistrict tbody tr .dataTables_empty {
        text-align: center !important;
    }

    #reviewList .block-footer {
        display: none !important;
    }

    #confirmAddAuthorGroupDistrictDialog .red-btn:hover {
        background-color: var(--red2) !important;
    }

    .title-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 24px;
        position: relative;
    }

    #closeBtn {
        top: 0 !important;
        right: 0 !important;
    }

    .ui-dialog[aria-labelledby="ui-dialog-title-AssignParentForm"] {
        height: auto !important;
    }
</style>
<article class="container_12">
    <section class="grid_9 mb-0 mx-0">
        <div class="block-border" style="height: auto">
            <div class="form">
                <div class="block-content">
                    <div class="title-container">
                        <p class="title-large mb-0" style="font-size: 22px">Add @LabelHelper.DistrictLabel to Author Group</p>
                        <a id="closeBtn" href="#closeBtn" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a>
                    </div>
                    <div id="studentNotInClassNotifications"></div>
                    <div id="generateContent" class="mb-4">
                        <div class="form bubbleSheetSelector">
                            <ul style="display: none" id="error-messages" class="message error"></ul>
                            @if (Model.IsPublisher || Model.IsNetworkAdmin)
                            {
                                <fieldset id="publisherContent" class="grey-bg px-0 py-0">
                                    <div class="row">
                                        <div class="col-6">
                                            <label>State</label>
                                            <select id="selectStatePopup"></select>
                                        </div>
                                    </div>
                                </fieldset>
                            }
                        </div>
                    </div>
                    <div id="reviewList">
                        <div class="form">
                            <p class="title-large" style="font-size: 18px !important; visibility: hidden" id="labelSelectDistrict">
                                Select @LabelHelper.DistrictLabel to Add
                            </p>
                            <div class="no-margin last-child">
                                <table id="dataTableAddDistrict" class="datatable table no-margin" width="100%">
                                    <colgroup>
                                        <col style="width: 5%" />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th scope="col" style="width: 15px">Actions</th>
                                            <th scope="col">
                                                <span class="column-sort">
                                                    <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                                    <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                                </span>
                                                Name
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="btn-container">
                    <button id="btnCancel" onclick="closeAddAuthorGroupDistrict()" type="button" class="btn-red">Close</button>
                </div>
            </div>

        </div>
    </section>
</article>

<script type="text/javascript">
    //declare global variables
    var stateId = 0;

    $(function () {
        @if (Model.IsPublisher||Model.IsNetworkAdmin)
        {
<text>
        LoaddataTableAddDistrict();
        if ('@Model.IsPublisher' === 'True') {
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
        }
        if ('@Model.IsNetworkAdmin' === 'True') {
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
        }
        $('#selectStatePopup').change(function () {
            $('#selectDistrictPopup').empty();
            $('#selectSchoolPopup').empty();
            if ($('#selectStatePopup').val() != 'select') {
                assignStateDistrictSchool($('#selectStatePopup').val());
                $("#dataTableAddDistrict").dataTable().fnReloadAjax(getAjaxSourceForAuthorGroupDistrict());
            }
        });
        </text>
        }
        @if (Model.IsDistrictAdmin)
        {
<text>
        stateId = '@Model.StateId';
        LoaddataTableAddDistrict();
</text>
        }
    });

    function assignStateDistrictSchool(selectedState) {
        stateId = selectedState;
    }

    function populateStates(states) {
        addDefaultOption($('#selectStatePopup'), "State");
        addSelectListItems($('#selectStatePopup'), states);
    }

    function LoaddataTableAddDistrict() {
        var options = {
            bServerSide: true,
            bDestroy: true,
            sAjaxSource: getAjaxSourceForAuthorGroupDistrict(),
            fnServerParams: function (aoData) {
                var item = null;
                for (var i = 0; i < aoData.length; i++) {
                    item = aoData[i];
                    if (item.name == 'sSearch') {
                        do {
                            item.value = item.value.replace('""', '"');
                        } while (item.value.indexOf('""') >= 0)

                        if (item.value == '"') {
                            item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                        } else {
                            item.value = encodeURIComponent(item.value);
                        }
                        break;
                    }
                }

            },
            bStateSave: false,
            bAutoWidth: false,
            iDisplayLength: 10,
            aaSorting: [[1, "asc"]],
            aoColumns: [
                { sType: 'integer', sName: 'DistrictId', bSearchable: false, bSortable: false, sClass: 'actions-col' },
                { sType: 'string', sName: 'DistrictName', bSearchable: true, bSortable: true }
            ],
            fnPreDrawCallback: function () {
                ShowBlock($('#dataTableAddDistrict'), "Loading");
                return true;
            },
            fnRowCallback: function (nRow, aData) {
                $('td:eq(0)', nRow).html(setIconVisibilityAddDistrict(aData[0]));
                return nRow;
            },
            fnDrawCallback: function () {
                $('#dataTableAddDistrict').unblock();
                $('.with-tip').tip();
            },
            fnInitComplete: function () {
                var elSearchLabel = $('#dataTableAddDistrict_filter label');
                var elSearchInput = elSearchLabel.find('input');

                elSearchInput.css({ paddingLeft: '35px', position: 'relative' });
                elSearchInput.get(0).style.setProperty('padding-left', '32px', 'important');

                elSearchLabel.replaceWith(elSearchInput);
                $('#dataTableAddDistrict_filter').addClass('data-search');

                var elLabel = $('#labelSelectDistrict');
                elLabel.css({ position: 'absolute', marginTop: '14px', visibility: 'visible', left: '24px' });
                $('#dataTableAddDistrict .block-custom-header').prepend(elLabel);
            }
        };

        $("#dataTableAddDistrict").data("options", options);
        initializeDataTable($("#dataTableAddDistrict"));
    }

    function getAjaxSourceForAuthorGroupDistrict() {
        return '@Url.Action("GetDistrictList")?stateId=' + stateId + '&authorGroupId=@Model.AuthorGroupId';
    }

    function setIconVisibilityAddDistrict(districtId) {
        var addIcon = '<span class="fa-solid fa-circle-plus icon-green"></span>';
        return '<a href="javascript:void(0)" title="Add @LabelHelper.DistrictLabel to Group" districtId="' + districtId + '" authorGroupId="' + '@Model.AuthorGroupId' + '" class="with-tip" onclick="AddDistrictToGroup(this);" style="display: inline-block !important">' + addIcon + '</a>';
    }

    function AddDistrictToGroup(control) {
        var self = $(control);
        var districtId = self.attr('districtId');
        var authorGroupId = self.attr('authorGroupId');
        addAuthorGroupDistrictDialog("Do you want to add this @LabelHelper.DistrictLabel to this author group?", districtId, authorGroupId);
    }

    function addAuthorGroupDistrictDialog(message, districtId, authorGroupId) {
        confirmMessageV2(
            {
                message: message,
                cbYesBtnFuncName: 'HandleAddDistrictOKClick(' + districtId + ',' + authorGroupId + ')',
                cbCancelBtnFuncName: 'HandleAddDistrictCancelClick()'
            },
            {
                dialogAttr: {
                    attr: {
                        id: 'confirmAddAuthorGroupDistrictDialog'
                    }
                }
            }
        )
    }

    function HandleAddDistrictOKClick(districtId, authorGroupId) {
         $.post('@Url.Action("AddDistrictToAuthorGroup")', { districtId: districtId, authorGroupId: authorGroupId }, function (response) {
                if (response == true) {
                    ui.dataTableAddDistrict.fnDraw();
                    LinkIt.success('#studentNotInClassNotifications', '@LabelHelper.DistrictLabel added');
                    $("#confirmAddAuthorGroupDistrictDialog").dialog("close");
                } else {
                    alert('Error. User does not exist.');
                }
            });
    }

    function HandleAddDistrictCancelClick() {
        $("#confirmAddAuthorGroupDistrictDialog").dialog("close");
    }

    $('#closeBtn').live('click', function () {
        $('.ui-widget-overlay').remove();
        $('#AssignParentForm').remove();
        $('.my-overlay').remove();
        $('#PopupAddAuthorGroup').remove();
    });
</script>
