@model LinkIt.BubbleSheetPortal.Web.ViewModels.AuthorGroup.AuthorGroupListViewModel
@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Models
@{
    ViewBag.Title = HelperExtensions.FormatPageTitle(ContaintUtil.Testdesign, "Manage Author Groups");
}
<style>
    #portal-v2-containter fieldset {
        padding: 0 !important;
    }

    #portal-v2-containter .ui-dialog[aria-labelledby="ui-dialog-title-AddAuthorGroupDialog"] {
        width: 1065px !important;
        max-width: unset !important;
    }
</style>
<article>
    <section>
        <div id="generateContent" class="block-border" style="width: 100%">
            <div class="block-content form wrapper-block">
                @if (Model.IsPublisher || Model.IsDistrictAdmin || Model.IsNetworkAdmin)
                {
                    <div class="bubbleSheetSelector">
                        <p class="title-large mb-4">Filter Author Groups</p>

                        <ul style="display: none" id="error-messages" class="message error"></ul>
                        @if (Model.IsPublisher || Model.IsNetworkAdmin)
                        {
                            <text>
                                <div id="publisherContent" class="">
                                    <div class="row">
                                        <div class="col-4">
                                            <label>State</label>
                                            <div class="block-text-name w-100">
                                                <select class="w-100" id="selectStateOnPopup"></select>
                                                <div class="box-select">
                                                    <span class="overlay"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <label>@LabelHelper.DistrictLabel</label>
                                            <div class="block-text-name w-100">
                                                <select class="w-100" id="selectDistrictOnPopup"></select>
                                                <div class="box-select">
                                                    <span class="overlay"></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-4">
                                            <label>School</label>
                                            <div class="block-text-name w-100">
                                                <select class="w-100" id="selectSchoolOnPopup"></select>
                                                <div class="box-select">
                                                    <span class="overlay"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </text>
                        }
                        @if (Model.IsDistrictAdmin)
                        {
                            <text>
                                <fieldset id="publisherContent">
                                    <div class="row">
                                        <div class="col-4">
                                            <label>School</label>
                                            <div class="block-text-name w-100">
                                                <select class="w-100" id="selectSchoolOnPopup"></select>
                                                <div class="box-select">
                                                    <span class="overlay"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </text>
                        }
                        @if (Model.IsTeacher || Model.IsSchoolAdmin)
                        {
                            <text>

                            </text>
                        }
                        <div class="clear"></div>
                    </div>
                }

                <div class="line-break"></div>

                <div id="reviewList" class="">
                    <div id="title-author-group" style="display: none; float: left; margin-top: 8px;">
                        <p class="title-large">Author Groups</p>
                    </div>

                    <div class="last-child">
                        <table id="dataTableAuthorGroup" class="datatable table no-margin" width="100%">
                            <thead>
                                <tr>
                                    <th scope="col" class="black-cell">Actions</th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Name of Author Group
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Users in the Group
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Schools in the Group
                                    </th>
                                    <th scope="col">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        @LabelHelper.DistrictLabels in the Group
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</article>
<script type="text/javascript">

    //declare global variables
    var districtId = 0;
    var stateId = 0;
    var schoolId = 0;
    var itemBankId = '@ViewBag.ItemBankId';
    var itemSetId = '@ViewBag.ItemSetId';
    var addFor = '@ViewBag.AddFor';
    $(function () {

        @if (Model.IsPublisher)
        {
            <text>
        LoadDataTables();
        $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
            populateStates(states);
        });

        $('#selectStateOnPopup').change(function () {
            $('#selectDistrictOnPopup').empty();
            $('#selectSchoolOnPopup').empty();
            if ($('#selectStateOnPopup').val() != 'select') {
                populateDistricts();
                assignStateDistrictSchool($('#selectStateOnPopup').val(), 0, 0);
                LoadDataTables();
                $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        $('#selectDistrictOnPopup').change(function () {
            $('#selectSchoolOnPopup').empty();
            if ($('#selectDistrictOnPopup').val() != 'select') {
                populateSchoolsByDistrict();
                assignStateDistrictSchool($('#selectStateOnPopup').val(), $('#selectDistrictOnPopup').val(), 0);
                //LoadDataTables();
                $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        $('#selectSchoolOnPopup').change(function () {
            if ($('#selectSchoolOnPopup').val() != 'select') {
                assignStateDistrictSchool($('#selectStateOnPopup').val(), $('#selectDistrictOnPopup').val(), $('#selectSchoolOnPopup').val());
                //LoadDataTables();
                $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
            }
        });

        </text>
        }
         @if (Model.IsNetworkAdmin)
        {
            <text>
            LoadDataTables();
            $.get('@Url.Action("GetStatesForNetworkAdmin", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });

            $('#selectStateOnPopup').change(function () {
                $('#selectDistrictOnPopup').empty();
                $('#selectSchoolOnPopup').empty();
                if ($('#selectStateOnPopup').val() != 'select') {
                    populateDistricts();
                    assignStateDistrictSchool($('#selectStateOnPopup').val(), 0, 0);
                    LoadDataTables();
                    $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
                }
            });
            $('#selectDistrictOnPopup').change(function () {
                $('#selectSchoolOnPopup').empty();
                if ($('#selectDistrictOnPopup').val() != 'select') {
                    populateSchoolsByDistrict();
                    assignStateDistrictSchool($('#selectStateOnPopup').val(), $('#selectDistrictOnPopup').val(), 0);
                    //LoadDataTables();
                    $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
                }
            });
            $('#selectSchoolOnPopup').change(function () {
                if ($('#selectSchoolOnPopup').val() != 'select') {
                    assignStateDistrictSchool($('#selectStateOnPopup').val(), $('#selectDistrictOnPopup').val(), $('#selectSchoolOnPopup').val());
                    //LoadDataTables();
                    $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
                }
            });

            </text>
        }
        @if (Model.IsDistrictAdmin)
        {
        <text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        LoadDataTables();
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtId }, function (schools) {
            populateSchools(schools);
        });
        $('#selectSchoolOnPopup').change(function () {
            if ($('#selectSchoolOnPopup').val() != 'select') {
                assignStateDistrictSchool(stateId, districtId, $('#selectSchoolOnPopup').val());
                //LoadDataTables();
                $("#dataTableAuthorGroup").dataTable().fnReloadAjax(getAjaxSource());
            }
        });
        </text>
        }
        @if (Model.IsSchoolAdmin)
        {
<text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        schoolId = '@Model.SchoolId';
        LoadDataTables();
        </text>
        }
        @if (Model.IsTeacher)
        {
<text>
        stateId = '@Model.StateId';
        districtId = '@Model.DistrictId';
        schoolId = '@Model.SchoolId';
        LoadDataTables();
</text>
        }
    });

    function assignStateDistrictSchool(selectedState, selectedDistrict, selectedSchool) {
        stateId = selectedState;
        districtId = selectedDistrict;
        schoolId = selectedSchool;
    }

    function populateStates(states) {
        addDefaultOption($('#selectStateOnPopup'), "State");
        addSelectListItems($('#selectStateOnPopup'), states);
        $('#selectStateOnPopup').marquee();
    }

    function populateDistricts() {
        $('#selectDistrictOnPopup').empty();
        var stateValue = $('#selectStateOnPopup').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrictOnPopup'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrictOnPopup'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                    addDefaultOption($('#selectDistrictOnPopup'), "@LabelHelper.DistrictLabel");
                     addSelectListItems($('#selectDistrictOnPopup'), districts);
                 });
             }
        }
        $('#selectDistrictOnPopup').marquee();
}

function populateSchoolsByDistrict() {
    $('#selectSchoolOnPopup').empty();
    var districtValue = $('#selectDistrictOnPopup').val();
    if (districtValue != 'select') {
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function (schools) {
            populateSchools(schools);
        });
    }
    $('#selectDistrictOnPopup').marquee();

}

function populateSchools(schools) {
    addDefaultOption($('#selectSchoolOnPopup'), "School");
    addSelectListItems($('#selectSchoolOnPopup'), schools);
    $('#selectSchoolOnPopup').marquee();
}

function LoadDataTables() {
    var isPublisher = '@Model.IsPublisher' == 'True';

    var options = {
        bServerSide: true,
        bDestroy: true,
        sAjaxSource: getAjaxSource(),
        fnServerParams: function (aoData) {
            var item = null;
            for (var i = 0; i < aoData.length; i++) {
                item = aoData[i];
                if (item.name == 'sSearch') {
                    do {
                        item.value = item.value.replace('""', '"');
                    } while (item.value.indexOf('""') >= 0)

                    if (item.value == '"') {
                        item.value = item.value.replace('"', "''"); // when user type " or "", or """,...in searchbox, system will issue an error, this code fix that error
                    } else {
                        item.value = encodeURIComponent(item.value);
                    }
                    break;
                }
            }

        },
        //bStateSave: false,
        bAutoWidth: false,
        iDisplayLength: 10,
        oLanguage: { sSearch: "" },
        aaSorting: [[1, "asc"]],
        aoColumns: [
            { sType: 'integer', sName: 'AuthorGroupId', bSearchable: false, bSortable: false, sWidth: '50px', sClass: "col-action" },
            { sType: 'string', sName: 'Name', bSearchable: true, bSortable: true },
            { sType: 'string', sName: 'UserList', bSearchable: true, bSortable: true, sWidth: '180px' },
            { sType: 'string', sName: 'SchoolList', bSearchable: true, bSortable: true, sWidth: '180px' },
            { sType: 'string', sName: 'DistrictList', bSearchable: true, bSortable: true, sWidth: '180px', bVisible: ('@Model.IsPublisher' == 'True' || '@Model.IsNetworkAdmin' == 'True') }
        ],
        fnRowCallback: function (nRow, aData) {
            $('td:eq(0)', nRow).html(setIconVisibilityAuthorGroupList(aData[0]));
            displayTitle($('td:eq(2)', nRow));
            displayTitle($('td:eq(3)', nRow));
            displayTitle($('td:eq(4)', nRow));
            return nRow;
        },
        fnDrawCallback: function () {
            $('.with-tip').tip();
        },
        fnInitComplete: function () {
            var elSearchLabel = $('#dataTableAuthorGroup_filter');
            var elSearchInput = elSearchLabel.find('input');
            elSearchInput.attr('style', 'padding-left: 32px !important; position: relative;');
            elSearchLabel.addClass('data-search');

            $('#dataTableAuthorGroup_wrapper .block-custom-header').prepend($('#title-author-group'));
            $('#title-author-group').show()
        }
    };

    $("#dataTableAuthorGroup").data("options", options);
    initializeDataTable($("#dataTableAuthorGroup"));
}

function getAjaxSource() {
    return '@Url.Action("GetAuthorGroupListHasAccessTo")/?stateId=' + stateId + '&districtId=' + districtId + '&schoolId=' + schoolId;
}

    @if (Model.IsPublisher || Model.IsDistrictAdmin || Model.IsNetworkAdmin)
    {
<text>
    function setIconVisibilityAuthorGroupList(authorGroupId) {
        var addAuthorGroup = '<i class="custom-icon fa-solid fa-circle-plus icon-green"></i>';
        var addAuthorGroupString = '<a href="javascript:void(0)" title="Add Author Group" itembankId="' + itemBankId + '" authorGroupId="' + authorGroupId + '" class="with-tip" onclick="AddAuthorGroup(this);">' + addAuthorGroup + '</a>';
        return addAuthorGroupString;
    }
</text>
    }
    else if (Model.IsSchoolAdmin)
    {
<text>
    function setIconVisibilityAuthorGroupList(authorGroupId) {
        var addAuthorGroup = '<i class="custom-icon fa-solid fa-circle-plus icon-green"></i>';
        var addAuthorGroupString = '<a href="javascript:void(0)" title="Add Author Group" itembankId="' + itemBankId + '" authorGroupId="' + authorGroupId + '" class="with-tip" onclick="AddAuthorGroup(this);">' + addAuthorGroup + '</a>';
        return addAuthorGroupString;
    }
</text>
    }
    else
    {
        <text>
    function setIconVisibilityAuthorGroupList(authorGroupId) {
        var addAuthorGroup = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/plus-circle.png")';
        var addAuthorGroupString = '<a href="javascript:void(0)" title="Add Author Group" itembankId="' + itemBankId + '" authorGroupId="' + authorGroupId + '" class="with-tip" onclick="AddAuthorGroup(this);"><img src="' + addAuthorGroup + '" width="16" height="16"></a>';
        return addAuthorGroupString;
    }
    </text>
    }


    function AddAuthorGroup(control) {
        var self = $(control);
        //self.hide();
        var authorGroupId = self.attr('authorGroupId');
        var id = 0;
        if (addFor == "itembank") {
            //alert(itemBankId + ' - ' + authorGroupId + ' - ' + addFor);
            id = itemBankId;
        } else {
            //alert(itemSetId + ' - ' + authorGroupId + ' - ' + addFor);
            id = itemSetId;
        }
        $.post('@Url.Action("AddAuthorGroupById", "ItemBank")', { id: id, authorGroupId: authorGroupId, type: addFor }, function (response) {
            if (response == true) {
                $('.with-tip').hideTip();
                $(".dialog").dialog("close");
                if (addFor == "itembank") {
                    ui.dataTable.fnReloadAjax();
                } else {
                    ui.dataTableSet.fnReloadAjax();
                }

            } else {
                alert(response.message);
            }
        });
    }

    function displayTitle(td) {
        var content = td.html();
        var tooltip = '';
        if (content == null) {
            content = '';
        }
        if (content.length > 0) {
            tooltip = content.replace(/\, /g, '<br>');// add line break for each item
            if (content.length > 50) {
                content = content.substring(0, 50);
                content = content + ' ...';

                td.html(content);
                td.addClass('with-tip');
                td.attr("title", tooltip);
            }
        }

    }
</script>
