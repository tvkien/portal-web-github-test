@using LinkIt.BubbleSheetPortal.Models
@model LinkIt.BubbleSheetPortal.Web.ViewModels.SATCorrectQuestionErrorViewModel
@{
    ViewBag.Title = "Correct Number of Questions Error";
}

<article class="container_12">
    <section class="grid_10">
        <div class="block-border">
            <div class="block-content form">
                <h1>Could Not Find Questions Error</h1>
                <ul class="message warning no-margin">
                    <li>
                        When reading the bubble sheet, the correct number of questions were not found. Please follow
                        the steps below and select the answers for any questions you would like then submit the new test for grading.
                    </li>
                </ul>
                <fieldset>
                    <legend>Step 1</legend>
                    <ul class="message no-margin">
                        <li>View the file that caused the error. (Clicking on the image will open a larger version of the image in a new tab)</li>
                    </ul>
                    <a href="@Model.RelatedImage" target="_new">
                        <img src="@Model.RelatedImage" width="128px" height="170px" />
                    </a>
                </fieldset>
                @using (Html.BeginForm("SATSubmitCorrectNumberOfQuestionsError", "ErrorCorrection", FormMethod.Post, new { id = "actSubmitQuestions" }))
                {
                    <fieldset>
                        <legend>Step 2</legend>
                        <ul class="message no-margin">
                            <li>Manually select answers for the questions below to resubmit the sheet for grading</li>
                        </ul>
                        @for (int iUnanswer = 1; iUnanswer <= Model.ListSection.Count; iUnanswer++)
                        {
                            var lstUnansweredQuestionSection = Model.UnansweredQuestions.Where(o => o.OrderSectionIndex == iUnanswer)
                               .OrderBy(o => o.OrderSectionQuestionIndex).ToList();
                            if (lstUnansweredQuestionSection.Count > 0)
                            {
                                if (string.IsNullOrEmpty(@lstUnansweredQuestionSection[0].SectionTitle))
                                {
                                    <div>Section @iUnanswer </div>
                                }
                                else
                                {
                                    <div>@lstUnansweredQuestionSection[0].SectionTitle</div>
                                }
                                <table class="table" width="100%">
                                    <thead>
                                        <tr>
                                            <th style="width: 75px">Question</th>
                                            <th>Answer Choices</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var unansweredQuestion in lstUnansweredQuestionSection)
                                        {
                                            <tr class="unAnswerRow" questionid="@unansweredQuestion.QuestionId" sectionindex="@unansweredQuestion.OrderSectionIndex" sectionquestionindex="@unansweredQuestion.OrderSectionQuestionIndex">
                                                <td>
                                                    <p class="input-height">
                                                        @unansweredQuestion.OrderSectionQuestionIndex
                                                    </p>
                                                </td>
                                                <td>
                                                    <p class="input-height">
                                                        @if (unansweredQuestion.QTISchemaId == (int)QTISchemaType.TextEntry)
                                                        {
                                                            <input class="textboxAnswer"
                                                                   questionorder="@unansweredQuestion.QuestionOrder"
                                                                   type="text"
                                                                   name="@unansweredQuestion.QuestionId"
                                                                   id="txtUnAnswerQuestion-@unansweredQuestion.QuestionId"
                                                                   value=""
                                                                   sectionindex="@unansweredQuestion.OrderSectionIndex"
                                                                   sectionquestionindex="@unansweredQuestion.OrderSectionQuestionIndex"
                                                                   maxlength="4" />
                                                        }
                                                        else
                                                        {
                                                            for (int i = 0; i < unansweredQuestion.AnswerChoices.Count(); i++)
                                                            {
                                                                var answerChoice = unansweredQuestion.AnswerChoices.ToList()[i];

                                                                if (unansweredQuestion.QTISchemaId == (int)QTISchemaType.ChoiceMultiple)
                                                                {
                                                                    <input class="checkboxAnswer" questionorder="@unansweredQuestion.QuestionOrder" type="checkbox" name="@unansweredQuestion.QuestionId"
                                                                           onclick="BubbleSheetViewCheckMaxchoice(@unansweredQuestion.MaxChoice,@unansweredQuestion.QuestionId)" id="@unansweredQuestion.QuestionId-M-@answerChoice" value="@answerChoice" />
                                                                    <label class="letterLabel" for="@unansweredQuestion.QuestionId-@answerChoice">@answerChoice</label>
                                                                }
                                                                else
                                                                {
                                                                    <input class="radioButtonAnswer"
                                                                           questionorder="@unansweredQuestion.QuestionOrder"
                                                                           type="radio"
                                                                           name="@unansweredQuestion.QuestionId"
                                                                           id="@unansweredQuestion.QuestionId-@answerChoice"
                                                                           value="@answerChoice"
                                                                           sectionindex="@unansweredQuestion.OrderSectionIndex"
                                                                           sectionquestionindex="@unansweredQuestion.OrderSectionQuestionIndex" />
                                                                    <label class="letterLabel" for="@unansweredQuestion.QuestionId-@answerChoice">@answerChoice</label>
                                                                }
                                                            }
                                                        }
                                                        
                                                    </p>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        }

                        
                    </fieldset>
                    <button id="btnSubmit" type="submit">Submit</button>
                    <button id="btnDelete" type="button" class="red">Delete</button>
                    <button id="btnCancel" type="button" class="grey">Cancel</button>
                }
            </div>
        </div>
    </section>
</article>

<script type="text/javascript">
    $(function () {
        $('#btnSubmit').click(function () {
            ShowBlock($('.grid_10'), "Submitting Error Correction");
        });

        $('#generateTab').addClass('current');

        $('#btnSubmit').click(function (event) {
            event.preventDefault();
            var answers = new Array();

            //UnAnswered
            $('.unAnswerRow').each(function () {
                var QuestionId = 0;
                var QuestionOrder = 0;
                var answerChoice = '';
                var vSectionIndex = $(this).attr('sectionindex');
                var vSectionQuestionIndex = $(this).attr('sectionquestionindex');
                if ($('input:checkbox[id^=' + $(this).attr('QuestionID') + '].checkboxAnswer:checked').length > 0) {
                    $('input:checkbox[id^=' + $(this).attr('QuestionID') + '].checkboxAnswer:checked').each(function () {
                        QuestionId = $(this).attr('name');
                        QuestionOrder = $(this).attr('questionOrder');
                        if ($(this).is(':checked'))
                            answerChoice += ',' + $(this).val();
                    });
                    if (answerChoice.length > 0)
                        answerChoice = answerChoice.substr(1, answerChoice.length);
                    answers.push({ 'QuestionId': QuestionId, 'SelectedAnswer': answerChoice, 'QuestionOrder': QuestionOrder, 'SectionIndex': vSectionIndex, 'SectionQuestionIndex': vSectionQuestionIndex });
                }
            });
            $('.unAnswerRow .radioButtonAnswer:checked').each(function () {
                answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': $(this).attr('sectionindex'), 'SectionQuestionIndex': $(this).attr('sectionquestionindex') });
            });
            
            $('.textboxAnswer').each(function () {
                answers.push({ 'QuestionId': $(this).attr('name'), 'SelectedAnswer': $(this).val(), 'QuestionOrder': $(this).attr('questionOrder'), 'SectionIndex': $(this).attr('sectionindex'), 'SectionQuestionIndex': $(this).attr('sectionquestionindex') });
            });

            $.ajax({
                url: '@Url.Action("SATSubmitCorrectNumberOfQuestionsError")',
                type: 'POST',
                contentType: "application/json",
                data: JSON.stringify({ InputFileName: '@Model.InputFileName', BubbleSheetErrorId: '@Model.BubbleSheetErrorId', UnansweredQuestionAnswers: answers, BubbleSheetId: '@Model.BubbleSheetId', QuestionCount: '@Model.UnansweredQuestions.Count' }),
                success: function (response) {
                    $('.grid_10').unblock();
                    if (response) {
                        location.href = '@Url.Action("ProcessErrors")';
                    }
                }
            });
        });

        $('#btnDelete').click(function () {
            if (confirm("Are you sure you want to delete this error?")) {
                $.post('@Url.Action("RemoveBubbleSheetError")', { bubbleSheetErrorId: '@Model.BubbleSheetErrorId' }, function (response) {
                    if (response == true) {
                        location.href = '@Url.Action("ProcessErrors")';
                    } else {
                        alert('Error does not exist, please try again.');
                    }
                });
            }
        });

        $('#btnCancel').click(function () {
            location.href = '@Url.Action("ProcessErrors")';
        });
    });

    function BubbleSheetViewCheckMaxchoice(maxChoice, Id) {
        //TODO: check maxchoice
        // if select > maxchoice -> show notification or no select more.
        var total = $("input[id^='" + Id + "-M-']:checked").length;
        if (total >= maxChoice && maxChoice != 0) {
            $("input[id^='" + Id + "-M-']:not(':checked')").attr("disabled", true);
        }
        if (total < maxChoice) {
            $("input[id^='" + Id + "-M-']:not(':checked')").removeAttr("disabled");
        }
    }

    $(".textboxAnswer").keyup(function () {
        var input = $(this),
        text = input.val().replace(/[^0-9./ ]/g, "");
        input.val(text);
    });
</script>
