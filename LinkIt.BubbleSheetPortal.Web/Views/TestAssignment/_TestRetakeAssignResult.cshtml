@using LinkIt.BubbleSheetPortal.Common
@using LinkIt.BubbleSheetPortal.Web.ViewModels
@using LinkIt.BubbleSheetPortal.Web.Constant
@model TestAssignResultViewModel

<style type="text/css">
    #tableStudentAssign td {
        word-wrap: break-word;
        vertical-align: middle;
        /*word-break: break-all;*/ /* Not apply for whole table, just apply for long word in each td*/
    }

    #tableStudentAssign .text-center {
        text-align: center;
    }

    .plButton {
        text-align: center;
        position: relative;
        top: 47px;
    }

    #btnOk {
        width: 79px;
        margin-right: 10px;
    }

    button {
        margin-left: 30px;
    }

    a.disabled {
        opacity: 0.6;
        cursor: no-drop;
    }

    #tableStudentAssign_length select {
        min-width: auto !important;
    }

    #tableStudentAssign_filter input {
        width: 200px !important;
    }

    #tableStudentAssign_info {
        margin-bottom: 20px !important;
    }
</style>

@if (Model != null)
{
    if (Model.ErrorList != null && Model.ErrorList.Count > 0)
    {
        @*<script src="@Url.Content("~/scripts/custom.js")" type="text/javascript"></script>*@
        @LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.ScriptCustomBundle()
        <script>
            $(function () {
                addErrorMessages(@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)));
            });
        </script>
    }
    else
    {
        <div id="divPopupTestResult1" style="margin-top: 10px;">
            <fieldset class="grey-bg">
                <h1>
                    Retake Assignments
                    <div class="clearfix"></div>
                    <a href="javascript:void(0)" id="btnDeactiveTestClassAssignment" style="margin-left: 7px;" class="off is-disabled">
                        Delete
                    </a>
                    <div class="clearfix"></div>
                    <a href='@Url.Action("PrintAssignmentRetake", "TestAssignment")' target="_blank" id="btnPrintAssignment" style="margin-left: 120px;" class="off">
                        Print
                    </a>
                </h1>
                <div class="clear"></div>
                <div id="divContentPrint">
                    <link href="@Url.Content("~/Content/themes/Constellation/css/table.css")" rel="stylesheet" />
                    <div id="divTabs" style="width: 100%">
                        <div id="divMenuClassAssigment" class="tab_default" style="float: left; display: none; margin-right: 2px;" onclick="OpenClassAssignment();">Class Assignment</div>
                        <div id="divMenuStudentAssignment" class="tab_default" style="float: left; display: none; margin-right: 2px;" onclick="OpenStudentAssignment();">Student Assignment</div>
                        <div id="divMenuStudentGroupAssignment" class="tab_default" style="float: left; display: none; margin-right: 2px;" onclick="OpenStudentGroup();">Student Group Assignment</div>
                    </div>
                    <div class="clear"></div>
                    <div id="divTabStudentAssigns">
                        <table class="datatable table no-margin" width="100%" id="tableStudentAssign">
                            <thead>
                                <tr>
                                    <th scope="col" style="text-align: center;">
                                        <input id="chkAllAssignments" type="checkbox" onchange="handleAssignmentCheckAll(this)" />
                                    </th>
                                    <th scope="col" style="text-align: center;">
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Assigned
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Assignment
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Class
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Student
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Student Code
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Assignment Code
                                    </th>
                                </tr>
                            </thead>
                            <tbody>                                    
                            </tbody>

                        </table>
                    </div>
                </div>
            </fieldset>
        </div>

    }

<script type="text/javascript">
        var oTableStudentAssign;
        var showDeactiveClassTestAssignment = false;

        $('#btnPrintAssignResult').click(function () {
            Popup($('#divContentPrint').html());
        });

        function Popup(data) {
            var mywindow = window.open('', 'Assignment Result', 'height=400,width=600');
            mywindow.document.write(data);
            mywindow.document.close();
            mywindow.focus();
            if (navigator.appName == 'Microsoft Internet Explorer')
                document.execCommand('Print');
            else mywindow.print();
            mywindow.close();
            return true;
        }

        function OpenStudentGroup() {
            $('#divTabs > div').removeClass('tab_assign_active');
            $('#divMenuStudentGroupAssignment').addClass('tab_assign_active');

            $('#divTabGroupStudents').show();
            $('#divTabStudentAssigns').hide();
            $('#divTabClassAssignments').hide();
            var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=3';
            $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
        }
        function OpenStudentAssignment() {
            $('#divTabs > div').removeClass('tab_assign_active');
            $('#divMenuStudentAssignment').addClass('tab_assign_active');
            $('#divTabGroupStudents').hide();
            $('#divTabStudentAssigns').show();
            $('#divTabClassAssignments').hide();
            var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=2';
            $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
        }
        function OpenClassAssignment() {
            $('#divTabs > div').removeClass('tab_assign_active');
            $('#divMenuClassAssigment').addClass('tab_assign_active');
            $('#divTabGroupStudents').hide();
            $('#divTabStudentAssigns').hide();
            $('#divTabClassAssignments').show();
            var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=1';
            $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
    }

        function buildPrintUrl() {
            console.log($('#btnPrintAssignment'));
            var baseUrl = '@Url.Action("PrintAssignmentRetake", "TestAssignment")';
            var printUrl = new URL(window.location.origin + baseUrl);
            var paramKeys = ["sSortDir_0", "sColumns", "iDisplayStart", "iDisplayLength", "sSearch", "iSortCol_0"];
            var datatableParams = oTableStudentAssign.oApi._fnAjaxParameters(oTableStudentAssign.dataTable().fnSettings())
                .filter(function (param) {
                    return paramKeys.includes(param.name)
                }).map(function (paramFiltered) {
                    var param = {};
                    param[paramFiltered.name] = paramFiltered.value;

                    return param;
                }).reduce(function (prev, curr) {
                    return Object.assign(prev, curr);
                }, {});

            datatableParams['retakeAssignmentRequestGuid'] = '@ViewBag.RetakeAssignmentRequestGuid';
            printUrl.search = new URLSearchParams(datatableParams);

            $('#btnPrintAssignment').attr('href', printUrl);
        }

        function HandleClassOKClick(qtiTestClassAssignmentID, operationType, isMultiDeactive) {
            $("#messageClassDialog").dialog("close");
            if (isMultiDeactive) {
                var qtiTestClassAssignmentIDs = assignmentsSelected.join(',');
                $.post('@Url.Action("ChangeStatusMutipleAssignment", "TestAssignmentReview")', {
                    qtiTestClassAssignmentIDs: qtiTestClassAssignmentIDs,
                    operationOption: operationType
                }, function (response) {
                    oTableStudentAssign.fnDraw();
                    selectAssignments();
                    LoadStudenTable();
                });
            }
            else {
                $.post('@Url.Action("ChangeStatus", "TestAssignmentReview")', {
                    qtiTestClassAssignmentID: qtiTestClassAssignmentID,
                    operation: operationType
                }, function (response) {
                    oTableStudentAssign.fnDraw();
                    selectAssignments();
                    LoadStudenTable();
                });
            }
            assignmentsSelected = [];
        }

        function HandleClassCancelClick() {
            $("#messageClassDialog").dialog("close");
        }

        $(function () {

            var options = {
                bServerSide: true,
                sServerMethod: "POST",
                bDestroy: true,
                bProcessing: false,
                //sAjaxSource: '@Url.Action("LoadAssignmentForRetake", "TestAssignment")',
                sAjaxSource: fnLoadAssignmentForRetake(),
                oLanguage: { "sZeroRecords": "No results meet your search criteria. Try changing your other filters and search again." },
                iDisplayLength: 25,
                aaSorting: [[5, "asc"]],
                aoColumns: [
                    { mData: 'ID', sName: 'ID', bSearchable: false, bSortable: false, bVisible: true, sWidth: '15px' },
                    { mData: 'ShortGUID', sName: 'ShortGUID', bSearchable: false, bSortable: false, bVisible: true, sWidth: '15px' },
                    { mData: 'Assigned', sName: 'Assigned', bSearchable: false, bSortable: true, bVisible: true, sWidth: '78px' },
                    { mData: 'Test', sName: 'Test', bSearchable: false, bSortable: true, bVisible: true, sWidth: '100px' },
                    { mData: 'ClassName', sName: 'ClassName', bSearchable: false, bSortable: true, bVisible: true, sWidth: '78px' },
                    { mData: 'StudentName', sName: 'StudentName', bSearchable: false, bSortable: true, bVisible: true, sWidth: '78px' },
                    { mData: 'StudentCode', sName: 'StudentCode', bSearchable: false, bSortable: true, bVisible: true, sWidth: '78px' },
                    { mData: 'TestCode', sName: 'TestCode', bSearchable: true, bSortable: true, bVisible: true, sWidth: '78px' },
                ],
                fnServerParams: function (aoData) {
                    aoData.push(
                        { name: "retakeAssignmentRequestGuid", value: '@(ViewBag.RetakeAssignmentRequestGuid)' }
                    );
                },

                fnRowCallback: function (nRow, aData) {
                    $('td:eq(0)', nRow).parent().addClass('tableRow');
                    $('td:eq(0)', nRow).parent().attr('data-assignment-id', aData['ID']);

                    $('td:eq(0)', nRow).addClass('text-center');
                    $('td:eq(1)', nRow).addClass('text-center');
                    $('td:eq(0)', nRow).html(setCheckbox(aData['ID'], aData['IsActive']));
                    $('td:eq(1)', nRow).html(setIconVisibilityClass(aData['ID'], aData['IsActive']));

                    var assignedDateAsFormatedString = displayDateStringWithFormat(aData['Assigned']);

                    $('td:eq(2)', nRow).html(assignedDateAsFormatedString);
                    return nRow;
                },
                fnPreDrawCallback: function (oSettings) {
                    ShowBlock($('#tableStudentAssign'), 'Loading');
                    if (oSettings.bDrawing == true && oSettings.iDraw > 1) {
                        ShowBlock($('#tableStudentAssign'), 'Loading');
                    }
                    return true;
                },
                fnDrawCallback: function (oSettings) {
                    $('#tableStudentAssign').unblock();
                    if (oSettings.bDrawing == true && oSettings.iDraw > 1) {
                        $('#tableStudentAssign').unblock();
                    }
                    buildPrintUrl();
                    return true;
                },
                sDom: '<"block-controls"l<\'float-left\'<"#showUser">><f>>rti<"block-footer clearfix"<"controls-buttons"p>>',

            };

            //var $dataTableVirtualTest = $('#tableStudentAssign');
            //oTableStudentAssign = $dataTableVirtualTest.dataTable(options);

            $("#tableStudentAssign").data("options", options);
            oTableStudentAssign = initializeDataTable($("#tableStudentAssign"));

            function setIconVisibilityClass(qtiTestClassAssignmentID, isActive) {
                var iconString = "";
                var detailsIcon = '@Url.Content("~/Content/themes/Constellation/images/icons/fugue/cross-circle.png")';
                var detailsString = '<a href="javascript:void(0);" title=' + (isActive ? "Delete" : "")
                    + ' class="with-tip jsDeactive ' + (isActive ? '' : 'disabled') + '" '
                    + ' qtiTestClassAssignmentID="' + qtiTestClassAssignmentID + '"'
                    + '><img src ="' + detailsIcon + '" width="16" height="16" style="margin-right: 0px" /></a>';
                iconString += detailsString;

                return iconString;
            }

            function setCheckbox(id, isActive) {
                return '<input class="select-assignment" ' + (isActive ? '' : 'disabled') + ' type="checkbox" ID="' + id + '" onchange="handleAssignmentCheckSingle(this)" />';
            }

            $('#divTabs > div').removeClass('tab_assign_active');
            @if (Model.ListStudentAssign != null && Model.ListStudentAssign.Count > 0)
            {
                <text>
                $('#divMenuStudentAssignment').show();
                </text>
            }

            @switch (Model.CurrentTab)
            {
                case 1:
                    {
                        <text>
                        var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=1';
                        $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                        $('#divMenuClassAssigment').show().addClass('tab_assign_active');
                        $('#divTabClassAssignments').show();
                        </text>
                    } break;
                case 2:
                    {
                        <text>
                        var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=2';
                        $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                        $('#divMenuStudentAssignment').show().addClass('tab_assign_active');
                        $('#divTabStudentAssigns').show();
                        </text>
                    } break;
                case 3:
                    {
                        <text>
                        var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=3';
                        $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                        $('#divMenuStudentGroupAssignment').show().addClass('tab_assign_active');
                        $('#divTabGroupStudents').show();
                        </text>
                    } break;
            }
            @if (Model.TotalTabs == 1)
            {
                <text>
            $('#divTabs').hide();
                </text>
            }

            $('#btnDeactiveTestClassAssignment').click(function (e) {
                event.preventDefault();
                if (!assignmentsSelected || !assignmentsSelected.length) return;

                ConfirmClassMessage("Are you sure you want to delete this assignment?", 0, 1, true);
            })

            function ConfirmClassMessage(message, qtiTestClassAssignmentID, operationType, isMultiDeactive) {
                var hbody = $("body").height() - 109;
                var strHtml = '<section class="grid_5" style="height:200px;">' +
                    '<div class="block-border" style="width: 440px;">' +
                    '<div class="block-content form" style="padding-bottom:78px">' +
                    '<table style="border-collapse: inherit;" cellpadding="0" cellspacing="0"><tr><td><p class="styleMessage" style="margin-bottom:0px;">' + message +
                    '</p></td></tr><tr><td>' +
                    '<p class="plButton"  style="margin-bottom:0px;">' +
                    '<button id="btnOk" type="button" name="ok" onclick="HandleClassOKClick(' + qtiTestClassAssignmentID + ', ' + operationType + ', ' + isMultiDeactive +')">OK</button>' +
                    '<button id="btnCancel" type="button" name="cancel" onclick="HandleClassCancelClick()">Cancel</button>' +
                    '</p></td></tr></table></div></div></section>';
                $("<div></div>")
                    .html(strHtml)
                    .addClass("dialog")
                    .attr("id", "messageClassDialog")
                    .appendTo("body")
                    .dialog({
                        close: function () { $(this).remove(); },
                        modal: true,
                        width: 500,
                        maxheight: 400,
                        resizable: false
                    });

                $(".ui-dialog").css("height", hbody);
                //$(window).scrollTop(0);
            }

            $('#tableStudentAssign').on('click', '.jsDeactive:not(.disabled)', function (event) {
                event.preventDefault();
                var qtiTestClassAssignmentID = $(this).attr('qtiTestClassAssignmentID');
                ConfirmClassMessage("Are you sure you want to delete this assignment?", qtiTestClassAssignmentID, 1);
            });
        });

    function fnLoadAssignmentForRetake()
    {
        return '@Url.Action("LoadAssignmentForRetake", "TestAssignment")\?retakeAssignmentRequestGuid=' + '@(ViewBag.RetakeAssignmentRequestGuid)';
     }
</script>

}
