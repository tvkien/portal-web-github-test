@using LinkIt.BubbleSheetPortal.Common
@using LinkIt.BubbleSheetPortal.Web.ViewModels
@using LinkIt.BubbleSheetPortal.Web.Constant
@model TestAssignResultViewModel

<style type="text/css">
    #tableStudentAssign td {
        word-wrap: break-word;
        vertical-align: middle;
        /*word-break: break-all;*/ /* Not apply for whole table, just apply for long word in each td*/
    }

    #tableStudentAssign .text-center {
        text-align: center !important;
    }
    #tableStudentAssign .d-inline-block {
        display: inline-block !important;
    }
    #portal-v2-containter .last-child table tbody td span {
        float: none;
    }
    #portal-v2-containter .cursor-pointer {
        cursor: pointer;
    }

    @@media (max-width: 1399px) and (min-width: 1200px) {
        #divPopupTestResult1 #divTabStudentAssigns table .assigned-col-style {
            width: 120px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .test-col-style {
            width: 170px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .class-name-col-style, 
        #divPopupTestResult1 #divTabStudentAssigns table .student-name-col-style {
            width: 130px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .student-code-col-style {
            width: 110px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .authentication-code-col-style {
            width: 140px !important;
            word-break: break-all;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .test-code-col-style {
            width: 160px !important;
        }
    }

    @@media (min-width: 1400px) {
        #divPopupTestResult1 #divTabStudentAssigns table .assigned-col-style, 
        #divPopupTestResult1 #divTabStudentAssigns table .class-name-col-style, 
        #divPopupTestResult1 #divTabStudentAssigns table .student-name-col-style {
            width: 110px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .test-col-style {
            width: 170px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .student-code-col-style, 
        #divPopupTestResult1 #divTabStudentAssigns table .authentication-code-col-style {
            width: 140px !important;
        }

        #divPopupTestResult1 #divTabStudentAssigns table .test-code-col-style {
            width: 170px !important;
        }
    }

</style>

@if (Model != null)
{
    if (Model.ErrorList != null && Model.ErrorList.Count > 0)
    {
        @*<script src="@Url.Content("~/scripts/custom.js")" type="text/javascript"></script>*@
        @LinkIt.BubbleSheetPortal.Web.Helpers.BundleHelper.ScriptCustomBundle()
        <script>
            $(function () {
                addErrorMessages(@Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model)));
            });
        </script>
    }
    else
    {
        <div id="divPopupTestResult1" style="">
            <div>
                <div class="d-flex flex-row justify-content-between retake-assign-action mb-3">
                    <h2 class="header m-0">Retake Assignments</h2>
                    <div class="d-flex flex-row h-100" id="divTabs">
                        <div id="divMenuClassAssigment" class="btn-blue me-2" style="display: none;" onclick="OpenClassAssignment();">Class Assignment</div>
                        <div id="divMenuStudentAssignment" class="btn-blue me-2" style="display: none;" onclick="OpenStudentAssignment();">Student Assignment</div>
                        <div id="divMenuStudentGroupAssignment" class="btn-blue me-2" style="display: none;" onclick="OpenStudentGroup();">Student Group Assignment</div>
                        <a class="btn-blue me-2" style="text-decoration: none; font-weight: bold" href="@Url.Action("PrintAssignmentRetake", "TestAssignment")" target="_blank" id="btnPrintAssignment">Print</a>
                        <button type="button" disabled class="off btn-blue me-2" id="btnDeactiveTestClassAssignment">
                            Delete
                        </button>
                        <button class="float-right btn-blue me-2" style="z-index: 2;" id="btnSubmitAssignmentRetake" type="submit">@LocalizeHelper.Localized("AssignOnlineTest.AssignRetake")</button>
                    </div>
                </div>
                <div id="divContentPrint" class="m-0">
                    <link href="@Url.Content("~/Content/themes/Constellation/css/table.css")" rel="stylesheet" />
                    <div id="divTabs" style="width: 100%">
                      
                    </div>
                    <div id="divTabStudentAssigns">
                        <table class="datatable table" width="100%" id="tableStudentAssign">
                            <thead>
                                <tr>
                                    <th scope="col" style="text-align: center; width:65px">
                                        <input id="chkAllAssignments" type="checkbox" onchange="handleAssignmentCheckAll(this)" />
                                    </th>
                                    <th scope="col" style="text-align: center; width: 65px">
                                        Actions
                                    </th>
                                    <th style="text-align: center;">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Assigned
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Assignment
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Class
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Student
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Student Code
                                    </th>
                                    <th style=" min-width: 150px;">
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Assignment Code
                                    </th>
                                    <th>
                                        <span class="column-sort">
                                            <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                            <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                        </span>
                                        Authenticator
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>

                        </table>
                    </div>
                </div>
            </div>
        </div>

    }

<script type="text/javascript">
        var oTableStudentAssign;
        var showDeactiveClassTestAssignment = false;

        $('#btnPrintAssignResult').click(function () {
            Popup($('#divContentPrint').html());
        });

        function Popup(data) {
            var mywindow = window.open('', 'Assignment Result', 'height=400,width=600');
            mywindow.document.write(data);
            mywindow.document.close();
            mywindow.focus();
            if (navigator.appName == 'Microsoft Internet Explorer')
                document.execCommand('Print');
            else mywindow.print();
            mywindow.close();
            return true;
        }

        function OpenStudentGroup() {
            toggleClassActive('#divTabs > div', false)
            toggleClassActive('#divMenuStudentGroupAssignment', true)

            $('#divTabGroupStudents').show();
            $('#divTabStudentAssigns').hide();
            $('#divTabClassAssignments').hide();
            var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=3';
            $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
        }
        function OpenStudentAssignment() {
            toggleClassActive('#divTabs > div', false)
            toggleClassActive('#divMenuStudentAssignment', true)
            $('#divTabGroupStudents').hide();
            $('#divTabStudentAssigns').show();
            $('#divTabClassAssignments').hide();
            var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=2';
            $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
        }
        function OpenClassAssignment() {
            toggleClassActive('#divTabs > div', false)
            toggleClassActive('#divMenuClassAssigment', true)
            $('#divTabGroupStudents').hide();
            $('#divTabStudentAssigns').hide();
            $('#divTabClassAssignments').show();
            var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=1';
            $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
        }

        function buildPrintUrl() {
            var baseUrl = '@Url.Action("PrintAssignmentRetake", "TestAssignment")';
            var printUrl = new URL(window.location.origin + baseUrl);
            var paramKeys = ["sSortDir_0", "sColumns", "iDisplayStart", "iDisplayLength", "sSearch", "iSortCol_0"];
            var datatableParams = oTableStudentAssign.oApi._fnAjaxParameters(oTableStudentAssign.dataTable().fnSettings())
                .filter(function (param) {
                    return paramKeys.includes(param.name)
                }).map(function (paramFiltered) {
                    var param = {};
                    param[paramFiltered.name] = paramFiltered.value;

                    return param;
                }).reduce(function (prev, curr) {
                    return Object.assign(prev, curr);
                }, {});

            datatableParams['retakeAssignmentRequestGuid'] = '@ViewBag.RetakeAssignmentRequestGuid';
            printUrl.search = new URLSearchParams(datatableParams);

            $('#btnPrintAssignment').attr('href', printUrl);
        }

        function HandleClassOKClick(qtiTestClassAssignmentID, operationType, isMultiDeactive) {
            ShowBlock($('#divTabStudentAssigns'), 'Loading');
            if (isMultiDeactive) {
                var qtiTestClassAssignmentIDs = assignmentsSelected.join(',');
                $.post('@Url.Action("ChangeStatusMutipleAssignment", "TestAssignmentReview")', {
                    qtiTestClassAssignmentIDs: qtiTestClassAssignmentIDs,
                    operationOption: operationType
                }, function (response) {
                    oTableStudentAssign.fnDraw();
                    selectAssignments();
                    LoadStudenTable();
                    $('#divTabStudentAssigns').unblock();
                    $("#messageClassDialog").dialog("close");
                });
            }
            else {
                $.post('@Url.Action("ChangeStatus", "TestAssignmentReview")', {
                    qtiTestClassAssignmentID: qtiTestClassAssignmentID,
                    operation: operationType,
                    type: 2 // type = 2 for student.
                }, function (response) {
                    oTableStudentAssign.fnDraw();
                    selectAssignments();
                    LoadStudenTable();
                    $('#divTabStudentAssigns').unblock();
                    $("#messageClassDialog").dialog("close");
                });
            }
            assignmentsSelected = [];
        }

        function HandleClassCancelClick() {
            $("#messageClassDialog").dialog("close");
        }

        $(function () {

            var options = {
                bServerSide: true,
                sServerMethod: "POST",
                bDestroy: true,
                bProcessing: false,
                //sAjaxSource: '@Url.Action("LoadAssignmentForRetake", "TestAssignment")',
                sAjaxSource: fnLoadAssignmentForRetake(),
                oLanguage: { "sZeroRecords": "No results meet your search criteria. Try changing your other filters and search again." },
                iDisplayLength: 25,
                aaSorting: [[5, "asc"]],
                bAutoWidth: false,
                aoColumns: [
                    { mData: 'ID', sName: 'ID', bSearchable: false, bSortable: false, bVisible: true, sWidth: '45px' },
                    { mData: 'ShortGUID', sName: 'ShortGUID', bSearchable: false, bSortable: false, bVisible: true, sWidth: '65px' },
                    { mData: 'Assigned', sName: 'Assigned', bSearchable: false, bSortable: true, bVisible: true, sWidth: '100px', sClass: 'assigned-col-style' },
                    { mData: 'Test', sName: 'Test', bSearchable: false, bSortable: true, bVisible: true, sClass: 'test-col-style' },
                    { mData: 'ClassName', sName: 'ClassName', bSearchable: false, bSortable: true, bVisible: true, sWidth: '110px', sClass: 'class-name-col-style' },
                    { mData: 'StudentName', sName: 'StudentName', bSearchable: false, bSortable: true, bVisible: true, sWidth: '110px', sClass: 'student-name-col-style' },
                    { mData: 'StudentCode', sName: 'StudentCode', bSearchable: false, bSortable: true, bVisible: true, sWidth: '125px', sClass: 'student-code-col-style' },
                    { mData: 'TestCode', sName: 'TestCode', bSearchable: true, bSortable: true, bVisible: true, sWidth: '170px', sClass: 'test-code-col-style' },
                    { mData: 'AuthenticationCode', sName: 'AuthenticationCode', bSearchable: true, bSortable: true, bVisible: true, sWidth: '120px', sClass: 'authentication-code-col-style' },
                ],
                fnServerParams: function (aoData) {
                    aoData.push(
                        { name: "retakeAssignmentRequestGuid", value: '@(ViewBag.RetakeAssignmentRequestGuid)' }
                    );
                },

                fnRowCallback: function (nRow, aData) {
                    $('td:eq(0)', nRow).parent().addClass('tableRow');
                    $('td:eq(0)', nRow).parent().attr('data-assignment-id', aData['ID']);

                    $('td:eq(0)', nRow).addClass('text-center');
                    $('td:eq(1)', nRow).addClass('text-center');
                    $('td:eq(0)', nRow).html(setCheckbox(aData['ID'], aData['IsActive']));
                    $('td:eq(1)', nRow).html(setIconVisibilityClass(aData['ID'], aData['IsActive']));

                    var assignedDateAsFormatedString = displayDateStringWithFormat(aData['Assigned']);

                    $('td:eq(2)', nRow).html(assignedDateAsFormatedString);
                    return nRow;
                },
                fnPreDrawCallback: function (oSettings) {
                    ShowBlock($('#tableStudentAssign'), 'Loading');
                    if (oSettings && oSettings.bDrawing == true && oSettings.iDraw > 1) {
                        ShowBlock($('#tableStudentAssign'), 'Loading');
                    }
                    return true;
                },
                fnDrawCallback: function (oSettings) {
                    $('#tableStudentAssign').unblock();
                    if (oSettings && oSettings.bDrawing == true && oSettings.iDraw > 1) {
                        $('#tableStudentAssign').unblock();
                    }
                    buildPrintUrl();
                    $('.with-tip').tip()
                    setActiveAssignmentRetake()
                    return true;
                },
                fnInitComplete: function () {
                    tranformSearchInputDataTable('tableStudentAssign_filter');
                    
                    //$('#divTabs').append($('#btnSubmitAssignmentRetake'));
                    $('#divTabStudentAssigns .data-table-action').prepend($('#divTabs'));
                    $('#divTabStudentAssigns .data-table-action').css('display', 'flex')
                    $('.with-tip').tip()
                    setActiveAssignmentRetake()
                }
            };

            //var $dataTableVirtualTest = $('#tableStudentAssign');
            //oTableStudentAssign = $dataTableVirtualTest.dataTable(options);

            $("#tableStudentAssign").data("options", options);
            oTableStudentAssign = initializeDataTable($("#tableStudentAssign"));

            function setIconVisibilityClass(qtiTestClassAssignmentID, isActive) {
                var iconString = "";
                var detailsIcon = '<span class="icon fa-solid fa-circle-xmark icon-red cursor-pointer"></span>';
                var detailsString = '<span href="javascript:void(0);" title=' + (isActive ? "Delete" : "")
                    + ' class="with-tip jsDeactive ' + (isActive ? '' : 'disabled') + '" '
                    + ' qtiTestClassAssignmentID="' + qtiTestClassAssignmentID + '"'
                    + '>' + detailsIcon +'</span>';
                iconString += detailsString;

                return iconString;
            }

            function setCheckbox(id, isActive) {
                return '<input class="select-assignment" ' + (isActive ? '' : 'disabled') + ' type="checkbox" ID="' + id + '" onchange="handleAssignmentCheckSingle(this)" />';
            }

            toggleClassActive('#divTabs > div', false)
            @if (Model.ListStudentAssign != null && Model.ListStudentAssign.Count > 0)
            {
                <text>
                $('#divMenuStudentAssignment').show();
                </text>
            }

            @switch (Model.CurrentTab)
            {
                case 1:
                    {
                        <text>
                        var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=1';
                        $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                        $('#divMenuClassAssigment').show();
                        toggleClassActive('#divMenuClassAssigment', true)
                        $('#divTabClassAssignments').show();
                        </text>
                    } break;
                case 2:
                    {
                        <text>
                        var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=2';
                        $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                        $('#divMenuStudentAssignment').show();
                        toggleClassActive('#divMenuStudentAssignment', true)
                        $('#divTabStudentAssigns').show();
                        </text>
                    } break;
                case 3:
                    {
                        <text>
                        var vLinkPrintAssignment = '@Url.Action("PrintAssignment", "TestAssignment")?Type=3';
                        $("#divLinkPrintAssignment").attr("href", vLinkPrintAssignment);
                        $('#divMenuStudentGroupAssignment').show();
                        toggleClassActive('#divMenuStudentGroupAssignment', true)
                        $('#divTabGroupStudents').show();
                        </text>
                    } break;
            }
            @if (Model.TotalTabs == 1)
            {
                <text>
            $('#divTabs').hide();
                </text>
            }

            $('#btnDeactiveTestClassAssignment').click(function (e) {
                event.preventDefault();
                if (!assignmentsSelected || !assignmentsSelected.length) return;

                ConfirmClassMessage("Are you sure you want to delete this assignment?", 0, 1, true);
            })

            function ConfirmClassMessage(message, qtiTestClassAssignmentID, operationType, isMultiDeactive) {
                confirmMessageV2(
                    {
                        message: message,
                        cbYesBtnFuncName: 'HandleClassOKClick(' + qtiTestClassAssignmentID + ', ' + operationType + ', ' + isMultiDeactive +')',
                        cbCancelBtnFuncName: 'HandleCloseMessageClick()'
                    },
                    {
                        dialogAttr: {
                            attr: {
                                id: 'messageClassDialog'
                            }
                        }
                    }
                )
            }

            $('#tableStudentAssign').on('click', '.jsDeactive:not(.disabled)', function (event) {
                event.preventDefault();
                var qtiTestClassAssignmentID = $(this).attr('qtiTestClassAssignmentID');
                ConfirmClassMessage("Are you sure you want to delete this assignment?", qtiTestClassAssignmentID, 1);
            });
        });

    function fnLoadAssignmentForRetake()
    {
        return '@Url.Action("LoadAssignmentForRetake", "TestAssignment")\?retakeAssignmentRequestGuid=' + '@(ViewBag.RetakeAssignmentRequestGuid)';
    }

    function HandleCloseMessageClick() {
        $('#messageClassDialog').dialog('close')
    }

    function toggleClassActive(query, isActive) {
        $(query).removeClass('tab_assign_active');

        if (isActive) {
            $(query).removeClass('btn-blue');
            $(query).addClass('btn-red')
        } else {
            $(query).addClass('btn-blue');
            $(query).removeClass('btn-red')
        }
    }
</script>

}
