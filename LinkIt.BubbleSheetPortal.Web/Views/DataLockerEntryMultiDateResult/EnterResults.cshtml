@model  LinkIt.BubbleSheetPortal.Models.DataLocker.EnterResultModel
@{
    ViewBag.Title = "Enter Results";
}

<script src="@Url.Content("~/Scripts/jquery.listSplitter.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.ba-outside-events.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/moment.min.js")" type="text/javascript"></script>

<link rel="stylesheet" href="/Content/css/vue-components/vue-modal.css">
<style type="text/css">
    .positionAdd {
        position: relative;
        right: -6px;
        top: 26px;
    }

    button {
        margin-left: 30px;
    }

    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }

    .ui-widget-overlay {
        background: #2b2b2d !important;
    }
</style>

<article class="container_12">
    <section class="grid_12">
        <div id="generateContent" class="block-border">
            <form id="enterResultForm" class="block-content form bubbleSheetSelector">
                <h1>ENTER RESULTS</h1>
                <ul style="display: none" id="error-messages" class="message error"></ul>
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    <fieldset id="publisherContent" class="grey-bg">
                        <legend>Select State/@LabelHelper.DistrictLabel</legend>
                        <div class="columns">
                            <div class="colx2-left">
                                <div class="mb-3">
                                    <label>State</label>
                                    <select id="selectState"></select>
                                </div>
                            </div>
                            <div class="colx2-right">
                                <div class="mb-3 block-content-dropdown-marquee">
                                    <label>@LabelHelper.DistrictLabel</label>
                                    <div class="block-text-name">
                                        <select id="selectDistrict"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                }
                <fieldset class="grey-bg">
                    <legend>Learning Progression</legend>
                    <div class="columns">
                        <div class="colx2-left">
                            <div class="mb-3">
                                <!-- EnterResult.Grade -->
                                <label>Age Range/Grade</label>
                                <select id="selectGrade"></select>
                            </div>
                            <div  class="mb-3">
                                <label>Domain/Strand</label>
                                <select id="selectSubject"></select>
                            </div>
                        </div>
                        <div class="colx2-right">
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>Language</label>

                                <div class="block-text-name">
                                   <select id="selectBank"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>Learning Progression</label>

                                <div class="block-text-name">
                                    <select id="selectTest"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="clear"></div>
                <fieldset class="grey-bg">
                    <legend>Select Class</legend>
                    <div id="divSingleClass" class="columns">
                        <div class="colx2-left">
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>School/Center</label>
                                <div class="block-text-name">
                                    <select id="selectSchool"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            @if (Model.CanSelectTeachers || Model.IsSchoolAdmin)
                            {
                                <div class="mb-3 block-content-dropdown-marquee">
                                    <label>Teacher/Caregiver</label>
                                    <div class="block-text-name">
                                        <select id="selectTeacher"></select>
                                        <div class="box-select">
                                            <span class="overlay"></span>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                        <div class="colx2-right">
                             <div class="mb-3 block-content-dropdown-marquee">
                                <label>
                                    Term
                                </label>

                                <div class="block-text-name">
                                    <select id="selectTerm"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3 block-content-dropdown-marquee">
                                <label>
                                    Class
                                </label>

                                  <div class="block-text-name">
                                    <select id="selectClass"></select>
                                    <div class="box-select">
                                        <span class="overlay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="divResultDdate" class="columns">
                        <div class="colx2-right">
                            <p>
                                <label>Result Date</label>
                                <select id="selectResultDate"></select>
                            </p>
                        </div>
                    </div>
                    <div id="divMultiClass" style="display: none;">
                    </div>
                </fieldset>
                <button class="float-right" id="btnEnterResult" type="button" disabled="disabled">Enter Results</button>
                <div class="clear"></div>
                <br/>
                <div id="divBubbleSheetPrint">
                </div>
            </form>

            @Html.Partial("_EnterResultAutoSaveModal")
        </div>
    </section>
</article>

<input type="hidden" id="testType" value="" />
@*<div class="columns" id="studentsTemplate" style="display: none">
    <ul id="students" class="generate-student-list with-icon icon-user"></ul>
</div>*@

@section scripts {
    <script src="/Scripts/DataLockerEntryResult/DataLockerEnterResult.js"></script>
    <script type="text/javascript">
        var singleClassCheckbox = $('#radioSingleClass');
        var groupPrintingCheckbox = $('#radioMultiClass');
        var genericSheetCheckbox = $('#radioGenericSheet');
        $(function() {
            $('#selectDistrict').marquee();
            $('#selectBank').marquee();
            $('#selectTest').marquee();
            $('#selectSchool').marquee();
            $('#selectTeacher').marquee();
            $('#selectTerm').marquee();
            $('#selectClass').marquee();
            @if (!Model.IsPublisher && Model.IsUseTestExtract)
            {
                <text>
        $('#hdTestExtractValue').val('1');
        $('#idTestExtract').show();
        </text>
            }

            $('.datalocker').addClass('current');
            $('#datalockerEnterMultiDateResult').addClass('current');
            disablebtnEnterResult();
            $(document).ready(function() {
                $(".openDialog").live("click", function(e) {
                    e.preventDefault();
                    $("<div></div>")
                        .addClass("dialog")
                        .attr("id", $(this)
                            .attr("data-dialog-id"))
                        .appendTo("body")
                        .dialog({
                            title: $(this).attr("data-dialog-title"),
                            close: function() { $(this).remove(); },
                            modal: true,
                            width: 1000,
                            resizable: false
                        })
                        .load(this.href, function() {});
                });

                $(".close").live("click", function(e) {
                    e.preventDefault();
                });

                $("#btnCancel").live("click", function(e) {
                    e.preventDefault();
                    $(".dialog").dialog("close");
                });

                $("#btnRemove").live("click", function(e) {
                    e.preventDefault();
                    RemoveClassInGroupSelected();
                });

                $("#btnAddClass").live("click", function(e) {
                    e.preventDefault();
                    AddClassToGroup();
                });

                $("#btnContinue").live("click", function(e) {
                    e.preventDefault();
                    ValidGroupName();
                });
            });

            @if (Model.IsPublisher || Model.IsNetworkAdmin)
            {
                <text>
        $('#selectState').change(function () {
            $('#idTestExtract').hide();
            $('#hdTestExtractValue').val('-1');

            $('#selectDistrict').empty();

            $('#selectGrade').empty();
            $('#selectSubject').empty();
            $('#selectBank').empty();
            $('#selectTest').empty();

            $('#selectSchool').empty();
            $('#selectTeacher').empty();
            $('#selectTerm').empty();
            $('#selectClass').empty();
            $('#selectResultDate').empty();

            if ($('#selectState').val() != 'select') {
                populateDistricts();
            }
            CheckValidToAssign();
        });

        function populateDistricts() {
            $('#selectDistrict').empty();
            var stateValue = $('#selectState').val();
            if (stateValue != 'select') {
                if ('@Model.IsPublisher' === 'True') {
                    $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItems($('#selectDistrict'), districts);
                    });
                }
                if ('@Model.IsNetworkAdmin' === 'True') {
                    $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function (districts) {
                        addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                        addSelectListItems($('#selectDistrict'), districts);
                    });
                }
            }
        }
        </text>
            }
            @if (Model.IsAdmin || Model.CanSelectTeachers || Model.IsSchoolAdmin)
            {
                <text>
        $('#selectSchool').change(function () {
            $('#selectTeacher').empty();
            $('#selectTerm').empty();
            $('#selectClass').empty();
            $('#selectResultDate').empty();
            //$('#studentContent').hide();
            if ($('#selectSchool').val() != 'select') {
                populateTeachers();
            }
            CheckValidToAssign();
        });

        $('#selectTeacher').change(function () {
            $('#selectClass').empty();
            $('#selectTerm').empty();
            $('#selectClass').empty();
            $('#selectResultDate').empty();
            //$('#studentContent').hide();
            populateTermsByTeacherAndSchool();
            CheckValidToAssign();
        });

        function populateTermsByTeacherAndSchool() {
            $('#selectTerm').empty();
            var teacherValue = $('#selectTeacher').val();
            var schoolValue = $('#selectSchool').val();
            if (teacherValue != 'select') {
                $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: teacherValue, schoolId: schoolValue }, function (terms) {
                    addDefaultOption($('#selectTerm'), "@LocalizeHelper.Localized("EnterResult.Term")");
                    addSelectListItems($('#selectTerm'), terms);
                });
            }
        }
        </text>
            }
            else
            {
                <text>
        $('#selectSchool').change(function () {
            $('#selectClass').empty();
            $('#selectTerm').empty();
            $('#selectResultDate').empty();
            var schoolValue = $('#selectSchool').val();
            if (schoolValue != 'select') {
                $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: null, schoolId: schoolValue }, function (terms) {
                    populateTerms(terms);
                });
            }
            CheckValidToAssign();
        });

        </text>
            }

            @if (Model.IsPublisher)
            {
                <text>
        $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
            populateStates(states);
        });
        </text>
            }
            else
            {
                if (Model.IsNetworkAdmin)
                {
                    <text>
        $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")', { dictricIds: '@Model.StrIds' }, function (states) {
            populateStates(states);
        });

        </text>
                }
                else
                {
                    <text>
        $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', function (schools) {
            populateSchools(schools);
            var schoolValue = $('#selectSchool').val();
            if (schoolValue != 'select') {
                $.get('@Url.Action("GetTerms", "PopulateStudent")', { userId: null, schoolId: schoolValue, IsFromMultiDate: true  }, function (terms) {
                    $('#selectTerm').empty();
                    populateTerms(terms);
                });
            }
        });
        $.get('@Url.Action("GetGradesFormBankByDistrictId", "PopulateTest")', { districtId: '-1' }, function (grades) {
            populateGrades(grades);
        });


        </text>
                }
            }

            function populateGradesByDistrict() {
                $('#selectGrade').empty();
                $('#selectSubject').empty();
                var districtValue = $('#selectDistrict').val();
                if (districtValue != 'select') {
                    $.get('@Url.Action("GetGradesFormBankByDistrictId", "PopulateTest")', { districtId: districtValue, IsFromMultiDate: true }, function(grades) {
                        populateGrades(grades);
                    });

                }
            }

            $('#selectDistrict').change(function() {

                $('#selectGrade').empty();
                $('#selectSubject').empty();
                $('#selectBank').empty();
                $('#selectTest').empty();

                $('#selectSchool').empty();
                $('#selectTeacher').empty();
                $('#selectTerm').empty();
                $('#selectClass').empty();
                $('#selectResultDate').empty();

                //$('#studentContent').hide();
                populateSchoolsByDistrict();
                populateGradesByDistrict();
                CheckValidToAssign();
            });

            $('#selectGrade').change(function() {
                populateSubjects();
                CheckValidToAssign();
            });

            $('#selectSubject').change(function() {
                populateBanks();
                CheckValidToAssign();
            });

            $('#selectBank').change(function() {
                populateTests();
                CheckValidToAssign();
            });

            $('#selectTerm').change(function() {
                populateClasses();
                CheckValidToAssign();
            });

            $('#selectClass').change(function () {
                populateResultDate();
                CheckValidToAssign();
            });

            $('#selectResultDate').change(function () {
                CheckValidToAssign();
            });

            $('#btnEnterResult').click(function(e) {
                $("#error-messages").html('');
                $("#error-messages").hide();
                if ($('#selectTest').val() == 'select') {
                    CustomAlert('Please select test.');
                    return;
                }
                if ($('#selectClass').val() == 'select') {
                    CustomAlert('Please select class.');
                    return;
                }
                if ($('#selectResultDate').val() == 'select') {
                    CustomAlert('Please select result date.');
                    return;
                }
                $('#btnEnterResult').disableBt();

                redirectToEntryResult();
            });
        });

        function redirectToEntryResult() {
            var districtValue = $('#selectDistrict').val();
            var gradeValue = $('#selectGrade').val();
            var subjectValue = $('#selectSubject').val();
            var bankValue = $('#selectBank').val();
            var testValue = $('#selectTest').val();
            var classValue = $('#selectClass').val();
            var resultDate = $('#selectResultDate').val();
              @*var data = {
                districtId: districtValue,
                gradeId: gradeValue,
                subjectId: subjectValue,
                bankId: bankValue,
                virtualTestId: testValue,
                classId: classValue,
                resultDate: resultDate
            };
               $.ajax({
                type: 'POST',
                url: '@Url.Action("EntryResults")',
                data: data,
                success: function(response) {
                    console.log( response)
                }
            });*@

            var url = '@Url.Action("EntryResults")?t=' + $.now();
            url += '&districtId=' + districtValue;
            url += '&gradeId=' + gradeValue;
            url += '&subjectId=' + subjectValue;
            url += '&bankId=' + bankValue;
            url += '&virtualTestId=' + testValue;
            url += '&classId=' + classValue;
            url += '&resultDate=' + resultDate;
            window.location.href = url;
        }

        function disablebtnEnterResult() {
            $('#selectTest').change(function () {
                populateResultDate();
                CheckValidToAssign();
            });
        }

        function CheckValidToAssign() {
            // Check Selected Test
            var testId = $('#selectTest').val();
            if (testId == 'select' || testId == '' || testId == null) {
                $('#btnEnterResult').attr("disabled", "disabled");
                return;
            }
            var classId = $('#selectClass').val();
            if (classId == 'select' || classId == '' || classId == null) {
                $('#btnEnterResult').attr("disabled", "disabled");
                return;
            }
            var resultDate = $('#selectResultDate').val();
            if (resultDate == 'select' || resultDate == '' || resultDate == null)
            {
                $('#btnEnterResult').attr("disabled", "disabled");
                return;
            }

            $('#btnEnterResult').removeAttr("disabled");
        }

        function populateSchoolsByDistrict() {
            $('#selectSchool').empty();
            var districtValue = $('#selectDistrict').val();
            if (districtValue != 'select') {
                $.get('@Url.Action("GetSchools", "PopulateSchoolTeacher")', { districtId: districtValue }, function(schools) {
                    populateSchools(schools);
                });
            }
        }

        function populateTeachers() {
            $('#selectTeacher').empty();
            var schoolValue = $('#selectSchool').val();
            if (schoolValue != 'select') {
                $.get('@Url.Action("GetTeachers", "PopulateSchoolTeacher")', { schoolId: schoolValue, hasTermOnly: 'True',  }, function(teachers) {
                    addDefaultOption($('#selectTeacher'), "@LocalizeHelper.Localized("EnterResult.Teacher")");
                    addSelectListWithDefaultValue($('#selectTeacher'), teachers, 'select', function(item) {
                        return (item.FirstName) ? item.LastName + ", " + item.FirstName + " (" + item.Name + ")" : item.LastName + " (" + item.Name + ")";
                    });
                });
            }
        }

        function populateStates(states) {
            addDefaultOption($('#selectState'), "State");
            addSelectListItems($('#selectState'), states);
        }

        function populateDistricts(districts) {
            addDefaultOption($('#selectDstrict'), "@LabelHelper.DistrictLabel");
            addSelectListItems($('#selectDistrict'), districts);
        }

        function populateSchools(schools) {
            addDefaultOption($('#selectSchool'), "@LocalizeHelper.Localized("EnterResult.School")");
            addSelectListItems($('#selectSchool'), schools);
        }

        function populateTerms(terms) {
            addDefaultOption($('#selectTerm'), "@LocalizeHelper.Localized("EnterResult.Term")");
            addSelectListItems($('#selectTerm'), terms);
        }

        function populateGrades(grades) {
            $('#selectGrade').empty();
            //addDefaultOption($('#selectGrade'), "@LabelHelper.GradeLabel");
            addDefaultOption($('#selectGrade'), "@LocalizeHelper.Localized("EnterResult.Grade")");
            addSelectListItems($('#selectGrade'), grades);
        }

        function populateSubjects() {
            resetSubjects();
            var gradeValue = $('#selectGrade').val();
            var districtValue = 0;
            if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() != 'select') {
                districtValue = $('#selectDistrict').val();
            }
            if (gradeValue !== 'select') {
                $.get('@Url.Action("GetSubjectsFormBank", "PopulateTest")', { gradeId: gradeValue, districtId: districtValue, IsFromMultiDate: true  }, function(subjects) {
                    addDefaultOption($('#selectSubject'), "@LocalizeHelper.Localized("EnterResult.Subject")");
                    addSelectListItems($('#selectSubject'), subjects);
                });
            }
        }

        function populateBanks() {
            resetBanks();
            var subjectId = $('#selectSubject').val();
            //var subjectValue = $("#selectSubject option:selected").text();
            var districtValue = 0;
            if ($('#selectDistrict').length && $('#selectDistrict').val() != null && $('#selectDistrict').val() !== 'select') {
                districtValue = $('#selectDistrict').val();
            }
            var gradeValue = $('#selectGrade').val();
            if (subjectId !== 'select') {
                $.get('@Url.Action("LoadBankBySubjectId", "DataLockerEntryResult")', { SubjectId: subjectId, districtId: districtValue, gradeId: gradeValue, IsFromMultiDate: true }, function(banks) {
                    addDefaultOption($('#selectBank'), "@LocalizeHelper.Localized("EnterResult.Bank")");
                    addSelectListItems($('#selectBank'), banks);
                });
            }
        }

        function populateTests() {
            $('#selectTest').empty();
            var bankValue = $('#selectBank').val();
            if (bankValue != null && bankValue !== 'select') {
                $.get('@Url.Action("GetTests", "DataLockerEntryForm")', { bankId: bankValue, IsFromMultiDate: true }, function(tests) {
                    addDefaultOption($('#selectTest'), "@LocalizeHelper.Localized("EnterResult.Test")");
                    addSelectListItems($('#selectTest'), tests);
                });
            }
        }

        function populateClasses() {
            $('#selectClass').empty();
            var schoolValue = $('#selectSchool').val();
            var termValue = $('#selectTerm').val();
            var teacherValue = $('#selectTeacher').val();
            if (termValue && termValue != 'select' && teacherValue != 'select') {
                $.get('@Url.Action("GetClassesBySchoolTermUser", "PopulateStudent")', { termId: termValue, userId: teacherValue, schoolId: schoolValue }, function(classes) {
                    addDefaultOption($('#selectClass'), "@LocalizeHelper.Localized("EnterResult.Class")");
                    addSelectListItems($('#selectClass'), classes);
                });
            }
        }

        function populateResultDate() {
            //var selectResultDate = $('#selectResultDate').val();
             var today = new Date();
            var todayShortDate = (today.getMonth() + 1) + '/' + today.getDate() + '/' +today.getFullYear();
            $('#selectResultDate').empty();
            var classValue = $('#selectClass').val();
            var testValue = $('#selectTest').val();
            if (!!classValue && classValue != 'select' && !!testValue && testValue != 'select') {
                $.get('@Url.Action("GetResultDates", "DataLockerEntryMultiDateResult")', { virtualTestId: testValue, classId: classValue}, function(date) {
                    addDefaultOption($('#selectResultDate'), "Result Date");
                    date.unshift({ Id: todayShortDate, Name: "Fill a new form"})
                    addSelectListItems($('#selectResultDate'), date);
                });
            }
        }

        function AppendDefaultResultDate() {
            var today = new Date();
            var dateNowFormated = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();
            $('#selectResultDate').append('<option value="-1">Select Date</option>');
            $('#selectResultDate').append('<option value="${dateNowFormated}">Fill a new form</option>');
        }

    function addStudentsToList(list, students) {
        for (var i = 0; i < students.length; i++) {
            list.html(list.html() + ("<li studentId='" + students[i].StudentId + "'class='student-item'><a href='javascript:void(0)'>" + students[i].FullName + "</a></li>"));
        }
    }

    function resetSubjects() {
        $('#selectSubject').empty();
        resetBanks();
    }

    function resetBanks() {
        $('#selectBank').empty();
        $('#selectTest').empty();
        $('#selectResultDate').empty();
    }

    //function populateStudentList() {
    //    $('#students').easyListSplitter({ colNumber: 3 });
    //    $('.listCol1').addClass('colx3-left');
    //    $('.listCol2').addClass('colx3-center');
    //    $('.listCol3').addClass('colx3-right');
    //    $('.listCol1').addClass('student-col');
    //    $('.listCol2').addClass('student-col');
    //    $('.listCol3').addClass('student-col');
    //}

    //function selectAllStudents() {
    //    $('.student-col').children().attr('isselected', "yes");
    //    $('.student-col').children().css('background-color', "#82CAFA");
    //    CheckValidToAssign();
    //}

    //function selectNoStudents() {
    //    $('.student-col').children().attr('isselected', "no");
    //    $('.student-col').children().css('background-color', "#f2f2f2");
    //    CheckValidToAssign();
    //}

    //function invertSelectedStudents() {
    //    $('.generate-student-list li').each(function () {
    //        if ($(this).attr('isselected') === "yes") {
    //            $(this).attr('isselected', "no");
    //            $(this).css('background-color', "#f2f2f2");
    //        } else {
    //            $(this).attr('isselected', "yes");
    //            $(this).css('background-color', "#82CAFA");
    //        }
    //    });
    //    CheckValidToAssign();
    //}

    //$('.generate-student-list li').live({
    //    mouseenter: function () {
    //        if ($(this).attr('isselected') === "yes") {
    //            $(this).css('background-color', "#75B6E1");
    //        } else {
    //            $(this).css('background-color', "#e0e0e0");
    //        }
    //    },
    //    mouseleave: function () {
    //        if ($(this).attr('isselected') === "yes") {
    //            $(this).css('background-color', "#82CAFA");
    //        } else {
    //            $(this).css('background-color', "#f2f2f2");
    //        }
    //    },
    //    click: function () {
    //        if ($(this).attr('isselected') === "yes") {
    //            $(this).attr('isSelected', "no");
    //            $(this).css('background-color', "#e0e0e0");
    //        } else {
    //            $(this).attr('isSelected', "yes");
    //            $(this).css('background-color', "#75B6E1");
    //        }
    //        CheckValidToAssign();
    //    }
    //});

    function SelectTestExtract(vValue) {
        $('#hdTestExtractValue').val(vValue);
    }

    function CheckPaginationOption() {
        if ($('#selectPaginationOption').val() == 2 || $('#selectPaginationOption').val() == 3) {
            if ($('#selectPaginationOption').val() == 2) {
                if ($('#selectQuestionPage > option').length == 0) {
                    $('#btnSubmit').disableBt();
                } else {
                    $('#btnSubmit').enableBt();
                }
            }
            if ($('#selectPaginationOption').val() == 3) {
                if ($('#selectSectionPage > option').length == 0) {
                    $('#btnSubmit').disableBt();
                } else {
                    $('#btnSubmit').enableBt();
                }
            }
        } else {
            $('#btnSubmit').enableBt();
        }
    }
</script>
}
