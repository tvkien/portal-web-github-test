@using LinkIt.BubbleSheetPortal.Web.Helpers
<div id="list-tests">
    <article class="container_12" style="margin-top:24px">
        <section class="grid-full-with">
            <div class="block-border">
                <div class="block-content form" id="divOnTopCategory">
                    <h1>
                        Filter Tests
                    </h1>
                    <table id="dataTableTest" width="100%" cellspacing="0" class="datatable table no-margin">
                        <colgroup>
                            <col style="width: 6%" />
                            <col style="width: 7%" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th scope="col" class="text-center">
                                    <input type="checkbox" id="chkAllTest"/>
                                </th>
                                <th scope="col">Actions</th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Test
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Category
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    @LabelHelper.Subject
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    @LabelHelper.TestGrade
                                </th>
                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    Teacher Restriction
                                </th>

                                <th scope="col">
                                    <span class="column-sort">
                                        <a href="javascript:void(0)" title="Sort Up" class="sort-up"></a>
                                        <a href="javascript:void(0)" title="Sort Down" class="sort-down"></a>
                                    </span>
                                    School Admin Restriction
                                </th>
                                <th scope="col" style="width: 55px">XLITeacherModuleRoleId</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td style="height: 60px;"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
    </article>
</div>
<script>
    $(function () {
        LoadTestToTable();
        $(document).ready(function () {
            $(window).on('storage', function (ev) {
                if (event.key === 'triggerDataTableTest') {
                    app.getTestFilter(function () {
                        $("#dataTableTest").dataTable().fnDraw(false);
                    });
                }
            })
        });
        $('body').on('change', '#chkAllTest', function () {
            $('input[name=chkTest]').attr('checked', this.checked);
            toggleDisableEditRestrictions();
            portalV2SkinCheckBox();
        });
        $('body').on('change', 'input[name=chkTest]', function () {
            var isAllChecked = !$('input[name=chkTest]:not(:checked)').length;
            $('#chkAllTest').attr('checked', isAllChecked);
            portalV2SkinCheckBox();
            toggleDisableEditRestrictions();
        });

        function toggleDisableEditRestrictions() {
            if ($('input[name=chkTest]:checked').length) {
                $('#list-tests #btnActions').removeAttr('disabled');
            } else {
                $('#list-tests #btnActions').attr('disabled', 'disabled');
            }
        }

        function LoadTestToTable() {
            var options = {
                bServerSide: true,
                sAjaxSource: '@Url.Action("GetRestrictionTests")',
                bDestroy: true,
                iDisplayLength: 10,
                aaSorting: [[2, "asc"]],
                oLanguage: { "sZeroRecords": "No results meet your search criteria. Try changing your date range or other filters and search again." },
                fnServerParams: function (aoData) {
                    aoData.push(
                        { name: "DistrictId", value: app.selectedDistrict },
                        { name: "GradeIds", value: app.arrGrades },
                        { name: "CategoryIds", value: app.arrTestTypes },
                        { name: "Subjects", value: app.arrSubject },
                    );
                },
                oSearch: {
                    sSearch: $("#dataTableTest_filter input").val()
                },
                aoColumns: [
                    { sType: 'integer', sName: 'VirtualTestID', mData: 'VirtualTestID', bSearchable: false, bSortable: false, sWidth: "0px" },
                    { sType: 'integer', sName: 'CategoryId', mData: 'CategoryId', bSearchable: false, bSortable: false, sWidth: "0px" },
                    { sType: 'string', sName: 'TestName', mData: 'TestName', bSearchable: true, bSortable: true, sWidth: "100px" },
                    { sType: 'string', sName: 'CategoryName', mData: 'CategoryName', bSearchable: true, bSortable: true, sWidth: "100px" },
                    { sType: 'string', sName: 'Subject', mData: 'Subject', bSearchable: true, bSortable: true, sWidth: "100px" },
                    { sType: 'string', sName: 'Grade', mData: 'Grade', bSearchable: true, bSortable: true, sWidth: "100px" },
                    { sType: 'string', sName: 'TeacherRestrictionDisplay', mData: 'TeacherRestrictionDisplay', bSearchable: true, bSortable: true, sWidth: "100px" },
                    { sType: 'string', sName: 'SchoolAdminRestrictionDisplay', mData: 'SchoolAdminRestrictionDisplay', bSearchable: true, bSortable: true, sWidth: "100px" },
                    { sType: 'integer', sName: 'XLITeacherModuleRoleId', mData: 'XLITeacherModuleRoleId', bSearchable: false, bSortable: false, bVisible: false },
                    { sType: 'integer', sName: 'XLISchoolAdminModuleRoleId', mData: 'XLISchoolAdminModuleRoleId', bSearchable: false, bSortable: false, bVisible: false },
                ],
                fnRowCallback: function (nRow, aData) {
                    var data = {
                        VirtualTestID: aData.VirtualTestID,
                        CategoryId: aData.CategoryId,
                        TestName: encodeURI(aData.TestName),
                        TeacherRestrictAccess: aData.TeacherRestriction,
                        SchoolAdminRestrictAccess: aData.SchoolAdminRestriction,
                        XLITeacherModuleRoleId: aData.XLITeacherModuleRoleId,
                        XLISchoolAdminModuleRoleId: aData.XLISchoolAdminModuleRoleId,
                        TeacherRestrictAccessContent: aData.TeacherRestrictionContent,
                        SchoolAdminRestrictAccessContent: aData.SchoolAdminRestrictionContent
                    };
                    var category = app.testType.find(function (item) { return item.Id == aData.CategoryId });

                    if (app.selectedLevel == 'district' && category) {
                        data.Disabled = category.SchoolAdminRestriction == RESTRICTION_TYPE.NO_ACCESS && category.TeacherRestriction == RESTRICTION_TYPE.NO_ACCESS;
                        if (category.TeacherRestriction == RESTRICTION_TYPE.NO_ACCESS) {
                            data.TeacherRestrictAccess = RESTRICTION_TYPE.NO_ACCESS;
                            $('td:eq(6)', nRow).html(RESTRICTION_TYPE.NO_ACCESS);
                        }
                        if (category.SchoolAdminRestriction == RESTRICTION_TYPE.NO_ACCESS) {
                            data.SchoolAdminRestrictAccess = RESTRICTION_TYPE.NO_ACCESS;
                            $('td:eq(7)', nRow).html(RESTRICTION_TYPE.NO_ACCESS);
                        }
                    }
                    $('td:eq(0)', nRow).html(setIconVisibility(data));
                    $('td:eq(1)', nRow).html(setIconVisibilityEdit(data));                   
                    return nRow;
                },
                fnPreDrawCallback: function () {
                    ShowBlock($('#dataTableTest'), "Loading");
                    $('input[name=chkTest]').attr('checked', false);
                    $('#chkAllTest').attr('checked', false);
                    portalV2SkinCheckBox();
                    return true;
                },
                fnDrawCallback: function () {
                    $('#dataTableTest').unblock();
                    $('.with-tip').tip();
                },
                fnInitComplete: function () {
                    var elSearchLabel = $('#dataTableTest_filter label');
                    var elSearchInput = elSearchLabel.find('input');
                    
                    elSearchInput.css({ paddingLeft: '35px', position: 'relative' });
                    elSearchInput.get(0).style.setProperty('padding-left', '32px', 'important');

                    elSearchLabel.replaceWith(elSearchInput);
                    $('#dataTableTest_filter').addClass('data-search');
                }
            };
            $("#dataTableTest").data("options", options);
        }

        function setIconVisibility(data) {
            if (data.Disabled) {
                return '<input type="checkbox" disabled />'
            }
            var checkboxString = '<div class="text-center"><input type="checkbox" name="chkTest" value="' + data.VirtualTestID + '" restrictAccessName="test" categoryId="' + data.CategoryId + '" virtualTestID="' + data.VirtualTestID + '" testName ="' + data.TestName + '" xLITeacherModuleRoleId = "' + data.XLITeacherModuleRoleId + '" teacherRestrictAccess="' + data.TeacherRestrictAccess + '" xLISchoolAdminModuleRoleId ="' + data.XLISchoolAdminModuleRoleId + '" schoolAdminRestrictAccess="' + data.SchoolAdminRestrictAccess + '" teacherRestrictAccessContent="' + data.TeacherRestrictAccessContent + '" schoolAdminRestrictAccessContent="' + data.SchoolAdminRestrictAccessContent + '" /></div>';
            return checkboxString;
        }

        function setIconVisibilityEdit(data) {
            if (data.Disabled) {
                return '<a href="javascript:void(0)" disabled><span class="icon icon-edit-pencil" style="padding:10px;" /></a>'
            }
                      
            var editIcon = '<i class="custom-icon fa-solid fa-pencil icon-grey"></i>';
            var editString = '<div class="text-center"><a href="javascript:void(0)" title="Edit" class="editRestrictAccess" restrictAccessName="test" categoryId="' + data.CategoryId + '" virtualTestID="' + data.VirtualTestID + '" testName ="' + data.TestName + '" xLITeacherModuleRoleId = "' + data.XLITeacherModuleRoleId + '" teacherRestrictAccess="' + data.TeacherRestrictAccess + '" xLISchoolAdminModuleRoleId ="' + data.XLISchoolAdminModuleRoleId + '" schoolAdminRestrictAccess="' + data.SchoolAdminRestrictAccess + '" teacherRestrictAccessContent="' + data.TeacherRestrictAccessContent + '" schoolAdminRestrictAccessContent="' + data.SchoolAdminRestrictAccessContent + '">' + editIcon + '</a></div>';
            return editString;
        }
    })
</script>
