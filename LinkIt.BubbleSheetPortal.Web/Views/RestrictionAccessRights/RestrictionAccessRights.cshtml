@using LinkIt.BubbleSheetPortal.Web.Helpers
@using LinkIt.BubbleSheetPortal.Models.Constants
@using LinkIt.BubbleSheetPortal.Web
@model LinkIt.BubbleSheetPortal.Web.ViewModels.RestrictionAccessRightViewModel
@{
    ViewBag.Title = "Data Access Management";
}
<style>
    .pIcon {
        position: relative;
        left: 11px;
    }

    .blockUI {
        z-index: 1013 !important;
    }

    #restriction-access {
        max-width: 940px;
        margin: 30px auto 0;
    }

        #restriction-access .block-border {
            width: 918px;
        }

    .block-border .filter-group {
        background: #fff;
        padding: 2.833em 1.667em 1.667em;
    }

        .block-border .filter-group .fileter-item {
            width: 44%;
            float: left;
            margin-bottom: 1.667em;
            margin-left: 4%;
        }

        .block-border .background-filter::after,
        .block-border .filter-group::after,
        #restriction-access .block-border::after,
        #restriction-access::after,
        .block-border .filter-group .btn-filter::after {
            display: table;
            clear: both;
            content: '';
        }

    .block-checkbox {
        height: 150px;
        overflow: auto;
        background: #fff;
        border-top: 1px solid #a2a2a2;
    }

    .fileter-checkbox {
        width: 220px;
        margin-bottom: 1.667em;
        margin-left: 4%;
        float: left;
        border: 1px solid #a2a2a2;
        padding-top: 10px;
        position: relative;
    }

    .filter-test-types.fileter-checkbox {
        width: 220px;
    }

    .checkbox-subject {
        width: 220px;
    }

    .checkbox-visible .block-checkbox {
        height: 50px;
    }

    .checkbox-container .fileter-checkbox > .chechbox {
        margin-bottom: 10px;
        margin-left: 10px;
    }

    .block-border .checkbox-container .fileter-item {
        float: none;
    }

    .checkbox-container .checkbox-child {
        padding: 0px 0 0 9px;
    }

        .checkbox-container .checkbox-child .chechbox {
            display: inline-block;
        }

        .checkbox-container .checkbox-child input[type=checkbox] + label {
            width: calc(100% - 18px);
            display: inline-block;
            padding: 9px 0px 7px;
        }

        .checkbox-container .checkbox-child:nth-last-child(even) {
            background: #f1f1f1
        }

    .btn-filter,
    .btn-clear-filter {
        float: right;
        margin-left: 10px;
    }

        .btn-clear-filter:disabled,
        .grey.btn-clear-filter:hover {
            color: #bfbfbf;
            border-color: #e9f2f6 #c4c3c3 #a2a2a2 #e3e2e2;
            background: #c8c8c8 url(../images/old-browsers-bg/button-element-disabled-bg.png) repeat-x top;
            background: -moz-linear-gradient( top, #f0f2f2, #c8c8c8);
            background: -webkit-gradient(linear, left top, left bottom, from(#f0f2f2), to(#c8c8c8));
            -moz-text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.75);
            -webkit-text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.75);
            text-shadow: 1px 1px 0 rgba(255, 255, 255, 0.75);
        }

    .loading::before {
        content: '';
        position: absolute;
        top: -4px;
        left: -3px;
        bottom: 2px;
        right: 3px;
        background: rgba(255, 255, 255, 0.5);
        z-index: 3;
        border-radius: 19px;
    }

    .loading::after {
        content: '';
        position: absolute;
        border: 16px solid #f3f3f3;
        border: 3px solid #f3f3f3;
        border-top: 3px solid #3498db;
        border-radius: 50%;
        width: 15px;
        height: 15px;
        left: 17px;
        top: 0;
        z-index: 4;
        animation: spin 2s linear infinite;
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .button-switch {
        font-size: 14px;
        height: 1.875em;
        position: relative;
        width: 4.5em;
    }

        .button-switch .lbl-off,
        .button-switch .lbl-on {
            cursor: pointer;
            display: block;
            font-size: 0.9em;
            font-weight: bold;
            line-height: 1em;
            position: absolute;
            top: 5px;
            transition: opacity 0.25s ease-out 0.1s;
            text-transform: uppercase;
        }

        .button-switch .lbl-off {
            right: 0.4375em;
        }

        .button-switch .lbl-on {
            color: #fefefe;
            opacity: 0;
            left: 0.4375em;
        }

        .button-switch .switch-input {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            height: 0;
            font-size: 1em;
            left: 0;
            line-height: 0;
            outline: none;
            position: absolute;
            top: 0;
            width: 0;
        }

            .button-switch .switch-input:before,
            .button-switch .switch-input:after {
                content: '';
                font-size: 1em;
                position: absolute;
            }

            .button-switch .switch-input:before {
                border-radius: 1.25em;
                background: #bdc3c7;
                height: 1.875em;
                left: -0.25em;
                top: -0.1875em;
                transition: background-color 0.25s ease-out 0.1s;
                width: 4.5em;
            }

            .button-switch .switch-input:after {
                box-shadow: 0 0.0625em 0.375em 0 #666;
                border-radius: 50%;
                background: #fefefe;
                height: 1.5em;
                transform: translate(0, 0);
                transition: transform 0.25s ease-out 0.1s;
                width: 1.5em;
            }

            .button-switch .switch-input:checked:after {
                transform: translate(2.5em, 0);
            }

            .button-switch .switch-input:checked ~ .lbl-off {
                opacity: 0;
            }

            .button-switch .switch-input:checked ~ .lbl-on {
                opacity: 1;
            }

            .button-switch .switch-input:checked:before {
                background: #3498db;
            }

    .dialog-custom {
        background: transparent;
        padding: 0;
        margin: 0;
        border: none;
    }

        .dialog-custom .ui-dialog-title {
            padding: 0;
            margin: 0;
        }

        .dialog-custom .ui-dialog-titlebar {
            padding: 0;
            z-index: 1004;
        }

        .dialog-custom .ui-dialog-titlebar-close {
            height: 35px;
            width: 35px;
            background: #fff;
            border-radius: 50%;
            top: -10px;
            overflow: hidden;
            padding: 0;
        }

            .dialog-custom .ui-dialog-titlebar-close:hover {
                border: none;
                padding: 0;
            }

        .dialog-custom .ui-dialog-titlebar .ui-icon-closethick {
            background-image: url("/Content/themes/base/images/fancy_close.png");
            width: 100%;
            background-position: -1px -1px;
            background-repeat: no-repeat;
            background-size: cover;
            height: 100%;
        }

    .alert-custom {
        background: transparent;
        border: transparent;
    }

    #changeRefBtn:not(.btn-disabled) {
        color: white;
        border-color: #50a3c8 #297cb4 #083f6f;
        background: #0c5fa5 url(../images/old-browsers-bg/title-bg.png) repeat-x top;
        -webkit-background-size: 100% 100%;
        -moz-background-size: 100% 100%;
        -o-background-size: 100% 100%;
        background-size: 100% 100%;
        background: -moz-linear-gradient(top, white, #72c6e4 4%, #0c5fa5);
        background: -webkit-gradient( linear, left top, left bottom, from(white), to(#0c5fa5), color-stop(0.03, #72c6e4));
    }

    .btn-disabled {
        pointer-events: none;
        color: #cccccc;
        border: 1px solid;
        border-color: #7e9098 #61727b #2b373d;
        background: #40535c url(../images/old-browsers-bg/title-link-bg.png) repeat-x top;
        -webkit-background-size: 100% 100%;
        -moz-background-size: 100% 100%;
        -o-background-size: 100% 100%;
        background-size: 100% 100%;
        background: -moz-linear-gradient(top, white, #9eb1ba 4%, #40535c);
        background: -webkit-gradient(linear, left top, left bottom, from(white), to(#40535c), color-stop(0.03, #9eb1ba));
    }

    .jsViewPreference {
        position: relative;
        top: -2px;
    }

    .button-switch .switch-input:disabled {
        pointer-events: none;
    }

        .button-switch .switch-input:disabled:before,
        .button-switch .switch-input:checked:disabled:before {
            background: #989898;
        }

        .button-switch .switch-input:disabled::after {
            background: #4c4c4c;
        }

    .container_12 .block-border .header-preference-page {
        font-size: 0.778em;
        line-height: 18px;
        margin: 0;
    }

    #restriction-access .block-border .tabs .tab-view {
        float: left;
        background: #eee;
        cursor: pointer;
        border-radius: 6px 6px 0px 0px;
    }

        #restriction-access .block-border .tabs .tab-view a {
            padding: 10px 20px;
            display: block;
            font-size: 10pt;
        }

    #restriction-access .block-border .tabs ul {
        border-bottom: 2px solid #d5d8db;
    }

        #restriction-access .block-border .tabs ul::after {
            content: '';
            clear: both;
            float: none;
            display: block;
        }

    #restriction-access .block-border .tabs .tab-view.is-active {
        background: #4d93c5;
        border-bottom: none;
        background: -webkit-gradient( linear, left top, left bottom, from(white), to(#0c5fa5), color-stop(0.03, #72c6e4) );
    }

        #restriction-access .block-border .tabs .tab-view.is-active a {
            color: #fff;
        }

    #restriction-access .block-border .tabs {
        margin: 16px 0;
    }

    .option-view {
        margin-top: 30px;
    }

        .option-view .lable-option {
            font-size: 15px;
            display: inline;
            line-height: 1.333em;
            border: 1px solid;
            border-color: #50a3c8 #297cb4;
            color: #fff;
            background: #0c5fa5 url(../images/old-browsers-bg/title-bg.png) repeat-x top;
            -webkit-background-size: 100% 100%;
            -moz-background-size: 100% 100%;
            -o-background-size: 100% 100%;
            background-size: 100% 100%;
            background: -moz-linear-gradient(top,white,#72c6e4 4%, #0c5fa5);
            background: -webkit-gradient(linear,left top, left bottom,from(white),to(#0c5fa5),color-stop(0.03, #72c6e4));
            -moz-text-shadow: -1px -1px 0 rgba(0, 0, 0, 0.2);
            -webkit-text-shadow: -1px -1px 0 rgba(0, 0, 0, 0.2);
            text-shadow: -1px -1px 0 rgba(0, 0, 0, 0.2);
            padding: 9px 15px;
            position: relative;
            top: -51px;
            left: -32px;
            border: 1px solid white;
            -webkit-box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
            box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
            -webkit-border-radius: 0.417em;
            -webkit-background-clip: padding-box;
            border-radius: 0.417em;
        }

    .accordion-header, .group-bs .group-header {
        font-size: 13px;
        font-weight: 700;
        display: block;
        padding: 11px;
        background: #efefef;
        border: 2px solid #fff;
        border-radius: 5px;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
        box-shadow: 2px 0px 6px #8d8d94;
        cursor: pointer;
        color: #737373;
    }

    .group-bs .accordion-header {
        color: #3399cc;
    }

    .group-bs .accordion-container:first-of-type {
        margin-top: 10px;
    }

    .accordion-container .accordion-content,
    .modal .content-option {
        display: table;
        width: 100%;
        width: calc(100% - 24px);
        padding: 9px 0 9px 24px;
    }

        .accordion-container .accordion-content .lable,
        .modal .content-option .lable {
            display: table-cell;
            width: 50%;
        }

        .accordion-container .accordion-content .sub-title,
        .modal .content-option .sub-title {
            text-transform: capitalize;
        }

    .accordion-container, .group-bs {
        margin-bottom: 5px;
        margin-left: 2%;
        margin-right: 2%;
        border-radius: 5px;
        box-shadow: 0px 0px 5px #9e9e9e;
        overflow: hidden;
        margin-top: 1%;
    }

        .group-bs .accordion-container {
            margin-left: 15px;
            margin-right: 2%;
        }

    .option-container {
        background: #e6e6e6;
        padding: 38px 0px 38px 24px;
        border-radius: 5px;
        position: relative;
    }

        .option-container .bg-gray, .modal .bg-gray {
            background: #f2f2f2;
        }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: table;
        transition: opacity 0.3s ease;
        z-index: 1111;
    }

    .modal-wrapper {
        display: table-cell;
        vertical-align: middle;
    }

    .modal-container {
        background: #fff;
        display: table;
        border-radius: 5px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, .33);
        transition: all 0.3s ease;
        margin: 0 auto;
        overflow: hidden;
        border-radius: 5px;
        position: relative;
    }

    .modal-enter, .modal-leave {
        opacity: 0;
    }

        .modal-enter .modal-container, .modal-leave .modal-container {
            -webkit-transform: scale(1.1);
            transform: scale(1.1);
        }

    .modal-container .modal-body {
        max-height: calc(100vh - 120px);
        overflow-y: auto;
        padding: 0px 30px;
    }

    .modal .modal-body {
        margin-top: 20px;
    }

    .modal-header h2 {
        padding: 10px 30px;
        background: #e6e6e6;
    }

    .modal-body .accordion-container, .modal-body .group-bs {
        margin-left: 2%;
        margin-right: 2%;
    }

        .modal-body .group-bs .accordion-container {
            margin: 15px;
        }

    .option-container .btn-change-option {
        display: block;
        right: 5%;
        position: absolute;
        bottom: 10px;
    }

    .modal .modal-footer {
        position: relative;
        height: 50px;
        text-align: right;
        padding: 0px 30px;
    }

    .pointer {
        cursor: pointer;
    }

    .btn-view-matrix {
        display: inline-block;
        top: 3px;
    }

        .btn-view-matrix > span {
            font-size: 10px !important;
            background: #00a2e9 !important;
        }

    .no-data {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    #changeOptionTest {
        left: 230px;
    }

        #changeOptionTest:not(.btn-disabled), .btn-change-option:not(.btn-disabled) {
            color: white;
            border-color: #50a3c8 #297cb4 #083f6f;
            background: #0c5fa5 url(../images/old-browsers-bg/title-bg.png) repeat-x top;
            -webkit-background-size: 100% 100%;
            -moz-background-size: 100% 100%;
            -o-background-size: 100% 100%;
            background-size: 100% 100%;
            background: -moz-linear-gradient(top, white, #72c6e4 4%, #0c5fa5);
            background: -webkit-gradient( linear, left top, left bottom, from(white), to(#0c5fa5), color-stop(0.03, #72c6e4));
        }

    .bg-full {
        position: absolute;
        left: 0;
        bottom: 0;
        right: 0;
        top: 0;
        background: rgba(76, 76, 76, 0.8);
        z-index: 100;
    }

    .loading-dot {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        z-index: 101;
        color: #fff;
        font-size: 20px;
    }

        .loading-dot:after {
            content: ' .';
            animation: dots 1s steps(5, end) infinite;
        }

    @@keyframes dots {
        0%, 20% {
            color: rgba(0,0,0,0);
            text-shadow: .25em 0 0 rgba(0,0,0,0), .5em 0 0 rgba(0,0,0,0);
        }

        40% {
            color: white;
            text-shadow: .25em 0 0 rgba(0,0,0,0), .5em 0 0 rgba(0,0,0,0);
        }

        60% {
            text-shadow: .25em 0 0 white, .5em 0 0 rgba(0,0,0,0);
        }

        80%, 100% {
            text-shadow: .25em 0 0 white, .5em 0 0 white;
        }
    }

    .open-icon {
        border: 1px solid #888888;
        border-radius: 50%;
        height: 14px;
        width: 14px;
        position: relative;
    }

        .open-icon > span {
            background: #397c33;
            color: white;
            font-weight: 700;
            border-radius: 50%;
            position: absolute;
            top: -4px;
            left: 1px;
            bottom: 1px;
            top: 1px;
            right: 1px;
        }

            .open-icon > span > span {
                position: absolute;
                top: -2px;
                left: 1.5px;
            }

    .matrix .modal-header {
        padding: 10px;
        background: #e6e6e6;
        height: 32px;
    }

        .matrix .modal-header h2 {
            float: left;
        }

        .matrix .modal-header img {
            float: right;
            margin-top: 10px;
            margin-right: 5px;
        }

    .matrix .modal-body {
        overflow: auto;
        clear: both;
        position: static !important;
        min-width: 730px;
    }

    .p-line {
        margin-left: 42px;
    }

    .btn-under-grid {
        height: 36px;
        padding: 8px;
        margin-left: 10px;
        border-radius: 4px;
        text-transform: uppercase;
    }

    #dataTableCategory td {
        word-break: break-word;
    }

    .modal .modal-container {
        min-height: 240px;
    }

    .mgt-40 {
        margin-top: 40px;
        font-weight: 500;
    }

    #notificationTimeout .modal-timeout {
        position: fixed;
        z-index: 9998;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, .5);
        display: table;
        transition: opacity .3s ease;
    }

    #notificationTimeout .body-modal {
        background: url(../images/old-browsers-bg/white20.png);
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid #fff;
        border-color: rgba(255, 255, 255, 0.75);
        border-radius: 0.8em;
        box-shadow: 0 0 4px rgba(50, 50, 50, 0.5);
        width: 420px;
        margin: 0 auto;
        padding: 0.833em;
        position: absolute;
        left: 50%;
        top: 50%;
        -webkit-transform: translate(-50%, -50%);
        ;
        -moz-transform: translate(-50%, -50%);
        ;
        -ms-transform: translate(-50%, -50%);
        ;
        -o-transform: translate(-50%, -50%);
        ;
        transform: translate(-50%, -50%);
    }

        #notificationTimeout .body-modal .modal--content {
            background-color: #fff;
            padding: 25px 15px;
        }

    .border-right {
        border-right: 1px solid #3399cc;
    }

    ul#selectClasses li:first-child {
        font-weight: bold;
    }

    ul#selectClasses .tagit-new {
        max-width: 169px;
    }

    ul.tagit li:not(:first-child) ::-webkit-input-placeholder {
        opacity: 0;
    }

    ul.tagit li:not(:first-child) ::-moz-placeholder {
        opacity: 0;
    }

    ul.tagit li:not(:first-child) ::-ms-input-placeholder {
        opacity: 0;
    }

    ul.tagit li:not(:first-child) ::placeholder {
        opacity: 0;
    }

    .tagit-dropdown {
        position: static !important
    }

    .ui-autocomplete {
        width: 365px !important;
        top: 527px;
        margin-left: calc((100vw - 940px)/2 + 78px) !important;
        top: calc((100hw - 852px)/2) !important;
    }

    .tagit-new input.ui-widget-content.ui-autocomplete-input {
        min-width: 130px !important;
    }

    .my-overlay,
    .ui-widget-overlay {
        width: 100% !important;
        height: 100% !important;
        position: fixed !important;
    }

    h1 a.disabled, h1 a.disabled:hover, h1 a.disabled:focus {
        color: white;
        text-shadow: rgba(0, 0, 0, 0.6) 0 1px 2px;
        box-shadow: rgba(0, 0, 0, 0.2) 0 1px 4px;
        border-color: rgb(161, 167, 174) rgb(144, 148, 152) rgb(107, 112, 118);
        background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(white), color-stop(0.05, rgb(197, 203, 206)), to(rgb(159, 167, 176)));
        cursor: default;
        pointer-events: none;
    }

    .ui-widget-header {
        border: 0px solid #aaa !important;
        background: transparent !important;
        position: relative;
        top: 34px;
    }

    .ui-dialog {
        background: transparent;
        border: 0;
    }

        .ui-dialog .ui-dialog-titlebar-close {
            position: absolute;
            right: 7px;
            top: -8px;
        }

    .ui-widget-header .ui-icon {
        background-image: url("/Content/themes/base/images/fancy_close.png");
    }

    .ui-icon {
        width: 40px;
        height: 40px;
    }

    .ui-icon-closethick {
        background-position: 2px 2px;
    }

    .ui-widget-header .ui-state-hover {
        border: 0;
        background: transparent !important;
    }

    .ui-dialog .ui-dialog-titlebar-close {
        width: 30px;
        height: 42px;
    }
    .text-center {
        text-align: center !important;
    }
    a[disabled], input:disabled {
        cursor: not-allowed;
    }
</style>
<link href="@BundleHelper.Version("~/Content/themes/Constellation/css/custom.css") rel="stylesheet" type="text/css" />
<div id="restriction-access">
    <div class="block-border form">
        <div class="filter-group  block-content">
            <h1>Data Access Management</h1>
            <div class="tabs">
                <ul>
                    <li :class="tabActive === 1 ? 'is-active tab-view' : 'tab-view border-right'">
                        <a v-on:click="onSelectTab(1)">Category Restrictions</a>
                    </li>
                    <li :class="tabActive === 2 ? 'is-active tab-view' : 'tab-view'">
                        <a v-on:click="onSelectTab(2)">Test Restrictions</a>
                    </li>
                </ul>
            </div>
            <div v-show="tabActive === 1" class="tabs-details">
                <ul style="display: none" id="error-messages" class="message error"></ul>
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    <text>
                        <fieldset id="publisherContent" class="grey-bg">
                            <legend>Select District</legend>
                            <div class="columns">
                                <div class="colx2-left">
                                    <div class="mb-3 block-content-dropdown-marquee">
                                        <label>State</label>
                                        <div class="block-text-name">
                                            <select id="selectState" class="full-width"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="colx2-right">
                                    <div class="mb-3 block-content-dropdown-marquee">
                                        <label>@LabelHelper.DistrictLabel</label>
                                        <div class="block-text-name">
                                            <select id="selectDistrict" class="full-width"></select>
                                            <div class="box-select">
                                                <span class="overlay"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </text>
                }
            </div>
            <div v-show="tabActive === 2" class="tabs-details">
                @if (Model.IsPublisher || Model.IsNetworkAdmin)
                {
                    <fieldset class="background-filter">
                        <legend>Select District</legend>
                        <div class="fileter-item">
                            <label>State</label>
                            <select v-model="selectedState" v-on:change="selectStates" class="full-width">
                                <option v-for="item in state" :value="item.Id">{{item.Name}}</option>
                            </select>
                        </div>
                        <div class="fileter-item">
                            <label>{{districtLabel}}</label>
                            <select id="selectedDistrictID" v-model="selectedDistrict" v-on:change="onDistrictChange" class="full-width">
                                <option v-for="item in districts" :value="item.Id">{{item.Name}}</option>
                            </select>
                        </div>
                    </fieldset>
                }
                <fieldset class="background-filter checkbox-container">
                    <legend>Select Test Filters</legend>
                    <div class="fileter-checkbox filter-test-types">
                        <div v-show="showLoadingTest" class="bg-full">
                            <div class="loading-dot">Loading</div>
                        </div>
                        <input id="test-types" v-model="checkTestTypes" v-on:change="allSelectTestTypes" type="checkbox" name="test-types" class="chechbox" />
                        <label for="test-types">All Categories</label>
                        <div class="block-checkbox">
                            <div v-for="item in testType" class="checkbox-child">
                                <input :id="'test-type' + item.Id" v-on:change="selectCheckBoxTestTypes" type="checkbox" :value="item.Id" v-model="arrTestTypes" :name="item.Id"
                                       class="chechbox">
                                <label :title="item.Tooltip" :for="'test-type' + item.Id">{{item.Name}}</label>
                            </div>
                        </div>
                    </div>
                    <div class="fileter-checkbox checkbox-subject">
                        <div v-show="showLoadingSubjects" class="bg-full">
                            <div class="loading-dot">Loading</div>
                        </div>
                        <input id="subjects" type="checkbox" name="subjects" v-model="checkSubject" v-on:change="allSelectSubjects" class="chechbox" />
                        <label for="subjects">All @LabelHelper.Subjects</label>
                        <div class="block-checkbox">
                            <div v-for="item in subjects" class="checkbox-child">
                                <input :id="item.Id" :value="item.Id" v-model="arrSubject" v-on:change="selectCheckBoxSubjects" type="checkbox" :name="item.Id"
                                       class="chechbox">
                                <label :for="item.Name">{{item.Name}}</label>
                            </div>
                        </div>
                    </div>
                    <div class="fileter-checkbox">
                        <div v-show="showLoadingGrades" class="bg-full">
                            <div class="loading-dot">Loading</div>
                        </div>
                        <input id="grades" v-model="checkGrades" v-on:change="allSelectGrades" type="checkbox" name="grades" class="chechbox" />
                        <label for="grades">All @LocalizeHelper.LocalizedWithoutComment(LocalizeResourceKeys.GRADES_LABEL)</label>
                        <div class="block-checkbox">
                            <div v-for="item in grades" class="checkbox-child">
                                <input :id="item.Id" v-on:change="selectCheckBoxGrades" type="checkbox" :value="item.Id" v-model="arrGrades" :name="item.Id"
                                       class="chechbox">
                                <label :for="item.Id">{{item.Name}}</label>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <button v-on:click="onFilter" id="btnFilter" :disabled='disabled ? true : false' class="btn-filter" type="submit">Apply Filters</button>
                <button v-on:click="onClearFilter" class="grey btn-clear-filter" type="submit">Clear Filters</button>
            </div>
        </div>
    </div>
    <div v-show="tabActive === 1" id="restrictionCatogories">
        @Html.Partial("_ListCategories")
    </div>
    <div v-show="tabActive === 2" id="restrictionTest">
        @Html.Partial("_ListTests")
    </div>
</div>
@Html.Partial("_EditAccessRightsTemplate")
<script type="text/javascript">
    var virtualTestID = '';
    var rolesValue = '@Model.UserRoleId';
    var isSetDelay = false;
    var districtLabel = '@LocalizeHelper.LocalizedWithoutComment(LocalizeResourceKeys.DISTRICT_LABEL)';
    var districtId = 0;
    var RESTRICTION_TYPE = {
        FULL_ACCESS: "Full Access",
        NO_ACCESS: "No Access"
    };
</script>
<script type="text/javascript" src="@BundleHelper.Version("~/Scripts/Lib/vue.min.2.5.js")"></script>
<script type="text/javascript" src="@BundleHelper.Version("~/Scripts/RestrictionAccessRight/callAjax.js")"></script>
<script type="text/javascript" src="@BundleHelper.Version("~/Scripts/RestrictionAccessRight/restrictionAccess.js")"></script>
<script type="text/javascript">
    $(function () {
        @if (Model.IsPublisher)
        {
            <text>
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (states) {
                populateStates(states);
            });
            </text>
        }
        @if (Model.IsDistrictAdmin)
        {
            <text>
            districtId = '@Model.DistrictId';
            </text>
        }

        $('#selectState').change(function () {
            $('#selectDistrict').empty();
            if ($('#selectState').val() != 'select') {
                populateDistricts();
            }
        });

        $('#selectDistrict').change(function () {
            if ($('#selectDistrict').val() != 'select') {
                districtId = $('#selectDistrict').val();
                $("#dataTableCategory").dataTable().fnDraw();
            }
        });

        $('body').on('click', '.bulk-edit-restrictions-btn', function () {
            var $listItems = app.tabActive == 1 ? $('input[name=chkCategory]:checked') : $('input[name=chkTest]:checked');
            if (!$listItems.length) {
                return;
            }
            var dataJson = {
                CategoryTestId: 0,
                XLITeacherModuleRoleId: 0,
                TeacherRestriction: 'No Access',
                SchoolAdminRestriction: 'No Access',
                XLISchoolAdminModuleRoleId: 0,
                DisplayName: app.tabActive == 1 ? 'Category' : 'Test',
                RestrictionTypeName: app.tabActive == 1 ? 'category' : 'test',
            };
            if ($listItems.length == 1) {
                var $item = $listItems.first();
                dataJson.CategoryTestId = app.tabActive == 1 ? $item.attr('categoryId') : $item.attr('virtualTestId');
                dataJson.XLITeacherModuleRoleId = $item.attr('xLITeacherModuleRoleId');
                dataJson.TeacherRestriction = $item.attr('teacherRestrictAccess');
                dataJson.SchoolAdminRestriction = $item.attr('schoolAdminRestrictAccess');
                dataJson.XLISchoolAdminModuleRoleId = $item.attr('xLISchoolAdminModuleRoleId');
                dataJson.DisplayName = app.tabActive == 1 ? $item.attr('categoryName') : $item.attr('testName');
                dataJson.CategoryId = $item.attr('categoryId');
            }

            handleLoadRestrictAccessDialog(dataJson);
        });

        $('body').on('click', '.editRestrictAccess', function () {
            var dataJson = {
                CategoryTestId: app.tabActive == 1 ? $(this).attr('categoryId') : $(this).attr('virtualTestId'),
                XLITeacherModuleRoleId: $(this).attr('xLITeacherModuleRoleId'),
                TeacherRestriction: $(this).attr('teacherRestrictAccess'),
                SchoolAdminRestriction: $(this).attr('schoolAdminRestrictAccess'),
                XLISchoolAdminModuleRoleId: $(this).attr('xLISchoolAdminModuleRoleId'),
                DisplayName: app.tabActive == 1 ? $(this).attr('categoryName') : $(this).attr('testName'),
                RestrictionTypeName: app.tabActive == 1 ? 'category' : 'test',
                CategoryId: $(this).attr('categoryId')
            };
            handleLoadRestrictAccessDialog(dataJson);
        });
    });

    function populateStates(states) {
        addDefaultOption($('#selectState'), "State");
        addSelectListItems($('#selectState'), states);
    }

    function populateDistricts() {
        $('#selectDistrict').empty();
        var stateValue = $('#selectState').val();
        if (stateValue != 'select') {
            if ('@Model.IsPublisher' === 'True') {
                $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
            if ('@Model.IsNetworkAdmin' === 'True') {
                $.get('@Url.Action("GetDistrictsForNetworkAdmin", "PopulateStateDistrict")', { stateId: stateValue }, function(districts) {
                    addDefaultOption($('#selectDistrict'), "@LabelHelper.DistrictLabel");
                    addSelectListItems($('#selectDistrict'), districts);
                });
            }
        }
    }


    function handleLoadRestrictAccessDialog(data) {
        data.DisplayName = decodeURI(data.DisplayName);
        var container = loadEditAccessRights(data)
        container.appendTo("body");
        container.dialog({
            title: "",
            open: function () {
                $("body").append('<div class="my-overlay" style="z-index: ' + ($.ui.dialog.currentZ() - 1) + ';width:' + $(document).width() + 'px;height:' + $(document).height() + 'px;background-color: black;opacity: 0.3;position: absolute;top:0px;left: 0px;"></div>');
            },
            close: function () {
                container.remove();
                $("body .my-overlay").remove();
            },
            modal: false,
            width: 500,
            resizable: false
        });
    }
</script>
