@model LinkIt.BubbleSheetPortal.Web.ViewModels.DataLockerPreferencesSettingMap
<link href="@Url.Content("~/Content/themes/base/jquery.ui.datepicker.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/css/test-schedule.css")" rel="stylesheet" type="text/css" />
<style>
    .w-35 {
        width: 35%;
    }

    .pl-1rem {
        padding-left: 1.5rem !important;
    }

    .ml-3rem {
        margin-left: 3rem !important;
    }

    .ml-1rem {
        margin-left: 19px !important;
    }

    .data-locker-preferences-setting {
        border-radius: 0.4em;
        box-shadow: 0 0 3px rgb(0 0 0 / 30%);
        margin: 15px 0px;
    }

    input[name=deadline]:disabled {
        background: rgba(118, 118, 118,-0.9);
    }

    .date-container {
        display: inline-block;
        position: relative;
        overflow: hidden;
    }

    .clearBtn {
        position: absolute;
        top: 7px;
        right: -15px;
        transition: right 0.2s;
        z-index: 2000
    }

    .show {
        right: 10px;
    }
</style>
<div style="margin-bottom: 1rem;"><ul style="display: none" id="success-message" class="message success"></ul></div>
<div id="lastUpdateInfor" style="display: none; display: flex; justify-content: flex-end;"></div>

<div class="accordion-content active data-locker-preferences-setting" id="accordion-assignment-setting">
    <table class="table table-accordion u-w-p-100" tabindex="1">
        <tbody>
            <tr>
                <td class="table-accordion-title">
                    Display Performance Bands in Enter Results
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.DisplayPerformanceBandsInEnterResults) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.DisplayPerformanceBandsInEnterResults' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                Model.DataLockerPreferencesSettingModal.DataSettings.DisplayPerformanceBandsInEnterResults.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.DisplayPerformanceBandsInEnterResults.Lock)
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowDisplay" disabled /> OFF
                        <input type="radio" value="1" name="allowDisplay" class="ml-3rem" disabled checked/> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockAllowDisplay" disabled />
                        <label for="chklockDisplay">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowDisplay" /> OFF
                        <input type="radio" value="1" name="allowDisplay" class="ml-3rem" checked /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockAllowDisplay" />
                        <label for="chklockDisplay">Lock</label>
                    </td>
                }
            </tr>
            <tr>
                <td class="table-accordion-title">
                    Allow Result Date Changes
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.AllowResultDateChange) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.AllowResultDateChange' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                Model.DataLockerPreferencesSettingModal.DataSettings.AllowResultDateChange.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.AllowResultDateChange.Lock)
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowChange" disabled /> OFF
                        <input type="radio" value="1" name="allowChange" class="ml-3rem" disabled /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockAllowChange" disabled />
                        <label for="chklockAllowChange">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowChange" /> OFF
                        <input type="radio" value="1" name="allowChange" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockAllowChange" />
                        <label for="chklockAllowChange">Lock</label>
                    </td>
                }
            </tr>
            <tr>
                <td class="w-35 table-accordion-title">
                    Allow Publishing to Student Portal
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.PublishingToStudentPortal) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.PublishingToStudentPortal' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.PublishingToStudentPortal.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.PublishingToStudentPortal.Lock)
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowPublishToStudent" disabled /> OFF
                        <input type="radio" value="1" name="allowPublishToStudent" class="ml-3rem" disabled /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockPublishToStudent" disabled />
                        <label for="chklockPublishToStudent">Lock</label>
                    </td>

                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowPublishToStudent" /> OFF
                        <input type="radio" value="1" name="allowPublishToStudent" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockPublishToStudent" />
                        <label for="chklockPublishToStudent">Lock</label>
                    </td>
                }

            </tr>
            <tr class="sectionDataLockerSetting">
                <td class="w-35 table-accordion-title">
                    Expired
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.ExpriedOn) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.ExpriedOn' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.ExpriedOn.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.ExpriedOn.Lock)
                {
                    <td colspan="2" style="padding:0">
                        <table class="u-w-p-100">
                            <tbody>
                                <tr>
                                    <td style="width:50%">
                                        <input type="radio" value="0" name="typeExpiredOn" disabled /> Duration
                                        <input type="radio" value="1" name="typeExpiredOn" class="ml-1rem" disabled /> Deadline
                                    </td>
                                    <td style="padding-left: 29px;">
                                        <input type="checkbox" id="chklockExpiredOn" disabled />
                                        <label for="chklockExpiredOn">Lock</label>
                                    </td>
                                </tr>
                                <tr class="duration-expired">
                                    <td class="w-35">
                                        <span>Date: </span><input type="text" class="datepicker" name="expriedDate" readonly="readonly" disabled />
                                    </td>
                                    <td style="padding-left: 29px;">
                                        <span>Time: </span><input type="time" name="expriedTime" disabled />
                                    </td>
                                </tr>
                                <tr class="deadline-expired">
                                    <td>
                                        <input type="number" name="deadline" min="0" value="30" oninput="this.value = Math.abs(this.value)" style="margin-right: 8px;" disabled /><span>days</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                }
                else
                {
                    <td colspan="2" style="padding:0">
                        <table class="u-w-p-100">
                            <tbody>
                                <tr>
                                    <td style="width:50%">
                                        <input type="radio" value="0" name="typeExpiredOn" /> Duration
                                        <input type="radio" value="1" name="typeExpiredOn" class="ml-1rem" /> Deadline
                                    </td>
                                    <td style="padding-left: 29px;">
                                        <input type="checkbox" id="chklockExpiredOn" />
                                        <label for="chklockExpiredOn">Lock</label>
                                    </td>
                                </tr>
                                <tr class="duration-expired">
                                    <td class="w-35">
                                        <div class="date-container">
                                            <span>Date: </span><input type="text" class="datepicker" name="expriedDate" readonly="readonly" />
                                            <span id="clearBtn1" class="clearBtn" onclick="clearDatePicked()"><img src='/Content/images/cancel.png' width='16' height='16'></span>
                                        </div>
                                    </td>
                                    <td style="padding-left: 29px;">
                                        <span>Time: </span><input type="time" name="expriedTime" />
                                    </td>
                                </tr>
                                <tr class="deadline-expired">
                                    <td>
                                        <input type="number" name="deadline" min="0" value="30" oninput="this.value = Math.abs(this.value)" style="margin-right: 8px;" /><span>days</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                }
            </tr>
            <tr class="sectionDataLockerSetting">
                <td class="w-35 table-accordion-title">
                    Allow Modification of Uploaded Artifacts
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.ModificationUploadedArtifacts) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.ModificationUploadedArtifacts' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.ModificationUploadedArtifacts.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.ModificationUploadedArtifacts.Lock)
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowModification" disabled /> OFF
                        <input type="radio" value="1" name="allowModification" disabled class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockModification" disabled />
                        <label for="chklockModification">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowModification" /> OFF
                        <input type="radio" value="1" name="allowModification" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockModification" />
                        <label for="chklockModification">Lock</label>
                    </td>
                }

            </tr>
            <tr class="sectionDataLockerSetting">
                <td>
                    <h4>
                        Upload Preferences
                    </h4>
                </td>
            </tr>
            <tr class="sectionDataLockerSetting">
                <td class="w-35 table-accordion-title pl-1rem">
                    Allow Upload Files
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.Upload) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.Upload' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.Upload.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.Upload.Lock)
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowUpload" disabled /> OFF
                        <input type="radio" value="1" name="allowUpload" disabled class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockUpload" disabled />
                        <label for="chklockUpload">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowUpload" /> OFF
                        <input type="radio" value="1" name="allowUpload" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockUpload" />
                        <label for="chklockUpload">Lock</label>
                    </td>
                }

            </tr>
            <tr class="sectionDataLockerSetting">
                <td class="w-35 table-accordion-title pl-1rem">
                    Allow Audio Recording
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.AudioRecording) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.AudioRecording' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.AudioRecording.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.AudioRecording.Lock)
                {

                    <td class="w-35">
                        <input type="radio" value="0" name="allowAudio" disabled /> OFF
                        <input type="radio" value="1" name="allowAudio" disabled class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockAudio" disabled />
                        <label for="chklockAudio">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowAudio" /> OFF
                        <input type="radio" value="1" name="allowAudio" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockAudio" />
                        <label for="chklockAudio">Lock</label>
                    </td>
                }
            </tr>
            <tr class="sectionDataLockerSetting">
                <td class="w-35 table-accordion-title pl-1rem">
                    Allow Video Recording
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.VideoRecording) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.VideoRecording' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.VideoRecording.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.VideoRecording.Lock)
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowVideo" disabled /> OFF
                        <input type="radio" value="1" name="allowVideo" disabled class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockVideo" disabled />
                        <label for="chklockVideo">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowVideo" /> OFF
                        <input type="radio" value="1" name="allowVideo" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockVideo" />
                        <label for="chklockVideo">Lock</label>
                    </td>
                }
            </tr>
            <tr class="sectionDataLockerSetting">
                <td class="w-35 table-accordion-title pl-1rem">
                    Allow Camera Capture
                    @if (Model.Tooltips != null && String.IsNullOrEmpty(Model.Tooltips.CameraCapture) == false)
                    {
                        <a href='javascript:void(0)' title='@Model.Tooltips.CameraCapture' class='with-tip'><img src='/Content/themes/Constellation/images/icons/fugue/information-blue.png' width='16' height='16'></a>
                    }
                </td>
                @if (Model.DataLockerPreferencesSettingModal.LevelId > 1 &&
                    Model.DataLockerPreferencesSettingModal.DataSettings.CameraCapture.Lock && Model.DataLockerPreferencesSettingModal.ParentDataSettings.CameraCapture.Lock)
                {

                    <td class="w-35">
                        <input type="radio" value="0" name="allowCamera" disabled /> OFF
                        <input type="radio" value="1" name="allowCamera" disabled class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockCamera" disabled />
                        <label for="chklockCamera">Lock</label>
                    </td>
                }
                else
                {
                    <td class="w-35">
                        <input type="radio" value="0" name="allowCamera" /> OFF
                        <input type="radio" value="1" name="allowCamera" class="ml-3rem" /> ON
                    </td>
                    <td>
                        <input type="checkbox" id="chklockCamera" />
                        <label for="chklockCamera">Lock</label>
                    </td>
                }
            </tr>
        </tbody>
    </table>
</div>



<div>
    <button class="float-right w70" id="btnSave" type="button" disabled>Save</button>
    <button class="float-right w70" style="display: none; margin-right: 10px;" id="btnCancel" onclick="cancelPopUp()" type="button" disabled>Cancel</button>
</div>
<script type="text/javascript">
    var dataLockerPreferencesModel = null;
    $('#lastUpdateInfor').empty();
    $('.with-tip').tip();
    (function ($) {
        'use strict';
        dataLockerPreferencesModel = @Html.Raw(Json.Encode(Model.DataLockerPreferencesSettingModal));
        var formatDay = '@ViewBag.DateFormat';
        var dataObj = dataLockerPreferencesModel.DataSettings;
        if (dataLockerPreferencesModel && !!dataLockerPreferencesModel.LastUpdatedDateString) {
            $('#lastUpdateInfor').append('<label>Last Update: ' + dataLockerPreferencesModel.LastUpdatedDateString+ '</label>');
        }
        initControlDataLockerPre(formatDay, dataObj);
        $("#btnSave").attr('disabled', true);
        if ('@ViewBag.IsFormUse') {
            $('#lastUpdateInfor').show();
            $("#btnCancel").show();
            $("#btnCancel").attr('disabled', false);
        }
    }(jQuery));
    $('#accordion-assignment-setting').on('click change', 'input:radio, input:checkbox', function () {
        $("#btnSave").attr('disabled', false);
    });
    $("#btnSave").unbind('click');
    $("#btnSave").click(function (e) {
        e.preventDefault();
        $("#btnSave").attr('disabled', true);
        ShowBlock($('#accordion-assignment-setting'), "Save Setting");
        UpdateDataPreferenceModel();
        var currentSettingType = '@ViewBag.IsFormUse' ? '4' : $('#selectSettingType').val();
        var currentDistrictId = 0;
        if ('@ViewBag.IsFormUse') {
            currentDistrictId = '@ViewBag.VirtualTestId';
        }
        else {
            if ($('#hdfDistrictId').length > 0) {
                currentDistrictId = $('#hdfDistrictId').val();
            } else {
                currentDistrictId = $('#selectDistrict').val();
            }
            if ($('#hdfSchoolId').val() > 0) {
                currentDistrictId = $('#hdfSchoolId').val();
            }
        }
        var data = JSON.stringify({ obj: dataLockerPreferencesModel, settingLevel: currentSettingType, Id: currentDistrictId });
        $.ajax({
            url: '@Url.Action("SaveSettings")',
            traditional: true,
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            data: data,
            success: function (response) {
                if (response.Success == true) {
                    if ('@ViewBag.IsFormUse') {
                        $('#success-message').html('<li style="text-transform:none;font-size:100%"> Preferences have been successfully saved at the form level. </li>');
                        $('#success-message').show();
                    }
                    $('#lastUpdateInfor').empty();
                    $('#lastUpdateInfor').append('<label>Last Update: ' + response.InforUpdated.LastUpdatedDate + '</label>');
                }
                $('#accordion-assignment-setting').unblock();
                $("#btnSave").attr('disabled', true);
            },
            failure: function (response) {
                alert(response);
            }
        });
    });

    function cancelPopUp() {
        $(".dialog").dialog("close");
    }

    function UpdateDataPreferenceModel() {
        var expriedDate = $(".datepicker").datepicker("getDate");
        if (expriedDate) {
            dataLockerPreferencesModel.DataSettings.ExpriedOn.DateExpried = expriedDate.toString('MM/dd/yyyy');
        }
        else {
            dataLockerPreferencesModel.DataSettings.ExpriedOn.DateExpried = null
        }
        var expriedTime = $("input[name='expriedTime']").val();
        if (expriedTime)
            dataLockerPreferencesModel.DataSettings.ExpriedOn.TimeExpried = expriedTime;
        var deadline = $("input[name='deadline']").val();
        if (deadline)
            dataLockerPreferencesModel.DataSettings.ExpriedOn.DateDeadline = deadline;
        var optionValue = GetValueByName('allowPublishToStudent');
        dataLockerPreferencesModel.DataSettings.PublishingToStudentPortal.AllowPublishing = optionValue;
        dataLockerPreferencesModel.DataSettings.PublishingToStudentPortal.Lock = GetValueById('chklockPublishToStudent');
        dataLockerPreferencesModel.DataSettings.DisplayPerformanceBandsInEnterResults.AllowDisplay = GetValueByName('allowDisplay');
        dataLockerPreferencesModel.DataSettings.DisplayPerformanceBandsInEnterResults.Lock = GetValueById('chklockAllowDisplay');
        dataLockerPreferencesModel.DataSettings.AllowResultDateChange.AllowChange = GetValueByName('allowChange');
        dataLockerPreferencesModel.DataSettings.AllowResultDateChange.Lock = GetValueById('chklockAllowChange');
        if (optionValue === "1") {
            dataLockerPreferencesModel.DataSettings.ModificationUploadedArtifacts.AllowModification = GetValueByName('allowModification');
            dataLockerPreferencesModel.DataSettings.ExpriedOn.Lock = GetValueById('chklockExpiredOn');
            dataLockerPreferencesModel.DataSettings.ExpriedOn.TypeExpiredOn = GetValueByName('typeExpiredOn');
            dataLockerPreferencesModel.DataSettings.ModificationUploadedArtifacts.Lock = GetValueById('chklockModification');
            dataLockerPreferencesModel.DataSettings.Upload.AllowUpload = GetValueByName('allowUpload');
            dataLockerPreferencesModel.DataSettings.Upload.Lock = GetValueById('chklockUpload');
            dataLockerPreferencesModel.DataSettings.AudioRecording.AllowRecording = GetValueByName('allowAudio');
            dataLockerPreferencesModel.DataSettings.AudioRecording.Lock = GetValueById('chklockAudio');
            dataLockerPreferencesModel.DataSettings.VideoRecording.AllowRecording = GetValueByName('allowVideo');
            dataLockerPreferencesModel.DataSettings.VideoRecording.Lock = GetValueById('chklockVideo');
            dataLockerPreferencesModel.DataSettings.CameraCapture.AllowCapture = GetValueByName('allowCamera');
            dataLockerPreferencesModel.DataSettings.CameraCapture.Lock = GetValueById('chklockCamera');
        }

    }
    function BindingDataToControlsSetting(dataObj) {
        if (dataObj.ExpriedOn.DateExpried) {
            $("input[name='expriedDate']").datepicker("setDate", new Date(dataObj.ExpriedOn.DateExpried));
            $("#clearBtn1").addClass("show");
        }
        $("input[name='expriedTime']").val(dataObj.ExpriedOn.TimeExpried);
        var DateDeadlineData = dataObj.ExpriedOn.DateDeadline || '30'
        var typeExpiredOnData = dataObj.ExpriedOn.TypeExpiredOn || '0'
        $("input[name='deadline']").val(DateDeadlineData);
        if (+typeExpiredOnData) {
            $(".duration-expired").show();
            $(".deadline-expired").hide();
        } else {
            $(".duration-expired").hide();
            $(".deadline-expired").show();
        }
        BindDataRadioInputAndCheckBox('allowDisplay', dataObj.DisplayPerformanceBandsInEnterResults.AllowDisplay, 'chklockAllowDisplay', dataObj.DisplayPerformanceBandsInEnterResults.Lock);
        BindDataRadioInputAndCheckBox('allowChange', dataObj.AllowResultDateChange.AllowChange, 'chklockAllowChange', dataObj.AllowResultDateChange.Lock);
        BindDataRadioInputAndCheckBox('allowModification', dataObj.ModificationUploadedArtifacts.AllowModification, 'chklockModification', dataObj.ModificationUploadedArtifacts.Lock);
        BindDataRadioInputAndCheckBox('typeExpiredOn', typeExpiredOnData, 'chklockExpiredOn', dataObj.ExpriedOn.Lock);
        BindDataRadioInputAndCheckBox('allowUpload', dataObj.Upload.AllowUpload, 'chklockUpload', dataObj.Upload.Lock);
        BindDataRadioInputAndCheckBox('allowAudio', dataObj.AudioRecording.AllowRecording, 'chklockAudio', dataObj.AudioRecording.Lock);
        BindDataRadioInputAndCheckBox('allowVideo', dataObj.VideoRecording.AllowRecording, 'chklockVideo', dataObj.VideoRecording.Lock);
        BindDataRadioInputAndCheckBox('allowCamera', dataObj.CameraCapture.AllowCapture, 'chklockCamera', dataObj.CameraCapture.Lock);
    }
    function GetValueByName(inputName) {
        var isNew = "0";
        var value = $('input[name="' + inputName + '"]:checked').val();
        if (value)
            isNew = value;
        return isNew;
    }
    function GetValueById(Id) {
        var isCheck = true;
        var value = $('#' + Id).is(":checked");
        if (value != null)
            isCheck = value;
        return isCheck;
    }
    function BindDataRadioInputAndCheckBox(inputName, valueInput, checkBoxId, valueCheck) {
        $('input[name="' + inputName + '"][value="' + valueInput + '"]').attr('checked', 'checked');
        $('#' + checkBoxId).prop('checked', valueCheck);
    }
    function initControlDataLockerPre(formatDay, dataObj) {
        $(".datepicker").datepicker({
            dateFormat: formatDay,
            beforeShow: function (input) {
                $(input).css({
                    "position": "relative"
                });

                var tagActive = $(input).parents('body').find('#ui-datepicker-div');
                tagActive.find('.ui-state-highlight').css('min-height', 'auto');
                tagActive.addClass('customCssDataPickerPreference');
            }
        });
        if (dataObj.PublishingToStudentPortal.AllowPublishing === "1")
            $(".sectionDataLockerSetting").show();
        else
            $(".sectionDataLockerSetting").hide();
        BindDataRadioInputAndCheckBox('allowPublishToStudent', dataObj.PublishingToStudentPortal.AllowPublishing, 'chklockPublishToStudent', dataObj.PublishingToStudentPortal.Lock);
        BindingDataToControlsSetting(dataObj);

        $("input[name='expriedDate']").change(function () {
            $("#btnSave").attr('disabled', false);
        });
        $("input[name='expriedTime']").change(function () {
            $("#btnSave").attr('disabled', false);
        });
        $("input[name='deadline']").change(function () {
            $("#btnSave").attr('disabled', false);
        });
        $("input[name='allowPublishToStudent']").change(function () {
            var value = GetValueByName('allowPublishToStudent');
            if (value === "1") {
                $(".sectionDataLockerSetting").show();
                BindingDataToControlsSetting(dataObj);
            }
            else
                $(".sectionDataLockerSetting").hide();
        });
        $("input[name='typeExpiredOn']").change(function () {
            $("input[name='deadline']").val(dataObj.ExpriedOn.DateDeadline);
            if (dataObj.ExpriedOn.DateExpried) {
                $("input[name='expriedDate']").datepicker("setDate", new Date(dataObj.ExpriedOn.DateExpried));
                $("#clearBtn1").addClass("show");
            } else {
                $("input[name='expriedDate']").datepicker("setDate", null)
                $("#clearBtn1").removeClass("show");
            }
            $("input[name='expriedTime']").val(dataObj.ExpriedOn.TimeExpried);
            var value = GetValueByName('typeExpiredOn');
            if (value === "1") {
                $(".duration-expired").show();
                $(".deadline-expired").hide();
            }
            else {
                $(".duration-expired").hide();
                $(".deadline-expired").show();
            }
        });
        $("input[name='expriedDate']").change(function (data) {
            if (this.value) {
                $("#clearBtn1").addClass("show");
            }
        });
        $("input[name='deadline']").on("input", function (e) {
            $("#btnSave").attr('disabled', false);
        });
    }
    function clearDatePicked() {
        $("#btnSave").attr('disabled', false);
        $("input[name='expriedDate']").datepicker("setDate", null);
        $("#clearBtn1").removeClass("show");

    }
</script>
