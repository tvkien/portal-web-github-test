@using LinkIt.BubbleSheetPortal.Web.Helpers;
@model LinkIt.BubbleSheetPortal.Web.ViewModels.ResetPasswordViewModel
@{
    Layout = "~/Views/Shared/_LogOnPartial_v2.cshtml";
    Html.EnableClientValidation();
}
<style>
    .validation-summary-errors ul {
        margin: -1.667em -1.667em 1.667em -1.667em;
        border-top: none;
        border-right: none;
        border-left: none;
        border-radius: 0;
        border-width: 1px 0;
        -webkit-background-clip: padding-box;
    }

        .validation-summary-errors ul li {
            text-transform: uppercase !important;
            font-size: 0.833em !important;
            line-height: 1.3em !important;
            padding: 0.2em 1em 0.8em 3em !important;
            background-repeat: no-repeat !important;
            background-position: 0.8em 0.1em !important;
        }

    .reset-header {
        margin-bottom: 1.5rem
    }

    input {
        margin-right: 0.25rem;
    }
</style>
<script src='https://www.google.com/recaptcha/api.js'></script>
<script type="text/javascript">
    $(document).ready(function () {
        var recoveryByEmail = $(".recovery-by-email");
        var recoveryByQuestion = $(".recovery-by-question");

        $("#recovery-by-email").on('change', function () {
            if ($(this).is(':checked')) {
                recoveryByEmail.show();
                recoveryByQuestion.hide();
            } else {
                recoveryByEmail.hide();
                recoveryByQuestion.show();
            }
        });

        $("#recovery-by-question").on('change', function () {
            if ($(this).is(':checked')) {
                recoveryByEmail.hide();
                recoveryByQuestion.show();
            } else {
                $recoveryByEmail.show();
                recoveryByQuestion.hide();
            }
        });

    });
</script>
<section id="login-block" class="box-shadow">
    <div class="block-border">
        <div class="@("block-header " + (Model.IsStudentLogin ? "bg-student-login" : "bg-parent-login"))">Reset Password</div>
        <div class="block-content">
            @if (Model.PasswordHasBeenReset)
            {
                <div class="text-center">
                    <p>
                        <label><span>Your password has been reset</span></label>
                    </p>

                    <a href="@Url.Action("LogOn")">
                        <button type="button" class="btn-accept">Return to Login</button>
                    </a>
                </div>
            }
            else if (!Model.SubmittedCorrectPasswordAnswer)
            {
                if (Model.HasEmailAddress)
                {
                    <div class="reset-method-item">
                        <div class="reset-header">
                            <input type="radio" id="recovery-by-email" checked="checked" name="recovery-password" />
                            <label for="recovery-by-email">Option 1: Get reset password link via email </label>
                        </div>
                        <div class="reset-body recovery-by-email">
                            @using (Html.BeginForm("SendTemporaryPassword", "Student", FormMethod.Post, new { @class = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(x => x.UserName)
                                <div class="reset-body-message">
                                    <ul class="message">
                                        <li>
                                            To access your account, click the button below. You will receive an email with a link to reset your password. <br/><b>Note:</b> If you do not receive the email within <b>one hour</b>, please check your spam/junk mail folder before sending another reset request.
                                        </li>
                                    </ul>
                                </div>
                                <div id="divCaptcha" style="display:block;" class="g-recaptcha recatcha" data-sitekey="6Lf7ggwTAAAAABY1PZKfYruOIvY8oZae2obJH0os" data-callback="enableBtnSend" data-expired-callback="recaptchaExpired"></div>
                            }
                        </div>
                    </div>
                }
                if (Model.HasSecurityQuestion)
                {
                    <div class="reset-method-item">
                        <div class="reset-header" id="reset-header-HasSecurityQuestion">
                            <input type="radio" id="recovery-by-question" name="recovery-password" /> <label for="recovery-by-question">Option 2: Answer security question </label>
                        </div>
                        <div class="reset-body recovery-by-question" style="display: none">
                            @using (Html.BeginForm("SubmitPasswordAnswer", "Student", FormMethod.Post, new { @class = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(x => x.UserName)
                                @Html.ValidationSummary()
                                <div>
                                    <h1 style="margin: 0; padding: 0;margin-bottom:1.5rem">Question & Answer</h1>
                                    <p>
                                        <label for="PasswordQuestion"><span class="big">Password Question</span></label>
                                        @Model.PasswordQuestion
                                    </p>
                                    <p>
                                        <label for="pass"><span class="big">Password Answer</span></label>
                                        @Html.TextBoxFor(x => x.PasswordAnswer, new { @id = "passwordAnswer", @class = "full-width", @maxlength = "50" })
                                    </p>


                                </div>
                            }
                        </div>
                    </div>
                    if (SessionManager.ShowCaptcha)
                    {
                        <script>
                            $(function () {
                                $('#divCaptcha').show();
                            });
                        </script>
                    }
                    if (ViewBag.IsSubmitPasswordAnswer != null && (bool)ViewBag.IsSubmitPasswordAnswer)
                    {
                        <script>
                            $(function () {
                                $("#recovery-by-email").prop('checked', false);
                                $("#recovery-by-question").prop('checked', true);
                                $(".recovery-by-email").hide();
                                $(".recovery-by-question").show();
                            });
                        </script>
                    }
                }

                <br />
                <div class="reset-button-content d-flex justify-content-between">
                    @Html.ActionLink("Cancel", "LogOn", null, new { @class = "btn-blue" })
                    @if (Model.HasEmailAddress)
                    {
                        <button type="submit" class="btn-accept" disabled id="btnSend">Send</button>
                    }
                    else
                    {
                        <button id="btnPasswordAnswer" type="submit" class="btn-accept">Submit</button>
                    }
                </div>
            }
            else
            {
                using (Html.BeginForm("SubmitPasswordReset", "Student", FormMethod.Post, new { @class = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.UserName)
                    @Html.HiddenFor(x => x.PasswordAnswer)
                    @Html.ValidationSummary()
                    <div class="submit-new-password-container">
                        <h1 style="margin: 0; padding: 0;margin-bottom:1.5rem">Submit new password</h1>
                        <p>
                            <label for="login"><span class="big">New Password</span></label>
                            @Html.PasswordFor(x => x.NewPassword, new { @class = "full-width" })
                        </p>
                        <p>
                            <label for="pass"><span class="big">Confirm New Password</span></label>
                            @Html.PasswordFor(x => x.ConfirmNewPassword, new { @class = "full-width" })
                        </p>

                        <button type="submit" class="float-right">Submit</button>
                    </div>

                    <div class="reset-button-content d-flex justify-content-between">
                        @Html.ActionLink("Cancel", "LogOn", null, new { @class = "btn-blue" })
                        <button type="submit" class="btn-accept">Submit</button>
                    </div>
                }
            }
        </div>
    </div>
</section>
<script>
    var btnSend = $("#btnSend")
    $(document).ready(function () {
        portalV2SkinRadio();
        setTimeout(function () {
            $("#divCaptcha iframe").attr("height", "100");
        }, 2000);
    });

    function enableBtnSend() {
        var capcharResponse = $("#g-recaptcha-response").val();
        btnSend.enableBt();
    }

    function recaptchaExpired() {
        btnSend.disableBt();
    }

    $("#btnSend").on('click', function (e) {
        e.preventDefault();
        btnSend.disableBt();
        $('#login-block').removeBlockMessages({ animate: false }).blockMessage('Please wait, sending request change password...', { type: 'loading' });
        var data = {
            username: $("#UserName").val(),
            isStudentLogin: '@Model.IsStudentLogin'
        };

         $.ajax({
            url: '@Url.Action("SendTemporaryPassword", "Student")',
            data: data,
            success: function (result) {
                if (result.type == 'error') {
                    btnSend.enableBt();
                    $('#login-block').removeBlockMessages({ animate: false }).blockMessage("Sorry the mail couldn't be sent. Please try again later.", { type: 'error', animate: false });
                }
                else {
                    var routeUrl = '@Model.IsStudentLogin' === 'True' ? 'Student' : 'Parent';
                    window.location.href = window.location.origin + '/' + routeUrl + '/Index?hasTemporaryPassword=true';
                }
            }
        });
    })
    function portalV2SkinRadio() {
        var elRadio = $('input[type=radio]');
        for (var i = 0; i < elRadio.length; i++) {
            if ($(elRadio[i]).is(':checked') || $(elRadio[i]).attr('checked') == 'checked') {
                $(elRadio[i]).addClass('input-checked-v2');
            } else {
                $(elRadio[i]).removeClass('input-checked-v2');
            }

            $(elRadio[i]).change(function () {
                var nameRadio = $(this).get(0).name;
                var queryString = 'input[type=radio][name=' + nameRadio + ']';
                var radioItem = $(queryString);
                for (var j = 0; j < radioItem.length; j++) {
                    $(radioItem.get(j)).removeClass('input-checked-v2');
                }
                $(this).addClass('input-checked-v2');
            })
        }
    }
</script>
