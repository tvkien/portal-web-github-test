@using LinkIt.BubbleSheetPortal.Web.Helpers
@model LinkIt.BubbleSheetPortal.Web.ViewModels.StudentLoginViewModel
@{
    Layout = "~/Views/Shared/_LogOnPartial.cshtml";
}
<style>
    .block-header.bg-student-login,
    button.bg-student-login,
    button.bg-student-login:hover,
    button.bg-student-login:focus {
        background: #f6c264;
        background: -webkit-gradient(linear, left top, left bottom, from(#f6c264), to(#e1a332));
        background: -webkit-linear-gradient(#f6c264, #e1a332);
        background: -moz-linear-gradient(top, #f6c264, #e1a332);
        background: -ms-linear-gradient(#f6c264, #e1a332);
        background: -o-linear-gradient(#f6c264, #e1a332);
        background: linear-gradient(#f6c264, #e1a332);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6c264', endColorstr='#e1a332');
        border: 1px solid #f6c264;
        zoom: 1;
        overflow: hidden;
        background: transparent -moz-linear-gradient(center top, #F6C264, #E1A332) repeat scroll 0% 0% !important;
        border: 1px solid #F6C264 !important;
    }
    .recatcha {
        margin-left: 45px;
        margin-bottom: 5px;
    }
    .LogOnHeader {
        /*min-height: normal !important;
        max-height:  normal !important;*/
        height: auto !important;
        width: 111.5% !important;
        line-height: normal !important;
        border-top: 0px solid #9BD2EE !important;
        border-bottom: 1px solid #B5B3B4;
        margin-top: -34px !important;
        margin-left: -20px !important;
        background: white !important;
        background: -moz-linear-gradient(center top, #FFFFFF, #FFFFFF) repeat scroll 0 0 rgba(0, 0, 0, 0) !important;
    }

    .sso-section {
        position: relative;
        text-align:center;
        padding:20px 0 10px 0;
    }

    .btn-google {
        background: none;
        width: 100%;
        color:black;
        border: none;
        display: inline-block;
        font-size: 1em;
        line-height: 1.429em;
        cursor: pointer;
        border-radius: 5px;
        padding-top: 8px;
        font-weight: bold;
    }

    .btn-google img {
        width: 200px;
    }

    .btn-microsoft {
        background: none;
        width: 100%;
        color: black;
        border: none;
        display: inline-block;
        font-size: 1em;
        line-height: 1.429em;
        cursor: pointer;
        border-radius: 5px;
        padding-top: 8px;
        font-weight: bold;
    }

    .btn-microsoft img {
        width: 195px;
        height:40px;
    }

    .btn-clever img {
        width: 195px;
        height:45px;
    }

    .break:before {
        content: '';
        position: absolute;
        top: 25px;
        left: 0;
        right: 0;
        border-bottom: 1px solid #d9d9d9;
        z-index: -1;
    }

    .break__content {
        display: inline-block;
        padding: 0 0.5em;
        background: #fff;
        color:#b1b1b1;
    }
    .block-header.bg-parent-login {
        background: #FF4D4D;
    }
</style>
@{
    var RegistrationCodeUrl = Model.IsStudentLogin == true? Url.Action("RegistrationCode", "Student") : Url.Action("RegistrationCode", "Parent");
}
<section id="login-block" class="box-shadow">
    <div class="block-border" id="divLogOn">
        <div class="block-content">
            @if (!string.IsNullOrEmpty(Model.LogOnHeaderHtmlContent))
            {
                <div id="divLogOnHeader" class="block-header LogOnHeader">
                    @Html.Raw(Model.LogOnHeaderHtmlContent)
                </div>
            }
            else
            {
                if (Model.IsStudentLogin)
                {
                    <div class="block-header bg-student-login">LinkIt! Student Login</div>
                }
                else
                {
                    <div class="block-header bg-parent-login">LinkIt! Parent Login</div>
                }

            }

            @if (!Model.HideLoginCredentials)
            {
                <p id="loginMessage"></p>
                using (Html.BeginForm("LogOn", "Student", FormMethod.Post, new { @class = "form with-margin", id = "login-form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.DistrictId)
                    @Html.HiddenFor(m => m.IsStudentLogin)
                    <p class="inline-small-label">
                        <label for="Username"><span class="big">Username</span></label>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "full-width first-focus" })
                    </p>
                    <p class="inline-small-label">
                        <label for="Password"><span class="big">Password</span></label>
                        @Html.PasswordFor(m => m.Password, new { @class = "full-width", maxlength = "50", autocomplete = "off" })
                    </p>
                    <div id="divCaptcha" style="display: none" class="g-recaptcha recatcha" data-sitekey="6Lf7ggwTAAAAABY1PZKfYruOIvY8oZae2obJH0os"></div>
                    <button type="submit" class="float-right bt-student-login">Login</button>
                    <p class="input-height">
                        <input type="hidden" type="checkbox" name="KeepLogged" id="KeepLogged" value="1" class="mini-switch">
                        <label style="display: none" for="KeepLogged" class="inline">Keep me logged in</label>
                    </p>
                }

                <form class="form" id="password-recovery" method="post" action="@Url.Action("ResetPassword", "Student")">
                    <fieldset class="grey-bg no-margin collapse">
                        <legend><a href="#">Lost password?</a></legend>
                        <div class="clearfix"></div><br />
                        <p class="input-with-button">
                            <label for="recovery-username">Enter your username</label>
                            @Html.TextBoxFor(x => x.UserName, new { id = "recovery-username" })
                            <button type="submit" class="bt-student-login">Submit</button>
                        </p>
                    </fieldset>
                </form>
                <form class="form" id="r-code" method="post" action="@RegistrationCodeUrl" style="margin-top:23px;">
                    <fieldset class="grey-bg no-margin collapse">
                        <legend><a href="#">Have a registration code?</a></legend>
                        <div class="clearfix"></div><br />
                        <p class="input-with-button">
                            <label for="rcode-rcode">Enter your Registration Code</label>
                            @Html.HiddenFor(m => m.IsStudentLogin)
                            @Html.TextBoxFor(x => x.RCode, new { id = "rcode-rcode" })
                            <button type="submit" class="bt-student-login">Submit</button>
                        </p>
                    </fieldset>
                </form>
            }

            @if (Model.EnableLoginByGoogle || Model.EnableLoginByMicrosoft || (Model.EnableLoginByClever && Model.IsStudentLogin) || Model.EnableLoginByNYC)
            {
                <div class="sso-section">
                    @if (!Model.HideLoginCredentials)
                    {
                        <div class="break txt--center txt--subtle push--top push_half--bottom">
                            <div class="break__content">OR</div>
                        </div>
                    }

                    @if (Model.EnableLoginByGoogle)
                    {
                        <a class="btn-google" href="@Url.Action("singlesignon", new { provider = "google" , isStudentLogin = Model.IsStudentLogin })">
                            <img src="@Url.Content("~/Content/images/logo/btn-google.png")" />
                        </a>
                    }

                    @if (Model.EnableLoginByMicrosoft)
                    {
                        <a class="btn-microsoft" href="@Url.Action("singlesignon", new { provider = "microsoft", isStudentLogin = Model.IsStudentLogin })">
                            <img src="@Url.Content("~/Content/images/logo/ms-sso.png")" />
                        </a>
                    }

                    @if (Model.EnableLoginByClever && Model.IsStudentLogin)
                    {
                        <a class="btn-clever" href="@Url.Action("singlesignon", new { provider = "clever", isStudentLogin = Model.IsStudentLogin })">
                            <img src="@Url.Content("~/Content/images/logo/btn-clever-sso.png")" />
                        </a>
                    }

                    @if (Model.EnableLoginByNYC)
                    {
                        if (Model.IsStudentLogin)
                        {
                            <a class="btn-sso" href="@Url.Action("NYCSignIn", "PassThrough", new { loginType = "student" })">
                                <div class="btn-sso-group">
                                    <img src="@Url.Content("~/Content/images/logo/logo-nyc.png")" />
                                    <span>Sign in with NYC Auth</span>
                                </div>
                            </a>
                        }
                        else
                        {
                            <a class="btn-sso" href="@Url.Action("NYCSignIn", "PassThrough", new { loginType = "parent" })">
                                <div class="btn-sso-group">
                                    <img src="@Url.Content("~/Content/images/logo/logo-nyc.png")" />
                                    <span>Sign in with NYC Auth</span>
                                </div>
                            </a>
                        }
                    }
                </div>
            }
        </div>
    </div>
    <div id="custom-footer-logon" style="bottom: 15px; position: fixed;right: 10%;">
        <img src="../../Content/images/loog-linkit-16x16.png" style="position: relative; top: 5px;"></img>
        <span style="font-size: 11px;">Copyright &copy; @DateTime.Now.ToString("yyyy") | Powered by LinkIt!</span>
    </div>
</section>

@if (Model.ShowAnnouncement && !string.IsNullOrEmpty(Model.AnnouncementText))
{
    <section id="message">
        <div class="block-content no-title light-bg">
            <p class="mini-infos-update">
                @Html.Raw(Model.AnnouncementText)
            </p>
        </div>
    </section>
}

<script type="text/javascript">
    $(document).ready(function () {

        if ('@Model.IsRequireKioskMode' === 'True' && '@ViewBag.PortalPageType' === 'Student')
        {
            //Check Kiosk Mode
            if ( navigator.userAgent.indexOf('CrOS') === -1 ||
			(navigator.userAgent.indexOf('CrOS') !== -1 && screen.height !== document.documentElement.clientHeight))
            {
                window.location.href = '@Url.Action("StudentLogonError", "Error")';
            }
        }

        if ('@Model.HasTemporaryPassword' == "True") {
            $('#login-block').removeBlockMessages().blockMessage("We have sent you an email with a link to finish resetting your password. Unable to find the email? Try checking your spam folder. If you still can't log in, have us resend the email or contact your district administrator.", { type: 'warning' });
        }

        $('#login-form').submit(function (event) {
            event.preventDefault();

            var userName = $('#UserName').val();
            var password = $('#Password').val();
            var districtId = $('#DistrictId').val();
            var keepLogged = $('#KeepLogged').attr('checked') ? true : false;
            var redirectUrl = '@Model.RedirectUrl';
            var requestVerificationToken = $('input[name="__RequestVerificationToken"]').val();

            if (!userName || userName.length == 0) {
                $('#login-block').removeBlockMessages().blockMessage('Please enter your user name', { type: 'warning' });
            }
            else if (!password || password.length == 0) {
                $('#login-block').removeBlockMessages().blockMessage('Please enter your password', { type: 'warning' });
            } else {
                var submitBt = $(this).find('button[type=submit]');
                submitBt.disableBt();

                var target = $(this).attr('action');
                if (!target || target == '') {
                    target = document.location.href.match(/^([^#]+)/)[1];
                }

                var data = {
                    UserName: userName,
                    Password: password,
                    DistrictId: districtId,
                    KeepLogged: keepLogged,
                    RedirectUrl: redirectUrl,
                    __RequestVerificationToken: requestVerificationToken,
                    g_recaptcha_response: $('#g-recaptcha-response').val(),
                     IsStudentLogin: '@Model.IsStudentLogin'
                };

                $.ajax({
                    url: target,
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        if (result.IsAuthenticated == undefined) {
                            $('#login-block').replaceWith(result);
                            $('#message').hide();
                            if (result.ShowCaptcha) {
                                $('#divCaptcha').show();
                                //reload recatcha
                                grecaptcha.reset();
                            }
                        } else {
                            if (!result.IsAuthenticated) {
                                $('#login-block').removeBlockMessages().blockMessage(result.Message, { type: result.Type });
                                if (result.ShowCaptcha) {
                                    $('#divCaptcha').show();
                                    //reload recatcha
                                    grecaptcha.reset();
                                }
                            }
                            else {
                                if (result.HasTemporaryPassword) {
                                    location.href = "/Account/SetAccountInformation/?id=" + result.UserID + "&pw=" + result.HasTemporaryPassword;
                                } else {
                                    location.href = result.RedirectUrl;
                                }
                            }
                        }

                        submitBt.enableBt();
                    },
                    error: function () {
                        $('#login-block').removeBlockMessages().blockMessage('Error while contacting server, please try again', { type: 'error' });
                        submitBt.enableBt();
                    }
                });

                $('#login-block').removeBlockMessages().blockMessage('Please wait, checking login...', { type: 'loading' });
            }
        });

        $('#password-recovery').submit(function (event) {
            event.preventDefault();

            var userName = $('#recovery-username').val();
            var districtId = $('#DistrictId').val();

            if (!userName || userName.length == 0) {
                $('#login-block').removeBlockMessages().blockMessage('Please enter your user name', { type: 'warning' });
            } else {
                var data = {
                    Username: userName,
                    DistrictId: districtId,
                    IsStudentLogin: '@Model.IsStudentLogin'
                };

                $.ajax({
                    url: '@Url.Action("ResetPassword", "Student")',
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        $('#login-block').removeBlockMessages().blockMessage(result.message, { type: 'success' });
                    }
                });
            }
        });

        $('#r-code').submit(function (event) {
            event.preventDefault();

            var rcode = $('#rcode-rcode').val();
            var isStudentLogin = $('#IsStudentLogin').val();

            if (!rcode || rcode.length == 0) {
                $('#login-block').removeBlockMessages().blockMessage('Please enter your Registration Code', { type: 'warning' });
            } else {
                var data = {
                    rcode: rcode,
                    isStudentLogin: isStudentLogin
                };

                $.ajax({
                    url: '@Url.Action("RegistrationCode", "Student")',
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        if (result.type == 'error') {
                            $('#login-block').removeBlockMessages().blockMessage(result.message, { type: 'error' });
                        }
                        else {
                            $('#login-block').replaceWith(result);
                        }
                    }
                });
            }
        });

        if ('@SessionManager.ShowCaptcha' == 'True') {
            $('#divCaptcha').show();
        }

         $(".btn-google").click(function () {
            $('#login-block').removeBlockMessages().blockMessage('Please wait, checking login...', { type: 'loading' });
        });
    });
</script>
