@using LinkIt.BubbleSheetPortal.Web.Helpers
@model LinkIt.BubbleSheetPortal.Web.ViewModels.UploadFilesViewModel
@using LinkIt.BubbleSheetPortal.Models
@{
    ViewBag.Title = HelperExtensions.FormatPageTitle(ContaintUtil.Managebubblesheets, "Import Group");
    var currentUser = HttpContext.Current.GetCurrentUser();
    if (currentUser != null)
    {
        var isUseNewDesign = HelperExtensions.IsUseNewDesign(currentUser.DistrictId ?? 0);
        if (isUseNewDesign)
        {
            Layout = "~/Views/Shared/_Layout_v2.cshtml";
        }
    }
}
@section jQuery {
    @BundleHelper.jQueryUpgrade()
}

<style>
    #portal-v2-containter .wrapper-btn-upload .uploadifive-button {
        background-image: unset;
        text-shadow: none;
        border-radius: 0;
        cursor: pointer;
        font-size: 1rem;
        text-transform: capitalize;
        width: fit-content !important;
        height: auto !important;
        line-height: normal !important;
        border: 2px solid var(--red) !important;
        color: var(--white);
        background-color: var(--red) !important;
        padding: 11px 32px !important;
        margin-left: auto;
    }
</style>

<article class="container_12">
    <section id="upload-block" class="w-50">
        <div class="block-content form">
            <h1>Import Groups</h1>
            <ul style="display: none" id="success-message" class="message success">
                <li>Import successfully</li>
            </ul>
            <ul style="display: none" id="error-messages" class="message error">
            </ul>
            <ul class="message caution w-100" style="max-width: 100%">
                <li>
                    Click the Select File button below to select a file for upload.
                    Click the Upload File to upload the selected file.
                </li>
            </ul>
            @if (Model.IsPublisherUploading || Model.IsNetworkAdmin)
            {
                <div id="states" class="mb-3">
                    <label>
                        Select State
                    </label>
                    <span class="relative">
                        @Html.DropDownListFor(x => x.StateId, Model.AvailableStates, new { id = "selectState", @class = "full-width" })
                    </span>
                </div>
                <div id="districts">
                    <label>
                        Select @LabelHelper.DistrictLabel
                    </label>
                    <span class="relative">
                        @Html.DropDownListFor(x => x.DistrictId, Model.AvailableDistricts, new { id = "selectDistrict", @class = "full-width" })
                    </span>
                </div>
            }
            <div class="wrapper-btn-upload mt-4">
                <input id="file_upload" name="file_upload" type="file" />
            </div>
        </div>

        <div id="divMessageDuplicateGroupName" style="display: none">
            <div class="block-content form" style="position: static">
                <table>
                    <tr>
                        <td>
                            <div id="divListGroupDuplicate" style="margin-bottom: 20px;"></div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style="position: relative;text-align: center;">
                                <button id="btnYes" type="button" value="yes">Yes</button>
                                <button id="btnNo" type="button" value="no">No</button>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </section>
</article>

<script type="text/javascript">
    $(function () {
        var auth = '@(Request.Cookies[FormsAuthentication.FormsCookieName] == null ? string.Empty : Request.Cookies[FormsAuthentication.FormsCookieName].Value)';

        populateStates();

        $('#selectState').change(function () {
            if ($(this).val() != 'select') {
                populateDistricts();
            }
            else {
                $('#selectDistrict').empty();
            }
        });

        if (window.FormData !== undefined) {
            $('#file_upload').uploadifive({
                'uploadScript': '@Url.Action("ImportGroup")',
                'fileType': 'text/plain',//*.pdf; *.png; *.jpg; *.jpeg; *.gif; *.tiff
                'overrideEvents': ['onDialogClose'],
                'formData': { AUTHID: auth },
                'buttonText': 'Select Files',
                'fileObjName': 'FileData',
                'multi': false,
                'removeCompleted': true,
                'width': 100,
                'auto': true,
                'onUpload': function (file) {
                    $('#file_upload').data('uploadifive').settings.formData = getFormData(auth);
                },
                'onUploadComplete': function (file, data) {
                    var result = $.parseJSON(data);
                    if (result == undefined) {
                        CustomAlert('An error has occured.  Please try again');
                    }
                    if (result.success == true) {
                        $("#success-message").show();
                    }
                    else {
                        if (result.type == "warning") {
                            $("#divListGroupDuplicate").html(result.message);
                            ShowPopupDuplicateGroupName();
                        } else {
                            $("#success-message").hide();
                            addErrorMessages(result);
                        }
                    }
                }
            });
        }

        $('#btnYes').live('click', function (e) {
            e.preventDefault();
            $("#divMessageDuplicateGroupName").dialog("close");
            $.get('@Url.Action("InsertDuplicateGroup")', function(response) {
                $("#success-message").show();
            });
        });
        $('#btnNo').live('click', function(e) {
            e.preventDefault();
            $("#divMessageDuplicateGroupName").dialog("close");
        });
    });

    function getFormData(auth) {
        var districtId = $("#selectDistrict").val();
        return { 'AUTHID': auth, 'districtId': districtId };
    }

    function populateStates() {
        var stateSelect = $('#selectState');
        stateSelect.empty();
        if ('@Model.IsNetworkAdmin'=='True') {
            $.get('@Url.Action("GetStatesByDictricIds", "PopulateStateDistrict")',{dictricIds:'@Model.StrIds'}, function (response) {
                addDefaultOption(stateSelect, "State");
                addSelectListItems(stateSelect, response);
            });
        } else {
            $.get('@Url.Action("GetStates", "PopulateStateDistrict")', function (response) {
            addDefaultOption(stateSelect, "State");
            addSelectListItems(stateSelect, response);
            });
        }
    }

    function populateDistricts() {
        var districtSelect = $('#selectDistrict');
        districtSelect.empty();
        var stateValue = $('#selectState').val();
        $.get('@Url.Action("GetDistricts", "PopulateStateDistrict")', { stateId: stateValue }, function (response) {
            addDefaultOption(districtSelect, "@LabelHelper.DistrictLabel");
            addSelectListItems(districtSelect, response);
        });
    }

    function ShowPopupDuplicateGroupName() {
        $('#divMessageDuplicateGroupName').dialog({
            autoOpen: true,
            width: 400,
            resizable: false,
            title: '',
            modal: true,
            open: function (event, ui) {
                //TODO: content html
            }
        });
    }
</script>

<style type="text/css">
    .ui-widget-header {
        background: transparent !important;
        border: 0 !important;
    }
</style>
